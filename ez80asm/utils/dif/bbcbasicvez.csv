idx,idx1,idx2,address1,address2,opcode1,opcode2,instruction1,instruction2,matching1,src_file,srccode
1,1,1,0000,0000,c3 52 00,c3 52 00,jp $0052,jp $0052,jp $0000,agon_init.asm,JP	_start				; Jump to start
2,2,2,0003,0003,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
3,3,3,0004,0004,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
4,4,4,0005,0005,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
5,5,5,0006,0006,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
6,6,6,0007,0007,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
7,7,7,0008,0008,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_init.asm,RST_08:			RST.LIS	08h				; API call
8,8,8,000a,000a,c9,c9,ret,ret,ret,agon_init.asm,RET
9,9,9,000b,000b,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
10,10,10,000c,000c,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
11,11,11,000d,000d,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
12,12,12,000e,000e,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
13,13,13,000f,000f,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
14,14,14,0010,0010,49 d7,49 d7,rst.lis $10,rst.lis $10,rst.lis $00,agon_init.asm,RST_10:			RST.LIS 10h				; Output
15,15,15,0012,0012,c9,c9,ret,ret,ret,agon_init.asm,RET
16,16,16,0013,0013,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
17,17,17,0014,0014,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
18,18,18,0015,0015,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
19,19,19,0016,0016,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
20,20,20,0017,0017,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
21,21,21,0018,0018,49 df,49 df,rst.lis $18,rst.lis $18,rst.lis $00,agon_init.asm,RST_18:			RST.LIS	18h				; Block Output
22,22,22,001a,001a,c9,c9,ret,ret,ret,agon_init.asm,RET
23,23,23,001b,001b,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
24,24,24,001c,001c,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
25,25,25,001d,001d,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
26,26,26,001e,001e,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
27,27,27,001f,001f,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
28,28,28,0020,0020,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
29,29,29,0021,0021,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
30,30,30,0022,0022,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
31,31,31,0023,0023,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
32,32,32,0024,0024,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
33,33,33,0025,0025,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
34,34,34,0026,0026,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
35,35,35,0027,0027,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
36,36,36,0028,0028,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
37,37,37,0029,0029,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
38,38,38,002a,002a,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
39,39,39,002b,002b,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
40,40,40,002c,002c,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
41,41,41,002d,002d,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
42,42,42,002e,002e,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
43,43,43,002f,002f,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
44,44,44,0030,0030,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
45,45,45,0031,0031,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
46,46,46,0032,0032,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
47,47,47,0033,0033,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
48,48,48,0034,0034,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
49,49,49,0035,0035,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
50,50,50,0036,0036,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
51,51,51,0037,0037,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
52,52,52,0038,0038,fb,fb,ei,ei,ei,agon_init.asm,RST_38:			EI
53,53,53,0039,0039,ed 4d,ed 4d,reti,reti,reti,agon_init.asm,RETI
54,54,54,003b,003b,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,ALIGN	64
55,55,55,003c,003c,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
56,56,56,003d,003d,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
57,57,57,003e,003e,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
58,58,58,003f,003f,ff,ff,rst $38,rst $38,rst $00,agon_init.asm,
59,59,59,0040,0040,4d,4d,"ld c,l","ld c,l","ld c,l",agon_init.asm,"DB	""MOS""				; Flag for MOS - to confirm this is a valid MOS command"
60,60,60,0041,0041,4f,4f,"ld c,a","ld c,a","ld c,a",agon_init.asm,
61,61,61,0042,0042,53,53,"ld d,e","ld d,e","ld d,e",agon_init.asm,
62,62,62,0043,0043,00,00,nop,nop,nop,agon_init.asm,DB	00h				; MOS header version 0
63,63,63,0044,0044,00,00,nop,nop,nop,agon_init.asm,"DB	00h				; Flag for run mode (0: Z80, 1: ADL)"
64,64,64,0045,0045,42,42,"ld b,d","ld b,d","ld b,d",agon_init.asm,"_exec_name:		DB	""BBCBASIC.BIN"", 0		; The executable name, only used in argv"
65,65,65,0046,0046,42,42,"ld b,d","ld b,d","ld b,d",agon_init.asm,
66,66,66,0047,0047,43,43,"ld b,e","ld b,e","ld b,e",agon_init.asm,
67,67,67,0048,0048,42,42,"ld b,d","ld b,d","ld b,d",agon_init.asm,
68,68,68,0049,0049,41,41,"ld b,c","ld b,c","ld b,c",agon_init.asm,
69,69,69,004a,004a,53,53,"ld d,e","ld d,e","ld d,e",agon_init.asm,
70,70,70,004b,004b,49 43,49 43,"ld.lis b,e","ld.lis b,e","ld.lis b,e",agon_init.asm,
71,71,71,004d,004d,2e 42,2e 42,"ld l,$42","ld l,$42","ld l,$00",agon_init.asm,
72,72,72,004f,004f,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",agon_init.asm,
73,73,73,0051,0051,00,00,nop,nop,nop,agon_init.asm,
74,74,74,0052,0052,5b fd e5,5b fd e5,push.lil iy,push.lil iy,push.lil iy,agon_init.asm,_start:			PUSH.LIL	IY			; Preserve IY
75,75,75,0055,0055,fd 21 00 00,fd 21 00 00,"ld iy,$0000","ld iy,$0000","ld iy,$0000",agon_init.asm,"LD		IY, 0			; Preserve SPS"
76,76,76,0059,0059,fd 39,fd 39,"add iy,sp","add iy,sp","add iy,sp",agon_init.asm,"ADD		IY, SP"
77,77,77,005b,005b,5b fd e5,5b fd e5,push.lil iy,push.lil iy,push.lil iy,agon_init.asm,PUSH.LIL	IY
78,78,78,005e,005e,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_init.asm,"EX		(SP), HL		; Get the SPS part of the return address"
79,79,79,005f,005f,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_init.asm,PUSH.LIL	HL
80,80,80,0061,0061,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_init.asm,"EX		(SP), HL		; And restore it for BASIC"
81,81,81,0062,0062,5b f5,5b f5,push.lil af,push.lil af,push.lil af,agon_init.asm,PUSH.LIL	AF			; Preserve the rest of the registers
82,82,82,0064,0064,5b c5,5b c5,push.lil bc,push.lil bc,push.lil bc,agon_init.asm,PUSH.LIL	BC
83,83,83,0066,0066,5b d5,5b d5,push.lil de,push.lil de,push.lil de,agon_init.asm,PUSH.LIL	DE
84,84,84,0068,0068,5b dd e5,5b dd e5,push.lil ix,push.lil ix,push.lil ix,agon_init.asm,PUSH.LIL	IX
85,85,85,006b,006b,ed 6e,ed 6e,"ld a,mb","ld a,mb","ld a,mb",agon_init.asm,"LD		A, MB			; Segment base"
86,86,86,006d,006d,dd 21 65 01,dd 21 65 01,"ld ix,$0165","ld ix,$0165","ld ix,$0000",agon_init.asm,"LD		IX, argv_ptrs		; The argv array pointer address"
87,87,87,0071,0071,cd 51 01,cd 51 01,call $0151,call $0151,call $0000,agon_init.asm,CALL		_set_aix24		; Convert to a 24-bit address
88,88,88,0074,0074,5b dd e5,5b dd e5,push.lil ix,push.lil ix,push.lil ix,agon_init.asm,PUSH.LIL	IX
89,89,89,0077,0077,cd e1 00,cd e1 00,call $00e1,call $00e1,call $0000,agon_init.asm,CALL		_parse_params		; Parse the parameters
90,90,90,007a,007a,5b dd e1,5b dd e1,pop.lil ix,pop.lil ix,pop.lil ix,agon_init.asm,POP.LIL		IX			; IX: argv
91,91,91,007d,007d,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",agon_init.asm,"LD		B, 0			;  C: argc"
92,92,92,007f,007f,cd 9a 00,cd 9a 00,call $009a,call $009a,call $0000,agon_init.asm,CALL		_main			; Start user code
93,93,93,0082,0082,5b dd e1,5b dd e1,pop.lil ix,pop.lil ix,pop.lil ix,agon_init.asm,POP.LIL		IX			; Restore the registers
94,94,94,0085,0085,5b d1,5b d1,pop.lil de,pop.lil de,pop.lil de,agon_init.asm,POP.LIL		DE
95,95,95,0087,0087,5b c1,5b c1,pop.lil bc,pop.lil bc,pop.lil bc,agon_init.asm,POP.LIL		BC
96,96,96,0089,0089,5b f1,5b f1,pop.lil af,pop.lil af,pop.lil af,agon_init.asm,POP.LIL		AF
97,97,97,008b,008b,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_init.asm,"EX		DE, HL 			; DE: Return code from BASIC"
98,98,98,008c,008c,5b e1,5b e1,pop.lil hl,pop.lil hl,pop.lil hl,agon_init.asm,POP.LIL		HL 			; The SPS part of the return address
99,99,99,008e,008e,5b fd e1,5b fd e1,pop.lil iy,pop.lil iy,pop.lil iy,agon_init.asm,POP.LIL		IY			; Get the preserved SPS
100,100,100,0091,0091,fd f9,fd f9,"ld sp,iy","ld sp,iy","ld sp,iy",agon_init.asm,"LD		SP, IY			; Restore SPS"
101,101,101,0093,0093,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_init.asm,"EX		(SP), HL		; Store the SPS part of the return address on the stack"
102,102,102,0094,0094,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_init.asm,"EX		DE, HL 			; HL: Return code from BASIC"
103,103,103,0095,0095,5b fd e1,5b fd e1,pop.lil iy,pop.lil iy,pop.lil iy,agon_init.asm,POP.LIL		IY			; Restore IY
104,104,104,0098,0098,49 c9,49 c9,ret.lis,ret.lis,ret.lis,agon_init.asm,RET.L					; Return to MOS
105,105,105,009a,009a,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_init.asm,"_main:			LD	HL, ACCS		; Clear the ACCS"
106,106,106,009d,009d,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",agon_init.asm,"LD	(HL), 0"
107,107,107,009f,009f,79,79,"ld a,c","ld a,c","ld a,c",agon_init.asm,"LD	A, C"
108,108,108,00a0,00a0,fe 02,fe 02,cp $02,cp $02,cp $00,agon_init.asm,CP	2
109,109,109,00a2,00a2,28 24,28 24,"jr z,$+$26","jr z,$+$26","jr z,$+$00",agon_init.asm,"JR	Z, _autoload		; 2 parameters = autoload"
110,110,110,00a4,00a4,38 35,38 35,"jr c,$+$37","jr c,$+$37","jr c,$+$00",agon_init.asm,"JR	C, _startbasic		; 1 parameter = normal start"
111,111,111,00a6,00a6,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,agon_init.asm,CALL	TELL
112,112,112,00a9,00a9,55,55,"ld d,l","ld d,l","ld d,l",agon_init.asm,"DB	""Usage:\n\r"""
113,113,113,00aa,00aa,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",agon_init.asm,
114,114,114,00ab,00ab,61,61,"ld h,c","ld h,c","ld h,c",agon_init.asm,
115,115,115,00ac,00ac,67,67,"ld h,a","ld h,a","ld h,a",agon_init.asm,
116,116,116,00ad,00ad,65,65,"ld h,l","ld h,l","ld h,l",agon_init.asm,
117,117,117,00ae,00ae,3a 0a 0d,3a 0a 0d,"ld a,($0d0a)","ld a,($0d0a)","ld a,($0000)",agon_init.asm,
118,118,118,00b1,00b1,52 55,52 55,"ld.sil d,l","ld.sil d,l","ld.sil d,l",agon_init.asm,"DB	""RUN . <filename>\n\r"", 0"
119,119,119,00b3,00b3,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",agon_init.asm,
120,120,120,00b4,00b4,20 2e,20 2e,"jr nz,$+$30","jr nz,$+$30","jr nz,$+$00",agon_init.asm,
121,121,121,00b6,00b6,20 3c,20 3c,"jr nz,$+$3e","jr nz,$+$3e","jr nz,$+$00",agon_init.asm,
122,122,122,00b8,00b8,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",agon_init.asm,
123,123,123,00b9,00b9,69,69,"ld l,c","ld l,c","ld l,c",agon_init.asm,
124,124,124,00ba,00ba,6c,6c,"ld l,h","ld l,h","ld l,h",agon_init.asm,
125,125,125,00bb,00bb,65,65,"ld h,l","ld h,l","ld h,l",agon_init.asm,
126,126,126,00bc,00bc,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",agon_init.asm,
127,127,127,00bd,00bd,61,61,"ld h,c","ld h,c","ld h,c",agon_init.asm,
128,128,128,00be,00be,6d,6d,"ld l,l","ld l,l","ld l,l",agon_init.asm,
129,129,129,00bf,00bf,65,65,"ld h,l","ld h,l","ld h,l",agon_init.asm,
130,130,130,00c0,00c0,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",agon_init.asm,
131,131,131,00c2,00c2,0d,0d,dec c,dec c,dec c,agon_init.asm,
132,132,132,00c3,00c3,00,00,nop,nop,nop,agon_init.asm,
133,133,133,00c4,00c4,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",agon_init.asm,"LD	HL, 0			; The error code"
134,134,134,00c7,00c7,c9,c9,ret,ret,ret,agon_init.asm,RET
135,135,135,00c8,00c8,5b dd 27 03,5b dd 27 03,"ld.lil hl,(ix+$03)","ld.lil hl,(ix+$03)","ld.lil hl,(ix+$00)",agon_init.asm,"_autoload:		LD.LIL	HL, (IX+3)		; HLU: Address of filename"
136,136,136,00cc,00cc,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",agon_init.asm,"LD	DE, ACCS		;  DE: Destination address"
137,137,137,00cf,00cf,5b 7e,5b 7e,"ld.lil a,(hl)","ld.lil a,(hl)","ld.lil a,(hl)",agon_init.asm,"@@:			LD.LIL	A, (HL)			; Fetch the filename byte"
138,138,138,00d1,00d1,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_init.asm,"LD	(DE), A			;"
139,139,139,00d2,00d2,5b 23,5b 23,inc.lil hl,inc.lil hl,inc.lil hl,agon_init.asm,INC.LIL	HL			; Increase the source pointer
140,140,140,00d4,00d4,1c,1c,inc e,inc e,inc e,agon_init.asm,INC	E			; We only need to increase E as ACCS is on a page boundary
141,141,141,00d5,00d5,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",agon_init.asm,"JR	NZ, @B			; Loop until we hit a 0 byte"
142,142,142,00d7,00d7,1d,1d,dec e,dec e,dec e,agon_init.asm,DEC	E
143,143,143,00d8,00d8,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",agon_init.asm,"LD	A, CR"
144,144,144,00da,00da,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_init.asm,"LD	(DE), A			; Replace the 0 byte with a CR for BBC BASIC"
145,145,145,00db,00db,e1,e1,pop hl,pop hl,pop hl,agon_init.asm,_startbasic:		POP	 HL			; Pop the return address to init off SPS
146,146,146,00dc,00dc,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_init.asm,PUSH.LIL HL 			; Stack it on SPL (*BYE will use this as the return address)
147,147,147,00de,00de,c3 9b 37,c3 f9 36,jp $379b,jp $36f9,jp $0000,agon_init.asm,JP	 START			; And start BASIC
148,148,148,00e1,00e1,01 45 00,01 45 00,"ld bc,$0045","ld bc,$0045","ld bc,$0000",agon_init.asm,"_parse_params:		LD		BC, _exec_name		; Get the address of the app name in this segment"
149,149,149,00e4,00e4,cd 3f 01,cd 3f 01,call $013f,call $013f,call $0000,agon_init.asm,CALL		_set_abc24		; Convert it to a 24-bit address based upon segment base
150,150,150,00e7,00e7,5b dd 0f 00,5b dd 0f 00,"ld.lil (ix),bc","ld.lil (ix),bc","ld.lil (ix),bc",agon_init.asm,"LD.LIL		(IX+0), BC		; ARGV[0] = the executable name"
151,151,151,00eb,00eb,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX
152,152,152,00ee,00ee,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX
153,153,153,00f1,00f1,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX
154,154,154,00f4,00f4,cd 36 01,cd 36 01,call $0136,call $0136,call $0000,agon_init.asm,CALL		_skip_spaces		; Skip HL past any leading spaces
155,155,155,00f7,00f7,01 01 00,01 01 00,"ld bc,$0001","ld bc,$0001","ld bc,$0000",agon_init.asm,"LD		BC, 1			; C: ARGC = 1 - also clears out top 16 bits of BCU"
156,156,156,00fa,00fa,06 0f,06 0f,"ld b,$0f","ld b,$0f","ld b,$00",agon_init.asm,"LD		B, argv_ptrs_max - 1	; B: Maximum number of argv_ptrs"
157,157,157,00fc,00fc,c5,c5,push bc,push bc,push bc,agon_init.asm,_parse_params_1:	PUSH		BC			; Stack ARGC
158,158,158,00fd,00fd,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_init.asm,PUSH.LIL	HL			; Stack start address of token
159,159,159,00ff,00ff,cd 25 01,cd 25 01,call $0125,call $0125,call $0000,agon_init.asm,CALL		_get_token		; Get the next token
160,160,160,0102,0102,79,79,"ld a,c","ld a,c","ld a,c",agon_init.asm,"LD		A, C			; A: Length of the token in characters"
161,161,161,0103,0103,5b d1,5b d1,pop.lil de,pop.lil de,pop.lil de,agon_init.asm,POP.LIL		DE			; Start address of token (was in HL)
162,162,162,0105,0105,c1,c1,pop bc,pop bc,pop bc,agon_init.asm,POP		BC			; ARGC
163,163,163,0106,0106,b7,b7,or a,or a,or a,agon_init.asm,OR		A			; Check for A=0 (no token found) OR at end of string
164,164,164,0107,0107,c8,c8,ret z,ret z,ret z,agon_init.asm,RET		Z
165,165,165,0108,0108,5b dd 1f 00,5b dd 1f 00,"ld.lil (ix),de","ld.lil (ix),de","ld.lil (ix),de",agon_init.asm,"LD.LIL		(IX+0), DE		; Store the pointer to the token"
166,166,166,010c,010c,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_init.asm,PUSH.LIL	HL			; DE=HL
167,167,167,010e,010e,5b d1,5b d1,pop.lil de,pop.lil de,pop.lil de,agon_init.asm,POP.LIL		DE
168,168,168,0110,0110,cd 36 01,cd 36 01,call $0136,call $0136,call $0000,agon_init.asm,CALL		_skip_spaces		; And skip HL past any spaces onto the next character
169,169,169,0113,0113,af,af,xor a,xor a,xor a,agon_init.asm,XOR		A
170,170,170,0114,0114,5b 12,5b 12,"ld.lil (de),a","ld.lil (de),a","ld.lil (de),a",agon_init.asm,"LD.LIL		(DE), A			; Zero-terminate the token"
171,171,171,0116,0116,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX
172,172,172,0119,0119,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX
173,173,173,011c,011c,5b dd 23,5b dd 23,inc.lil ix,inc.lil ix,inc.lil ix,agon_init.asm,INC.LIL		IX			; Advance to next pointer position
174,174,174,011f,011f,0c,0c,inc c,inc c,inc c,agon_init.asm,INC		C			; Increment ARGC
175,175,175,0120,0120,79,79,"ld a,c","ld a,c","ld a,c",agon_init.asm,"LD		A, C			; Check for C >= A"
176,176,176,0121,0121,b8,b8,cp b,cp b,cp b,agon_init.asm,CP		B
177,177,177,0122,0122,38 d8,38 d8,"jr c,$-$26","jr c,$-$26","jr c,$-$00",agon_init.asm,"JR		C, _parse_params_1	; And loop"
178,178,178,0124,0124,c9,c9,ret,ret,ret,agon_init.asm,RET
179,179,179,0125,0125,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",agon_init.asm,"_get_token:		LD		C, 0			; Initialise length"
180,180,180,0127,0127,5b 7e,5b 7e,"ld.lil a,(hl)","ld.lil a,(hl)","ld.lil a,(hl)",agon_init.asm,"@@:			LD.LIL		A, (HL)			; Get the character from the parameter string"
181,181,181,0129,0129,b7,b7,or a,or a,or a,agon_init.asm,OR		A			; Exit if 0 (end of parameter string in MOS)
182,182,182,012a,012a,c8,c8,ret z,ret z,ret z,agon_init.asm,RET 		Z
183,183,183,012b,012b,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,agon_init.asm,CP		13			; Exit if CR (end of parameter string in BBC BASIC)
184,184,184,012d,012d,c8,c8,ret z,ret z,ret z,agon_init.asm,RET		Z
185,185,185,012e,012e,fe 20,fe 20,cp $20,cp $20,cp $00,agon_init.asm,CP		' '			; Exit if space (end of token)
186,186,186,0130,0130,c8,c8,ret z,ret z,ret z,agon_init.asm,RET		Z
187,187,187,0131,0131,5b 23,5b 23,inc.lil hl,inc.lil hl,inc.lil hl,agon_init.asm,INC.LIL		HL			; Advance to next character
188,188,188,0133,0133,0c,0c,inc c,inc c,inc c,agon_init.asm,INC 		C			; Increment length
189,189,189,0134,0134,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,agon_init.asm,JR		@B
190,190,190,0136,0136,5b 7e,5b 7e,"ld.lil a,(hl)","ld.lil a,(hl)","ld.lil a,(hl)",agon_init.asm,"_skip_spaces:		LD.LIL		A, (HL)			; Get the character from the parameter string"
191,191,191,0138,0138,fe 20,fe 20,cp $20,cp $20,cp $00,agon_init.asm,CP		' '			; Exit if not space
192,192,192,013a,013a,c0,c0,ret nz,ret nz,ret nz,agon_init.asm,RET		NZ
193,193,193,013b,013b,5b 23,5b 23,inc.lil hl,inc.lil hl,inc.lil hl,agon_init.asm,INC.LIL		HL			; Advance to next character
194,194,194,013d,013d,18 f7,18 f7,jr $-$07,jr $-$07,jr $-$00,agon_init.asm,JR		_skip_spaces		; Increment length
195,195,195,013f,013f,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_init.asm,_set_abc24:		PUSH.LIL	HL			; Preserve HL
196,196,196,0141,0141,5b c5,5b c5,push.lil bc,push.lil bc,push.lil bc,agon_init.asm,PUSH.LIL	BC			; Stick BC onto SPL
197,197,197,0143,0143,5b 21 02 00 00,5b 21 02 00 00,"ld.lil hl,$000002","ld.lil hl,$000002","ld.lil hl,$000000",agon_init.asm,"LD.LIL		HL, 2			; HL: SP+2"
198,198,198,0148,0148,5b 39,5b 39,"add.lil hl,sp","add.lil hl,sp","add.lil hl,sp",agon_init.asm,"ADD.LIL		HL, SP"
199,199,199,014a,014a,5b 77,5b 77,"ld.lil (hl),a","ld.lil (hl),a","ld.lil (hl),a",agon_init.asm,"LD.LIL		(HL), A			; Store A in it"
200,200,200,014c,014c,5b c1,5b c1,pop.lil bc,pop.lil bc,pop.lil bc,agon_init.asm,POP.LIL		BC			; Fetch ammended BC
201,201,201,014e,014e,5b e1,5b e1,pop.lil hl,pop.lil hl,pop.lil hl,agon_init.asm,POP.LIL		HL			; Restore HL
202,202,202,0150,0150,c9,c9,ret,ret,ret,agon_init.asm,RET
203,203,203,0151,0151,5b dd e5,5b dd e5,push.lil ix,push.lil ix,push.lil ix,agon_init.asm,_set_aix24:		PUSH.LIL	IX			; Stick IX onto SPL
204,204,204,0154,0154,5b dd 21 02 00 00,5b dd 21 02 00 00,"ld.lil ix,$000002","ld.lil ix,$000002","ld.lil ix,$000000",agon_init.asm,"LD.LIL		IX, 2			; IX: SP+2"
205,205,205,015a,015a,5b dd 39,5b dd 39,"add.lil ix,sp","add.lil ix,sp","add.lil ix,sp",agon_init.asm,"ADD.LIL		IX, SP"
206,206,206,015d,015d,5b dd 77 00,5b dd 77 00,"ld.lil (ix),a","ld.lil (ix),a","ld.lil (ix),a",agon_init.asm,"LD.LIL		(IX), A			; Store A in it"
207,207,207,0161,0161,5b dd e1,5b dd e1,pop.lil ix,pop.lil ix,pop.lil ix,agon_init.asm,POP.LIL		IX			; Fetch ammended IX
208,208,208,0164,0164,c9,c9,ret,ret,ret,agon_init.asm,RET
209,209,209,0165,0165,00,00,nop,nop,nop,agon_init.asm,"argv_ptrs:		BLKP	argv_ptrs_max, 0		; Storage for the argv array pointers"
210,210,210,0166,0166,00,00,nop,nop,nop,agon_init.asm,
211,211,211,0167,0167,00,00,nop,nop,nop,agon_init.asm,
212,212,212,0168,0168,00,00,nop,nop,nop,agon_init.asm,
213,213,213,0169,0169,00,00,nop,nop,nop,agon_init.asm,
214,214,214,016a,016a,00,00,nop,nop,nop,agon_init.asm,
215,215,215,016b,016b,00,00,nop,nop,nop,agon_init.asm,
216,216,216,016c,016c,00,00,nop,nop,nop,agon_init.asm,
217,217,217,016d,016d,00,00,nop,nop,nop,agon_init.asm,
218,218,218,016e,016e,00,00,nop,nop,nop,agon_init.asm,
219,219,219,016f,016f,00,00,nop,nop,nop,agon_init.asm,
220,220,220,0170,0170,00,00,nop,nop,nop,agon_init.asm,
221,221,221,0171,0171,00,00,nop,nop,nop,agon_init.asm,
222,222,222,0172,0172,00,00,nop,nop,nop,agon_init.asm,
223,223,223,0173,0173,00,00,nop,nop,nop,agon_init.asm,
224,224,224,0174,0174,00,00,nop,nop,nop,agon_init.asm,
225,225,225,0175,0175,00,00,nop,nop,nop,agon_init.asm,
226,226,226,0176,0176,00,00,nop,nop,nop,agon_init.asm,
227,227,227,0177,0177,00,00,nop,nop,nop,agon_init.asm,
228,228,228,0178,0178,00,00,nop,nop,nop,agon_init.asm,
229,229,229,0179,0179,00,00,nop,nop,nop,agon_init.asm,
230,230,230,017a,017a,00,00,nop,nop,nop,agon_init.asm,
231,231,231,017b,017b,00,00,nop,nop,nop,agon_init.asm,
232,232,232,017c,017c,00,00,nop,nop,nop,agon_init.asm,
233,233,233,017d,017d,00,00,nop,nop,nop,agon_init.asm,
234,234,234,017e,017e,00,00,nop,nop,nop,agon_init.asm,
235,235,235,017f,017f,00,00,nop,nop,nop,agon_init.asm,
236,236,236,0180,0180,00,00,nop,nop,nop,agon_init.asm,
237,237,237,0181,0181,00,00,nop,nop,nop,agon_init.asm,
238,238,238,0182,0182,00,00,nop,nop,nop,agon_init.asm,
239,239,239,0183,0183,00,00,nop,nop,nop,agon_init.asm,
240,240,240,0184,0184,00,00,nop,nop,nop,agon_init.asm,
241,241,241,0185,0185,00,00,nop,nop,nop,agon_init.asm,
242,242,242,0186,0186,00,00,nop,nop,nop,agon_init.asm,
243,243,243,0187,0187,00,00,nop,nop,nop,agon_init.asm,
244,244,244,0188,0188,00,00,nop,nop,nop,agon_init.asm,
245,245,245,0189,0189,00,00,nop,nop,nop,agon_init.asm,
246,246,246,018a,018a,00,00,nop,nop,nop,agon_init.asm,
247,247,247,018b,018b,00,00,nop,nop,nop,agon_init.asm,
248,248,248,018c,018c,00,00,nop,nop,nop,agon_init.asm,
249,249,249,018d,018d,00,00,nop,nop,nop,agon_init.asm,
250,250,250,018e,018e,00,00,nop,nop,nop,agon_init.asm,
251,251,251,018f,018f,00,00,nop,nop,nop,agon_init.asm,
252,252,252,0190,0190,00,00,nop,nop,nop,agon_init.asm,
253,253,253,0191,0191,00,00,nop,nop,nop,agon_init.asm,
254,254,254,0192,0192,00,00,nop,nop,nop,agon_init.asm,
255,255,255,0193,0193,00,00,nop,nop,nop,agon_init.asm,
256,256,256,0194,0194,00,00,nop,nop,nop,agon_init.asm,
257,257,257,0195,0195,dd e5,dd e5,push ix,push ix,push ix,agon_graphics.asm,MODE_:			PUSH	IX			; Get the system vars in IX
258,258,258,0197,0197,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_graphics.asm,"LD	A, function"
259,259,259,0199,0199,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_graphics.asm,RST.LIS	08h
260,260,260,019b,019b,5b dd cb 04 a6,5b dd cb 04 a6,"res.lil 4,(ix+$04)","res.lil 4,(ix+$04)","res.lil 4,(ix+$00)",agon_graphics.asm,"RES.LIL	4, (IX+sysvar_vpd_pflags)"
261,261,261,01a0,01a0,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,agon_graphics.asm,CALL    EXPRI
262,262,262,01a3,01a3,d9,d9,exx,exx,exx,agon_graphics.asm,EXX
263,263,263,01a4,01a4,3e 16,3e 16,"ld a,$16","ld a,$16","ld a,$00",agon_graphics.asm,"LD      A, VAL"
264,264,264,01a6,01a6,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
265,265,265,01a9,01a9,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD      A, VAL"
266,266,266,01aa,01aa,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
267,267,267,01ad,01ad,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_graphics.asm,"LD	A, function"
268,268,268,01af,01af,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_graphics.asm,RST.LIS	08h
269,269,269,01b1,01b1,5b dd cb 04 66,5b dd cb 04 66,"bit.lil 4,(ix+$04)","bit.lil 4,(ix+$04)","bit.lil 4,(ix+$00)",agon_graphics.asm,"@@:			BIT.LIL	4, (IX+sysvar_vpd_pflags)"
270,270,270,01b6,01b6,28 f9,28 f9,"jr z,$-$05","jr z,$-$05","jr z,$-$00",agon_graphics.asm,"JR	Z, @B			; Wait for the result"
271,271,271,01b8,01b8,dd e1,dd e1,pop ix,pop ix,pop ix,agon_graphics.asm,POP	IX
272,272,272,01ba,01ba,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,agon_graphics.asm,JP	XEQ
273,273,273,01bd,01bd,dd e5,dd e5,push ix,push ix,push ix,agon_graphics.asm,GETSCHR_1:		PUSH	IX			; Get the system vars in IX
274,274,274,01bf,01bf,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_graphics.asm,"LD	A, function"
275,275,275,01c1,01c1,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_graphics.asm,RST.LIS	08h
276,276,276,01c3,01c3,5b dd cb 04 8e,5b dd cb 04 8e,"res.lil 1,(ix+$04)","res.lil 1,(ix+$04)","res.lil 1,(ix+$00)",agon_graphics.asm,"RES.LIL	1, (IX+sysvar_vpd_pflags)"
277,277,277,01c8,01c8,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_graphics.asm,"LD      A, VAL"
278,278,278,01ca,01ca,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
279,279,279,01cd,01cd,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_graphics.asm,"LD      A, VAL"
280,280,280,01cf,01cf,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
281,281,281,01d2,01d2,3e 83,3e 83,"ld a,$83","ld a,$83","ld a,$00",agon_graphics.asm,"LD      A, VAL"
282,282,282,01d4,01d4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
283,283,283,01d7,01d7,7b,7b,"ld a,e","ld a,e","ld a,e",agon_graphics.asm,"LD      A, VAL"
284,284,284,01d8,01d8,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
285,285,285,01db,01db,7a,7a,"ld a,d","ld a,d","ld a,d",agon_graphics.asm,"LD      A, VAL"
286,286,286,01dc,01dc,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
287,287,287,01df,01df,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD      A, VAL"
288,288,288,01e0,01e0,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
289,289,289,01e3,01e3,7c,7c,"ld a,h","ld a,h","ld a,h",agon_graphics.asm,"LD      A, VAL"
290,290,290,01e4,01e4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
291,291,291,01e7,01e7,5b dd cb 04 4e,5b dd cb 04 4e,"bit.lil 1,(ix+$04)","bit.lil 1,(ix+$04)","bit.lil 1,(ix+$00)",agon_graphics.asm,"@@:			BIT.LIL	1, (IX+sysvar_vpd_pflags)"
292,292,292,01ec,01ec,28 f9,28 f9,"jr z,$-$05","jr z,$-$05","jr z,$-$00",agon_graphics.asm,"JR	Z, @B			; Wait for the result"
293,293,293,01ee,01ee,5b dd 7e 09,5b dd 7e 09,"ld.lil a,(ix+$09)","ld.lil a,(ix+$09)","ld.lil a,(ix+$00)",agon_graphics.asm,"LD.LIL	A, (IX+sysvar_scrchar)	; Fetch the result in A"
294,294,294,01f2,01f2,b7,b7,or a,or a,or a,agon_graphics.asm,OR	A			; Check for 00h
295,295,295,01f3,01f3,37,37,scf,scf,scf,agon_graphics.asm,SCF				; C = character map
296,296,296,01f4,01f4,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",agon_graphics.asm,"JR	NZ, @F			; We have a character, so skip next bit"
297,297,297,01f6,01f6,af,af,xor a,xor a,xor a,agon_graphics.asm,XOR	A			; Clear carry
298,298,298,01f7,01f7,dd e1,dd e1,pop ix,pop ix,pop ix,agon_graphics.asm,@@:			POP	IX
299,299,299,01f9,01f9,c9,c9,ret,ret,ret,agon_graphics.asm,RET
300,300,300,01fa,01fa,dd e5,dd e5,push ix,push ix,push ix,agon_graphics.asm,POINT_:			PUSH	IX			; Get the system vars in IX
301,301,301,01fc,01fc,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_graphics.asm,"LD	A, function"
302,302,302,01fe,01fe,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_graphics.asm,RST.LIS	08h
303,303,303,0200,0200,5b dd cb 04 96,5b dd cb 04 96,"res.lil 2,(ix+$04)","res.lil 2,(ix+$04)","res.lil 2,(ix+$00)",agon_graphics.asm,"RES.LIL	2, (IX+sysvar_vpd_pflags)"
304,304,304,0205,0205,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_graphics.asm,"LD      A, VAL"
305,305,305,0207,0207,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
306,306,306,020a,020a,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_graphics.asm,"LD      A, VAL"
307,307,307,020c,020c,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
308,308,308,020f,020f,3e 84,3e 84,"ld a,$84","ld a,$84","ld a,$00",agon_graphics.asm,"LD      A, VAL"
309,309,309,0211,0211,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
310,310,310,0214,0214,7b,7b,"ld a,e","ld a,e","ld a,e",agon_graphics.asm,"LD      A, VAL"
311,311,311,0215,0215,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
312,312,312,0218,0218,7a,7a,"ld a,d","ld a,d","ld a,d",agon_graphics.asm,"LD      A, VAL"
313,313,313,0219,0219,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
314,314,314,021c,021c,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD      A, VAL"
315,315,315,021d,021d,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
316,316,316,0220,0220,7c,7c,"ld a,h","ld a,h","ld a,h",agon_graphics.asm,"LD      A, VAL"
317,317,317,0221,0221,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
318,318,318,0224,0224,5b dd cb 04 56,5b dd cb 04 56,"bit.lil 2,(ix+$04)","bit.lil 2,(ix+$04)","bit.lil 2,(ix+$00)",agon_graphics.asm,"@@:			BIT.LIL	2, (IX+sysvar_vpd_pflags)"
319,319,319,0229,0229,28 f9,28 f9,"jr z,$-$05","jr z,$-$05","jr z,$-$00",agon_graphics.asm,"JR	Z, @B			; Wait for the result"
320,320,320,022b,022b,5b dd 7e 16,5b dd 7e 16,"ld.lil a,(ix+$16)","ld.lil a,(ix+$16)","ld.lil a,(ix+$00)",agon_graphics.asm,"LD.LIL	A, (IX+sysvar_scrpixelIndex)"
321,321,321,022f,022f,dd e1,dd e1,pop ix,pop ix,pop ix,agon_graphics.asm,POP	IX
322,322,322,0231,0231,c9,c9,ret,ret,ret,agon_graphics.asm,RET
323,323,323,0232,0232,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,agon_graphics.asm,COLOUR_:		CALL	EXPRI			; The colour / mode
324,324,324,0235,0235,d9,d9,exx,exx,exx,agon_graphics.asm,EXX
325,325,325,0236,0236,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD	A, L"
326,326,326,0237,0237,32 00 53,32 00 52,"ld ($5300),a","ld ($5200),a","ld ($0000),a",agon_graphics.asm,"LD	(VDU_BUFFER+0), A	; Store first parameter"
327,327,327,023a,023a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,agon_graphics.asm,CALL	NXT			; Are there any more parameters?
328,328,328,023d,023d,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,agon_graphics.asm,"CP	','"
329,329,329,023f,023f,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",agon_graphics.asm,"JR	Z, COLOUR_1		; Yes, so we're doing a palette change next"
330,330,330,0241,0241,3e 11,3e 11,"ld a,$11","ld a,$11","ld a,$00",agon_graphics.asm,"LD      A, VAL"
331,331,331,0243,0243,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
332,332,332,0246,0246,3a 00 53,3a 00 52,"ld a,($5300)","ld a,($5200)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
333,333,333,0249,0249,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
334,334,334,024c,024c,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,agon_graphics.asm,JP	XEQ
335,335,335,024f,024f,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,agon_graphics.asm,COLOUR_1:		CALL	COMMA
336,336,336,0252,0252,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,agon_graphics.asm,CALL	EXPRI			; Parse R (OR P)
337,337,337,0255,0255,d9,d9,exx,exx,exx,agon_graphics.asm,EXX
338,338,338,0256,0256,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD	A, L"
339,339,339,0257,0257,32 01 53,32 01 52,"ld ($5301),a","ld ($5201),a","ld ($0000),a",agon_graphics.asm,"LD	(VDU_BUFFER+1), A"
340,340,340,025a,025a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,agon_graphics.asm,CALL	NXT			; Are there any more parameters?
341,341,341,025d,025d,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,agon_graphics.asm,"CP	','"
342,342,342,025f,025f,28 23,28 23,"jr z,$+$25","jr z,$+$25","jr z,$+$00",agon_graphics.asm,"JR	Z, COLOUR_2		; Yes, so we're doing COLOUR L,R,G,B"
343,343,343,0261,0261,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",agon_graphics.asm,"LD      A, VAL"
344,344,344,0263,0263,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
345,345,345,0266,0266,3a 00 53,3a 00 52,"ld a,($5300)","ld a,($5200)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
346,346,346,0269,0269,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
347,347,347,026c,026c,3a 01 53,3a 01 52,"ld a,($5301)","ld a,($5201)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
348,348,348,026f,026f,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
349,349,349,0272,0272,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_graphics.asm,"LD      A, VAL"
350,350,350,0274,0274,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
351,351,351,0277,0277,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_graphics.asm,"LD      A, VAL"
352,352,352,0279,0279,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
353,353,353,027c,027c,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_graphics.asm,"LD      A, VAL"
354,354,354,027e,027e,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
355,355,355,0281,0281,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,agon_graphics.asm,JP	XEQ
356,356,356,0284,0284,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,agon_graphics.asm,COLOUR_2:		CALL	COMMA
357,357,357,0287,0287,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,agon_graphics.asm,CALL	EXPRI			; Parse G
358,358,358,028a,028a,d9,d9,exx,exx,exx,agon_graphics.asm,EXX
359,359,359,028b,028b,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD	A, L"
360,360,360,028c,028c,32 02 53,32 02 52,"ld ($5302),a","ld ($5202),a","ld ($0000),a",agon_graphics.asm,"LD	(VDU_BUFFER+2), A"
361,361,361,028f,028f,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,agon_graphics.asm,CALL	COMMA
362,362,362,0292,0292,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,agon_graphics.asm,CALL	EXPRI			; Parse B
363,363,363,0295,0295,d9,d9,exx,exx,exx,agon_graphics.asm,EXX
364,364,364,0296,0296,7d,7d,"ld a,l","ld a,l","ld a,l",agon_graphics.asm,"LD	A, L"
365,365,365,0297,0297,32 03 53,32 03 52,"ld ($5303),a","ld ($5203),a","ld ($0000),a",agon_graphics.asm,"LD	(VDU_BUFFER+3), A"
366,366,366,029a,029a,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",agon_graphics.asm,"LD      A, VAL"
367,367,367,029c,029c,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
368,368,368,029f,029f,3a 00 53,3a 00 52,"ld a,($5300)","ld a,($5200)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
369,369,369,02a2,02a2,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
370,370,370,02a5,02a5,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",agon_graphics.asm,"LD      A, VAL"
371,371,371,02a7,02a7,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
372,372,372,02aa,02aa,3a 01 53,3a 01 52,"ld a,($5301)","ld a,($5201)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
373,373,373,02ad,02ad,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
374,374,374,02b0,02b0,3a 02 53,3a 02 52,"ld a,($5302)","ld a,($5202)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
375,375,375,02b3,02b3,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
376,376,376,02b6,02b6,3a 03 53,3a 03 52,"ld a,($5303)","ld a,($5203)","ld a,($0000)",agon_graphics.asm,"LD      A, VAL"
377,377,377,02b9,02b9,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_graphics.asm,CALL    OSWRCH
378,378,378,02bc,02bc,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,agon_graphics.asm,JP	XEQ
379,379,379,02bf,02bf,cd 18 05,cd 18 05,call $0518,call $0518,call $0000,agon_gpio.asm,GPIOB_SETMODE:		CALL	SWITCH_A
380,380,380,02c2,02c2,d6 02,d6 02,sub $02,sub $02,sub $00,agon_gpio.asm,DW	GPIOB_M0	; Output
381,381,381,02c4,02c4,fb,fb,ei,ei,ei,agon_gpio.asm,DW	GPIOB_M1	; Input
382,382,382,02c5,02c5,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_gpio.asm,
383,383,383,02c6,02c6,1b,1b,dec de,dec de,dec de,agon_gpio.asm,DW	GPIOB_M2	; Open Drain IO
384,384,384,02c7,02c7,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
385,385,385,02c8,02c8,3b,3b,dec sp,dec sp,dec sp,agon_gpio.asm,DW	GPIOB_M3	; Open Source IO
386,386,386,02c9,02c9,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
387,387,387,02ca,02ca,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",agon_gpio.asm,"DW	GPIOB_M4	; Interrupt, Dual Edge"
388,388,388,02cb,02cb,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
389,389,389,02cc,02cc,82,82,"add a,d","add a,d","add a,d",agon_gpio.asm,DW	GPIOB_M5	; Alt Function
390,390,390,02cd,02cd,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
391,391,391,02ce,02ce,9d,9d,"sbc a,l","sbc a,l","sbc a,l",agon_gpio.asm,"DW	GPIOB_M6	; Interrupt, Active Low"
392,392,392,02cf,02cf,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
393,393,393,02d0,02d0,c4 03 e6,c4 03 e6,"call nz,$e603","call nz,$e603","call nz,$0000",agon_gpio.asm,"DW	GPIOB_M7	; Interrupt, Active High"
394,394,394,02d3,02d3,03,03,inc bc,inc bc,inc bc,agon_gpio.asm,
395,395,395,02d4,02d4,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_gpio.asm,"DW	GPIOB_M9	; Interrupt, Rising Edge"
396,396,396,02d5,02d5,04,04,inc b,inc b,inc b,agon_gpio.asm,
397,397,397,02d6,02d6,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
398,398,398,02d7,02d7,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
399,399,399,02d8,02d8,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
400,400,400,02d9,02d9,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
401,401,401,02da,02da,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
402,402,402,02dd,02dd,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
403,403,403,02de,02de,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
404,404,404,02e1,02e1,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
405,405,405,02e2,02e2,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
406,406,406,02e3,02e3,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
407,407,407,02e4,02e4,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
408,408,408,02e5,02e5,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
409,409,409,02e6,02e6,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
410,410,410,02e9,02e9,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
411,411,411,02ea,02ea,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
412,412,412,02ed,02ed,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
413,413,413,02ee,02ee,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
414,414,414,02ef,02ef,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
415,415,415,02f0,02f0,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
416,416,416,02f1,02f1,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
417,417,417,02f2,02f2,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
418,418,418,02f5,02f5,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
419,419,419,02f6,02f6,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
420,420,420,02f9,02f9,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
421,421,421,02fa,02fa,c9,c9,ret,ret,ret,agon_gpio.asm,RET
422,422,422,02fb,02fb,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
423,423,423,02fe,02fe,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
424,424,424,02ff,02ff,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
425,425,425,0302,0302,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
426,426,426,0303,0303,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
427,427,427,0304,0304,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
428,428,428,0305,0305,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
429,429,429,0306,0306,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
430,430,430,0309,0309,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
431,431,431,030a,030a,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
432,432,432,030d,030d,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
433,433,433,030e,030e,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
434,434,434,030f,030f,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
435,435,435,0310,0310,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
436,436,436,0311,0311,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
437,437,437,0312,0312,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
438,438,438,0315,0315,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
439,439,439,0316,0316,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
440,440,440,0319,0319,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
441,441,441,031a,031a,c9,c9,ret,ret,ret,agon_gpio.asm,RET
442,442,442,031b,031b,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
443,443,443,031c,031c,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
444,444,444,031d,031d,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
445,445,445,031e,031e,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
446,446,446,031f,031f,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
447,447,447,0322,0322,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
448,448,448,0323,0323,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
449,449,449,0326,0326,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
450,450,450,0327,0327,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
451,451,451,032a,032a,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
452,452,452,032b,032b,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
453,453,453,032e,032e,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
454,454,454,032f,032f,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
455,455,455,0330,0330,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
456,456,456,0331,0331,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
457,457,457,0332,0332,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
458,458,458,0335,0335,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
459,459,459,0336,0336,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
460,460,460,0339,0339,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
461,461,461,033a,033a,c9,c9,ret,ret,ret,agon_gpio.asm,RET
462,462,462,033b,033b,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
463,463,463,033e,033e,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
464,464,464,033f,033f,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
465,465,465,0342,0342,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
466,466,466,0345,0345,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
467,467,467,0346,0346,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
468,468,468,0349,0349,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
469,469,469,034a,034a,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
470,470,470,034b,034b,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
471,471,471,034c,034c,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
472,472,472,034d,034d,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
473,473,473,0350,0350,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
474,474,474,0351,0351,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
475,475,475,0354,0354,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
476,476,476,0355,0355,c9,c9,ret,ret,ret,agon_gpio.asm,RET
477,477,477,0356,0356,ed 38 9a,ed 38 9a,"in0 a,($9a)","in0 a,($9a)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
478,478,478,0359,0359,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
479,479,479,035a,035a,ed 39 9a,ed 39 9a,"out0 ($9a),a","out0 ($9a),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
480,480,480,035d,035d,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
481,481,481,035e,035e,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
482,482,482,035f,035f,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
483,483,483,0360,0360,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
484,484,484,0361,0361,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
485,485,485,0364,0364,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
486,486,486,0365,0365,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
487,487,487,0368,0368,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
488,488,488,0369,0369,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
489,489,489,036a,036a,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
490,490,490,036b,036b,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
491,491,491,036c,036c,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
492,492,492,036d,036d,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
493,493,493,0370,0370,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
494,494,494,0371,0371,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
495,495,495,0374,0374,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
496,496,496,0375,0375,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
497,497,497,0376,0376,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
498,498,498,0377,0377,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
499,499,499,0378,0378,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
500,500,500,0379,0379,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
501,501,501,037c,037c,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
502,502,502,037d,037d,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
503,503,503,0380,0380,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
504,504,504,0381,0381,c9,c9,ret,ret,ret,agon_gpio.asm,RET
505,505,505,0382,0382,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
506,506,506,0385,0385,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
507,507,507,0386,0386,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
508,508,508,0389,0389,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
509,509,509,038a,038a,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
510,510,510,038b,038b,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
511,511,511,038c,038c,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
512,512,512,038d,038d,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
513,513,513,0390,0390,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
514,514,514,0391,0391,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
515,515,515,0394,0394,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
516,516,516,0395,0395,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
517,517,517,0398,0398,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
518,518,518,0399,0399,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
519,519,519,039c,039c,c9,c9,ret,ret,ret,agon_gpio.asm,RET
520,520,520,039d,039d,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
521,521,521,039e,039e,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
522,522,522,039f,039f,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
523,523,523,03a0,03a0,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
524,524,524,03a1,03a1,ed 38 9a,ed 38 9a,"in0 a,($9a)","in0 a,($9a)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
525,525,525,03a4,03a4,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
526,526,526,03a5,03a5,ed 39 9a,ed 39 9a,"out0 ($9a),a","out0 ($9a),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
527,527,527,03a8,03a8,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
528,528,528,03a9,03a9,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
529,529,529,03aa,03aa,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
530,530,530,03ab,03ab,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
531,531,531,03ac,03ac,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
532,532,532,03ad,03ad,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
533,533,533,03b0,03b0,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
534,534,534,03b1,03b1,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
535,535,535,03b4,03b4,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
536,536,536,03b5,03b5,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
537,537,537,03b8,03b8,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
538,538,538,03b9,03b9,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
539,539,539,03bc,03bc,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
540,540,540,03bf,03bf,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
541,541,541,03c0,03c0,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
542,542,542,03c3,03c3,c9,c9,ret,ret,ret,agon_gpio.asm,RET
543,543,543,03c4,03c4,ed 38 9a,ed 38 9a,"in0 a,($9a)","in0 a,($9a)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
544,544,544,03c7,03c7,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
545,545,545,03c8,03c8,ed 39 9a,ed 39 9a,"out0 ($9a),a","out0 ($9a),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
546,546,546,03cb,03cb,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
547,547,547,03cc,03cc,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
548,548,548,03cd,03cd,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
549,549,549,03ce,03ce,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
550,550,550,03cf,03cf,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
551,551,551,03d2,03d2,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
552,552,552,03d3,03d3,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
553,553,553,03d6,03d6,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
554,554,554,03d7,03d7,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
555,555,555,03da,03da,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
556,556,556,03db,03db,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
557,557,557,03de,03de,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
558,558,558,03e1,03e1,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
559,559,559,03e2,03e2,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
560,560,560,03e5,03e5,c9,c9,ret,ret,ret,agon_gpio.asm,RET
561,561,561,03e6,03e6,c5,c5,push bc,push bc,push bc,agon_gpio.asm,PUSH    BC
562,562,562,03e7,03e7,78,78,"ld a,b","ld a,b","ld a,b",agon_gpio.asm,"LD      A, VAL"
563,563,563,03e8,03e8,2f,2f,cpl,cpl,cpl,agon_gpio.asm,CPL
564,564,564,03e9,03e9,4f,4f,"ld c,a","ld c,a","ld c,a",agon_gpio.asm,"LD      C, A"
565,565,565,03ea,03ea,ed 38 9a,ed 38 9a,"in0 a,($9a)","in0 a,($9a)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
566,566,566,03ed,03ed,a1,a1,and c,and c,and c,agon_gpio.asm,AND     C
567,567,567,03ee,03ee,ed 39 9a,ed 39 9a,"out0 ($9a),a","out0 ($9a),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
568,568,568,03f1,03f1,c1,c1,pop bc,pop bc,pop bc,agon_gpio.asm,POP     BC
569,569,569,03f2,03f2,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
570,570,570,03f5,03f5,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
571,571,571,03f6,03f6,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
572,572,572,03f9,03f9,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
573,573,573,03fc,03fc,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
574,574,574,03fd,03fd,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
575,575,575,0400,0400,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
576,576,576,0403,0403,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
577,577,577,0404,0404,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
578,578,578,0407,0407,c9,c9,ret,ret,ret,agon_gpio.asm,RET
579,579,579,0408,0408,ed 38 9a,ed 38 9a,"in0 a,($9a)","in0 a,($9a)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
580,580,580,040b,040b,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
581,581,581,040c,040c,ed 39 9a,ed 39 9a,"out0 ($9a),a","out0 ($9a),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
582,582,582,040f,040f,ed 38 9b,ed 38 9b,"in0 a,($9b)","in0 a,($9b)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
583,583,583,0412,0412,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
584,584,584,0413,0413,ed 39 9b,ed 39 9b,"out0 ($9b),a","out0 ($9b),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
585,585,585,0416,0416,ed 38 9c,ed 38 9c,"in0 a,($9c)","in0 a,($9c)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
586,586,586,0419,0419,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
587,587,587,041a,041a,ed 39 9c,ed 39 9c,"out0 ($9c),a","out0 ($9c),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
588,588,588,041d,041d,ed 38 9d,ed 38 9d,"in0 a,($9d)","in0 a,($9d)","in0 a,($00)",agon_gpio.asm,"IN0     A, (REG)"
589,589,589,0420,0420,b0,b0,or b,or b,or b,agon_gpio.asm,OR      VAL
590,590,590,0421,0421,ed 39 9d,ed 39 9d,"out0 ($9d),a","out0 ($9d),a","out0 ($00),a",agon_gpio.asm,"OUT0    (REG), A"
591,591,591,0424,0424,c9,c9,ret,ret,ret,agon_gpio.asm,RET
592,592,592,0425,0425,f3,f3,di,di,di,agon_interrupt.asm,VBLANK_INIT:		DI
593,593,593,0426,0426,ed 6e,ed 6e,"ld a,mb","ld a,mb","ld a,mb",agon_interrupt.asm,"LD		A, MB 				; Get a 24-bit pointer to"
594,594,594,0428,0428,21 a3 04,21 a3 04,"ld hl,$04a3","ld hl,$04a3","ld hl,$0000",agon_interrupt.asm,"LD		HL, VBLANK_HANDLER		; this interrupt handler routine who's"
595,595,595,042b,042b,cd 65 04,cd 65 04,call $0465,call $0465,call $0000,agon_interrupt.asm,CALL		SET_AHL16 			; address is a 16-bit pointer in BBC BASIC's segment
596,596,596,042e,042e,1e 32,1e 32,"ld e,$32","ld e,$32","ld e,$00",agon_interrupt.asm,"LD		E, 32h				; Set up the VBlank Interrupt Vector"
597,597,597,0430,0430,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",agon_interrupt.asm,"LD	A, function"
598,598,598,0432,0432,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_interrupt.asm,RST.LIS	08h
599,599,599,0434,0434,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_interrupt.asm,PUSH.LIL	HL				; HLU: Pointer to the MOS interrupt vector
600,600,600,0436,0436,5b d1,5b d1,pop.lil de,pop.lil de,pop.lil de,agon_interrupt.asm,POP.LIL		DE 				; DEU: Pointer to the MOS interrupt vector
601,601,601,0438,0438,21 bb 04,21 bb 04,"ld hl,$04bb","ld hl,$04bb","ld hl,$0000",agon_interrupt.asm,"LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment"
602,602,602,043b,043b,ed 6e,ed 6e,"ld a,mb","ld a,mb","ld a,mb",agon_interrupt.asm,"LD		A, MB	 			; Get the segment BBC BASIC is running in"
603,603,603,043d,043d,32 ac 04,32 ac 04,"ld ($04ac),a","ld ($04ac),a","ld ($0000),a",agon_interrupt.asm,"LD		(VBLANK_HANDLER_MB + 1), A 	; Store in the interrupt handler"
604,604,604,0440,0440,cd 65 04,cd 65 04,call $0465,call $0465,call $0000,agon_interrupt.asm,CALL		SET_AHL16 			; Convert pointer to an absolute 24-bit address
605,605,605,0443,0443,5b ed 1f,5b ed 1f,"ld.lil (hl),de","ld.lil (hl),de","ld.lil (hl),de",agon_interrupt.asm,"LD.LIL		(HL), DE			; Self-modify the code"
606,606,606,0446,0446,fb,fb,ei,ei,ei,agon_interrupt.asm,EI
607,607,607,0447,0447,c9,c9,ret,ret,ret,agon_interrupt.asm,RET
608,608,608,0448,0448,f3,f3,di,di,di,agon_interrupt.asm,VBLANK_STOP:		DI
609,609,609,0449,0449,21 bb 04,21 bb 04,"ld hl,$04bb","ld hl,$04bb","ld hl,$0000",agon_interrupt.asm,"LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment"
610,610,610,044c,044c,3a ac 04,3a ac 04,"ld a,($04ac)","ld a,($04ac)","ld a,($0000)",agon_interrupt.asm,"LD		A, (VBLANK_HANDLER_MB + 1)	; The stored MB of the segment BBC BASIC is running in"
611,611,611,044f,044f,f5,f5,push af,push af,push af,agon_interrupt.asm,PUSH		AF 				; Stack the MB for later
612,612,612,0450,0450,cd 65 04,cd 65 04,call $0465,call $0465,call $0000,agon_interrupt.asm,CALL		SET_AHL16			; Convert pointer to an absolute 24-bit address
613,613,613,0453,0453,5b ed 17,5b ed 17,"ld.lil de,(hl)","ld.lil de,(hl)","ld.lil de,(hl)",agon_interrupt.asm,"LD.LIL		DE, (HL)			; DEU: Address of MOS interrupt vector"
614,614,614,0456,0456,5b d5,5b d5,push.lil de,push.lil de,push.lil de,agon_interrupt.asm,PUSH.LIL	DE				; Transfer to HL
615,615,615,0458,0458,5b e1,5b e1,pop.lil hl,pop.lil hl,pop.lil hl,agon_interrupt.asm,POP.LIL		HL
616,616,616,045a,045a,1e 32,1e 32,"ld e,$32","ld e,$32","ld e,$00",agon_interrupt.asm,"LD		E, 32h"
617,617,617,045c,045c,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",agon_interrupt.asm,"LD	A, function"
618,618,618,045e,045e,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_interrupt.asm,RST.LIS	08h
619,619,619,0460,0460,f1,f1,pop af,pop af,pop af,agon_interrupt.asm,POP		AF 				; Restore MB to this segment
620,620,620,0461,0461,ed 6d,ed 6d,"ld mb,a","ld mb,a","ld mb,a",agon_interrupt.asm,"LD		MB, A"
621,621,621,0463,0463,fb,fb,ei,ei,ei,agon_interrupt.asm,EI
622,622,622,0464,0464,c9,c9,ret,ret,ret,agon_interrupt.asm,RET
623,623,623,0465,0465,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_interrupt.asm,SET_AHL16:		PUSH.LIL	HL
624,624,624,0467,0467,5b 21 02 00 00,5b 21 02 00 00,"ld.lil hl,$000002","ld.lil hl,$000002","ld.lil hl,$000000",agon_interrupt.asm,"LD.LIL		HL, 2"
625,625,625,046c,046c,5b 39,5b 39,"add.lil hl,sp","add.lil hl,sp","add.lil hl,sp",agon_interrupt.asm,"ADD.LIL		HL, SP"
626,626,626,046e,046e,5b 77,5b 77,"ld.lil (hl),a","ld.lil (hl),a","ld.lil (hl),a",agon_interrupt.asm,"LD.LIL		(HL), A"
627,627,627,0470,0470,5b e1,5b e1,pop.lil hl,pop.lil hl,pop.lil hl,agon_interrupt.asm,POP.LIL		HL
628,628,628,0472,0472,c9,c9,ret,ret,ret,agon_interrupt.asm,RET
629,629,629,0473,0473,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_interrupt.asm,"LD	A, function"
630,630,630,0475,0475,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_interrupt.asm,RST.LIS	08h
631,631,631,0477,0477,21 07 52,21 f8 50,"ld hl,$5207","ld hl,$50f8","ld hl,$0000",agon_interrupt.asm,"LD		HL, KEYCOUNT 			; Check whether the keycount has changed"
632,632,632,047a,047a,5b dd 7e 19,5b dd 7e 19,"ld.lil a,(ix+$19)","ld.lil a,(ix+$19)","ld.lil a,(ix+$00)",agon_interrupt.asm,"LD.LIL		A, (IX + sysvar_vkeycount)	; by comparing the MOS copy"
633,633,633,047e,047e,be,be,cp (hl),cp (hl),cp (hl),agon_interrupt.asm,CP 		(HL)				; with our local copy
634,634,634,047f,047f,20 09,20 09,"jr nz,$+$0b","jr nz,$+$0b","jr nz,$+$00",agon_interrupt.asm,"JR		NZ, DO_KEYBOARD_1		; Yes it has, so jump to the next bit"
635,635,635,0481,0481,af,af,xor a,xor a,xor a,agon_interrupt.asm,DO_KEYBOARD_0:		XOR		A 				; Clear the keyboard values
636,636,636,0482,0482,32 06 52,32 f7 50,"ld ($5206),a","ld ($50f7),a","ld ($0000),a",agon_interrupt.asm,"LD		(KEYASCII), A"
637,637,637,0485,0485,32 05 52,32 f6 50,"ld ($5205),a","ld ($50f6),a","ld ($0000),a",agon_interrupt.asm,"LD		(KEYDOWN), A"
638,638,638,0488,0488,5b c9,5b c9,ret.lil,ret.lil,ret.lil,agon_interrupt.asm,RET.LIL 					; And return
639,639,639,048a,048a,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_interrupt.asm,"DO_KEYBOARD_1:		LD		(HL), A 			; Store the updated local copy of keycount"
640,640,640,048b,048b,5b dd 7e 18,5b dd 7e 18,"ld.lil a,(ix+$18)","ld.lil a,(ix+$18)","ld.lil a,(ix+$00)",agon_interrupt.asm,"LD.LIL		A, (IX + sysvar_vkeydown)	; Fetch key down value (1 = key down, 0 = key up)"
641,641,641,048f,048f,b7,b7,or a,or a,or a,agon_interrupt.asm,OR		A
642,642,642,0490,0490,28 ef,28 ef,"jr z,$-$0f","jr z,$-$0f","jr z,$-$00",agon_interrupt.asm,"JR		Z, DO_KEYBOARD_0		; If it is key up, then clear the keyboard values"
643,643,643,0492,0492,32 05 52,32 f6 50,"ld ($5205),a","ld ($50f6),a","ld ($0000),a",agon_interrupt.asm,"LD		(KEYDOWN), A 			; Store the keydown value"
644,644,644,0495,0495,5b dd 7e 05,5b dd 7e 05,"ld.lil a,(ix+$05)","ld.lil a,(ix+$05)","ld.lil a,(ix+$00)",agon_interrupt.asm,"LD.LIL		A, (IX + sysvar_keyascii)	; Fetch key ASCII value"
645,645,645,0499,0499,32 06 52,32 f7 50,"ld ($5206),a","ld ($50f7),a","ld ($0000),a",agon_interrupt.asm,"LD		(KEYASCII), A 			; Store locally"
646,646,646,049c,049c,fe 1b,fe 1b,cp $1b,cp $1b,cp $00,agon_interrupt.asm,CP		1Bh				; Is it escape?
647,647,647,049e,049e,cc 18 06,cc f8 05,"call z,$0618","call z,$05f8","call z,$0000",agon_interrupt.asm,"CALL		Z, ESCSET			; Yes, so set the escape flags"
648,648,648,04a1,04a1,49 c9,49 c9,ret.lis,ret.lis,ret.lis,agon_interrupt.asm,RET.LIS						; Return to the interrupt handler
649,649,649,04a3,04a3,f3,f3,di,di,di,agon_interrupt.asm,VBLANK_HANDLER:		DI
650,650,650,04a4,04a4,f5,f5,push af,push af,push af,agon_interrupt.asm,PUSH		AF
651,651,651,04a5,04a5,e5,e5,push hl,push hl,push hl,agon_interrupt.asm,PUSH		HL
652,652,652,04a6,04a6,dd e5,dd e5,push ix,push ix,push ix,agon_interrupt.asm,PUSH		IX
653,653,653,04a8,04a8,ed 6e,ed 6e,"ld a,mb","ld a,mb","ld a,mb",agon_interrupt.asm,"LD		A, MB"
654,654,654,04aa,04aa,f5,f5,push af,push af,push af,agon_interrupt.asm,PUSH		AF
655,655,655,04ab,04ab,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_interrupt.asm,"VBLANK_HANDLER_MB:	LD		A, 0				; This is self-modified by VBLANK_INIT"
656,656,656,04ad,04ad,ed 6d,ed 6d,"ld mb,a","ld mb,a","ld mb,a",agon_interrupt.asm,"LD		MB, A"
657,657,657,04af,04af,49 cd 73 04,49 cd 73 04,call.lis $0473,call.lis $0473,call.lis $0000,agon_interrupt.asm,CALL.LIS	DO_KEYBOARD
658,658,658,04b3,04b3,f1,f1,pop af,pop af,pop af,agon_interrupt.asm,POP		AF
659,659,659,04b4,04b4,ed 6d,ed 6d,"ld mb,a","ld mb,a","ld mb,a",agon_interrupt.asm,"LD		MB, A"
660,660,660,04b6,04b6,dd e1,dd e1,pop ix,pop ix,pop ix,agon_interrupt.asm,POP		IX
661,661,661,04b8,04b8,e1,e1,pop hl,pop hl,pop hl,agon_interrupt.asm,POP		HL
662,662,662,04b9,04b9,f1,f1,pop af,pop af,pop af,agon_interrupt.asm,POP		AF
663,663,663,04ba,04ba,c3 00 00,c3 00 00,jp $0000,jp $0000,jp $0000,agon_interrupt.asm,VBLANK_HANDLER_JP:	JP		0				; This is self-modified by VBLANK_INIT
664,664,664,04bd,04bd,00,00,nop,nop,nop,agon_interrupt.asm,
665,665,665,04be,04be,c5,c5,push bc,push bc,push bc,agon_misc.asm,ASC_TO_NUMBER:		PUSH	BC			; Preserve BC
666,666,666,04bf,04bf,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",agon_misc.asm,"LD	DE, 0			; Initialise DE"
667,667,667,04c2,04c2,cd 02 05,cd 02 05,call $0502,call $0502,call $0000,agon_misc.asm,CALL	SKIPSPmisc			; Skip whitespace
668,668,668,04c5,04c5,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"LD	A, (HL)			; Read first character"
669,669,669,04c6,04c6,fe 26,fe 26,cp $26,cp $26,cp $00,agon_misc.asm,CP	'&'			; Is it prefixed with '&' (HEX number)?
670,670,670,04c8,04c8,20 1e,20 1e,"jr nz,$+$20","jr nz,$+$20","jr nz,$+$00",agon_misc.asm,"JR	NZ, ASC_TO_NUMBER3	; Jump to decimal parser if not"
671,671,671,04ca,04ca,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL			; Otherwise fall through to ASC_TO_HEX
672,672,672,04cb,04cb,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"ASC_TO_NUMBER1:		LD	A, (HL)			; Fetch the character"
673,673,673,04cc,04cc,cd 10 05,cd 10 05,call $0510,call $0510,call $0000,agon_misc.asm,CALL    UPPRCmisc			; Convert to uppercase
674,674,674,04cf,04cf,d6 30,d6 30,sub $30,sub $30,sub $00,agon_misc.asm,SUB	'0'			; Normalise to 0
675,675,675,04d1,04d1,38 2e,38 2e,"jr c,$+$30","jr c,$+$30","jr c,$+$00",agon_misc.asm,"JR 	C, ASC_TO_NUMBER4	; Return if < ASCII '0'"
676,676,676,04d3,04d3,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,agon_misc.asm,CP 	10			; Check if >= 10
677,677,677,04d5,04d5,38 06,38 06,"jr c,$+$08","jr c,$+$08","jr c,$+$00",agon_misc.asm,"JR 	C,ASC_TO_NUMBER2	; No, so skip next bit"
678,678,678,04d7,04d7,d6 07,d6 07,sub $07,sub $07,sub $00,agon_misc.asm,SUB 	7			; Adjust ASCII A-F to nibble
679,679,679,04d9,04d9,fe 10,fe 10,cp $10,cp $10,cp $00,agon_misc.asm,CP 	16			; Check for > F
680,680,680,04db,04db,30 24,30 24,"jr nc,$+$26","jr nc,$+$26","jr nc,$+$00",agon_misc.asm,"JR 	NC, ASC_TO_NUMBER4	; Return if out of range"
681,681,681,04dd,04dd,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_misc.asm,"ASC_TO_NUMBER2:		EX 	DE, HL 			; Shift DE left 4 times"
682,682,682,04de,04de,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL"
683,683,683,04df,04df,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL"
684,684,684,04e0,04e0,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL"
685,685,685,04e1,04e1,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL"
686,686,686,04e2,04e2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_misc.asm,"EX	DE, HL"
687,687,687,04e3,04e3,b3,b3,or e,or e,or e,agon_misc.asm,OR      E			; OR the new digit in to the least significant nibble
688,688,688,04e4,04e4,5f,5f,"ld e,a","ld e,a","ld e,a",agon_misc.asm,"LD      E, A"
689,689,689,04e5,04e5,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC     HL			; Onto the next character
690,690,690,04e6,04e6,18 e3,18 e3,jr $-$1b,jr $-$1b,jr $-$00,agon_misc.asm,JR      ASC_TO_NUMBER1		; And loop
691,691,691,04e8,04e8,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"ASC_TO_NUMBER3:		LD	A, (HL)"
692,692,692,04e9,04e9,d6 30,d6 30,sub $30,sub $30,sub $00,agon_misc.asm,SUB	'0'			; Normalise to 0
693,693,693,04eb,04eb,38 14,38 14,"jr c,$+$16","jr c,$+$16","jr c,$+$00",agon_misc.asm,"JR	C, ASC_TO_NUMBER4	; Return if < ASCII '0'"
694,694,694,04ed,04ed,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,agon_misc.asm,CP	10			; Check if >= 10
695,695,695,04ef,04ef,30 10,30 10,"jr nc,$+$12","jr nc,$+$12","jr nc,$+$00",agon_misc.asm,"JR	NC, ASC_TO_NUMBER4	; Return if >= 10"
696,696,696,04f1,04f1,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_misc.asm,"EX 	DE, HL 			; Stick DE in HL"
697,697,697,04f2,04f2,44,44,"ld b,h","ld b,h","ld b,h",agon_misc.asm,"LD	B, H 			; And copy HL into BC"
698,698,698,04f3,04f3,4d,4d,"ld c,l","ld c,l","ld c,l",agon_misc.asm,"LD	C, L"
699,699,699,04f4,04f4,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL 			; x 2"
700,700,700,04f5,04f5,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL 			; x 4"
701,701,701,04f6,04f6,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_misc.asm,"ADD	HL, BC 			; x 5"
702,702,702,04f7,04f7,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_misc.asm,"ADD	HL, HL 			; x 10"
703,703,703,04f8,04f8,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_misc.asm,"EX	DE, HL"
704,704,704,04f9,04f9,83,83,"add a,e","add a,e","add a,e",agon_misc.asm,"ADD     A, E"
705,705,705,04fa,04fa,5f,5f,"ld e,a","ld e,a","ld e,a",agon_misc.asm,"LD      E, A"
706,706,706,04fb,04fb,8a,8a,"adc a,d","adc a,d","adc a,d",agon_misc.asm,"ADC     A, D"
707,707,707,04fc,04fc,93,93,sub e,sub e,sub e,agon_misc.asm,SUB     E
708,708,708,04fd,04fd,57,57,"ld d,a","ld d,a","ld d,a",agon_misc.asm,"LD      D, A"
709,709,709,04fe,04fe,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
710,710,710,04ff,04ff,18 e7,18 e7,jr $-$17,jr $-$17,jr $-$00,agon_misc.asm,JR	ASC_TO_NUMBER3
711,711,711,0501,0501,c1,c1,pop bc,pop bc,pop bc,agon_misc.asm,ASC_TO_NUMBER4:		POP	BC 			; Fall through to SKIPSP here
712,712,712,0502,0502,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"SKIPSPmisc:			LD      A, (HL)"
713,713,713,0503,0503,fe 20,fe 20,cp $20,cp $20,cp $00,agon_misc.asm,CP      ' '
714,714,714,0505,0505,c0,c0,ret nz,ret nz,ret nz,agon_misc.asm,RET     NZ
715,715,715,0506,0506,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC     HL
716,716,716,0507,0507,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,agon_misc.asm,JR      SKIPSPmisc
717,717,717,0509,0509,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"SKIPNOTSP:		LD	A, (HL)"
718,718,718,050a,050a,fe 20,fe 20,cp $20,cp $20,cp $00,agon_misc.asm,CP	' '
719,719,719,050c,050c,c8,c8,ret z,ret z,ret z,agon_misc.asm,RET	Z
720,720,720,050d,050d,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
721,721,721,050e,050e,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,agon_misc.asm,JR	SKIPNOTSP
722,722,722,0510,0510,e6 7f,e6 7f,and $7f,and $7f,and $00,agon_misc.asm,UPPRCmisc:  		AND     7FH
723,723,723,0512,0512,fe 60,fe 60,cp $60,cp $60,cp $00,agon_misc.asm,CP      '`'
724,724,724,0514,0514,d8,d8,ret c,ret c,ret c,agon_misc.asm,RET     C
725,725,725,0515,0515,e6 5f,e6 5f,and $5f,and $5f,and $00,agon_misc.asm,AND     5FH			; Convert to upper case
726,726,726,0517,0517,c9,c9,ret,ret,ret,agon_misc.asm,RET
727,727,727,0518,0518,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_misc.asm,"SWITCH_A:		EX	(SP), HL		; Swap HL with the contents of the top of the stack"
728,728,728,0519,0519,87,87,"add a,a","add a,a","add a,a",agon_misc.asm,"ADD	A, A			; Multiply A by two"
729,729,729,051a,051a,85,85,"add a,l","add a,l","add a,l",agon_misc.asm,"ADD     A, L"
730,730,730,051b,051b,6f,6f,"ld l,a","ld l,a","ld l,a",agon_misc.asm,"LD      L, A"
731,731,731,051c,051c,8c,8c,"adc a,h","adc a,h","adc a,h",agon_misc.asm,"ADC     A, H"
732,732,732,051d,051d,95,95,sub l,sub l,sub l,agon_misc.asm,SUB     L
733,733,733,051e,051e,67,67,"ld h,a","ld h,a","ld h,a",agon_misc.asm,"LD      H, A"
734,734,734,051f,051f,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"LD	A, (HL)			; follow the call. Fetch an address from the"
735,735,735,0520,0520,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL 			; table.
736,736,736,0521,0521,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",agon_misc.asm,"LD	H, (HL)"
737,737,737,0522,0522,6f,6f,"ld l,a","ld l,a","ld l,a",agon_misc.asm,"LD	L, A"
738,738,738,0523,0523,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_misc.asm,"EX	(SP), HL		; Swap this new address back, restores HL"
739,739,739,0524,0524,c9,c9,ret,ret,ret,agon_misc.asm,RET				; Return program control to this new address
740,740,740,0525,0525,c5,c5,push bc,push bc,push bc,agon_misc.asm,NULLTOCR:		PUSH 	BC
741,741,741,0526,0526,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",agon_misc.asm,"LD	B, 0"
742,742,742,0528,0528,0e 0d,0e 0d,"ld c,$0d","ld c,$0d","ld c,$00",agon_misc.asm,"LD	C, CR"
743,743,743,052a,052a,18 05,18 05,jr $+$07,jr $+$07,jr $+$00,agon_misc.asm,JR	CRTONULL0
744,744,744,052c,052c,c5,c5,push bc,push bc,push bc,agon_misc.asm,CRTONULL:		PUSH	BC
745,745,745,052d,052d,06 0d,06 0d,"ld b,$0d","ld b,$0d","ld b,$00",agon_misc.asm,"LD	B, CR"
746,746,746,052f,052f,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",agon_misc.asm,"LD	C, 0"
747,747,747,0531,0531,e5,e5,push hl,push hl,push hl,agon_misc.asm,CRTONULL0:		PUSH	HL
748,748,748,0532,0532,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CRTONULL1:		LD	A, (HL)"
749,749,749,0533,0533,b8,b8,cp b,cp b,cp b,agon_misc.asm,CP 	B
750,750,750,0534,0534,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",agon_misc.asm,"JR	Z, CRTONULL2"
751,751,751,0536,0536,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
752,752,752,0537,0537,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,agon_misc.asm,JR	CRTONULL1
753,753,753,0539,0539,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",agon_misc.asm,"CRTONULL2:		LD	(HL), C"
754,754,754,053a,053a,e1,e1,pop hl,pop hl,pop hl,agon_misc.asm,POP 	HL
755,755,755,053b,053b,c1,c1,pop bc,pop bc,pop bc,agon_misc.asm,POP	BC
756,756,756,053c,053c,c9,c9,ret,ret,ret,agon_misc.asm,RET
757,757,757,053d,053d,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CSTR_FNAME:		LD	A, (HL)			; Get source"
758,758,758,053e,053e,fe 20,fe 20,cp $20,cp $20,cp $00,agon_misc.asm,CP	32			; Is it space
759,759,759,0540,0540,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",agon_misc.asm,"JR	Z, @F"
760,760,760,0542,0542,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,agon_misc.asm,CP	CR			; Or is it CR
761,761,761,0544,0544,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",agon_misc.asm,"JR	Z, @F"
762,762,762,0546,0546,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_misc.asm,"LD	(DE), A			; No, so store"
763,763,763,0547,0547,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL			; Increment
764,764,764,0548,0548,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE
765,765,765,0549,0549,18 f2,18 f2,jr $-$0c,jr $-$0c,jr $-$00,agon_misc.asm,JR	CSTR_FNAME		; And loop
766,766,766,054b,054b,af,af,xor a,xor a,xor a,agon_misc.asm,@@:			XOR	A			; Zero terminate the target string
767,767,767,054c,054c,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_misc.asm,"LD	(DE), A"
768,768,768,054d,054d,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE			; And point to next free address
769,769,769,054e,054e,c9,c9,ret,ret,ret,agon_misc.asm,RET
770,770,770,054f,054f,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CSTR_LINE:		LD	A, (HL)			; Get source"
771,771,771,0550,0550,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,agon_misc.asm,CP	CR			; Is it CR
772,772,772,0552,0552,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",agon_misc.asm,"JR	Z, @F"
773,773,773,0554,0554,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_misc.asm,"LD	(DE), A			; No, so store"
774,774,774,0555,0555,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL			; Increment
775,775,775,0556,0556,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE
776,776,776,0557,0557,18 f6,18 f6,jr $-$08,jr $-$08,jr $-$00,agon_misc.asm,JR	CSTR_LINE		; And loop
777,777,777,0559,0559,af,af,xor a,xor a,xor a,agon_misc.asm,@@:			XOR	A			; Zero terminate the target string
778,778,778,055a,055a,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_misc.asm,"LD	(DE), A"
779,779,779,055b,055b,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE			; And point to next free address
780,780,780,055c,055c,c9,c9,ret,ret,ret,agon_misc.asm,RET
781,781,781,055d,055d,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CSTR_FINDCH:		LD	A, (HL)			; Get source"
782,782,782,055e,055e,b9,b9,cp c,cp c,cp c,agon_misc.asm,CP	C			; Is it our character?
783,783,783,055f,055f,c8,c8,ret z,ret z,ret z,agon_misc.asm,"RET	Z			; Yes, so exit"
784,784,784,0560,0560,b7,b7,or a,or a,or a,agon_misc.asm,OR	A			; Is it the end of string?
785,785,785,0561,0561,c8,c8,ret z,ret z,ret z,agon_misc.asm,"RET	Z			; Yes, so exit"
786,786,786,0562,0562,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
787,787,787,0563,0563,18 f8,18 f8,jr $-$06,jr $-$06,jr $-$00,agon_misc.asm,JR	CSTR_FINDCH
788,788,788,0565,0565,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CSTR_ENDSWITH:		LD	A, (HL)			; Get the source string byte"
789,789,789,0566,0566,cd 10 05,cd 10 05,call $0510,call $0510,call $0000,agon_misc.asm,CALL	UPPRCmisc			; Convert to upper case
790,790,790,0569,0569,4f,4f,"ld c,a","ld c,a","ld c,a",agon_misc.asm,"LD	C, A"
791,791,791,056a,056a,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_misc.asm,"LD	A, (DE)			; Get the substring byte"
792,792,792,056b,056b,b9,b9,cp c,cp c,cp c,agon_misc.asm,CP	C
793,793,793,056c,056c,c0,c0,ret nz,ret nz,ret nz,agon_misc.asm,RET	NZ			; Return NZ if at any point the strings don't match
794,794,794,056d,056d,b1,b1,or c,or c,or c,agon_misc.asm,OR	C			; Check whether both bytes are zero
795,795,795,056e,056e,c8,c8,ret z,ret z,ret z,agon_misc.asm,"RET	Z			; If so, return, as we have reached the end of both strings"
796,796,796,056f,056f,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
797,797,797,0570,0570,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE
798,798,798,0571,0571,18 f2,18 f2,jr $-$0c,jr $-$0c,jr $-$00,agon_misc.asm,JR	CSTR_ENDSWITH		; And loop
799,799,799,0573,0573,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_misc.asm,"CSTR_CAT:		LD	A, (HL)			; Loop until we find the end of the first string"
800,800,800,0574,0574,b7,b7,or a,or a,or a,agon_misc.asm,OR	A
801,801,801,0575,0575,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",agon_misc.asm,"JR	Z, CSTR_CAT_1"
802,802,802,0577,0577,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
803,803,803,0578,0578,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,agon_misc.asm,JR	CSTR_CAT
804,804,804,057a,057a,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_misc.asm,"CSTR_CAT_1:		LD	A, (DE)			; Copy the second string onto the end of the first string"
805,805,805,057b,057b,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_misc.asm,"LD	(HL), A"
806,806,806,057c,057c,b7,b7,or a,or a,or a,agon_misc.asm,OR	A			; Check for end of string
807,807,807,057d,057d,c8,c8,ret z,ret z,ret z,agon_misc.asm,RET	Z			; And return
808,808,808,057e,057e,23,23,inc hl,inc hl,inc hl,agon_misc.asm,INC	HL
809,809,809,057f,057f,13,13,inc de,inc de,inc de,agon_misc.asm,INC	DE
810,810,810,0580,0580,18 f8,18 f8,jr $-$06,jr $-$06,jr $-$00,agon_misc.asm,JR	CSTR_CAT_1		; Loop until finished
811,811,811,0582,0582,cd 25 04,cd 25 04,call $0425,call $0425,call $0000,agon_os.asm,OSINIT:			CALL	VBLANK_INIT
812,812,812,0585,0585,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A
813,813,813,0586,0586,32 00 52,32 f1 50,"ld ($5200),a","ld ($50f1),a","ld ($0000),a",agon_os.asm,"LD	(FLAGS), A		; Clear flags and set F = Z"
814,814,814,0589,0589,21 00 56,21 00 55,"ld hl,$5600","ld hl,$5500","ld hl,$0000",agon_os.asm,"LD 	HL, USER"
815,815,815,058c,058c,11 00 ff,11 00 ff,"ld de,$ff00","ld de,$ff00","ld de,$0000",agon_os.asm,"LD	DE, RAM_Top"
816,816,816,058f,058f,5f,5f,"ld e,a","ld e,a","ld e,a",agon_os.asm,"LD	E, A			; Page boundary"
817,817,,0590,,3a 00 53,,"ld a,($5300)",,"ld a,($0000)",,
818,818,,0593,,b7,,or a,,or a,,
819,819,817,0594,0590,c9,c9,ret,ret,ret,agon_os.asm,RET
820,820,818,0595,0591,3e 3e,3e 3e,"ld a,$3e","ld a,$3e","ld a,$00",agon_os.asm,"PROMPT: 		LD	A,'>'			; Falls through to OSWRCH"
821,821,819,0597,0593,e5,e5,push hl,push hl,push hl,agon_os.asm,OSWRCH:			PUSH	HL
822,822,820,0598,0594,21 fe 55,21 fe 54,"ld hl,$55fe","ld hl,$54fe","ld hl,$0000",agon_os.asm,"LD	HL, LISTON		; Fetch the LISTON variable"
823,823,821,059b,0597,cb 5e,cb 5e,"bit 3,(hl)","bit 3,(hl)","bit 3,(hl)",agon_os.asm,"BIT	3, (HL)			; Check whether we are in *EDIT mode"
824,824,822,059d,0599,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",agon_os.asm,"JR	NZ, OSWRCH_BUFFER	; Yes, so just output to buffer"
825,825,823,059f,059b,2a 03 52,2a f4 50,"ld hl,($5203)","ld hl,($50f4)","ld hl,($0000)",agon_os.asm,"LD	HL, (OSWRCHCH)		; L: Channel #"
826,826,824,05a2,059e,2d,2d,dec l,dec l,dec l,agon_os.asm,DEC	L			; If it is 1
827,827,825,05a3,059f,28 17,28 17,"jr z,$+$19","jr z,$+$19","jr z,$+$00",agon_os.asm,"JR	Z, OSWRCH_FILE		; Then we are outputting to a file"
828,828,826,05a5,05a1,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL			; Otherwise
829,829,827,05a6,05a2,49 d7,49 d7,rst.lis $10,rst.lis $10,rst.lis $00,agon_os.asm,RST.LIS	10h			; Output the character to MOS
830,830,828,05a8,05a4,c9,c9,ret,ret,ret,agon_os.asm,RET
831,831,829,05a9,05a5,2a 01 52,2a f2 50,"ld hl,($5201)","ld hl,($50f2)","ld hl,($0000)",agon_os.asm,"OSWRCH_BUFFER:		LD	HL, (OSWRCHPT)		; Fetch the pointer buffer"
832,832,830,05ac,05a8,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,agon_os.asm,CP	0AH			; Just ignore this
833,833,831,05ae,05aa,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",agon_os.asm,"JR	Z, OSWRCH_BUFFER2"
834,834,832,05b0,05ac,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,agon_os.asm,CP	0DH			; Is it the end of line?
835,835,833,05b2,05ae,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",agon_os.asm,"JR	NZ, OSWRCH_BUFFER1	; No, so carry on"
836,836,834,05b4,05b0,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A			; Turn it into a NUL character
837,837,835,05b5,05b1,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_os.asm,"OSWRCH_BUFFER1:		LD	(HL), A			; Echo the character into the buffer"
838,838,836,05b6,05b2,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL			; Increment pointer
839,839,837,05b7,05b3,22 01 52,22 f2 50,"ld ($5201),hl","ld ($50f2),hl","ld ($0000),hl",agon_os.asm,"LD	(OSWRCHPT), HL		; Write pointer back"
840,840,838,05ba,05b6,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,OSWRCH_BUFFER2:		POP	HL
841,841,839,05bb,05b7,c9,c9,ret,ret,ret,agon_os.asm,RET
842,842,840,05bc,05b8,d5,d5,push de,push de,push de,agon_os.asm,OSWRCH_FILE:		PUSH	DE
843,843,841,05bd,05b9,5c,5c,"ld e,h","ld e,h","ld e,h",agon_os.asm,"LD	E, H			; Filehandle to E"
844,844,842,05be,05ba,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,agon_os.asm,CALL	OSBPUT			; Write the byte out
845,845,843,05c1,05bd,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE
846,846,844,05c2,05be,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL
847,847,845,05c3,05bf,c9,c9,ret,ret,ret,agon_os.asm,RET
848,848,,05c4,,cd 8f 45,,call $458f,,call $0000,,
849,849,,05c7,,fe 28,,cp $28,,cp $00,,
850,850,,05c9,,28 09,,"jr z,$+$0b",,"jr z,$+$00",,
851,851,,05cb,,3e 00,,"ld a,$00",,"ld a,$00",,
852,852,,05cd,,49 cf,,rst.lis $08,,rst.lis $00,,
853,853,,05cf,,fe 1b,,cp $1b,,cp $00,,
854,854,,05d1,,28 6a,,"jr z,$+$6c",,"jr z,$+$00",,
855,855,,05d3,,c9,,ret,,ret,,
856,856,,05d4,,fd 23,,inc iy,,inc iy,,
857,857,,05d6,,cd b7 18,,call $18b7,,call $0000,,
858,858,,05d9,,d9,,exx,,exx,,
859,859,,05da,,e5,,push hl,,push hl,,
860,860,,05db,,cd 26 21,,call $2126,,call $0000,,
861,861,,05de,,cd b7 18,,call $18b7,,call $0000,,
862,862,,05e1,,d9,,exx,,exx,,
863,863,,05e2,,d1,,pop de,,pop de,,
864,864,,05e3,,cd 32 21,,call $2132,,call $0000,,
865,865,,05e6,,c3 bd 01,,jp $01bd,,jp $0000,,
866,866,851,05e9,05c9,1e 01,1e 01,"ld e,$01","ld e,$01","ld e,$00",agon_os.asm,"OSLINE:			LD 	E, 1			; Default is to clear the buffer"
867,867,852,05eb,05cb,fd e5,fd e5,push iy,push iy,push iy,agon_os.asm,OSLINE1:		PUSH	IY
868,868,853,05ed,05cd,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL			; Buffer address
869,869,854,05ee,05ce,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",agon_os.asm,"LD	BC, 256			; Buffer length"
870,870,855,05f1,05d1,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",agon_os.asm,"LD	A, function"
871,871,856,05f3,05d3,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
872,872,857,05f5,05d5,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL			; Pop the address
873,873,858,05f6,05d6,fd e1,fd e1,pop iy,pop iy,pop iy,agon_os.asm,POP	IY
874,874,859,05f8,05d8,f5,f5,push af,push af,push af,agon_os.asm,PUSH	AF			; Stack the return value (key pressed)
875,875,860,05f9,05d9,cd 25 05,cd 25 05,call $0525,call $0525,call $0000,agon_os.asm,CALL	NULLTOCR		; Turn the 0 character to a CR
876,876,861,05fc,05dc,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,agon_os.asm,CALL	CRLF			; Display CRLF
877,877,862,05ff,05df,f1,f1,pop af,pop af,pop af,agon_os.asm,POP	AF
878,878,863,0600,05e0,fe 1b,fe 1b,cp $1b,cp $1b,cp $00,agon_os.asm,CP	1Bh 			; Check if ESC terminated the input
879,879,864,0602,05e2,ca 3d 06,ca 1d 06,"jp z,$063d","jp z,$061d","jp z,$0000",agon_os.asm,"JP	Z, LTRAP1 		; Yes, so do the ESC thing"
880,880,865,0605,05e5,3a 00 52,3a f1 50,"ld a,($5200)","ld a,($50f1)","ld a,($0000)",agon_os.asm,"LD	A, (FLAGS)		; Otherwise"
881,881,866,0608,05e8,cb bf,cb bf,"res 7,a","res 7,a","res 7,a",agon_os.asm,"RES	7, A 			; Clear the escape flag"
882,882,867,060a,05ea,32 00 52,32 f1 50,"ld ($5200),a","ld ($50f1),a","ld ($0000),a",agon_os.asm,"LD	(FLAGS), A"
883,883,868,060d,05ed,cd 0f 0b,cd 6d 0a,call $0b0f,call $0a6d,call $0000,agon_os.asm,CALL	WAIT_VBLANK 		; Wait a frame
884,884,869,0610,05f0,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A			; Return A = 0
885,885,870,0611,05f1,32 05 52,32 f6 50,"ld ($5205),a","ld ($50f6),a","ld ($0000),a",agon_os.asm,"LD	(KEYDOWN), A"
886,886,871,0614,05f4,32 06 52,32 f7 50,"ld ($5206),a","ld ($50f7),a","ld ($0000),a",agon_os.asm,"LD	(KEYASCII), A"
887,887,872,0617,05f7,c9,c9,ret,ret,ret,agon_os.asm,RET
888,888,873,0618,05f8,e5,e5,push hl,push hl,push hl,agon_os.asm,ESCSET: 		PUSH    HL
889,889,874,0619,05f9,21 00 52,21 f1 50,"ld hl,$5200","ld hl,$50f1","ld hl,$0000",agon_os.asm,"LD      HL,FLAGS		; Pointer to FLAGS"
890,890,875,061c,05fc,cb 76,cb 76,"bit 6,(hl)","bit 6,(hl)","bit 6,(hl)",agon_os.asm,"BIT     6,(HL)			; If bit 6 is set, then"
891,891,876,061e,05fe,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",agon_os.asm,"JR      NZ,ESCDIS		; escape is disabled, so skip"
892,892,877,0620,0600,cb fe,cb fe,"set 7,(hl)","set 7,(hl)","set 7,(hl)",agon_os.asm,"SET     7,(HL)			; Set bit 7, the escape flag"
893,893,878,0622,0602,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,ESCDIS: 		POP     HL
894,894,879,0623,0603,c9,c9,ret,ret,ret,agon_os.asm,RET
895,895,880,0624,0604,cd 2d 06,cd 0d 06,call $062d,call $060d,call $0000,agon_os.asm,ESCTEST:		CALL	READKEY			; Read the keyboard
896,896,881,0627,0607,c0,c0,ret nz,ret nz,ret nz,agon_os.asm,RET	NZ			; Skip if no key is pressed
897,897,882,0628,0608,fe 1b,fe 1b,cp $1b,cp $1b,cp $00,agon_os.asm,CP	1BH			; If ESC pressed then
898,898,883,062a,060a,28 ec,28 ec,"jr z,$-$12","jr z,$-$12","jr z,$-$00",agon_os.asm,"JR	Z,ESCSET		; jump to the escape set routine"
899,899,884,062c,060c,c9,c9,ret,ret,ret,agon_os.asm,RET
900,900,885,062d,060d,3a 05 52,3a f6 50,"ld a,($5205)","ld a,($50f6)","ld a,($0000)",agon_os.asm,"READKEY:		LD	A, (KEYDOWN)		; Get key down"
901,901,886,0630,0610,3d,3d,dec a,dec a,dec a,agon_os.asm,DEC	A 			; Set Z flag if keydown is 1
902,902,887,0631,0611,3a 06 52,3a f7 50,"ld a,($5206)","ld a,($50f7)","ld a,($0000)",agon_os.asm,"LD	A, (KEYASCII)		; Get key ASCII value"
903,903,888,0634,0614,c9,c9,ret,ret,ret,agon_os.asm,RET
904,904,889,0635,0615,cd 24 06,cd 04 06,call $0624,call $0604,call $0000,agon_os.asm,"TRAP:			CALL	ESCTEST			; Read keyboard, test for ESC, set FLAGS"
905,905,890,0638,0618,3a 00 52,3a f1 50,"ld a,($5200)","ld a,($50f1)","ld a,($0000)",agon_os.asm,"LTRAP:			LD	A,(FLAGS)		; Get FLAGS"
906,906,891,063b,061b,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; This checks for bit 7; if it is not set then the result will
907,907,892,063c,061c,f0,f0,ret p,ret p,ret p,agon_os.asm,"RET	P			; be positive (bit 7 is the sign bit in Z80), so return"
908,908,893,063d,061d,21 00 52,21 f1 50,"ld hl,$5200","ld hl,$50f1","ld hl,$0000",agon_os.asm,"LTRAP1:			LD	HL,FLAGS 		; Escape is pressed at this point, so"
909,909,894,0640,0620,cb be,cb be,"res 7,(hl)","res 7,(hl)","res 7,(hl)",agon_os.asm,"RES	7,(HL)			; Clear the escape pressed flag and"
910,910,895,0642,0622,c3 67 26,c3 c5 25,jp $2667,jp $25c5,jp $0000,agon_os.asm,JP	ESCAPE			; Jump to the ESCAPE error routine in exec.asm
911,911,896,0645,0625,c9,c9,ret,ret,ret,agon_os.asm,RESET:			RET				; Yes this is fine
912,912,897,0646,0626,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",agon_os.asm,"OSOPEN:			LD	C, fa_read"
913,913,898,0648,0628,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",agon_os.asm,"JR	Z, @F"
914,914,899,064a,062a,0e 32,0e 32,"ld c,$32","ld c,$32","ld c,$00",agon_os.asm,"LD	C, fa_write | fa_open_append"
915,915,900,064c,062c,38 02,38 02,"jr c,$+$04","jr c,$+$04","jr c,$+$00",agon_os.asm,"JR	C, @F"
916,916,901,064e,062e,0e 0a,0e 0a,"ld c,$0a","ld c,$0a","ld c,$00",agon_os.asm,"LD	C, fa_write | fa_create_always"
917,917,902,0650,0630,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",agon_os.asm,"LD	A, function"
918,918,903,0652,0632,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
919,919,904,0654,0634,c9,c9,ret,ret,ret,agon_os.asm,RET
920,920,905,0655,0635,c5,c5,push bc,push bc,push bc,agon_os.asm,OSSHUT:			PUSH	BC
921,921,906,0656,0636,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C, E"
922,922,907,0657,0637,3e 0b,3e 0b,"ld a,$0b","ld a,$0b","ld a,$00",agon_os.asm,"LD	A, function"
923,923,908,0659,0639,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
924,924,909,065b,063b,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
925,925,910,065c,063c,c9,c9,ret,ret,ret,agon_os.asm,RET
926,926,911,065d,063d,c5,c5,push bc,push bc,push bc,agon_os.asm,OSBGET:			PUSH	BC
927,927,912,065e,063e,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C, E"
928,928,913,065f,063f,3e 0c,3e 0c,"ld a,$0c","ld a,$0c","ld a,$00",agon_os.asm,"LD	A, function"
929,929,914,0661,0641,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
930,930,915,0663,0643,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
931,931,916,0664,0644,c9,c9,ret,ret,ret,agon_os.asm,RET
932,932,917,0665,0645,c5,c5,push bc,push bc,push bc,agon_os.asm,OSBPUT:			PUSH	BC
933,933,918,0666,0646,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C, E"
934,934,919,0667,0647,47,47,"ld b,a","ld b,a","ld b,a",agon_os.asm,"LD	B, A"
935,935,920,0668,0648,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",agon_os.asm,"LD	A, function"
936,936,921,066a,064a,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
937,937,922,066c,064c,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
938,938,923,066d,064d,c9,c9,ret,ret,ret,agon_os.asm,RET
939,939,924,066e,064e,c5,c5,push bc,push bc,push bc,agon_os.asm,OSSTAT:			PUSH	BC
940,940,925,066f,064f,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C, E"
941,941,926,0670,0650,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",agon_os.asm,"LD	A, function"
942,942,927,0672,0652,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
943,943,928,0674,0654,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
944,944,929,0675,0655,fe 01,fe 01,cp $01,cp $01,cp $00,agon_os.asm,CP	1
945,945,930,0677,0657,c9,c9,ret,ret,ret,agon_os.asm,RET
946,946,931,0678,0658,fd e5,fd e5,push iy,push iy,push iy,agon_os.asm,GETPTR:			PUSH		IY
947,947,932,067a,065a,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD		C, E"
948,948,933,067b,065b,3e 19,3e 19,"ld a,$19","ld a,$19","ld a,$00",agon_os.asm,"LD	A, function"
949,949,934,067d,065d,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
950,950,935,067f,065f,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_os.asm,PUSH.LIL	HL
951,951,936,0681,0661,5b fd e1,5b fd e1,pop.lil iy,pop.lil iy,pop.lil iy,agon_os.asm,POP.LIL		IY		; IYU: Pointer to FIL structure
952,952,937,0684,0664,5b fd 6e 11,5b fd 6e 11,"ld.lil l,(iy+$11)","ld.lil l,(iy+$11)","ld.lil l,(iy+$00)",agon_os.asm,"LD.LIL		L, (IY + FIL.fptr + 0)"
953,953,938,0688,0668,5b fd 66 12,5b fd 66 12,"ld.lil h,(iy+$12)","ld.lil h,(iy+$12)","ld.lil h,(iy+$00)",agon_os.asm,"LD.LIL		H, (IY + FIL.fptr + 1)"
954,954,939,068c,066c,5b fd 5e 13,5b fd 5e 13,"ld.lil e,(iy+$13)","ld.lil e,(iy+$13)","ld.lil e,(iy+$00)",agon_os.asm,"LD.LIL		E, (IY + FIL.fptr + 2)"
955,955,940,0690,0670,5b fd 56 14,5b fd 56 14,"ld.lil d,(iy+$14)","ld.lil d,(iy+$14)","ld.lil d,(iy+$00)",agon_os.asm,"LD.LIL		D, (IY + FIL.fptr + 3)"
956,956,941,0694,0674,fd e1,fd e1,pop iy,pop iy,pop iy,agon_os.asm,POP		IY
957,957,942,0696,0676,c9,c9,ret,ret,ret,agon_os.asm,RET
958,958,943,0697,0677,fd e5,fd e5,push iy,push iy,push iy,agon_os.asm,PUTPTR:			PUSH		IY
959,959,944,0699,0679,4f,4f,"ld c,a","ld c,a","ld c,a",agon_os.asm,"LD		C, A  		; C: Filehandle"
960,960,945,069a,067a,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_os.asm,PUSH.LIL	HL
961,961,946,069c,067c,5b 21 02 00 00,5b 21 02 00 00,"ld.lil hl,$000002","ld.lil hl,$000002","ld.lil hl,$000000",agon_os.asm,"LD.LIL		HL, 2"
962,962,947,06a1,0681,5b 39,5b 39,"add.lil hl,sp","add.lil hl,sp","add.lil hl,sp",agon_os.asm,"ADD.LIL		HL, SP"
963,963,948,06a3,0683,5b 73,5b 73,"ld.lil (hl),e","ld.lil (hl),e","ld.lil (hl),e",agon_os.asm,"LD.LIL		(HL), E 	; 3rd byte of DWORD set to E"
964,964,949,06a5,0685,5b e1,5b e1,pop.lil hl,pop.lil hl,pop.lil hl,agon_os.asm,POP.LIL		HL
965,965,950,06a7,0687,5a,5a,"ld e,d","ld e,d","ld e,d",agon_os.asm,"LD		E, D  		; 4th byte passed as E"
966,966,951,06a8,0688,3e 1c,3e 1c,"ld a,$1c","ld a,$1c","ld a,$00",agon_os.asm,"LD	A, function"
967,967,952,06aa,068a,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
968,968,953,06ac,068c,fd e1,fd e1,pop iy,pop iy,pop iy,agon_os.asm,POP		IY
969,969,954,06ae,068e,c9,c9,ret,ret,ret,agon_os.asm,RET
970,970,955,06af,068f,fd e5,fd e5,push iy,push iy,push iy,agon_os.asm,GETEXT:			PUSH		IY
971,971,956,06b1,0691,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD		C, E"
972,972,957,06b2,0692,3e 19,3e 19,"ld a,$19","ld a,$19","ld a,$00",agon_os.asm,"LD	A, function"
973,973,958,06b4,0694,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
974,974,959,06b6,0696,5b e5,5b e5,push.lil hl,push.lil hl,push.lil hl,agon_os.asm,PUSH.LIL	HL
975,975,960,06b8,0698,5b fd e1,5b fd e1,pop.lil iy,pop.lil iy,pop.lil iy,agon_os.asm,POP.LIL		IY		; IYU: Pointer to FIL structure
976,976,961,06bb,069b,5b fd 6e 0b,5b fd 6e 24,"ld.lil l,(iy+$0b)","ld.lil l,(iy+$24)","ld.lil l,(iy+$00)",agon_os.asm,"LD.LIL		L, (IY + FIL.obj.objsize + 0)"
977,977,962,06bf,069f,5b fd 66 0c,5b fd 66 25,"ld.lil h,(iy+$0c)","ld.lil h,(iy+$25)","ld.lil h,(iy+$00)",agon_os.asm,"LD.LIL		H, (IY + FIL.obj.objsize + 1)"
978,978,963,06c3,06a3,5b fd 5e 0d,5b fd 5e 26,"ld.lil e,(iy+$0d)","ld.lil e,(iy+$26)","ld.lil e,(iy+$00)",agon_os.asm,"LD.LIL		E, (IY + FIL.obj.objsize + 2)"
979,979,964,06c7,06a7,5b fd 56 0e,5b fd 56 27,"ld.lil d,(iy+$0e)","ld.lil d,(iy+$27)","ld.lil d,(iy+$00)",agon_os.asm,"LD.LIL		D, (IY + FIL.obj.objsize + 3)"
980,980,965,06cb,06ab,fd e1,fd e1,pop iy,pop iy,pop iy,agon_os.asm,POP		IY
981,981,966,06cd,06ad,c9,c9,ret,ret,ret,agon_os.asm,RET
982,982,967,06ce,06ae,c5,c5,push bc,push bc,push bc,agon_os.asm,OSLOAD:			PUSH	BC			; Stack the size
983,983,968,06cf,06af,d5,d5,push de,push de,push de,agon_os.asm,PUSH	DE			; Stack the load address
984,984,969,06d0,06b0,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",agon_os.asm,"LD	DE, ACCS		; Buffer address for filename"
985,985,970,06d3,06b3,cd 3d 05,cd 3d 05,call $053d,call $053d,call $0000,agon_os.asm,CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
986,986,971,06d6,06b6,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_os.asm,"LD	HL, ACCS		; HL: Filename"
987,987,972,06d9,06b9,cd 17 08,cd f7 07,call $0817,call $07f7,call $0000,agon_os.asm,CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
988,988,973,06dc,06bc,cd 28 08,cd 08 08,call $0828,call $0808,call $0000,agon_os.asm,CALL	EXT_HANDLER		; Get the default handler
989,989,974,06df,06bf,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE			; Restore the load address
990,990,975,06e0,06c0,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC			; Restore the size
991,991,976,06e1,06c1,b7,b7,or a,or a,or a,agon_os.asm,OR	A
992,992,977,06e2,06c2,ca a9 07,ca 89 07,"jp z,$07a9","jp z,$0789","jp z,$0000",agon_os.asm,"JP 	Z, OSLOAD_BBC"
993,993,978,06e5,06c5,af,af,xor a,xor a,xor a,agon_os.asm,OSLOAD_TXT:		XOR	A			; Set file attributes to read
994,994,979,06e6,06c6,cd 46 06,cd 26 06,call $0646,call $0626,call $0000,agon_os.asm,CALL	OSOPEN			; Open the file
995,995,980,06e9,06c9,5f,5f,"ld e,a","ld e,a","ld e,a",agon_os.asm,"LD 	E, A 			; The filehandle"
996,996,981,06ea,06ca,b7,b7,or a,or a,or a,agon_os.asm,OR	A
997,997,982,06eb,06cb,3e 04,3e 04,"ld a,$04","ld a,$04","ld a,$00",agon_os.asm,"LD	A, 4			; File not found error"
998,998,983,06ed,06cd,ca b1 07,ca 91 07,"jp z,$07b1","jp z,$0791","jp z,$0000",agon_os.asm,"JP	Z, OSERROR		; Jump to error handler"
999,999,984,06f0,06d0,cd c2 40,cd 20 40,call $40c2,call $4020,call $0000,agon_os.asm,CALL	NEWIT			; Call NEW to clear the program space
1000,1000,985,06f3,06d3,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_os.asm,"OSLOAD_TXT1:		LD	HL, ACCS 		; Where the input is going to be stored"
1001,1001,986,06f6,06d6,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,agon_os.asm,@@:			CALL	OSBGET			; Read the byte into A
1002,1002,987,06f9,06d9,38 1c,38 1c,"jr c,$+$1e","jr c,$+$1e","jr c,$+$00",agon_os.asm,"JR	C, OSLOAD_TXT3		; Is it EOF?"
1003,1003,988,06fb,06db,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,agon_os.asm,CP	LF 			; Is it LF?
1004,1004,989,06fd,06dd,28 18,28 18,"jr z,$+$1a","jr z,$+$1a","jr z,$+$00",agon_os.asm,"JR	Z, OSLOAD_TXT3 		; Yes, so skip to the next line"
1005,1005,990,06ff,06df,fe 21,fe 21,cp $21,cp $21,cp $00,agon_os.asm,CP	21h			; Is it less than or equal to ASCII space?
1006,1006,991,0701,06e1,38 f3,38 f3,"jr c,$-$0b","jr c,$-$0b","jr c,$-$00",agon_os.asm,"JR	C, @B 			; Yes, so keep looping"
1007,1007,992,0703,06e3,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_os.asm,"LD	(HL), A 		; Store the first character"
1008,1008,993,0704,06e4,2c,2c,inc l,inc l,inc l,agon_os.asm,INC	L
1009,1009,994,0705,06e5,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,agon_os.asm,OSLOAD_TXT2:		CALL	OSBGET			; Read the byte into A
1010,1010,995,0708,06e8,38 26,38 26,"jr c,$+$28","jr c,$+$28","jr c,$+$00",agon_os.asm,"JR	C, OSLOAD_TXT4		; Is it EOF?"
1011,1011,996,070a,06ea,fe 20,fe 20,cp $20,cp $20,cp $00,agon_os.asm,CP	20h			; Skip if not an ASCII character
1012,1012,997,070c,06ec,38 05,38 05,"jr c,$+$07","jr c,$+$07","jr c,$+$00",agon_os.asm,"JR	C, @F"
1013,1013,998,070e,06ee,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_os.asm,"LD	(HL), A 		; Store in the input buffer"
1014,1014,999,070f,06ef,2c,2c,inc l,inc l,inc l,agon_os.asm,INC	L			; Increment the buffer pointer
1015,1015,1000,0710,06f0,ca 73 3f,ca d1 3e,"jp z,$3f73","jp z,$3ed1","jp z,$0000",agon_os.asm,"JP	Z, BAD			; If the buffer is full (wrapped to 0) then jump to Bad Program error"
1016,1016,1001,0713,06f3,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,agon_os.asm,@@:			CP	LF			; Check for LF
1017,1017,1002,0715,06f5,20 ee,20 ee,"jr nz,$-$10","jr nz,$-$10","jr nz,$-$00",agon_os.asm,"JR	NZ, OSLOAD_TXT2		; If not, then loop to read the rest of the characters in"
1018,1018,1003,0717,06f7,36 0d,36 0d,"ld (hl),$0d","ld (hl),$0d","ld (hl),$00",agon_os.asm,"OSLOAD_TXT3:		LD	(HL), CR		; Store a CR for BBC BASIC"
1019,1019,1004,0719,06f9,7d,7d,"ld a,l","ld a,l","ld a,l",agon_os.asm,"LD	A, L			; Check for minimum line length"
1020,1020,1005,071a,06fa,fe 02,fe 02,cp $02,cp $02,cp $00,agon_os.asm,CP	2			; If it is 2 characters or less (including CR)
1021,1021,1006,071c,06fc,38 08,38 08,"jr c,$+$0a","jr c,$+$0a","jr c,$+$00",agon_os.asm,"JR	C, @F			; Then don't bother entering it"
1022,1022,1007,071e,06fe,d5,d5,push de,push de,push de,agon_os.asm,PUSH	DE			; Preserve the filehandle
1023,1023,1008,071f,06ff,cd 3b 07,cd 1b 07,call $073b,call $071b,call $0000,agon_os.asm,CALL	OSEDIT			; Enter the line in memory
1024,1024,1009,0722,0702,dc 9e 40,dc fc 3f,"call c,$409e","call c,$3ffc","call c,$0000",agon_os.asm,"CALL	C,CLEAN			; If a new line has been entered, then call CLEAN to set TOP and write &FFFF end of program marker"
1025,1025,1010,0725,0705,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE
1026,1026,1011,0726,0706,cd 6e 06,cd 4e 06,call $066e,call $064e,call $0000,agon_os.asm,@@:			CALL	OSSTAT			; End of file?
1027,1027,1012,0729,0709,20 c8,20 c8,"jr nz,$-$36","jr nz,$-$36","jr nz,$-$00",agon_os.asm,"JR	NZ, OSLOAD_TXT1		; No, so loop"
1028,1028,1013,072b,070b,cd 55 06,cd 35 06,call $0655,call $0635,call $0000,agon_os.asm,CALL	OSSHUT			; Close the file
1029,1029,1014,072e,070e,37,37,scf,scf,scf,agon_os.asm,SCF				; Flag to BASIC that we're good
1030,1030,1015,072f,070f,c9,c9,ret,ret,ret,agon_os.asm,RET
1031,1031,1016,0730,0710,fe 20,fe 20,cp $20,cp $20,cp $00,agon_os.asm,OSLOAD_TXT4:		CP	20h			; Skip if not an ASCII character
1032,1032,1017,0732,0712,38 05,38 05,"jr c,$+$07","jr c,$+$07","jr c,$+$00",agon_os.asm,"JR	C, @F"
1033,1033,1018,0734,0714,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_os.asm,"LD	(HL), A			; Store the character"
1034,1034,1019,0735,0715,2c,2c,inc l,inc l,inc l,agon_os.asm,INC	L
1035,1035,1020,0736,0716,ca 73 3f,ca d1 3e,"jp z,$3f73","jp z,$3ed1","jp z,$0000",agon_os.asm,"JP	Z, BAD"
1036,1036,1021,0739,0719,18 dc,18 dc,jr $-$22,jr $-$22,jr $-$00,agon_os.asm,@@:			JR	OSLOAD_TXT3
1037,1037,1022,073b,071b,af,af,xor a,xor a,xor a,agon_os.asm,OSEDIT:			XOR	A			; Entry point after *EDIT
1038,1038,1023,073c,071c,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",agon_os.asm,"LD      (COUNT),A"
1039,1039,1024,073f,071f,fd 21 00 53,fd 21 00 52,"ld iy,$5300","ld iy,$5200","ld iy,$0000",agon_os.asm,"LD      IY,ACCS"
1040,1040,1025,0743,0723,cd 0e 44,cd 6c 43,call $440e,call $436c,call $0000,agon_os.asm,CALL    LINNUM			; HL: The line number from the input buffer
1041,1041,1026,0746,0726,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,agon_os.asm,CALL    NXT			; Skip spaces
1042,1042,1027,0749,0729,7c,7c,"ld a,h","ld a,h","ld a,h",agon_os.asm,"LD      A,H			; HL: The line number will be 0 for immediate mode or when auto line numbering is used"
1043,1043,1028,074a,072a,b5,b5,or l,or l,or l,agon_os.asm,OR      L
1044,1044,1029,074b,072b,28 00,28 00,"jr z,$+$02","jr z,$+$02","jr z,$+$00",agon_os.asm,"JR      Z,LNZERO        	; Skip if there is no line number in the input buffer"
1045,1045,1030,074d,072d,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",agon_os.asm,"LNZERO:			LD	DE,BUFFER"
1046,1046,1031,0750,0730,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",agon_os.asm,"LD	C,1			; LEFT MODE"
1047,1047,1032,0752,0732,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL
1048,1048,1033,0753,0733,cd 9c 44,cd fa 43,call $449c,call $43fa,call $0000,agon_os.asm,CALL	LEXAN2			; LEXICAL ANALYSIS
1049,1049,1034,0756,0736,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL
1050,1050,1035,0757,0737,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_os.asm,"LD	(DE),A			; TERMINATOR"
1051,1051,1036,0758,0738,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A
1052,1052,1037,0759,0739,47,47,"ld b,a","ld b,a","ld b,a",agon_os.asm,"LD	B,A"
1053,1053,1038,075a,073a,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C,E			; BC=LINE LENGTH"
1054,1054,1039,075b,073b,13,13,inc de,inc de,inc de,agon_os.asm,INC	DE
1055,1055,1040,075c,073c,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_os.asm,"LD	(DE),A			; ZERO NEXT"
1056,1056,1041,075d,073d,7c,7c,"ld a,h","ld a,h","ld a,h",agon_os.asm,"LD	A,H"
1057,1057,1042,075e,073e,b5,b5,or l,or l,or l,agon_os.asm,OR	L
1058,1058,1043,075f,073f,fd 21 00 54,fd 21 00 53,"ld iy,$5400","ld iy,$5300","ld iy,$0000",agon_os.asm,"LD	IY,BUFFER		; FOR XEQ"
1059,1059,1044,0763,0743,ca 1d 25,ca 7b 24,"jp z,$251d","jp z,$247b","jp z,$0000",agon_os.asm,"JP	Z,XEQ			; DIRECT MODE"
1060,1060,1045,0766,0746,c5,c5,push bc,push bc,push bc,agon_os.asm,PUSH	BC
1061,1061,1046,0767,0747,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,agon_os.asm,CALL	FINDL
1062,1062,1047,076a,074a,cc 6d 40,cc cb 3f,"call z,$406d","call z,$3fcb","call z,$0000",agon_os.asm,"CALL	Z,DEL"
1063,1063,1048,076d,074d,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
1064,1064,1049,076e,074e,79,79,"ld a,c","ld a,c","ld a,c",agon_os.asm,"LD	A,C"
1065,1065,1050,076f,074f,b7,b7,or a,or a,or a,agon_os.asm,OR	A
1066,1066,1051,0770,0750,c8,c8,ret z,ret z,ret z,agon_os.asm,RET	Z
1067,1067,1052,0771,0751,c6 04,c6 04,"add a,$04","add a,$04","add a,$00",agon_os.asm,"ADD	A,4"
1068,1068,1053,0773,0753,4f,4f,"ld c,a","ld c,a","ld c,a",agon_os.asm,"LD	C,A			; LENGTH INCLUSIVE"
1069,1069,1054,0774,0754,d5,d5,push de,push de,push de,agon_os.asm,PUSH	DE			; LINE NUMBER
1070,1070,1055,0775,0755,c5,c5,push bc,push bc,push bc,agon_os.asm,PUSH	BC			; SAVE LINE LENGTH
1071,1071,1056,0776,0756,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX	DE,HL"
1072,1072,1057,0777,0757,c5,c5,push bc,push bc,push bc,agon_os.asm,PUSH	BC
1073,1073,1058,0778,0758,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,agon_os.asm,CALL	GETTOP
1074,1074,1059,077b,075b,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC
1075,1075,1060,077c,075c,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL
1076,1076,1061,077d,075d,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_os.asm,"ADD	HL,BC"
1077,1077,1062,077e,075e,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL
1078,1078,1063,077f,075f,24,24,inc h,inc h,inc h,agon_os.asm,INC	H
1079,1079,1064,0780,0760,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A
1080,1080,1065,0781,0761,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",agon_os.asm,"SBC	HL,SP"
1081,1081,1066,0783,0763,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL
1082,1082,1067,0784,0764,d2 c8 3f,d2 26 3f,"jp nc,$3fc8","jp nc,$3f26","jp nc,$0000",agon_os.asm,"JP	NC,ERROR_		; ""No room"""
1083,1083,1068,0787,0767,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_os.asm,"EX	(SP),HL"
1084,1084,1069,0788,0768,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL
1085,1085,1070,0789,0769,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1086,1086,1071,078a,076a,b7,b7,or a,or a,or a,agon_os.asm,OR	A
1087,1087,1072,078b,076b,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",agon_os.asm,"SBC	HL,DE"
1088,1088,1073,078d,076d,44,44,"ld b,h","ld b,h","ld b,h",agon_os.asm,"LD	B,H			; BC=AMOUNT TO MOVE"
1089,1089,1074,078e,076e,4d,4d,"ld c,l","ld c,l","ld c,l",agon_os.asm,"LD	C,L"
1090,1090,1075,078f,076f,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL
1091,1091,1076,0790,0770,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE
1092,1092,1077,0791,0771,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",agon_os.asm,"JR	Z,ATENDos"
1093,1093,1078,0793,0773,ed b8,ed b8,lddr,lddr,lddr,agon_os.asm,LDDR				; MAKE SPACE
1094,1094,1079,0795,0775,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,ATENDos:          	POP	BC			; LINE LENGTH
1095,1095,1080,0796,0776,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE			; LINE NUMBER
1096,1096,1081,0797,0777,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1097,1097,1082,0798,0778,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",agon_os.asm,"LD	(HL),C			; STORE LENGTH"
1098,1098,1083,0799,0779,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1099,1099,1084,079a,077a,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",agon_os.asm,"LD	(HL),E			; STORE LINE NUMBER"
1100,1100,1085,079b,077b,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1101,1101,1086,079c,077c,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",agon_os.asm,"LD	(HL),D"
1102,1102,1087,079d,077d,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1103,1103,1088,079e,077e,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",agon_os.asm,"LD	DE,BUFFER"
1104,1104,1089,07a1,0781,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX	DE,HL"
1105,1105,1090,07a2,0782,0d,0d,dec c,dec c,dec c,agon_os.asm,DEC	C
1106,1106,1091,07a3,0783,0d,0d,dec c,dec c,dec c,agon_os.asm,DEC	C
1107,1107,1092,07a4,0784,0d,0d,dec c,dec c,dec c,agon_os.asm,DEC	C
1108,1108,1093,07a5,0785,ed b0,ed b0,ldir,ldir,ldir,agon_os.asm,LDIR				; ADD LINE
1109,1109,1094,07a7,0787,37,37,scf,scf,scf,agon_os.asm,SCF
1110,1110,1095,07a8,0788,c9,c9,ret,ret,ret,agon_os.asm,RET
1111,1111,1096,07a9,0789,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",agon_os.asm,"LD	A, function"
1112,1112,1097,07ab,078b,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1113,1113,1098,07ad,078d,d0,d0,ret nc,ret nc,ret nc,agon_os.asm,RET	NC			; If load returns with carry reset - NO ROOM
1114,1114,1099,07ae,078e,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; If there is no error (A=0)
1115,1115,1100,07af,078f,37,37,scf,scf,scf,agon_os.asm,SCF				; Need to set carry indicating there was room
1116,1116,1101,07b0,0790,c8,c8,ret z,ret z,ret z,agon_os.asm,RET	Z			; Return
1117,1117,1102,07b1,0791,f5,f5,push af,push af,push af,agon_os.asm,OSERROR:		PUSH	AF			; Handle the MOS error
1118,1118,1103,07b2,0792,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_os.asm,"LD	HL, ACCS		; Address of the buffer"
1119,1119,1104,07b5,0795,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",agon_os.asm,"LD	BC, 256			; Length of the buffer"
1120,1120,1105,07b8,0798,5f,5f,"ld e,a","ld e,a","ld e,a",agon_os.asm,"LD	E, A			; The error code"
1121,1121,1106,07b9,0799,3e 0f,3e 0f,"ld a,$0f","ld a,$0f","ld a,$00",agon_os.asm,"LD	A, function"
1122,1122,1107,07bb,079b,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1123,1123,1108,07bd,079d,f1,f1,pop af,pop af,pop af,agon_os.asm,POP	AF
1124,1124,1109,07be,079e,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH	HL			; Stack the address of the error (now in ACCS)
1125,1125,1110,07bf,079f,c6 7f,c6 7f,"add a,$7f","add a,$7f","add a,$00",agon_os.asm,"ADD	A, 127			; Add 127 to the error code (MOS errors start at 128, and are trappable)"
1126,1126,1111,07c1,07a1,c3 d9 3f,c3 37 3f,jp $3fd9,jp $3f37,jp $0000,agon_os.asm,JP	EXTERR			; Trigger an external error
1127,1127,1112,07c4,07a4,c5,c5,push bc,push bc,push bc,agon_os.asm,OSSAVE:			PUSH	BC			; Stack the size
1128,1128,1113,07c5,07a5,d5,d5,push de,push de,push de,agon_os.asm,PUSH	DE			; Stack the save address
1129,1129,1114,07c6,07a6,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",agon_os.asm,"LD	DE, ACCS		; Buffer address for filename"
1130,1130,1115,07c9,07a9,cd 3d 05,cd 3d 05,call $053d,call $053d,call $0000,agon_os.asm,CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
1131,1131,1116,07cc,07ac,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_os.asm,"LD	HL, ACCS		; HL: Filename"
1132,1132,1117,07cf,07af,cd 17 08,cd f7 07,call $0817,call $07f7,call $0000,agon_os.asm,CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
1133,1133,1118,07d2,07b2,cd 28 08,cd 08 08,call $0828,call $0808,call $0000,agon_os.asm,CALL	EXT_HANDLER		; Get the default handler
1134,1134,1119,07d5,07b5,d1,d1,pop de,pop de,pop de,agon_os.asm,POP	DE			; Restore the save address
1135,1135,1120,07d6,07b6,c1,c1,pop bc,pop bc,pop bc,agon_os.asm,POP	BC			; Restore the size
1136,1136,1121,07d7,07b7,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; Is the extension .BBC
1137,1137,1122,07d8,07b8,28 35,28 35,"jr z,$+$37","jr z,$+$37","jr z,$+$00",agon_os.asm,"JR	Z, OSSAVE_BBC		; Yes, so use that"
1138,1138,1123,07da,07ba,3a 03 52,3a f4 50,"ld a,($5203)","ld a,($50f4)","ld a,($0000)",agon_os.asm,"OSSAVE_TXT:		LD 	A, (OSWRCHCH)		; Stack the current channel"
1139,1139,1124,07dd,07bd,f5,f5,push af,push af,push af,agon_os.asm,PUSH	AF
1140,1140,1125,07de,07be,af,af,xor a,xor a,xor a,agon_os.asm,XOR	A
1141,1141,1126,07df,07bf,3c,3c,inc a,inc a,inc a,agon_os.asm,"INC	A			; Make sure C is clear, A is 1, for OPENOUT"
1142,1142,1127,07e0,07c0,32 03 52,32 f4 50,"ld ($5203),a","ld ($50f4),a","ld ($0000),a",agon_os.asm,"LD	(OSWRCHCH), A"
1143,1143,1128,07e3,07c3,cd 46 06,cd 26 06,call $0646,call $0626,call $0000,agon_os.asm,CALL	OSOPEN			; Open the file
1144,1144,1129,07e6,07c6,32 04 52,32 f5 50,"ld ($5204),a","ld ($50f5),a","ld ($0000),a",agon_os.asm,"LD	(OSWRCHFH), A		; Store the file handle for OSWRCH"
1145,1145,1130,07e9,07c9,dd 21 fe 55,dd 21 fe 54,"ld ix,$55fe","ld ix,$54fe","ld ix,$0000",agon_os.asm,"LD	IX, LISTON		; Required for LISTIT"
1146,1146,1131,07ed,07cd,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",agon_os.asm,"LD	HL, (PAGE_)		; Get start of program area"
1147,1147,1132,07f0,07d0,d9,d9,exx,exx,exx,agon_os.asm,EXX
1148,1148,1133,07f1,07d1,01 00 00,01 00 00,"ld bc,$0000","ld bc,$0000","ld bc,$0000",agon_os.asm,"LD	BC, 0			; Set the initial indent counters"
1149,1149,1134,07f4,07d4,d9,d9,exx,exx,exx,agon_os.asm,EXX
1150,1150,1135,07f5,07d5,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_os.asm,"OSSAVE_TXT1:		LD	A, (HL)			; Check for end of program marker"
1151,1151,1136,07f6,07d6,b7,b7,or a,or a,or a,agon_os.asm,OR	A
1152,1152,1137,07f7,07d7,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",agon_os.asm,"JR	Z, OSSAVE_TXT2"
1153,1153,1138,07f9,07d9,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL			; Skip the length byte
1154,1154,1139,07fa,07da,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",agon_os.asm,"LD	E, (HL)			; Get the line number"
1155,1155,1140,07fb,07db,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1156,1156,1141,07fc,07dc,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",agon_os.asm,"LD	D, (HL)"
1157,1157,1142,07fd,07dd,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1158,1158,1143,07fe,07de,cd e1 40,cd 3f 40,call $40e1,call $403f,call $0000,agon_os.asm,CALL	LISTIT			; List the line
1159,1159,1144,0801,07e1,18 f2,18 f2,jr $-$0c,jr $-$0c,jr $-$00,agon_os.asm,JR	OSSAVE_TXT1
1160,1160,1145,0803,07e3,3a 04 52,3a f5 50,"ld a,($5204)","ld a,($50f5)","ld a,($0000)",agon_os.asm,"OSSAVE_TXT2:		LD	A, (OSWRCHFH)		; Get the file handle"
1161,1161,1146,0806,07e6,5f,5f,"ld e,a","ld e,a","ld e,a",agon_os.asm,"LD	E, A"
1162,1162,1147,0807,07e7,cd 55 06,cd 35 06,call $0655,call $0635,call $0000,agon_os.asm,CALL	OSSHUT			; Close it
1163,1163,1148,080a,07ea,f1,f1,pop af,pop af,pop af,agon_os.asm,POP	AF			; Restore the channel
1164,1164,1149,080b,07eb,32 03 52,32 f4 50,"ld ($5203),a","ld ($50f4),a","ld ($0000),a",agon_os.asm,"LD	(OSWRCHCH), A"
1165,1165,1150,080e,07ee,c9,c9,ret,ret,ret,agon_os.asm,RET
1166,1166,1151,080f,07ef,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",agon_os.asm,"LD	A, function"
1167,1167,1152,0811,07f1,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1168,1168,1153,0813,07f3,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; If there is no error (A=0)
1169,1169,1154,0814,07f4,c8,c8,ret z,ret z,ret z,agon_os.asm,RET	Z			; Just return
1170,1170,1155,0815,07f5,18 9a,18 9a,jr $-$64,jr $-$64,jr $-$00,agon_os.asm,JR	OSERROR			; Trip an error
1171,1171,1156,0817,07f7,e5,e5,push hl,push hl,push hl,agon_os.asm,EXT_DEFAULT:		PUSH	HL			; Stack the filename pointer
1172,1172,1157,0818,07f8,0e 2e,0e 2e,"ld c,$2e","ld c,$2e","ld c,$00",agon_os.asm,"LD	C, '.'			; Search for dot (marks start of extension)"
1173,1173,1158,081a,07fa,cd 5d 05,cd 5d 05,call $055d,call $055d,call $0000,agon_os.asm,CALL	CSTR_FINDCH
1174,1174,1159,081d,07fd,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; Check for end of string marker
1175,1175,1160,081e,07fe,20 06,20 06,"jr nz,$+$08","jr nz,$+$08","jr nz,$+$00",agon_os.asm,"JR	NZ, @F			; No, so skip as we have an extension at this point"
1176,1176,1161,0820,0800,11 54 08,11 34 08,"ld de,$0854","ld de,$0834","ld de,$0000",agon_os.asm,"LD	DE, EXT_LOOKUP		; Get the first (default extension)"
1177,1177,1162,0823,0803,cd 73 05,cd 73 05,call $0573,call $0573,call $0000,agon_os.asm,CALL	CSTR_CAT		; Concat it to string pointed to by HL
1178,1178,1163,0826,0806,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,@@:			POP	HL			; Restore the filename pointer
1179,1179,1164,0827,0807,c9,c9,ret,ret,ret,agon_os.asm,RET
1180,1180,1165,0828,0808,e5,e5,push hl,push hl,push hl,agon_os.asm,EXT_HANDLER:		PUSH	HL			; Stack the filename pointer
1181,1181,1166,0829,0809,0e 2e,0e 2e,"ld c,$2e","ld c,$2e","ld c,$00",agon_os.asm,"LD	C, '.'			; Find the '.'"
1182,1182,1167,082b,080b,cd 5d 05,cd 5d 05,call $055d,call $055d,call $0000,agon_os.asm,CALL	CSTR_FINDCH
1183,1183,1168,082e,080e,11 54 08,11 34 08,"ld de,$0854","ld de,$0834","ld de,$0000",agon_os.asm,"LD	DE, EXT_LOOKUP		; The lookup table"
1184,1184,1169,0831,0811,e5,e5,push hl,push hl,push hl,agon_os.asm,EXT_HANDLER_1:		PUSH	HL			; Stack the pointer to the extension
1185,1185,1170,0832,0812,cd 65 05,cd 65 05,call $0565,call $0565,call $0000,agon_os.asm,CALL	CSTR_ENDSWITH		; Check whether the string ends with the entry in the lookup
1186,1186,1171,0835,0815,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL			; Restore the pointer to the extension
1187,1187,1172,0836,0816,28 18,28 18,"jr z,$+$1a","jr z,$+$1a","jr z,$+$00",agon_os.asm,"JR	Z, EXT_HANDLER_2	; We have a match!"
1188,1188,1173,0838,0818,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_os.asm,"@@:			LD	A, (DE)			; Skip to the end of the entry in the lookup"
1189,1189,1174,0839,0819,13,13,inc de,inc de,inc de,agon_os.asm,INC	DE
1190,1190,1175,083a,081a,b7,b7,or a,or a,or a,agon_os.asm,OR	A
1191,1191,1176,083b,081b,20 fb,20 fb,"jr nz,$-$03","jr nz,$-$03","jr nz,$-$00",agon_os.asm,"JR	NZ, @B"
1192,1192,1177,083d,081d,13,13,inc de,inc de,inc de,agon_os.asm,INC	DE			; Skip the file extension # byte
1193,1193,1178,083e,081e,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_os.asm,"LD	A, (DE)			; Are we at the end of the table?"
1194,1194,1179,083f,081f,b7,b7,or a,or a,or a,agon_os.asm,OR	A
1195,1195,1180,0840,0820,20 ef,20 ef,"jr nz,$-$0f","jr nz,$-$0f","jr nz,$-$00",agon_os.asm,"JR	NZ, EXT_HANDLER_1	; No, so loop"
1196,1196,1181,0842,0822,3e cc,3e cc,"ld a,$cc","ld a,$cc","ld a,$00",agon_os.asm,"LD      A,204			; Throw a ""Bad name"" error"
1197,1197,1182,0844,0824,cd d9 3f,cd 37 3f,call $3fd9,call $3f37,call $0000,agon_os.asm,CALL    EXTERR
1198,1198,1183,0847,0827,42,42,"ld b,d","ld b,d","ld b,d",agon_os.asm,"DB    	""Bad name"", 0"
1199,1199,1184,0848,0828,61,61,"ld h,c","ld h,c","ld h,c",agon_os.asm,
1200,1200,1185,0849,0829,64,64,"ld h,h","ld h,h","ld h,h",agon_os.asm,
1201,1201,1186,084a,082a,20 6e,20 6e,"jr nz,$+$70","jr nz,$+$70","jr nz,$+$00",agon_os.asm,
1202,1202,1187,084c,082c,61,61,"ld h,c","ld h,c","ld h,c",agon_os.asm,
1203,1203,1188,084d,082d,6d,6d,"ld l,l","ld l,l","ld l,l",agon_os.asm,
1204,1204,1189,084e,082e,65,65,"ld h,l","ld h,l","ld h,l",agon_os.asm,
1205,1205,1190,084f,082f,00,00,nop,nop,nop,agon_os.asm,
1206,1206,1191,0850,0830,13,13,inc de,inc de,inc de,agon_os.asm,EXT_HANDLER_2:		INC	DE			; Skip to the file extension # byte
1207,1207,1192,0851,0831,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_os.asm,"LD	A, (DE)"
1208,1208,1193,0852,0832,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL			; Restore the filename pointer
1209,1209,1194,0853,0833,c9,c9,ret,ret,ret,agon_os.asm,RET
1210,1210,1195,0854,0834,2e 42,2e 42,"ld l,$42","ld l,$42","ld l,$00",agon_os.asm,"EXT_LOOKUP:		DB	"".BBC"", 0, 0		; First entry is the default extension"
1211,1211,1196,0856,0836,42,42,"ld b,d","ld b,d","ld b,d",agon_os.asm,
1212,1212,1197,0857,0837,43,43,"ld b,e","ld b,e","ld b,e",agon_os.asm,
1213,1213,1198,0858,0838,00,00,nop,nop,nop,agon_os.asm,
1214,1214,1199,0859,0839,00,00,nop,nop,nop,agon_os.asm,
1215,1215,1200,085a,083a,2e 54,2e 54,"ld l,$54","ld l,$54","ld l,$00",agon_os.asm,"DB	"".TXT"", 0, 1"
1216,1216,1201,085c,083c,58,58,"ld e,b","ld e,b","ld e,b",agon_os.asm,
1217,1217,1202,085d,083d,54,54,"ld d,h","ld d,h","ld d,h",agon_os.asm,
1218,1218,1203,085e,083e,00,00,nop,nop,nop,agon_os.asm,
1219,1219,1204,085f,083f,01 2e 41,01 2e 41,"ld bc,$412e","ld bc,$412e","ld bc,$0000",agon_os.asm,
1220,1220,1205,0862,0842,53,53,"ld d,e","ld d,e","ld d,e",agon_os.asm,
1221,1221,1206,0863,0843,43,43,"ld b,e","ld b,e","ld b,e",agon_os.asm,
1222,1222,1207,0864,0844,00,00,nop,nop,nop,agon_os.asm,
1223,1223,1208,0865,0845,01 2e 42,01 2e 42,"ld bc,$422e","ld bc,$422e","ld bc,$0000",agon_os.asm,
1224,1224,1209,0868,0848,41,41,"ld b,c","ld b,c","ld b,c",agon_os.asm,
1225,1225,1210,0869,0849,53,53,"ld d,e","ld d,e","ld d,e",agon_os.asm,
1226,1226,1211,086a,084a,00,00,nop,nop,nop,agon_os.asm,
1227,1227,1212,086b,084b,01 00 fe,01 00 fe,"ld bc,$fe00","ld bc,$fe00","ld bc,$0000",agon_os.asm,
1228,1228,,086e,,01 28 1d,,"ld bc,$1d28",,"ld bc,$0000",,
1229,1229,,0871,,fe 02,,cp $02,,cp $00,,
1230,1230,,0873,,28 2f,,"jr z,$+$31",,"jr z,$+$00",,
1231,1231,,0875,,fe 0e,,cp $0e,,cp $00,,
1232,1232,,0877,,28 4f,,"jr z,$+$51",,"jr z,$+$00",,
1233,1233,,0879,,fe 0f,,cp $0f,,cp $00,,
1234,1234,,087b,,28 10,,"jr z,$+$12",,"jr z,$+$00",,
1235,1235,,087d,,fe 07,,cp $07,,cp $00,,
1236,1236,,087f,,ca 22 0b,,"jp z,$0b22",,"jp z,$0000",,
1237,1237,,0882,,fe 08,,cp $08,,cp $00,,
1238,1238,,0884,,28 07,,"jr z,$+$09",,"jr z,$+$00",,
1239,1239,,0886,,fe 09,,cp $09,,cp $00,,
1240,1240,,0888,,28 30,,"jr z,$+$32",,"jr z,$+$00",,
1241,1241,,088a,,c3 f5 08,,jp $08f5,,jp $0000,,
1242,1242,,088d,,c9,,ret,,ret,,
1243,1243,,088e,,dd e5,,push ix,,push ix,,
1244,1244,,0890,,3e 08,,"ld a,$08",,"ld a,$00",,
1245,1245,,0892,,49 cf,,rst.lis $08,,rst.lis $00,,
1246,1246,,0894,,06 04,,"ld b,$04",,"ld b,$00",,
1247,1247,,0896,,5b dd 7e 00,,"ld.lil a,(ix)",,"ld.lil a,(ix)",,
1248,1248,,089a,,77,,"ld (hl),a",,"ld (hl),a",,
1249,1249,,089b,,23,,inc hl,,inc hl,,
1250,1250,,089c,,5b dd 23,,inc.lil ix,,inc.lil ix,,
1251,1251,,089f,,10 f5,,djnz $-$09,,djnz $-$00,,
1252,1252,,08a1,,dd e1,,pop ix,,pop ix,,
1253,1253,,08a3,,c9,,ret,,ret,,
1254,1254,,08a4,,dd e5,,push ix,,push ix,,
1255,1255,,08a6,,3e 08,,"ld a,$08",,"ld a,$00",,
1256,1256,,08a8,,49 cf,,rst.lis $08,,rst.lis $00,,
1257,1257,,08aa,,06 04,,"ld b,$04",,"ld b,$00",,
1258,1258,,08ac,,7e,,"ld a,(hl)",,"ld a,(hl)",,
1259,1259,,08ad,,5b dd 77 00,,"ld.lil (ix),a",,"ld.lil (ix),a",,
1260,1260,,08b1,,23,,inc hl,,inc hl,,
1261,1261,,08b2,,5b dd 23,,inc.lil ix,,inc.lil ix,,
1262,1262,,08b5,,10 f5,,djnz $-$09,,djnz $-$00,,
1263,1263,,08b7,,dd e1,,pop ix,,pop ix,,
1264,1264,,08b9,,c9,,ret,,ret,,
1265,1265,,08ba,,ed 5b 08 52,,"ld de,($5208)",,"ld de,($0000)",,
1266,1266,,08be,,2a 0a 52,,"ld hl,($520a)",,"ld hl,($0000)",,
1267,1267,,08c1,,cd fa 01,,call $01fa,,call $0000,,
1268,1268,,08c4,,32 0c 52,,"ld ($520c),a",,"ld ($0000),a",,
1269,1269,,08c7,,c9,,ret,,ret,,
1270,1270,,08c8,,fd e5,,push iy,,push iy,,
1271,1271,,08ca,,3e 12,,"ld a,$12",,"ld a,$00",,
1272,1272,,08cc,,49 cf,,rst.lis $08,,rst.lis $00,,
1273,1273,,08ce,,fd e1,,pop iy,,pop iy,,
1274,1274,1224,08d0,086a,c9,c9,ret,ret,ret,agon_os.asm,OSWORD_08:		RET				; Envelope not currently implemented
1275,1275,1225,08d1,086b,fe 0b,fe 0b,cp $0b,cp $0b,cp $00,agon_os.asm,OSBYTE:			CP	0BH			; Keyboard auto-repeat delay
1276,1276,1226,08d3,086d,28 31,28 31,"jr z,$+$33","jr z,$+$33","jr z,$+$00",agon_os.asm,"JR	Z, OSBYTE_0B"
1277,1277,1227,08d5,086f,fe 0c,fe 0c,cp $0c,cp $0c,cp $00,agon_os.asm,CP	0CH			; Keyboard auto-repeat rate
1278,1278,1228,08d7,0871,28 54,28 54,"jr z,$+$56","jr z,$+$56","jr z,$+$00",agon_os.asm,"JR	Z, OSBYTE_0C"
1279,1279,1229,08d9,0873,fe 13,fe 13,cp $13,cp $13,cp $00,agon_os.asm,CP	13H			; Wait for vblank
1280,1280,1230,08db,0875,28 77,28 77,"jr z,$+$79","jr z,$+$79","jr z,$+$00",agon_os.asm,"JR	Z, OSBYTE_13"
1281,1281,1231,08dd,0877,fe 76,fe 76,cp $76,cp $76,cp $00,agon_os.asm,CP	76H			; Set keyboard LED
1282,1282,1232,08df,0879,28 7b,28 7b,"jr z,$+$7d","jr z,$+$7d","jr z,$+$00",agon_os.asm,"JR	Z, OSBYTE_76"
1283,1283,1233,08e1,087b,fe 81,fe 81,cp $81,cp $81,cp $00,agon_os.asm,CP	81H			; Read the keyboard
1284,1284,1234,08e3,087d,ca 84 09,ca 1e 09,"jp z,$0984","jp z,$091e","jp z,$0000",agon_os.asm,"JP	Z, OSBYTE_81"
1285,1285,1235,08e6,0880,fe 86,fe 86,cp $86,cp $86,cp $00,agon_os.asm,CP	86H			; Get cursor coordinates
1286,1286,1236,08e8,0882,ca dd 09,ca 38 09,"jp z,$09dd","jp z,$0938","jp z,$0000",agon_os.asm,"JP	Z, OSBYTE_86"
1287,1287,1237,08eb,0885,fe 87,fe 87,cp $87,cp $87,cp $00,agon_os.asm,CP	87H			; Fetch current mode and character under cursor
1288,1288,1238,08ed,0887,ca 09 0a,ca 67 09,"jp z,$0a09","jp z,$0967","jp z,$0000",agon_os.asm,"JP	Z, OSBYTE_87"
1289,1289,1239,08f0,088a,fe a0,fe a0,cp $a0,cp $a0,cp $00,agon_os.asm,CP	A0H			; Fetch system variable
1290,1290,1240,08f2,088c,ca 1f 0a,ca 7d 09,"jp z,$0a1f","jp z,$097d","jp z,$0000",agon_os.asm,"JP	Z, OSBYTE_A0"
1291,1291,1241,08f5,088f,3e fe,3e fe,"ld a,$fe","ld a,$fe","ld a,$00",agon_os.asm,"HUH:    		LD      A,254			; Bad command error"
1292,1292,1242,08f7,0891,cd d9 3f,cd 37 3f,call $3fd9,call $3f37,call $0000,agon_os.asm,CALL    EXTERR
1293,1293,1243,08fa,0894,42,42,"ld b,d","ld b,d","ld b,d",agon_os.asm,"DB    	""Bad command"""
1294,1294,1244,08fb,0895,61,61,"ld h,c","ld h,c","ld h,c",agon_os.asm,
1295,1295,1245,08fc,0896,64,64,"ld h,h","ld h,h","ld h,h",agon_os.asm,
1296,1296,1246,08fd,0897,20 63,20 63,"jr nz,$+$65","jr nz,$+$65","jr nz,$+$00",agon_os.asm,
1297,1297,1247,08ff,0899,6f,6f,"ld l,a","ld l,a","ld l,a",agon_os.asm,
1298,1298,1248,0900,089a,6d,6d,"ld l,l","ld l,l","ld l,l",agon_os.asm,
1299,1299,1249,0901,089b,6d,6d,"ld l,l","ld l,l","ld l,l",agon_os.asm,
1300,1300,1250,0902,089c,61,61,"ld h,c","ld h,c","ld h,c",agon_os.asm,
1301,1301,1251,0903,089d,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",agon_os.asm,
1302,1302,1252,0904,089e,64,64,"ld h,h","ld h,h","ld h,h",agon_os.asm,
1303,1303,1253,0905,089f,00,00,nop,nop,nop,agon_os.asm,DEFB    0
1304,1304,1254,0906,08a0,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_os.asm,"LD      A, VAL"
1305,1305,1255,0908,08a2,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1306,1306,1256,090b,08a5,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1307,1307,1257,090d,08a7,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1308,1308,1258,0910,08aa,3e 88,3e 88,"ld a,$88","ld a,$88","ld a,$00",agon_os.asm,"LD      A, VAL"
1309,1309,1259,0912,08ac,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1310,1310,1260,0915,08af,7d,7d,"ld a,l","ld a,l","ld a,l",agon_os.asm,"LD      A, VAL"
1311,1311,1261,0916,08b0,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1312,1312,1262,0919,08b3,7c,7c,"ld a,h","ld a,h","ld a,h",agon_os.asm,"LD      A, VAL"
1313,1313,1263,091a,08b4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1314,1314,1264,091d,08b7,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1315,1315,1265,091f,08b9,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1316,1316,1266,0922,08bc,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1317,1317,1267,0924,08be,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1318,1318,1268,0927,08c1,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",agon_os.asm,"LD      A, VAL"
1319,1319,1269,0929,08c3,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1320,1320,1270,092c,08c6,c9,c9,ret,ret,ret,agon_os.asm,RET
1321,1321,1271,092d,08c7,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_os.asm,"LD      A, VAL"
1322,1322,1272,092f,08c9,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1323,1323,1273,0932,08cc,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1324,1324,1274,0934,08ce,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1325,1325,1275,0937,08d1,3e 88,3e 88,"ld a,$88","ld a,$88","ld a,$00",agon_os.asm,"LD      A, VAL"
1326,1326,1276,0939,08d3,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1327,1327,1277,093c,08d6,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1328,1328,1278,093e,08d8,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1329,1329,1279,0941,08db,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1330,1330,1280,0943,08dd,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1331,1331,1281,0946,08e0,7d,7d,"ld a,l","ld a,l","ld a,l",agon_os.asm,"LD      A, VAL"
1332,1332,1282,0947,08e1,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1333,1333,1283,094a,08e4,7c,7c,"ld a,h","ld a,h","ld a,h",agon_os.asm,"LD      A, VAL"
1334,1334,1284,094b,08e5,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1335,1335,1285,094e,08e8,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",agon_os.asm,"LD      A, VAL"
1336,1336,1286,0950,08ea,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1337,1337,1287,0953,08ed,c9,c9,ret,ret,ret,agon_os.asm,RET
1338,1338,1288,0954,08ee,cd 0f 0b,cd 6d 0a,call $0b0f,call $0a6d,call $0000,agon_os.asm,OSBYTE_13:		CALL	WAIT_VBLANK
1339,1339,1289,0957,08f1,2e 00,2e 00,"ld l,$00","ld l,$00","ld l,$00",agon_os.asm,"LD	L, 0			; Returns 0"
1340,1340,1290,0959,08f3,c3 d2 1b,c3 30 1b,jp $1bd2,jp $1b30,jp $0000,agon_os.asm,JP	COUNT0
1341,1341,1291,095c,08f6,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_os.asm,"LD      A, VAL"
1342,1342,1292,095e,08f8,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1343,1343,1293,0961,08fb,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1344,1344,1294,0963,08fd,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1345,1345,1295,0966,0900,3e 88,3e 88,"ld a,$88","ld a,$88","ld a,$00",agon_os.asm,"LD      A, VAL"
1346,1346,1296,0968,0902,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1347,1347,1297,096b,0905,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1348,1348,1298,096d,0907,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1349,1349,1299,0970,090a,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1350,1350,1300,0972,090c,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1351,1351,1301,0975,090f,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1352,1352,1302,0977,0911,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1353,1353,1303,097a,0914,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1354,1354,1304,097c,0916,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1355,1355,1305,097f,0919,7d,7d,"ld a,l","ld a,l","ld a,l",agon_os.asm,"LD      A, VAL"
1356,1356,1306,0980,091a,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1357,1357,1307,0983,091d,c9,c9,ret,ret,ret,agon_os.asm,RET
1358,1358,,0984,,d9,,exx,,exx,,
1359,1359,,0985,,cb 7c,,"bit 7,h",,"bit 7,h",,
1360,1360,,0987,,d9,,exx,,exx,,
1361,1361,,0988,,20 1c,,"jr nz,$+$1e",,"jr nz,$+$00",,
1362,1362,,098a,,cd 2d 06,,call $062d,,call $0000,,
1363,1363,,098d,,28 09,,"jr z,$+$0b",,"jr z,$+$00",,
1364,1364,,098f,,cd 0f 0b,,call $0b0f,,call $0000,,
1365,1365,,0992,,7c,,"ld a,h",,"ld a,h",,
1366,1366,,0993,,b5,,or l,,or l,,
1367,1367,,0994,,2b,,dec hl,,dec hl,,
1368,1368,,0995,,20 ed,,"jr nz,$-$11",,"jr nz,$-$00",,
1369,1369,,0997,,c9,,ret,,ret,,
1370,1370,,0998,,21 05 52,,"ld hl,$5205",,"ld hl,$0000",,
1371,1371,,099b,,36 00,,"ld (hl),$00",,"ld (hl),$00",,
1372,1372,,099d,,fe 1b,,cp $1b,,cp $00,,
1373,1373,,099f,,ca 18 06,,"jp z,$0618",,"jp z,$0000",,
1374,1374,,09a2,,26 00,,"ld h,$00",,"ld h,$00",,
1375,1375,,09a4,,6f,,"ld l,a",,"ld l,a",,
1376,1376,,09a5,,c9,,ret,,ret,,
1377,1377,,09a6,,3e 1e,,"ld a,$1e",,"ld a,$00",,
1378,1378,,09a8,,49 cf,,rst.lis $08,,rst.lis $00,,
1379,1379,,09aa,,23,,inc hl,,inc hl,,
1380,1380,,09ab,,7d,,"ld a,l",,"ld a,l",,
1381,1381,,09ac,,ed 44,,neg,,neg,,
1382,1382,,09ae,,4f,,"ld c,a",,"ld c,a",,
1383,1383,,09af,,3e 01,,"ld a,$01",,"ld a,$00",,
1384,1384,,09b1,,fa c8 3f,,"jp m,$3fc8",,"jp m,$0000",,
1385,1385,,09b4,,21 d5 09,,"ld hl,$09d5",,"ld hl,$0000",,
1386,1386,,09b7,,11 00 00,,"ld de,$0000",,"ld de,$0000",,
1387,1387,,09ba,,79,,"ld a,c",,"ld a,c",,
1388,1388,,09bb,,e6 07,,and $07,,and $00,,
1389,1389,,09bd,,5f,,"ld e,a",,"ld e,a",,
1390,1390,,09be,,19,,"add hl,de",,"add hl,de",,
1391,1391,,09bf,,46,,"ld b,(hl)",,"ld b,(hl)",,
1392,1392,,09c0,,79,,"ld a,c",,"ld a,c",,
1393,1393,,09c1,,e6 78,,and $78,,and $00,,
1394,1394,,09c3,,0f,,rrca,,rrca,,
1395,1395,,09c4,,0f,,rrca,,rrca,,
1396,1396,,09c5,,0f,,rrca,,rrca,,
1397,1397,,09c6,,5f,,"ld e,a",,"ld e,a",,
1398,1398,,09c7,,5b dd 19,,"add.lil ix,de",,"add.lil ix,de",,
1399,1399,,09ca,,5b dd 7e 00,,"ld.lil a,(ix)",,"ld.lil a,(ix)",,
1400,1400,,09ce,,a0,,and b,,and b,,
1401,1401,,09cf,,ca 7c 20,,"jp z,$207c",,"jp z,$0000",,
1402,1402,,09d2,,c3 41 1c,,jp $1c41,,jp $0000,,
1403,1403,,09d5,,01 02 04,,"ld bc,$0402",,"ld bc,$0000",,
1404,1404,,09d8,,08,,"ex af,af'",,"ex af,af'",,
1405,1405,,09d9,,10 20,,djnz $+$22,,djnz $+$00,,
1406,1406,,09db,,40 80,,"add.sis a,b",,"add.sis a,b",,
1407,1407,,09dd,,dd e5,,push ix,,push ix,,
1408,1408,,09df,,3e 08,,"ld a,$08",,"ld a,$00",,
1409,1409,,09e1,,49 cf,,rst.lis $08,,rst.lis $00,,
1410,1410,,09e3,,5b dd cb 04 86,,"res.lil 0,(ix+$04)",,"res.lil 0,(ix+$00)",,
1411,1411,1328,09e8,0948,3e 17,3e 00,"ld a,$17","ld a,$00","ld a,$00",agon_os.asm,"LD      A, VAL"
1412,1412,1329,09ea,094a,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1413,1413,1330,09ed,094d,3e 00,3e 82,"ld a,$00","ld a,$82","ld a,$00",agon_os.asm,"LD      A, VAL"
1414,1414,1331,09ef,094f,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_os.asm,CALL    OSWRCH
1415,1415,,09f2,,3e 82,,"ld a,$82",,"ld a,$00",,
1416,1416,,09f4,,cd 97 05,,call $0597,,call $0000,,
1417,1417,,09f7,,5b dd cb 04 46,,"bit.lil 0,(ix+$04)",,"bit.lil 0,(ix+$00)",,
1418,1418,,09fc,,28 f9,,"jr z,$-$05",,"jr z,$-$00",,
1419,1419,,09fe,,5b dd 6e 07,,"ld.lil l,(ix+$07)",,"ld.lil l,(ix+$00)",,
1420,1420,,0a02,,5b dd 66 08,,"ld.lil h,(ix+$08)",,"ld.lil h,(ix+$00)",,
1421,1421,1338,0a06,0964,dd e1,dd e1,pop ix,pop ix,pop ix,agon_os.asm,POP	IX
1422,1422,1339,0a08,0966,c9,c9,ret,ret,ret,agon_os.asm,RET
1423,1423,1340,0a09,0967,dd e5,dd e5,push ix,push ix,push ix,agon_os.asm,OSBYTE_87:		PUSH	IX
1424,1424,1341,0a0b,0969,cd 2d 0e,cd 8b 0d,call $0e2d,call $0d8b,call $0000,agon_os.asm,CALL	GETCSR			; Get the current screen position
1425,1425,1342,0a0e,096c,cd bd 01,cd bd 01,call $01bd,call $01bd,call $0000,agon_os.asm,CALL	GETSCHR_1		; Read character from screen
1426,1426,1343,0a11,096f,6f,6f,"ld l,a","ld l,a","ld l,a",agon_os.asm,"LD	L, A"
1427,1427,1344,0a12,0970,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_os.asm,"LD	A, function"
1428,1428,1345,0a14,0972,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1429,1429,1346,0a16,0974,5b dd 66 27,5b dd 66 27,"ld.lil h,(ix+$27)","ld.lil h,(ix+$27)","ld.lil h,(ix+$00)",agon_os.asm,"LD.LIL	H, (IX+sysvar_scrMode)	; H: Screen mode"
1430,1430,1347,0a1a,0978,dd e1,dd e1,pop ix,pop ix,pop ix,agon_os.asm,POP	IX
1431,1431,1348,0a1c,097a,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,agon_os.asm,JP	COUNT1
1432,1432,1349,0a1f,097d,dd e5,dd e5,push ix,push ix,push ix,agon_os.asm,OSBYTE_A0:		PUSH	IX
1433,1433,1350,0a21,097f,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_os.asm,"LD	A, function"
1434,1434,1351,0a23,0981,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1435,1435,1352,0a25,0983,5b 01 00 00 00,5b 01 00 00 00,"ld.lil bc,$000000","ld.lil bc,$000000","ld.lil bc,$000000",agon_os.asm,"LD.LIL	BC, 0"
1436,1436,1353,0a2a,0988,4d,4d,"ld c,l","ld c,l","ld c,l",agon_os.asm,"LD	C, L			; BCU = L"
1437,1437,1354,0a2b,0989,5b dd 09,5b dd 09,"add.lil ix,bc","add.lil ix,bc","add.lil ix,bc",agon_os.asm,"ADD.LIL	IX, BC			; Add to IX"
1438,1438,1355,0a2e,098c,5b dd 6e 00,5b dd 6e 00,"ld.lil l,(ix)","ld.lil l,(ix)","ld.lil l,(ix)",agon_os.asm,"LD.LIL	L, (IX + 0)		; Fetch the return value"
1439,1439,1356,0a32,0990,dd e1,dd e1,pop ix,pop ix,pop ix,agon_os.asm,POP	IX
1440,1440,1357,0a34,0992,c3 d2 1b,c3 30 1b,jp $1bd2,jp $1b30,jp $0000,agon_os.asm,JP 	COUNT0
1441,1441,1358,0a37,0995,cd 91 0a,cd ef 09,call $0a91,call $09ef,call $0000,agon_os.asm,OSCLI: 			CALL    SKIPSP
1442,1442,1359,0a3a,0998,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,agon_os.asm,CP      CR
1443,1443,1360,0a3c,099a,c8,c8,ret z,ret z,ret z,agon_os.asm,RET     Z
1444,1444,1361,0a3d,099b,fe 7c,fe 7c,cp $7c,cp $7c,cp $00,agon_os.asm,CP      '|'
1445,1445,1362,0a3f,099d,c8,c8,ret z,ret z,ret z,agon_os.asm,RET     Z
1446,1446,1363,0a40,099e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX      DE,HL"
1447,1447,1364,0a41,099f,21 a0 0a,21 fe 09,"ld hl,$0aa0","ld hl,$09fe","ld hl,$0000",agon_os.asm,"LD      HL,COMDS"
1448,1448,1365,0a44,09a2,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_os.asm,"OSCLI0:			LD      A,(DE)"
1449,1449,1366,0a45,09a3,cd 98 0a,cd f6 09,call $0a98,call $09f6,call $0000,agon_os.asm,CALL    UPPRC
1450,1450,1367,0a48,09a6,be,be,cp (hl),cp (hl),cp (hl),agon_os.asm,CP      (HL)
1451,1451,1368,0a49,09a7,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",agon_os.asm,"JR      Z,OSCLI2"
1452,1452,1369,0a4b,09a9,38 2e,38 2e,"jr c,$+$30","jr c,$+$30","jr c,$+$00",agon_os.asm,"JR      C,OSCLI6"
1453,1453,1370,0a4d,09ab,cb 7e,cb 7e,"bit 7,(hl)","bit 7,(hl)","bit 7,(hl)",agon_os.asm,"OSCLI1:			BIT     7,(HL)"
1454,1454,1371,0a4f,09ad,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1455,1455,1372,0a50,09ae,28 fb,28 fb,"jr z,$-$03","jr z,$-$03","jr z,$-$00",agon_os.asm,"JR      Z,OSCLI1"
1456,1456,1373,0a52,09b0,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1457,1457,1374,0a53,09b1,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1458,1458,1375,0a54,09b2,18 ee,18 ee,jr $-$10,jr $-$10,jr $-$00,agon_os.asm,JR      OSCLI0
1459,1459,1376,0a56,09b4,d5,d5,push de,push de,push de,agon_os.asm,OSCLI2:			PUSH    DE
1460,1460,1377,0a57,09b5,13,13,inc de,inc de,inc de,agon_os.asm,OSCLI3:			INC     DE
1461,1461,1378,0a58,09b6,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1462,1462,1379,0a59,09b7,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",agon_os.asm,"LD      A,(DE)"
1463,1463,1380,0a5a,09b8,cd 98 0a,cd f6 09,call $0a98,call $09f6,call $0000,agon_os.asm,CALL    UPPRC
1464,1464,1381,0a5d,09bb,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,agon_os.asm,CP      '.'			; ABBREVIATED?
1465,1465,1382,0a5f,09bd,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",agon_os.asm,"JR      Z,OSCLI4"
1466,1466,1383,0a61,09bf,ae,ae,xor (hl),xor (hl),xor (hl),agon_os.asm,XOR     (HL)
1467,1467,1384,0a62,09c0,28 f3,28 f3,"jr z,$-$0b","jr z,$-$0b","jr z,$-$00",agon_os.asm,"JR      Z,OSCLI3"
1468,1468,1385,0a64,09c2,fe 80,fe 80,cp $80,cp $80,cp $00,agon_os.asm,CP      80H
1469,1469,1386,0a66,09c4,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",agon_os.asm,"JR      Z,OSCLI4"
1470,1470,1387,0a68,09c6,d1,d1,pop de,pop de,pop de,agon_os.asm,POP     DE
1471,1471,1388,0a69,09c7,18 e2,18 e2,jr $-$1c,jr $-$1c,jr $-$00,agon_os.asm,JR      OSCLI1
1472,1472,1389,0a6b,09c9,f1,f1,pop af,pop af,pop af,agon_os.asm,OSCLI4:			POP     AF
1473,1473,1390,0a6c,09ca,13,13,inc de,inc de,inc de,agon_os.asm,INC     DE
1474,1474,1391,0a6d,09cb,cb 7e,cb 7e,"bit 7,(hl)","bit 7,(hl)","bit 7,(hl)",agon_os.asm,"OSCLI5:			BIT     7,(HL)"
1475,1475,1392,0a6f,09cd,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1476,1476,1393,0a70,09ce,28 fb,28 fb,"jr z,$-$03","jr z,$-$03","jr z,$-$00",agon_os.asm,"JR      Z,OSCLI5"
1477,1477,1394,0a72,09d0,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_os.asm,"LD      A,(HL)"
1478,1478,1395,0a73,09d1,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1479,1479,1396,0a74,09d2,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",agon_os.asm,"LD      H,(HL)"
1480,1480,1397,0a75,09d3,6f,6f,"ld l,a","ld l,a","ld l,a",agon_os.asm,"LD      L,A"
1481,1481,1398,0a76,09d4,e5,e5,push hl,push hl,push hl,agon_os.asm,PUSH    HL
1482,1482,1399,0a77,09d5,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX      DE,HL"
1483,1483,1400,0a78,09d6,c3 91 0a,c3 ef 09,jp $0a91,jp $09ef,jp $0000,agon_os.asm,JP      SKIPSP
1484,1484,1401,0a7b,09d9,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"OSCLI6:			EX	DE, HL			; HL: Buffer for command"
1485,1485,1402,0a7c,09da,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",agon_os.asm,"LD	DE, ACCS		; Buffer for command string is ACCS (the string accumulator)"
1486,1486,1403,0a7f,09dd,d5,d5,push de,push de,push de,agon_os.asm,PUSH	DE			; Store buffer address
1487,1487,1404,0a80,09de,cd 4f 05,cd 4f 05,call $054f,call $054f,call $0000,agon_os.asm,CALL	CSTR_LINE		; Fetch the line
1488,1488,1405,0a83,09e1,e1,e1,pop hl,pop hl,pop hl,agon_os.asm,POP	HL			; HL: Pointer to command string in ACCS
1489,1489,1406,0a84,09e2,fd e5,fd e5,push iy,push iy,push iy,agon_os.asm,PUSH	IY
1490,1490,1407,0a86,09e4,3e 10,3e 10,"ld a,$10","ld a,$10","ld a,$00",agon_os.asm,"LD	A, function"
1491,1491,1408,0a88,09e6,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1492,1492,1409,0a8a,09e8,fd e1,fd e1,pop iy,pop iy,pop iy,agon_os.asm,POP	IY
1493,1493,1410,0a8c,09ea,b7,b7,or a,or a,or a,agon_os.asm,OR	A			; 0 means MOS returned OK
1494,1494,1411,0a8d,09eb,c8,c8,ret z,ret z,ret z,agon_os.asm,RET	Z			; So don't do anything
1495,1495,1412,0a8e,09ec,c3 b1 07,c3 91 07,jp $07b1,jp $0791,jp $0000,agon_os.asm,JP 	OSERROR			; Otherwise it's a MOS error
1496,1496,1413,0a91,09ef,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_os.asm,"SKIPSP:			LD      A,(HL)"
1497,1497,1414,0a92,09f0,fe 20,fe 20,cp $20,cp $20,cp $00,agon_os.asm,CP      ' '
1498,1498,1415,0a94,09f2,c0,c0,ret nz,ret nz,ret nz,agon_os.asm,RET     NZ
1499,1499,1416,0a95,09f3,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC     HL
1500,1500,1417,0a96,09f4,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,agon_os.asm,JR      SKIPSP
1501,1501,1418,0a98,09f6,e6 7f,e6 7f,and $7f,and $7f,and $00,agon_os.asm,UPPRC:  		AND     7FH
1502,1502,1419,0a9a,09f8,fe 60,fe 60,cp $60,cp $60,cp $00,agon_os.asm,CP      '`'
1503,1503,1420,0a9c,09fa,d8,d8,ret c,ret c,ret c,agon_os.asm,RET     C
1504,1504,1421,0a9d,09fb,e6 5f,e6 5f,and $5f,and $5f,and $00,agon_os.asm,AND     5FH			; CONVERT TO UPPER CASE
1505,1505,1422,0a9f,09fd,c9,c9,ret,ret,ret,agon_os.asm,RET
1506,1506,1423,0aa0,09fe,42,42,"ld b,d","ld b,d","ld b,d",agon_os.asm,"COMDS:  		DB	""BY"",""E""+80h		; BYE"
1507,1507,1424,0aa1,09ff,59,59,"ld e,c","ld e,c","ld e,c",agon_os.asm,
1508,1508,,0aa2,,c5,,push bc,,push bc,,
1509,1509,,0aa3,,b0,,or b,,or b,,
1510,1510,,0aa4,,0a,,"ld a,(bc)",,"ld a,(bc)",,
1511,1511,,0aa5,,45,,"ld b,l",,"ld b,l",,
1512,1512,,0aa6,,44,,"ld b,h",,"ld b,h",,
1513,1513,,0aa7,,49 d4 bb 0a,,"call.lis nc,$0abb",,"call.lis nc,$0000",,
1514,1514,1432,0aab,0a09,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",agon_os.asm,"DB	""F"",""X""+80h		; FX"
1515,1515,,0aac,,d8,,ret c,,ret c,,
1516,1516,,0aad,,f7,,rst $30,,rst $00,,
1517,1517,1435,0aae,0a0c,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_os.asm,
1518,1518,1436,0aaf,0a0d,ff,ff,rst $38,rst $38,rst $00,agon_os.asm,DB	FFh
1519,1519,1437,0ab0,0a0e,cd 48 04,cd 48 04,call $0448,call $0448,call $0000,agon_os.asm,BYE:			CALL	VBLANK_STOP		; Restore MOS interrupts
1520,1520,1438,0ab3,0a11,5b dd e1,5b dd e1,pop.lil ix,pop.lil ix,pop.lil ix,agon_os.asm,POP.LIL	IX 			; The return address to init
1521,1521,1439,0ab6,0a14,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",agon_os.asm,"LD	HL, 0			; The return code"
1522,1522,1440,0ab9,0a17,dd e9,dd e9,jp (ix),jp (ix),jp (ix),agon_os.asm,JP	(IX)
1523,1523,1441,0abb,0a19,cd be 04,cd be 04,call $04be,call $04be,call $0000,agon_os.asm,STAR_EDIT:		CALL	ASC_TO_NUMBER		; DE: Line number to edit
1524,1524,1442,0abe,0a1c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX	DE, HL			; HL: Line number"
1525,1525,1443,0abf,0a1d,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,agon_os.asm,CALL	FINDL			; HL: Address in RAM of tokenised line
1526,1526,1444,0ac2,0a20,3e 29,3e 29,"ld a,$29","ld a,$29","ld a,$00",agon_os.asm,"LD	A, 41			; F:NZ If the line is not found"
1527,1527,1445,0ac4,0a22,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",agon_os.asm,"JP	NZ, ERROR_		; Do error 41: No such line in that case"
1528,1528,1446,0ac7,0a25,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL			; Skip the length byte
1529,1529,1447,0ac8,0a26,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",agon_os.asm,"LD	E, (HL)			; Fetch the line number"
1530,1530,1448,0ac9,0a27,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1531,1531,1449,0aca,0a28,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",agon_os.asm,"LD	D, (HL)"
1532,1532,1450,0acb,0a29,23,23,inc hl,inc hl,inc hl,agon_os.asm,INC	HL
1533,1533,1451,0acc,0a2a,dd 21 00 53,dd 21 00 52,"ld ix,$5300","ld ix,$5200","ld ix,$0000",agon_os.asm,"LD	IX, ACCS		; Pointer to where the copy is to be stored"
1534,1534,1452,0ad0,0a2e,dd 22 01 52,dd 22 f2 50,"ld ($5201),ix","ld ($50f2),ix","ld ($0000),ix",agon_os.asm,"LD	(OSWRCHPT), IX"
1535,1535,1453,0ad4,0a32,dd 21 fe 55,dd 21 fe 54,"ld ix,$55fe","ld ix,$54fe","ld ix,$0000",agon_os.asm,"LD	IX, LISTON		; Pointer to LISTON variable in RAM"
1536,1536,1454,0ad8,0a36,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",agon_os.asm,"LD	A, (IX)			; Store that variable"
1537,1537,1455,0adb,0a39,f5,f5,push af,push af,push af,agon_os.asm,PUSH	AF
1538,1538,1456,0adc,0a3a,dd 36 00 09,dd 36 00 09,"ld (ix),$09","ld (ix),$09","ld (ix),$00",agon_os.asm,"LD	(IX), 09h		; Set to echo to buffer"
1539,1539,1457,0ae0,0a3e,cd e1 40,cd 3f 40,call $40e1,call $403f,call $0000,agon_os.asm,CALL	LISTIT
1540,1540,1458,0ae3,0a41,f1,f1,pop af,pop af,pop af,agon_os.asm,POP	AF
1541,1541,1459,0ae4,0a42,dd 77 00,dd 77 00,"ld (ix),a","ld (ix),a","ld (ix),a",agon_os.asm,"LD	(IX), A			; Restore the original LISTON variable"
1542,1542,1460,0ae7,0a45,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",agon_os.asm,"LD	HL, ACCS		; HL: ACCS"
1543,1543,1461,0aea,0a48,5d,5d,"ld e,l","ld e,l","ld e,l",agon_os.asm,"LD	E, L			;  E: 0 - Don't clear the buffer; ACCS is on a page boundary so L is 0"
1544,1544,1462,0aeb,0a49,cd eb 05,cd cb 05,call $05eb,call $05cb,call $0000,agon_os.asm,CALL	OSLINE1			; Invoke the editor
1545,1545,1463,0aee,0a4c,cd 3b 07,cd 1b 07,call $073b,call $071b,call $0000,agon_os.asm,CALL	OSEDIT
1546,1546,1464,0af1,0a4f,dc 9e 40,dc fc 3f,"call c,$409e","call c,$3ffc","call c,$0000",agon_os.asm,"CALL    C,CLEAN			; Set TOP, write out &FFFF end of program marker"
1547,1547,1465,0af4,0a52,c3 34 38,c3 92 37,jp $3834,jp $3792,jp $0000,agon_os.asm,JP      CLOOP			; Jump back to immediate mode
1548,1548,1466,0af7,0a55,cd be 04,cd be 04,call $04be,call $04be,call $0000,agon_os.asm,STAR_FX:		CALL	ASC_TO_NUMBER
1549,1549,1467,0afa,0a58,4b,4b,"ld c,e","ld c,e","ld c,e",agon_os.asm,"LD	C, E			; C: Save FX #"
1550,1550,1468,0afb,0a59,cd be 04,cd be 04,call $04be,call $04be,call $0000,agon_os.asm,CALL	ASC_TO_NUMBER
1551,1551,1469,0afe,0a5c,7a,7a,"ld a,d","ld a,d","ld a,d",agon_os.asm,"LD	A, D  			; Is first parameter > 255?"
1552,1552,1470,0aff,0a5d,b7,b7,or a,or a,or a,agon_os.asm,OR 	A
1553,1553,1471,0b00,0a5e,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",agon_os.asm,"JR	Z, STAR_FX1		; Yes, so skip next bit"
1554,1554,1472,0b02,0a60,eb,eb,"ex de,hl","ex de,hl","ex de,hl",agon_os.asm,"EX	DE, HL 			; Parameter is 16-bit"
1555,1555,1473,0b03,0a61,18 06,18 06,jr $+$08,jr $+$08,jr $+$00,agon_os.asm,JR	STAR_FX2
1556,1556,1474,0b05,0a63,43,43,"ld b,e","ld b,e","ld b,e",agon_os.asm,"STAR_FX1:		LD	B, E 			; B: Save First parameter"
1557,1557,1475,0b06,0a64,cd be 04,cd be 04,call $04be,call $04be,call $0000,agon_os.asm,CALL	ASC_TO_NUMBER		; Fetch second parameter
1558,1558,1476,0b09,0a67,68,68,"ld l,b","ld l,b","ld l,b",agon_os.asm,"LD	L, B 			; L: First parameter"
1559,1559,1477,0b0a,0a68,63,63,"ld h,e","ld h,e","ld h,e",agon_os.asm,"LD	H, E 			; H: Second parameter"
1560,1560,1478,0b0b,0a69,79,79,"ld a,c","ld a,c","ld a,c",agon_os.asm,"STAR_FX2:		LD	A, C 			; A: FX #"
1561,1561,1479,0b0c,0a6a,c3 d1 08,c3 6b 08,jp $08d1,jp $086b,jp $0000,agon_os.asm,JP	OSBYTE
1562,1562,1480,0b0f,0a6d,dd e5,dd e5,push ix,push ix,push ix,agon_os.asm,WAIT_VBLANK:		PUSH 	IX			; Wait for VBLANK interrupt
1563,1563,1481,0b11,0a6f,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_os.asm,"LD	A, function"
1564,1564,1482,0b13,0a71,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_os.asm,RST.LIS	08h
1565,1565,1483,0b15,0a73,5b dd 7e 00,5b dd 7e 00,"ld.lil a,(ix)","ld.lil a,(ix)","ld.lil a,(ix)",agon_os.asm,"LD.LIL	A, (IX + sysvar_time + 0)"
1566,1566,1484,0b19,0a77,5b dd be 00,5b dd be 00,cp.lil (ix),cp.lil (ix),cp.lil (ix),agon_os.asm,"@@:			CP.LIL 	A, (IX + sysvar_time + 0)"
1567,1567,1485,0b1d,0a7b,28 fa,28 fa,"jr z,$-$04","jr z,$-$04","jr z,$-$00",agon_os.asm,"JR	Z, @B"
1568,1568,1486,0b1f,0a7d,dd e1,dd e1,pop ix,pop ix,pop ix,agon_os.asm,POP	IX
1569,1569,1487,0b21,0a7f,c9,c9,ret,ret,ret,agon_os.asm,RET
1570,1570,1488,0b22,0a80,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_sound.asm,"SOUND_:			LD	A, (HL)			; Channel"
1571,1571,1489,0b23,0a81,32 00 53,32 00 52,"ld ($5300),a","ld ($5200),a","ld ($0000),a",agon_sound.asm,"LD	(VDU_BUFFER+0), A"
1572,1572,1490,0b26,0a84,af,af,xor a,xor a,xor a,agon_sound.asm,XOR	A			; Waveform
1573,1573,1491,0b27,0a85,32 01 53,32 01 52,"ld ($5301),a","ld ($5201),a","ld ($0000),a",agon_sound.asm,"LD	(VDU_BUFFER+1), A"
1574,1574,1492,0b2a,0a88,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1575,1575,1493,0b2b,0a89,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1576,1576,1494,0b2c,0a8a,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",agon_sound.asm,"LD	C, (HL)			; Volume"
1577,1577,1495,0b2d,0a8b,06 06,06 06,"ld b,$06","ld b,$06","ld b,$00",agon_sound.asm,"LD	B, 6			; C already contains the volume"
1578,1578,1496,0b2f,0a8d,ed 4c,ed 4c,mlt bc,mlt bc,mlt bc,agon_sound.asm,MLT	BC			; Multiply by 6 (0-15 scales to 0-90)
1579,1579,1497,0b31,0a8f,79,79,"ld a,c","ld a,c","ld a,c",agon_sound.asm,"LD	A, C"
1580,1580,1498,0b32,0a90,32 02 53,32 02 52,"ld ($5302),a","ld ($5202),a","ld ($0000),a",agon_sound.asm,"LD	(VDU_BUFFER+2), A"
1581,1581,1499,0b35,0a93,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1582,1582,1500,0b36,0a94,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1583,1583,1501,0b37,0a95,e5,e5,push hl,push hl,push hl,agon_sound.asm,PUSH	HL
1584,1584,1502,0b38,0a96,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",agon_sound.asm,"LD	L, (HL)"
1585,1585,1503,0b39,0a97,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",agon_sound.asm,"LD	H, 0"
1586,1586,1504,0b3b,0a99,11 ad 0b,11 0b 0b,"ld de,$0bad","ld de,$0b0b","ld de,$0000",agon_sound.asm,"LD	DE, SOUND_FREQ_LOOKUP"
1587,1587,1505,0b3e,0a9c,29,29,"add hl,hl","add hl,hl","add hl,hl",agon_sound.asm,"ADD	HL, HL"
1588,1588,1506,0b3f,0a9d,19,19,"add hl,de","add hl,de","add hl,de",agon_sound.asm,"ADD	HL, DE"
1589,1589,1507,0b40,0a9e,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_sound.asm,"LD	A, (HL)"
1590,1590,1508,0b41,0a9f,32 03 53,32 03 52,"ld ($5303),a","ld ($5203),a","ld ($0000),a",agon_sound.asm,"LD	(VDU_BUFFER+3), A"
1591,1591,1509,0b44,0aa2,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1592,1592,1510,0b45,0aa3,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",agon_sound.asm,"LD	A, (HL)"
1593,1593,1511,0b46,0aa4,32 04 53,32 04 52,"ld ($5304),a","ld ($5204),a","ld ($0000),a",agon_sound.asm,"LD	(VDU_BUFFER+4), A"
1594,1594,1512,0b49,0aa7,e1,e1,pop hl,pop hl,pop hl,agon_sound.asm,POP	HL
1595,1595,1513,0b4a,0aa8,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1596,1596,1514,0b4b,0aa9,23,23,inc hl,inc hl,inc hl,agon_sound.asm,INC	HL
1597,1597,1515,0b4c,0aaa,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",agon_sound.asm,"LD	C, (HL)"
1598,1598,1516,0b4d,0aab,06 32,06 32,"ld b,$32","ld b,$32","ld b,$00",agon_sound.asm,"LD	B, 50			; C contains the duration, so MLT by 50"
1599,1599,1517,0b4f,0aad,ed 4c,ed 4c,mlt bc,mlt bc,mlt bc,agon_sound.asm,MLT	BC
1600,1600,1518,0b51,0aaf,ed 43 05 53,ed 43 05 52,"ld ($5305),bc","ld ($5205),bc","ld ($0000),bc",agon_sound.asm,"LD	(VDU_BUFFER+5), BC"
1601,1601,1519,0b55,0ab3,dd e5,dd e5,push ix,push ix,push ix,agon_sound.asm,PUSH	IX			; Get the system vars in IX
1602,1602,1520,0b57,0ab5,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",agon_sound.asm,"LD	A, function"
1603,1603,1521,0b59,0ab7,49 cf,49 cf,rst.lis $08,rst.lis $08,rst.lis $00,agon_sound.asm,RST.LIS	08h
1604,1604,1522,0b5b,0ab9,5b dd cb 04 9e,5b dd cb 04 9e,"res.lil 3,(ix+$04)","res.lil 3,(ix+$04)","res.lil 3,(ix+$00)",agon_sound.asm,"SOUND0:			RES.LIL	3, (IX+sysvar_vpd_pflags)"
1605,1605,1523,0b60,0abe,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",agon_sound.asm,"LD      A, VAL"
1606,1606,1524,0b62,0ac0,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1607,1607,1525,0b65,0ac3,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",agon_sound.asm,"LD      A, VAL"
1608,1608,1526,0b67,0ac5,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1609,1609,1527,0b6a,0ac8,3e 85,3e 85,"ld a,$85","ld a,$85","ld a,$00",agon_sound.asm,"LD      A, VAL"
1610,1610,1528,0b6c,0aca,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1611,1611,1529,0b6f,0acd,3a 00 53,3a 00 52,"ld a,($5300)","ld a,($5200)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1612,1612,1530,0b72,0ad0,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1613,1613,1531,0b75,0ad3,3a 01 53,3a 01 52,"ld a,($5301)","ld a,($5201)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1614,1614,1532,0b78,0ad6,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1615,1615,1533,0b7b,0ad9,3a 02 53,3a 02 52,"ld a,($5302)","ld a,($5202)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1616,1616,1534,0b7e,0adc,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1617,1617,1535,0b81,0adf,3a 03 53,3a 03 52,"ld a,($5303)","ld a,($5203)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1618,1618,1536,0b84,0ae2,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1619,1619,1537,0b87,0ae5,3a 04 53,3a 04 52,"ld a,($5304)","ld a,($5204)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1620,1620,1538,0b8a,0ae8,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1621,1621,1539,0b8d,0aeb,3a 05 53,3a 05 52,"ld a,($5305)","ld a,($5205)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1622,1622,1540,0b90,0aee,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1623,1623,1541,0b93,0af1,3a 06 53,3a 06 52,"ld a,($5306)","ld a,($5206)","ld a,($0000)",agon_sound.asm,"LD      A, VAL"
1624,1624,1542,0b96,0af4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,agon_sound.asm,CALL    OSWRCH
1625,1625,1543,0b99,0af7,5b dd cb 04 5e,5b dd cb 04 5e,"bit.lil 3,(ix+$04)","bit.lil 3,(ix+$04)","bit.lil 3,(ix+$00)",agon_sound.asm,"@@:			BIT.LIL	3, (IX+sysvar_vpd_pflags)"
1626,1626,1544,0b9e,0afc,28 f9,28 f9,"jr z,$-$05","jr z,$-$05","jr z,$-$00",agon_sound.asm,"JR	Z, @B			; Wait for the result"
1627,1627,1545,0ba0,0afe,cd 38 06,cd 18 06,call $0638,call $0618,call $0000,agon_sound.asm,CALL	LTRAP			; Check for ESC
1628,1628,1546,0ba3,0b01,5b dd 7e 0e,5b dd 7e 0e,"ld.lil a,(ix+$0e)","ld.lil a,(ix+$0e)","ld.lil a,(ix+$00)",agon_sound.asm,"LD.LIL	A, (IX+sysvar_audioSuccess)"
1629,1629,1547,0ba7,0b05,a7,a7,and a,and a,and a,agon_sound.asm,AND	A			; Check if VDP has queued the note
1630,1630,1548,0ba8,0b06,28 b1,28 b1,"jr z,$-$4d","jr z,$-$4d","jr z,$-$00",agon_sound.asm,"JR	Z, SOUND0		; No, so loop back and send again"
1631,1631,1549,0baa,0b08,dd e1,dd e1,pop ix,pop ix,pop ix,agon_sound.asm,POP	IX
1632,1632,1550,0bac,0b0a,c9,c9,ret,ret,ret,agon_sound.asm,RET
1633,1633,1551,0bad,0b0b,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",agon_sound.asm,"SOUND_FREQ_LOOKUP:	DW	 117,  118,  120,  122,  123,  131,  133,  135"
1634,1634,1552,0bae,0b0c,00,00,nop,nop,nop,agon_sound.asm,
1635,1635,1553,0baf,0b0d,76,76,halt,halt,halt,agon_sound.asm,
1636,1636,1554,0bb0,0b0e,00,00,nop,nop,nop,agon_sound.asm,
1637,1637,1555,0bb1,0b0f,78,78,"ld a,b","ld a,b","ld a,b",agon_sound.asm,
1638,1638,1556,0bb2,0b10,00,00,nop,nop,nop,agon_sound.asm,
1639,1639,1557,0bb3,0b11,7a,7a,"ld a,d","ld a,d","ld a,d",agon_sound.asm,
1640,1640,1558,0bb4,0b12,00,00,nop,nop,nop,agon_sound.asm,
1641,1641,1559,0bb5,0b13,7b,7b,"ld a,e","ld a,e","ld a,e",agon_sound.asm,
1642,1642,1560,0bb6,0b14,00,00,nop,nop,nop,agon_sound.asm,
1643,1643,1561,0bb7,0b15,83,83,"add a,e","add a,e","add a,e",agon_sound.asm,
1644,1644,1562,0bb8,0b16,00,00,nop,nop,nop,agon_sound.asm,
1645,1645,1563,0bb9,0b17,85,85,"add a,l","add a,l","add a,l",agon_sound.asm,
1646,1646,1564,0bba,0b18,00,00,nop,nop,nop,agon_sound.asm,
1647,1647,1565,0bbb,0b19,87,87,"add a,a","add a,a","add a,a",agon_sound.asm,
1648,1648,1566,0bbc,0b1a,00,00,nop,nop,nop,agon_sound.asm,
1649,1649,1567,0bbd,0b1b,89,89,"adc a,c","adc a,c","adc a,c",agon_sound.asm,"DW	 137,  139,  141,  143,  145,  147,  149,  151"
1650,1650,1568,0bbe,0b1c,00,00,nop,nop,nop,agon_sound.asm,
1651,1651,1569,0bbf,0b1d,8b,8b,"adc a,e","adc a,e","adc a,e",agon_sound.asm,
1652,1652,1570,0bc0,0b1e,00,00,nop,nop,nop,agon_sound.asm,
1653,1653,1571,0bc1,0b1f,8d,8d,"adc a,l","adc a,l","adc a,l",agon_sound.asm,
1654,1654,1572,0bc2,0b20,00,00,nop,nop,nop,agon_sound.asm,
1655,1655,1573,0bc3,0b21,8f,8f,"adc a,a","adc a,a","adc a,a",agon_sound.asm,
1656,1656,1574,0bc4,0b22,00,00,nop,nop,nop,agon_sound.asm,
1657,1657,1575,0bc5,0b23,91,91,sub c,sub c,sub c,agon_sound.asm,
1658,1658,1576,0bc6,0b24,00,00,nop,nop,nop,agon_sound.asm,
1659,1659,1577,0bc7,0b25,93,93,sub e,sub e,sub e,agon_sound.asm,
1660,1660,1578,0bc8,0b26,00,00,nop,nop,nop,agon_sound.asm,
1661,1661,1579,0bc9,0b27,95,95,sub l,sub l,sub l,agon_sound.asm,
1662,1662,1580,0bca,0b28,00,00,nop,nop,nop,agon_sound.asm,
1663,1663,1581,0bcb,0b29,97,97,sub a,sub a,sub a,agon_sound.asm,
1664,1664,1582,0bcc,0b2a,00,00,nop,nop,nop,agon_sound.asm,
1665,1665,1583,0bcd,0b2b,99,99,"sbc a,c","sbc a,c","sbc a,c",agon_sound.asm,"DW	 153,  156,  158,  160,  162,  165,  167,  170"
1666,1666,1584,0bce,0b2c,00,00,nop,nop,nop,agon_sound.asm,
1667,1667,1585,0bcf,0b2d,9c,9c,"sbc a,h","sbc a,h","sbc a,h",agon_sound.asm,
1668,1668,1586,0bd0,0b2e,00,00,nop,nop,nop,agon_sound.asm,
1669,1669,1587,0bd1,0b2f,9e,9e,"sbc a,(hl)","sbc a,(hl)","sbc a,(hl)",agon_sound.asm,
1670,1670,1588,0bd2,0b30,00,00,nop,nop,nop,agon_sound.asm,
1671,1671,1589,0bd3,0b31,a0,a0,and b,and b,and b,agon_sound.asm,
1672,1672,1590,0bd4,0b32,00,00,nop,nop,nop,agon_sound.asm,
1673,1673,1591,0bd5,0b33,a2,a2,and d,and d,and d,agon_sound.asm,
1674,1674,1592,0bd6,0b34,00,00,nop,nop,nop,agon_sound.asm,
1675,1675,1593,0bd7,0b35,a5,a5,and l,and l,and l,agon_sound.asm,
1676,1676,1594,0bd8,0b36,00,00,nop,nop,nop,agon_sound.asm,
1677,1677,1595,0bd9,0b37,a7,a7,and a,and a,and a,agon_sound.asm,
1678,1678,1596,0bda,0b38,00,00,nop,nop,nop,agon_sound.asm,
1679,1679,1597,0bdb,0b39,aa,aa,xor d,xor d,xor d,agon_sound.asm,
1680,1680,1598,0bdc,0b3a,00,00,nop,nop,nop,agon_sound.asm,
1681,1681,1599,0bdd,0b3b,ac,ac,xor h,xor h,xor h,agon_sound.asm,"DW	 172,  175,  177,  180,  182,  185,  188,  190"
1682,1682,1600,0bde,0b3c,00,00,nop,nop,nop,agon_sound.asm,
1683,1683,1601,0bdf,0b3d,af,af,xor a,xor a,xor a,agon_sound.asm,
1684,1684,1602,0be0,0b3e,00,00,nop,nop,nop,agon_sound.asm,
1685,1685,1603,0be1,0b3f,b1,b1,or c,or c,or c,agon_sound.asm,
1686,1686,1604,0be2,0b40,00,00,nop,nop,nop,agon_sound.asm,
1687,1687,1605,0be3,0b41,b4,b4,or h,or h,or h,agon_sound.asm,
1688,1688,1606,0be4,0b42,00,00,nop,nop,nop,agon_sound.asm,
1689,1689,1607,0be5,0b43,b6,b6,or (hl),or (hl),or (hl),agon_sound.asm,
1690,1690,1608,0be6,0b44,00,00,nop,nop,nop,agon_sound.asm,
1691,1691,1609,0be7,0b45,b9,b9,cp c,cp c,cp c,agon_sound.asm,
1692,1692,1610,0be8,0b46,00,00,nop,nop,nop,agon_sound.asm,
1693,1693,1611,0be9,0b47,bc,bc,cp h,cp h,cp h,agon_sound.asm,
1694,1694,1612,0bea,0b48,00,00,nop,nop,nop,agon_sound.asm,
1695,1695,1613,0beb,0b49,be,be,cp (hl),cp (hl),cp (hl),agon_sound.asm,
1696,1696,1614,0bec,0b4a,00,00,nop,nop,nop,agon_sound.asm,
1697,1697,1615,0bed,0b4b,c1,c1,pop bc,pop bc,pop bc,agon_sound.asm,"DW	 193,  196,  199,  202,  205,  208,  211,  214"
1698,1698,1616,0bee,0b4c,00,00,nop,nop,nop,agon_sound.asm,
1699,1699,1617,0bef,0b4d,c4 00 c7,c4 00 c7,"call nz,$c700","call nz,$c700","call nz,$0000",agon_sound.asm,
1700,1700,1618,0bf2,0b50,00,00,nop,nop,nop,agon_sound.asm,
1701,1701,1619,0bf3,0b51,ca 00 cd,ca 00 cd,"jp z,$cd00","jp z,$cd00","jp z,$0000",agon_sound.asm,
1702,1702,1620,0bf6,0b54,00,00,nop,nop,nop,agon_sound.asm,
1703,1703,1621,0bf7,0b55,d0,d0,ret nc,ret nc,ret nc,agon_sound.asm,
1704,1704,1622,0bf8,0b56,00,00,nop,nop,nop,agon_sound.asm,
1705,1705,1623,0bf9,0b57,d3 00,d3 00,"out ($00),a","out ($00),a","out ($00),a",agon_sound.asm,
1706,1706,1624,0bfb,0b59,d6 00,d6 00,sub $00,sub $00,sub $00,agon_sound.asm,
1707,1707,1625,0bfd,0b5b,d9,d9,exx,exx,exx,agon_sound.asm,"DW	 217,  220,  223,  226,  230,  233,  236,  240"
1708,1708,1626,0bfe,0b5c,00,00,nop,nop,nop,agon_sound.asm,
1709,1709,1627,0bff,0b5d,dc 00 df,dc 00 df,"call c,$df00","call c,$df00","call c,$0000",agon_sound.asm,
1710,1710,1628,0c02,0b60,00,00,nop,nop,nop,agon_sound.asm,
1711,1711,1629,0c03,0b61,e2 00 e6,e2 00 e6,"jp po,$e600","jp po,$e600","jp po,$0000",agon_sound.asm,
1712,1712,1630,0c06,0b64,00,00,nop,nop,nop,agon_sound.asm,
1713,1713,1631,0c07,0b65,e9,e9,jp (hl),jp (hl),jp (hl),agon_sound.asm,
1714,1714,1632,0c08,0b66,00,00,nop,nop,nop,agon_sound.asm,
1715,1715,1633,0c09,0b67,ec 00 f0,ec 00 f0,"call pe,$f000","call pe,$f000","call pe,$0000",agon_sound.asm,
1716,1716,1634,0c0c,0b6a,00,00,nop,nop,nop,agon_sound.asm,
1717,1717,1635,0c0d,0b6b,f3,f3,di,di,di,agon_sound.asm,"DW	 243,  247,  251,  254,  258,  262,  265,  269"
1718,1718,1636,0c0e,0b6c,00,00,nop,nop,nop,agon_sound.asm,
1719,1719,1637,0c0f,0b6d,f7,f7,rst $30,rst $30,rst $00,agon_sound.asm,
1720,1720,1638,0c10,0b6e,00,00,nop,nop,nop,agon_sound.asm,
1721,1721,1639,0c11,0b6f,fb,fb,ei,ei,ei,agon_sound.asm,
1722,1722,1640,0c12,0b70,00,00,nop,nop,nop,agon_sound.asm,
1723,1723,1641,0c13,0b71,fe 00,fe 00,cp $00,cp $00,cp $00,agon_sound.asm,
1724,1724,1642,0c15,0b73,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1725,1725,1643,0c16,0b74,01 06 01,01 06 01,"ld bc,$0106","ld bc,$0106","ld bc,$0000",agon_sound.asm,
1726,1726,1644,0c19,0b77,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1727,1727,1645,0c1a,0b78,01 0d 01,01 0d 01,"ld bc,$010d","ld bc,$010d","ld bc,$0000",agon_sound.asm,
1728,1728,1646,0c1d,0b7b,11 01 15,11 01 15,"ld de,$1501","ld de,$1501","ld de,$0000",agon_sound.asm,"DW	 273,  277,  281,  285,  289,  294,  298,  302"
1729,1729,1647,0c20,0b7e,01 19 01,01 19 01,"ld bc,$0119","ld bc,$0119","ld bc,$0000",agon_sound.asm,
1730,1730,1648,0c23,0b81,1d,1d,dec e,dec e,dec e,agon_sound.asm,
1731,1731,1649,0c24,0b82,01 21 01,01 21 01,"ld bc,$0121","ld bc,$0121","ld bc,$0000",agon_sound.asm,
1732,1732,1650,0c27,0b85,26 01,26 01,"ld h,$01","ld h,$01","ld h,$00",agon_sound.asm,
1733,1733,1651,0c29,0b87,2a 01 2e,2a 01 2e,"ld hl,($2e01)","ld hl,($2e01)","ld hl,($0000)",agon_sound.asm,
1734,1734,1652,0c2c,0b8a,01 33 01,01 33 01,"ld bc,$0133","ld bc,$0133","ld bc,$0000",agon_sound.asm,
1735,1735,1653,0c2f,0b8d,37,37,scf,scf,scf,agon_sound.asm,
1736,1736,1654,0c30,0b8e,01 3c 01,01 3c 01,"ld bc,$013c","ld bc,$013c","ld bc,$0000",agon_sound.asm,
1737,1737,1655,0c33,0b91,40 01 45 01,40 01 45 01,"ld.sis bc,$0145","ld.sis bc,$0145","ld.sis bc,$0000",agon_sound.asm,
1738,1738,1656,0c37,0b95,4a,4a,"ld c,d","ld c,d","ld c,d",agon_sound.asm,
1739,1739,1657,0c38,0b96,01 4e 01,01 4e 01,"ld bc,$014e","ld bc,$014e","ld bc,$0000",agon_sound.asm,
1740,1740,1658,0c3b,0b99,53,53,"ld d,e","ld d,e","ld d,e",agon_sound.asm,
1741,1741,1659,0c3c,0b9a,01 58 01,01 58 01,"ld bc,$0158","ld bc,$0158","ld bc,$0000",agon_sound.asm,
1742,1742,1660,0c3f,0b9d,5d,5d,"ld e,l","ld e,l","ld e,l",agon_sound.asm,
1743,1743,1661,0c40,0b9e,01 62 01,01 62 01,"ld bc,$0162","ld bc,$0162","ld bc,$0000",agon_sound.asm,
1744,1744,1662,0c43,0ba1,67,67,"ld h,a","ld h,a","ld h,a",agon_sound.asm,
1745,1745,1663,0c44,0ba2,01 6d 01,01 6d 01,"ld bc,$016d","ld bc,$016d","ld bc,$0000",agon_sound.asm,
1746,1746,1664,0c47,0ba5,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",agon_sound.asm,
1747,1747,1665,0c48,0ba6,01 77 01,01 77 01,"ld bc,$0177","ld bc,$0177","ld bc,$0000",agon_sound.asm,
1748,1748,1666,0c4b,0ba9,7d,7d,"ld a,l","ld a,l","ld a,l",agon_sound.asm,
1749,1749,1667,0c4c,0baa,01 82 01,01 82 01,"ld bc,$0182","ld bc,$0182","ld bc,$0000",agon_sound.asm,
1750,1750,1668,0c4f,0bad,88,88,"adc a,b","adc a,b","adc a,b",agon_sound.asm,
1751,1751,1669,0c50,0bae,01 8e 01,01 8e 01,"ld bc,$018e","ld bc,$018e","ld bc,$0000",agon_sound.asm,
1752,1752,1670,0c53,0bb1,93,93,sub e,sub e,sub e,agon_sound.asm,
1753,1753,1671,0c54,0bb2,01 99 01,01 99 01,"ld bc,$0199","ld bc,$0199","ld bc,$0000",agon_sound.asm,
1754,1754,1672,0c57,0bb5,9f,9f,"sbc a,a","sbc a,a","sbc a,a",agon_sound.asm,
1755,1755,1673,0c58,0bb6,01 a5 01,01 a5 01,"ld bc,$01a5","ld bc,$01a5","ld bc,$0000",agon_sound.asm,
1756,1756,1674,0c5b,0bb9,ab,ab,xor e,xor e,xor e,agon_sound.asm,
1757,1757,1675,0c5c,0bba,01 b2 01,01 b2 01,"ld bc,$01b2","ld bc,$01b2","ld bc,$0000",agon_sound.asm,
1758,1758,1676,0c5f,0bbd,b8,b8,cp b,cp b,cp b,agon_sound.asm,
1759,1759,1677,0c60,0bbe,01 be 01,01 be 01,"ld bc,$01be","ld bc,$01be","ld bc,$0000",agon_sound.asm,
1760,1760,1678,0c63,0bc1,c5,c5,push bc,push bc,push bc,agon_sound.asm,
1761,1761,1679,0c64,0bc2,01 cb 01,01 cb 01,"ld bc,$01cb","ld bc,$01cb","ld bc,$0000",agon_sound.asm,
1762,1762,1680,0c67,0bc5,d2 01 d9,d2 01 d9,"jp nc,$d901","jp nc,$d901","jp nc,$0000",agon_sound.asm,
1763,1763,1681,0c6a,0bc8,01 e0 01,01 e0 01,"ld bc,$01e0","ld bc,$01e0","ld bc,$0000",agon_sound.asm,
1764,1764,1682,0c6d,0bcb,e7,e7,rst $20,rst $20,rst $00,agon_sound.asm,"DW	 487,  494,  501,  508,  516,  523,  531,  539"
1765,1765,1683,0c6e,0bcc,01 ee 01,01 ee 01,"ld bc,$01ee","ld bc,$01ee","ld bc,$0000",agon_sound.asm,
1766,1766,1684,0c71,0bcf,f5,f5,push af,push af,push af,agon_sound.asm,
1767,1767,1685,0c72,0bd0,01 fc 01,01 fc 01,"ld bc,$01fc","ld bc,$01fc","ld bc,$0000",agon_sound.asm,
1768,1768,1686,0c75,0bd3,04,04,inc b,inc b,inc b,agon_sound.asm,
1769,1769,1687,0c76,0bd4,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1770,1770,1688,0c77,0bd5,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1771,1771,1689,0c78,0bd6,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1772,1772,1690,0c79,0bd7,13,13,inc de,inc de,inc de,agon_sound.asm,
1773,1773,1691,0c7a,0bd8,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1774,1774,1692,0c7b,0bd9,1b,1b,dec de,dec de,dec de,agon_sound.asm,
1775,1775,1693,0c7c,0bda,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1776,1776,1694,0c7d,0bdb,22 02 2a,22 02 2a,"ld ($2a02),hl","ld ($2a02),hl","ld ($0000),hl",agon_sound.asm,"DW	 546,  554,  562,  571,  579,  587,  596,  605"
1777,1777,1695,0c80,0bde,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1778,1778,1696,0c81,0bdf,32 02 3b,32 02 3b,"ld ($3b02),a","ld ($3b02),a","ld ($0000),a",agon_sound.asm,
1779,1779,1697,0c84,0be2,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1780,1780,1698,0c85,0be3,43,43,"ld b,e","ld b,e","ld b,e",agon_sound.asm,
1781,1781,1699,0c86,0be4,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1782,1782,1700,0c87,0be5,4b,4b,"ld c,e","ld c,e","ld c,e",agon_sound.asm,
1783,1783,1701,0c88,0be6,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1784,1784,1702,0c89,0be7,54,54,"ld d,h","ld d,h","ld d,h",agon_sound.asm,
1785,1785,1703,0c8a,0be8,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1786,1786,1704,0c8b,0be9,5d,5d,"ld e,l","ld e,l","ld e,l",agon_sound.asm,
1787,1787,1705,0c8c,0bea,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1788,1788,1706,0c8d,0beb,65,65,"ld h,l","ld h,l","ld h,l",agon_sound.asm,"DW	 613,  622,  631,  641,  650,  659,  669,  679"
1789,1789,1707,0c8e,0bec,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1790,1790,1708,0c8f,0bed,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",agon_sound.asm,
1791,1791,1709,0c90,0bee,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1792,1792,1710,0c91,0bef,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",agon_sound.asm,
1793,1793,1711,0c92,0bf0,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1794,1794,1712,0c93,0bf1,81,81,"add a,c","add a,c","add a,c",agon_sound.asm,
1795,1795,1713,0c94,0bf2,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1796,1796,1714,0c95,0bf3,8a,8a,"adc a,d","adc a,d","adc a,d",agon_sound.asm,
1797,1797,1715,0c96,0bf4,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1798,1798,1716,0c97,0bf5,93,93,sub e,sub e,sub e,agon_sound.asm,
1799,1799,1717,0c98,0bf6,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1800,1800,1718,0c99,0bf7,9d,9d,"sbc a,l","sbc a,l","sbc a,l",agon_sound.asm,
1801,1801,1719,0c9a,0bf8,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1802,1802,1720,0c9b,0bf9,a7,a7,and a,and a,and a,agon_sound.asm,
1803,1803,1721,0c9c,0bfa,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1804,1804,1722,0c9d,0bfb,b1,b1,or c,or c,or c,agon_sound.asm,"DW	 689,  699,  709,  719,  729,  740,  751,  762"
1805,1805,1723,0c9e,0bfc,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1806,1806,1724,0c9f,0bfd,bb,bb,cp e,cp e,cp e,agon_sound.asm,
1807,1807,1725,0ca0,0bfe,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1808,1808,1726,0ca1,0bff,c5,c5,push bc,push bc,push bc,agon_sound.asm,
1809,1809,1727,0ca2,0c00,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1810,1810,1728,0ca3,0c01,cf,cf,rst $08,rst $08,rst $00,agon_sound.asm,
1811,1811,1729,0ca4,0c02,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1812,1812,1730,0ca5,0c03,d9,d9,exx,exx,exx,agon_sound.asm,
1813,1813,1731,0ca6,0c04,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1814,1814,1732,0ca7,0c05,e4 02 ef,e4 02 ef,"call po,$ef02","call po,$ef02","call po,$0000",agon_sound.asm,
1815,1815,1733,0caa,0c08,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1816,1816,1734,0cab,0c09,fa 02 05,fa 02 05,"jp m,$0502","jp m,$0502","jp m,$0000",agon_sound.asm,
1817,1817,1735,0cae,0c0c,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1818,1818,1736,0caf,0c0d,10 03,10 03,djnz $+$05,djnz $+$05,djnz $+$00,agon_sound.asm,
1819,1819,1737,0cb1,0c0f,1b,1b,dec de,dec de,dec de,agon_sound.asm,
1820,1820,1738,0cb2,0c10,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1821,1821,1739,0cb3,0c11,27,27,daa,daa,daa,agon_sound.asm,
1822,1822,1740,0cb4,0c12,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1823,1823,1741,0cb5,0c13,33,33,inc sp,inc sp,inc sp,agon_sound.asm,
1824,1824,1742,0cb6,0c14,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1825,1825,1743,0cb7,0c15,3f,3f,ccf,ccf,ccf,agon_sound.asm,
1826,1826,1744,0cb8,0c16,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1827,1827,1745,0cb9,0c17,4b,4b,"ld c,e","ld c,e","ld c,e",agon_sound.asm,
1828,1828,1746,0cba,0c18,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1829,1829,1747,0cbb,0c19,57,57,"ld d,a","ld d,a","ld d,a",agon_sound.asm,
1830,1830,1748,0cbc,0c1a,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1831,1831,1749,0cbd,0c1b,63,63,"ld h,e","ld h,e","ld h,e",agon_sound.asm,"DW	 867,  880,  893,  906,  919,  932,  946,  960"
1832,1832,1750,0cbe,0c1c,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1833,1833,1751,0cbf,0c1d,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",agon_sound.asm,
1834,1834,1752,0cc0,0c1e,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1835,1835,1753,0cc1,0c1f,7d,7d,"ld a,l","ld a,l","ld a,l",agon_sound.asm,
1836,1836,1754,0cc2,0c20,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1837,1837,1755,0cc3,0c21,8a,8a,"adc a,d","adc a,d","adc a,d",agon_sound.asm,
1838,1838,1756,0cc4,0c22,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1839,1839,1757,0cc5,0c23,97,97,sub a,sub a,sub a,agon_sound.asm,
1840,1840,1758,0cc6,0c24,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1841,1841,1759,0cc7,0c25,a4,a4,and h,and h,and h,agon_sound.asm,
1842,1842,1760,0cc8,0c26,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1843,1843,1761,0cc9,0c27,b2,b2,or d,or d,or d,agon_sound.asm,
1844,1844,1762,0cca,0c28,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1845,1845,1763,0ccb,0c29,c0,c0,ret nz,ret nz,ret nz,agon_sound.asm,
1846,1846,1764,0ccc,0c2a,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1847,1847,1765,0ccd,0c2b,ce 03,ce 03,"adc a,$03","adc a,$03","adc a,$00",agon_sound.asm,"DW	 974,  988, 1002, 1017, 1032, 1047, 1062, 1078"
1848,1848,1766,0ccf,0c2d,dc 03 ea,dc 03 ea,"call c,$ea03","call c,$ea03","call c,$0000",agon_sound.asm,
1849,1849,1767,0cd2,0c30,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1850,1850,1768,0cd3,0c31,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",agon_sound.asm,
1851,1851,1769,0cd4,0c32,03,03,inc bc,inc bc,inc bc,agon_sound.asm,
1852,1852,1770,0cd5,0c33,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1853,1853,1771,0cd6,0c34,04,04,inc b,inc b,inc b,agon_sound.asm,
1854,1854,1772,0cd7,0c35,17,17,rla,rla,rla,agon_sound.asm,
1855,1855,1773,0cd8,0c36,04,04,inc b,inc b,inc b,agon_sound.asm,
1856,1856,1774,0cd9,0c37,26 04,26 04,"ld h,$04","ld h,$04","ld h,$00",agon_sound.asm,
1857,1857,1775,0cdb,0c39,36 04,36 04,"ld (hl),$04","ld (hl),$04","ld (hl),$00",agon_sound.asm,
1858,1858,1776,0cdd,0c3b,45,45,"ld b,l","ld b,l","ld b,l",agon_sound.asm,"DW	1093, 1109, 1125, 1142, 1158, 1175, 1192, 1210"
1859,1859,1777,0cde,0c3c,04,04,inc b,inc b,inc b,agon_sound.asm,
1860,1860,1778,0cdf,0c3d,55,55,"ld d,l","ld d,l","ld d,l",agon_sound.asm,
1861,1861,1779,0ce0,0c3e,04,04,inc b,inc b,inc b,agon_sound.asm,
1862,1862,1780,0ce1,0c3f,65,65,"ld h,l","ld h,l","ld h,l",agon_sound.asm,
1863,1863,1781,0ce2,0c40,04,04,inc b,inc b,inc b,agon_sound.asm,
1864,1864,1782,0ce3,0c41,76,76,halt,halt,halt,agon_sound.asm,
1865,1865,1783,0ce4,0c42,04,04,inc b,inc b,inc b,agon_sound.asm,
1866,1866,1784,0ce5,0c43,86,86,"add a,(hl)","add a,(hl)","add a,(hl)",agon_sound.asm,
1867,1867,1785,0ce6,0c44,04,04,inc b,inc b,inc b,agon_sound.asm,
1868,1868,1786,0ce7,0c45,97,97,sub a,sub a,sub a,agon_sound.asm,
1869,1869,1787,0ce8,0c46,04,04,inc b,inc b,inc b,agon_sound.asm,
1870,1870,1788,0ce9,0c47,a8,a8,xor b,xor b,xor b,agon_sound.asm,
1871,1871,1789,0cea,0c48,04,04,inc b,inc b,inc b,agon_sound.asm,
1872,1872,1790,0ceb,0c49,ba,ba,cp d,cp d,cp d,agon_sound.asm,
1873,1873,1791,0cec,0c4a,04,04,inc b,inc b,inc b,agon_sound.asm,
1874,1874,1792,0ced,0c4b,cb 04,cb 04,rlc h,rlc h,rlc h,agon_sound.asm,"DW	1227, 1245, 1263, 1282, 1300, 1319, 1338, 1358"
1875,1875,1793,0cef,0c4d,dd 04,dd 04,trap,trap,trap,agon_sound.asm,
1876,1876,1794,0cf1,0c4f,ef,ef,rst $28,rst $28,rst $00,agon_sound.asm,
1877,1877,1795,0cf2,0c50,04,04,inc b,inc b,inc b,agon_sound.asm,
1878,1878,1796,0cf3,0c51,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1879,1879,1797,0cf4,0c52,05,05,dec b,dec b,dec b,agon_sound.asm,
1880,1880,1798,0cf5,0c53,14,14,inc d,inc d,inc d,agon_sound.asm,
1881,1881,1799,0cf6,0c54,05,05,dec b,dec b,dec b,agon_sound.asm,
1882,1882,1800,0cf7,0c55,27,27,daa,daa,daa,agon_sound.asm,
1883,1883,1801,0cf8,0c56,05,05,dec b,dec b,dec b,agon_sound.asm,
1884,1884,1802,0cf9,0c57,3a 05 4e,3a 05 4e,"ld a,($4e05)","ld a,($4e05)","ld a,($0000)",agon_sound.asm,
1885,1885,1803,0cfc,0c5a,05,05,dec b,dec b,dec b,agon_sound.asm,
1886,1886,1804,0cfd,0c5b,62,62,"ld h,d","ld h,d","ld h,d",agon_sound.asm,"DW	1378, 1398, 1418, 1439, 1459, 1481, 1502, 1524"
1887,1887,1805,0cfe,0c5c,05,05,dec b,dec b,dec b,agon_sound.asm,
1888,1888,1806,0cff,0c5d,76,76,halt,halt,halt,agon_sound.asm,
1889,1889,1807,0d00,0c5e,05,05,dec b,dec b,dec b,agon_sound.asm,
1890,1890,1808,0d01,0c5f,8a,8a,"adc a,d","adc a,d","adc a,d",agon_sound.asm,
1891,1891,1809,0d02,0c60,05,05,dec b,dec b,dec b,agon_sound.asm,
1892,1892,1810,0d03,0c61,9f,9f,"sbc a,a","sbc a,a","sbc a,a",agon_sound.asm,
1893,1893,1811,0d04,0c62,05,05,dec b,dec b,dec b,agon_sound.asm,
1894,1894,1812,0d05,0c63,b3,b3,or e,or e,or e,agon_sound.asm,
1895,1895,1813,0d06,0c64,05,05,dec b,dec b,dec b,agon_sound.asm,
1896,1896,1814,0d07,0c65,c9,c9,ret,ret,ret,agon_sound.asm,
1897,1897,1815,0d08,0c66,05,05,dec b,dec b,dec b,agon_sound.asm,
1898,1898,1816,0d09,0c67,de 05,de 05,"sbc a,$05","sbc a,$05","sbc a,$00",agon_sound.asm,
1899,1899,1817,0d0b,0c69,f4 05 0a,f4 05 0a,"call p,$0a05","call p,$0a05","call p,$0000",agon_sound.asm,
1900,1900,1818,0d0e,0c6c,06 21,06 21,"ld b,$21","ld b,$21","ld b,$00",agon_sound.asm,
1901,1901,1819,0d10,0c6e,06 38,06 38,"ld b,$38","ld b,$38","ld b,$00",agon_sound.asm,
1902,1902,1820,0d12,0c70,06 4f,06 4f,"ld b,$4f","ld b,$4f","ld b,$00",agon_sound.asm,
1903,1903,1821,0d14,0c72,06 66,06 66,"ld b,$66","ld b,$66","ld b,$00",agon_sound.asm,
1904,1904,1822,0d16,0c74,06 7e,06 7e,"ld b,$7e","ld b,$7e","ld b,$00",agon_sound.asm,
1905,1905,1823,0d18,0c76,06 96,06 96,"ld b,$96","ld b,$96","ld b,$00",agon_sound.asm,
1906,1906,1824,0d1a,0c78,06 af,06 af,"ld b,$af","ld b,$af","ld b,$00",agon_sound.asm,
1907,1907,1825,0d1c,0c7a,06 c8,06 c8,"ld b,$c8","ld b,$c8","ld b,$00",agon_sound.asm,
1908,1908,1826,0d1e,0c7c,06 e1,06 e1,"ld b,$e1","ld b,$e1","ld b,$00",agon_sound.asm,
1909,1909,1827,0d20,0c7e,06 fa,06 fa,"ld b,$fa","ld b,$fa","ld b,$00",agon_sound.asm,
1910,1910,1828,0d22,0c80,06 14,06 14,"ld b,$14","ld b,$14","ld b,$00",agon_sound.asm,
1911,1911,1829,0d24,0c82,07,07,rlca,rlca,rlca,agon_sound.asm,
1912,1912,1830,0d25,0c83,2f,2f,cpl,cpl,cpl,agon_sound.asm,
1913,1913,1831,0d26,0c84,07,07,rlca,rlca,rlca,agon_sound.asm,
1914,1914,1832,0d27,0c85,4a,4a,"ld c,d","ld c,d","ld c,d",agon_sound.asm,
1915,1915,1833,0d28,0c86,07,07,rlca,rlca,rlca,agon_sound.asm,
1916,1916,1834,0d29,0c87,65,65,"ld h,l","ld h,l","ld h,l",agon_sound.asm,
1917,1917,1835,0d2a,0c88,07,07,rlca,rlca,rlca,agon_sound.asm,
1918,1918,1836,0d2b,0c89,80,80,"add a,b","add a,b","add a,b",agon_sound.asm,
1919,1919,1837,0d2c,0c8a,07,07,rlca,rlca,rlca,agon_sound.asm,
1920,1920,1838,0d2d,0c8b,9c,9c,"sbc a,h","sbc a,h","sbc a,h",agon_sound.asm,"DW	1948, 1976, 2005, 2034, 2064, 2093, 2123, 2154"
1921,1921,1839,0d2e,0c8c,07,07,rlca,rlca,rlca,agon_sound.asm,
1922,1922,1840,0d2f,0c8d,b8,b8,cp b,cp b,cp b,agon_sound.asm,
1923,1923,1841,0d30,0c8e,07,07,rlca,rlca,rlca,agon_sound.asm,
1924,1924,1842,0d31,0c8f,d5,d5,push de,push de,push de,agon_sound.asm,
1925,1925,1843,0d32,0c90,07,07,rlca,rlca,rlca,agon_sound.asm,
1926,1926,1844,0d33,0c91,f2 07 10,f2 07 10,"jp p,$1007","jp p,$1007","jp p,$0000",agon_sound.asm,
1927,1927,1845,0d36,0c94,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1928,1928,1846,0d37,0c95,2d,2d,dec l,dec l,dec l,agon_sound.asm,
1929,1929,1847,0d38,0c96,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1930,1930,1848,0d39,0c97,4b,4b,"ld c,e","ld c,e","ld c,e",agon_sound.asm,
1931,1931,1849,0d3a,0c98,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1932,1932,1850,0d3b,0c99,6a,6a,"ld l,d","ld l,d","ld l,d",agon_sound.asm,
1933,1933,1851,0d3c,0c9a,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1934,1934,1852,0d3d,0c9b,8a,8a,"adc a,d","adc a,d","adc a,d",agon_sound.asm,"DW	2186, 2217, 2250, 2282, 2316, 2349, 2383, 2418"
1935,1935,1853,0d3e,0c9c,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1936,1936,1854,0d3f,0c9d,a9,a9,xor c,xor c,xor c,agon_sound.asm,
1937,1937,1855,0d40,0c9e,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1938,1938,1856,0d41,0c9f,ca 08 ea,ca 08 ea,"jp z,$ea08","jp z,$ea08","jp z,$0000",agon_sound.asm,
1939,1939,1857,0d44,0ca2,08,08,"ex af,af'","ex af,af'","ex af,af'",agon_sound.asm,
1940,1940,1858,0d45,0ca3,0c,0c,inc c,inc c,inc c,agon_sound.asm,
1941,1941,1859,0d46,0ca4,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1942,1942,1860,0d47,0ca5,2d,2d,dec l,dec l,dec l,agon_sound.asm,
1943,1943,1861,0d48,0ca6,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1944,1944,1862,0d49,0ca7,4f,4f,"ld c,a","ld c,a","ld c,a",agon_sound.asm,
1945,1945,1863,0d4a,0ca8,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1946,1946,1864,0d4b,0ca9,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",agon_sound.asm,
1947,1947,1865,0d4c,0caa,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1948,1948,1866,0d4d,0cab,95,95,sub l,sub l,sub l,agon_sound.asm,"DW	2453, 2489, 2525, 2562, 2599, 2637, 2675, 2714"
1949,1949,1867,0d4e,0cac,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1950,1950,1868,0d4f,0cad,b9,b9,cp c,cp c,cp c,agon_sound.asm,
1951,1951,1869,0d50,0cae,09,09,"add hl,bc","add hl,bc","add hl,bc",agon_sound.asm,
1952,1952,1870,0d51,0caf,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",agon_sound.asm,
1953,1953,1871,0d53,0cb1,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",agon_sound.asm,
1954,1954,1872,0d54,0cb2,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1955,1955,1873,0d55,0cb3,27,27,daa,daa,daa,agon_sound.asm,
1956,1956,1874,0d56,0cb4,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1957,1957,1875,0d57,0cb5,4d,4d,"ld c,l","ld c,l","ld c,l",agon_sound.asm,
1958,1958,1876,0d58,0cb6,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1959,1959,1877,0d59,0cb7,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",agon_sound.asm,
1960,1960,1878,0d5a,0cb8,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1961,1961,1879,0d5b,0cb9,9a,9a,"sbc a,d","sbc a,d","sbc a,d",agon_sound.asm,
1962,1962,1880,0d5c,0cba,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1963,1963,1881,0d5d,0cbb,c2 0a ea,c2 0a ea,"jp nz,$ea0a","jp nz,$ea0a","jp nz,$0000",agon_sound.asm,"DW	2754, 2794, 2834, 2876, 2918, 2960, 3003, 3047"
1964,1964,1882,0d60,0cbe,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",agon_sound.asm,
1965,1965,1883,0d61,0cbf,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_sound.asm,
1966,1966,1884,0d62,0cc0,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1967,1967,1885,0d63,0cc1,3c,3c,inc a,inc a,inc a,agon_sound.asm,
1968,1968,1886,0d64,0cc2,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1969,1969,1887,0d65,0cc3,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",agon_sound.asm,
1970,1970,1888,0d66,0cc4,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1971,1971,1889,0d67,0cc5,90,90,sub b,sub b,sub b,agon_sound.asm,
1972,1972,1890,0d68,0cc6,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1973,1973,1891,0d69,0cc7,bb,bb,cp e,cp e,cp e,agon_sound.asm,
1974,1974,1892,0d6a,0cc8,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1975,1975,1893,0d6b,0cc9,e7,e7,rst $20,rst $20,rst $00,agon_sound.asm,
1976,1976,1894,0d6c,0cca,0b,0b,dec bc,dec bc,dec bc,agon_sound.asm,
1977,1977,1895,0d6d,0ccb,13,13,inc de,inc de,inc de,agon_sound.asm,"DW	3091, 3136, 3182, 3228, 3275, 3322, 3371, 3420"
1978,1978,1896,0d6e,0ccc,0c,0c,inc c,inc c,inc c,agon_sound.asm,
1979,1979,1897,0d6f,0ccd,40 0c,40 0c,inc.sis c,inc.sis c,inc.sis c,agon_sound.asm,
1980,1980,1898,0d71,0ccf,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",agon_sound.asm,
1981,1981,1899,0d72,0cd0,0c,0c,inc c,inc c,inc c,agon_sound.asm,
1982,1982,1900,0d73,0cd1,9c,9c,"sbc a,h","sbc a,h","sbc a,h",agon_sound.asm,
1983,1983,1901,0d74,0cd2,0c,0c,inc c,inc c,inc c,agon_sound.asm,
1984,1984,1902,0d75,0cd3,cb 0c,cb 0c,rrc h,rrc h,rrc h,agon_sound.asm,
1985,1985,1903,0d77,0cd5,fa 0c 2b,fa 0c 2b,"jp m,$2b0c","jp m,$2b0c","jp m,$0000",agon_sound.asm,
1986,1986,1904,0d7a,0cd8,0d,0d,dec c,dec c,dec c,agon_sound.asm,
1987,1987,1905,0d7b,0cd9,5c,5c,"ld e,h","ld e,h","ld e,h",agon_sound.asm,
1988,1988,1906,0d7c,0cda,0d,0d,dec c,dec c,dec c,agon_sound.asm,
1989,1989,1907,0d7d,0cdb,8e,8e,"adc a,(hl)","adc a,(hl)","adc a,(hl)",agon_sound.asm,"DW	3470, 3520, 3571, 3623, 3676, 3729, 3784, 3839"
1990,1990,1908,0d7e,0cdc,0d,0d,dec c,dec c,dec c,agon_sound.asm,
1991,1991,1909,0d7f,0cdd,c0,c0,ret nz,ret nz,ret nz,agon_sound.asm,
1992,1992,1910,0d80,0cde,0d,0d,dec c,dec c,dec c,agon_sound.asm,
1993,1993,1911,0d81,0cdf,f3,f3,di,di,di,agon_sound.asm,
1994,1994,1912,0d82,0ce0,0d,0d,dec c,dec c,dec c,agon_sound.asm,
1995,1995,1913,0d83,0ce1,27,27,daa,daa,daa,agon_sound.asm,
1996,1996,1914,0d84,0ce2,0e 5c,0e 5c,"ld c,$5c","ld c,$5c","ld c,$00",agon_sound.asm,
1997,1997,1915,0d86,0ce4,0e 91,0e 91,"ld c,$91","ld c,$91","ld c,$00",agon_sound.asm,
1998,1998,1916,0d88,0ce6,0e c8,0e c8,"ld c,$c8","ld c,$c8","ld c,$00",agon_sound.asm,
1999,1999,1917,0d8a,0ce8,0e ff,0e ff,"ld c,$ff","ld c,$ff","ld c,$00",agon_sound.asm,
2000,2000,1918,0d8c,0cea,0e 36,0e 36,"ld c,$36","ld c,$36","ld c,$00",agon_sound.asm,
2001,2001,1919,0d8e,0cec,0f,0f,rrca,rrca,rrca,agon_sound.asm,
2002,2002,1920,0d8f,0ced,6f,6f,"ld l,a","ld l,a","ld l,a",agon_sound.asm,
2003,2003,1921,0d90,0cee,0f,0f,rrca,rrca,rrca,agon_sound.asm,
2004,2004,1922,0d91,0cef,a9,a9,xor c,xor c,xor c,agon_sound.asm,
2005,2005,1923,0d92,0cf0,0f,0f,rrca,rrca,rrca,agon_sound.asm,
2006,2006,1924,0d93,0cf1,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",agon_sound.asm,
2007,2007,1925,0d94,0cf2,0f,0f,rrca,rrca,rrca,agon_sound.asm,
2008,2008,1926,0d95,0cf3,1e 10,1e 10,"ld e,$10","ld e,$10","ld e,$00",agon_sound.asm,
2009,2009,1927,0d97,0cf5,5a,5a,"ld e,d","ld e,d","ld e,d",agon_sound.asm,
2010,2010,1928,0d98,0cf6,10 97,10 97,djnz $-$67,djnz $-$67,djnz $-$00,agon_sound.asm,
2011,2011,1929,0d9a,0cf8,10 d5,10 d5,djnz $-$29,djnz $-$29,djnz $-$00,agon_sound.asm,
2012,2012,1930,0d9c,0cfa,10 13,10 13,djnz $+$15,djnz $+$15,djnz $+$00,agon_sound.asm,
2013,2013,1931,0d9e,0cfc,11 53 11,11 53 11,"ld de,$1153","ld de,$1153","ld de,$0000",agon_sound.asm,
2014,2014,1932,0da1,0cff,93,93,sub e,sub e,sub e,agon_sound.asm,
2015,2015,1933,0da2,0d00,11 d5 11,11 d5 11,"ld de,$11d5","ld de,$11d5","ld de,$0000",agon_sound.asm,
2016,2016,1934,0da5,0d03,17,17,rla,rla,rla,agon_sound.asm,
2017,2017,1935,0da6,0d04,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_sound.asm,
2018,2018,1936,0da7,0d05,5b 12,5b 12,"ld.lil (de),a","ld.lil (de),a","ld.lil (de),a",agon_sound.asm,
2019,2019,1937,0da9,0d07,9f,9f,"sbc a,a","sbc a,a","sbc a,a",agon_sound.asm,
2020,2020,1938,0daa,0d08,12,12,"ld (de),a","ld (de),a","ld (de),a",agon_sound.asm,
2021,2021,1939,0dab,0d09,e4 12 3e,e4 12 3e,"call po,$3e12","call po,$3e12","call po,$0000",agon_sound.asm,
2022,2022,1940,0dae,0d0c,01 21 08,01 21 f9,"ld bc,$0821","ld bc,$f921","ld bc,$0000",acorn.asm,
2023,2023,,0db1,,52 cd 6d 08 21,,call.sil $21086d,,call.sil $000000,,
2024,2024,,0db6,,08,,"ex af,af'",,"ex af,af'",,
2025,2025,,0db7,,52 5e,,"ld.sil e,(hl)",,"ld.sil e,(hl)",,
2026,2026,1945,0db9,0d17,23,23,inc hl,inc hl,inc hl,acorn.asm,INC	HL
2027,2027,1946,0dba,0d18,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",acorn.asm,"LD	D,(HL)"
2028,2028,1947,0dbb,0d19,23,23,inc hl,inc hl,inc hl,acorn.asm,INC	HL
2029,2029,1948,0dbc,0d1a,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",acorn.asm,"LD	A,(HL)"
2030,2030,1949,0dbd,0d1b,23,23,inc hl,inc hl,inc hl,acorn.asm,INC	HL
2031,2031,1950,0dbe,0d1c,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",acorn.asm,"LD	H,(HL)"
2032,2032,1951,0dbf,0d1d,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2033,2033,1952,0dc0,0d1e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2034,2034,1953,0dc1,0d1f,c9,c9,ret,ret,ret,acorn.asm,RET
2035,2035,1954,0dc2,0d20,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",acorn.asm,"GETIMS:         LD	A,14"
2036,2036,1955,0dc4,0d22,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"LD	HL,SCRAP"
2037,2037,1956,0dc7,0d25,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",acorn.asm,"LD	(HL),0"
2038,2038,1957,0dc9,0d27,cd 6d 08,cd 4d 08,call $086d,call $084d,call $0000,acorn.asm,CALL	OSWORD
2039,2039,1958,0dcc,0d2a,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"LD	HL,SCRAP"
2040,2040,1959,0dcf,0d2d,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",acorn.asm,"LD	DE,ACCS"
2041,2041,1960,0dd2,0d30,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",acorn.asm,"LD	A,(HL)"
2042,2042,1961,0dd3,0d31,bb,bb,cp e,cp e,cp e,acorn.asm,CP	E
2043,2043,1962,0dd4,0d32,c8,c8,ret z,ret z,ret z,acorn.asm,RET	Z
2044,2044,1963,0dd5,0d33,01 19 00,01 19 00,"ld bc,$0019","ld bc,$0019","ld bc,$0000",acorn.asm,"LD	BC,25"
2045,2045,1964,0dd8,0d36,ed b0,ed b0,ldir,ldir,ldir,acorn.asm,LDIR
2046,2046,1965,0dda,0d38,c9,c9,ret,ret,ret,acorn.asm,RET
2047,2047,1966,0ddb,0d39,dd e5,dd e5,push ix,push ix,push ix,acorn.asm,PUTIME:         PUSH	IX
2048,2048,1967,0ddd,0d3b,dd 21 08 52,dd 21 f9 50,"ld ix,$5208","ld ix,$50f9","ld ix,$0000",acorn.asm,"LD	IX,SCRAP"
2049,2049,1968,0de1,0d3f,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",acorn.asm,"LD	(IX+0),L"
2050,2050,1969,0de4,0d42,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",acorn.asm,"LD	(IX+1),H"
2051,2051,1970,0de7,0d45,dd 73 02,dd 73 02,"ld (ix+$02),e","ld (ix+$02),e","ld (ix+$00),e",acorn.asm,"LD	(IX+2),E"
2052,2052,1971,0dea,0d48,dd 72 03,dd 72 03,"ld (ix+$03),d","ld (ix+$03),d","ld (ix+$00),d",acorn.asm,"LD	(IX+3),D"
2053,2053,1972,0ded,0d4b,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",acorn.asm,"LD	A,2"
2054,2054,1973,0def,0d4d,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"LD	HL,SCRAP"
2055,2055,1974,0df2,0d50,cd 6d 08,cd 4d 08,call $086d,call $084d,call $0000,acorn.asm,CALL	OSWORD
2056,2056,1975,0df5,0d53,dd e1,dd e1,pop ix,pop ix,pop ix,acorn.asm,POP	IX
2057,2057,1976,0df7,0d55,c9,c9,ret,ret,ret,acorn.asm,RET
2058,2058,1977,0df8,0d56,7b,7b,"ld a,e","ld a,e","ld a,e",acorn.asm,"PUTIMS:         LD	A,E		;Length"
2059,2059,1978,0df9,0d57,fe 1a,fe 1a,cp $1a,cp $1a,cp $00,acorn.asm,CP	26
2060,2060,1979,0dfb,0d59,d0,d0,ret nc,ret nc,ret nc,acorn.asm,RET	NC
2061,2061,1980,0dfc,0d5a,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",acorn.asm,"LD	B,0"
2062,2062,1981,0dfe,0d5c,4f,4f,"ld c,a","ld c,a","ld c,a",acorn.asm,"LD	C,A"
2063,2063,1982,0dff,0d5d,11 09 52,11 fa 50,"ld de,$5209","ld de,$50fa","ld de,$0000",acorn.asm,"LD	DE,SCRAP+1"
2064,2064,1983,0e02,0d60,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",acorn.asm,"LD	HL,ACCS"
2065,2065,1984,0e05,0d63,ed b0,ed b0,ldir,ldir,ldir,acorn.asm,LDIR
2066,2066,1985,0e07,0d65,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"LD	HL,SCRAP"
2067,2067,1986,0e0a,0d68,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",acorn.asm,"LD	(HL),A"
2068,2068,1987,0e0b,0d69,3e 0f,3e 0f,"ld a,$0f","ld a,$0f","ld a,$00",acorn.asm,"LD	A,15"
2069,2069,1988,0e0d,0d6b,c3 6d 08,c3 4d 08,jp $086d,jp $084d,jp $0000,acorn.asm,JP	OSWORD
2070,2070,1989,0e10,0d6e,3e 0c,3e 0c,"ld a,$0c","ld a,$0c","ld a,$00",acorn.asm,"CLRSCN:         LD	A,0CH"
2071,2071,1990,0e12,0d70,c3 97 05,c3 93 05,jp $0597,jp $0593,jp $0000,acorn.asm,JP	OSWRCH
2072,2072,1991,0e15,0d73,3e 81,3e 81,"ld a,$81","ld a,$81","ld a,$00",acorn.asm,"OSKEY:          LD	A,129"
2073,2073,1992,0e17,0d75,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2074,2074,1993,0e1a,0d78,7c,7c,"ld a,h","ld a,h","ld a,h",acorn.asm,"LD	A,H"
2075,2075,1994,0e1b,0d79,b7,b7,or a,or a,or a,acorn.asm,OR	A
2076,2076,1995,0e1c,0d7a,c0,c0,ret nz,ret nz,ret nz,acorn.asm,"RET	NZ		;TIME-OUT, CARRY RESET"
2077,2077,1996,0e1d,0d7b,7d,7d,"ld a,l","ld a,l","ld a,l",acorn.asm,"LD	A,L"
2078,2078,1997,0e1e,0d7c,37,37,scf,scf,scf,acorn.asm,SCF
2079,2079,1998,0e1f,0d7d,c9,c9,ret,ret,ret,acorn.asm,"RET			;NORMAL, CARRY SET"
2080,2080,1999,0e20,0d7e,3e 1f,3e 1f,"ld a,$1f","ld a,$1f","ld a,$00",acorn.asm,"PUTCSR:         LD	A,1FH"
2081,2081,2000,0e22,0d80,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2082,2082,2001,0e25,0d83,7b,7b,"ld a,e","ld a,e","ld a,e",acorn.asm,"LD	A,E"
2083,2083,2002,0e26,0d84,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2084,2084,2003,0e29,0d87,7d,7d,"ld a,l","ld a,l","ld a,l",acorn.asm,"LD	A,L"
2085,2085,2004,0e2a,0d88,c3 97 05,c3 93 05,jp $0597,jp $0593,jp $0000,acorn.asm,JP	OSWRCH
2086,2086,2005,0e2d,0d8b,3e 86,3e 86,"ld a,$86","ld a,$86","ld a,$00",acorn.asm,"GETCSR:         LD	A,134"
2087,2087,2006,0e2f,0d8d,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2088,2088,2007,0e32,0d90,5d,5d,"ld e,l","ld e,l","ld e,l",acorn.asm,"LD	E,L"
2089,2089,2008,0e33,0d91,6c,6c,"ld l,h","ld l,h","ld l,h",acorn.asm,"LD	L,H"
2090,2090,2009,0e34,0d92,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",acorn.asm,"LD	D,0"
2091,2091,2010,0e36,0d94,62,62,"ld h,d","ld h,d","ld h,d",acorn.asm,"LD	H,D"
2092,2092,2011,0e37,0d95,c9,c9,ret,ret,ret,acorn.asm,RET
2093,2093,2012,0e38,0d96,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,POINT:          CALL	EXPRI
2094,2094,2013,0e3b,0d99,d9,d9,exx,exx,exx,acorn.asm,EXX
2095,2095,2014,0e3c,0d9a,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2096,2096,2015,0e3d,0d9b,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2097,2097,2016,0e40,0d9e,d9,d9,exx,exx,exx,acorn.asm,EXX
2098,2098,2017,0e41,0d9f,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2099,2099,2018,0e42,0da0,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,acorn.asm,CALL	BRAKET
2100,2100,2019,0e45,0da3,dd 21 08 52,dd 21 f9 50,"ld ix,$5208","ld ix,$50f9","ld ix,$0000",acorn.asm,"LD	IX,SCRAP"
2101,2101,2020,0e49,0da7,dd 73 00,dd 73 00,"ld (ix),e","ld (ix),e","ld (ix),e",acorn.asm,"LD	(IX+0),E"
2102,2102,2021,0e4c,0daa,dd 72 01,dd 72 01,"ld (ix+$01),d","ld (ix+$01),d","ld (ix+$00),d",acorn.asm,"LD	(IX+1),D"
2103,2103,2022,0e4f,0dad,dd 75 02,dd 75 02,"ld (ix+$02),l","ld (ix+$02),l","ld (ix+$00),l",acorn.asm,"LD	(IX+2),L"
2104,2104,2023,0e52,0db0,dd 74 03,dd 74 03,"ld (ix+$03),h","ld (ix+$03),h","ld (ix+$00),h",acorn.asm,"LD	(IX+3),H"
2105,2105,2024,0e55,0db3,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"LD	HL,SCRAP"
2106,2106,2025,0e58,0db6,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",acorn.asm,"LD	A,9"
2107,2107,2026,0e5a,0db8,cd 6d 08,cd 4d 08,call $086d,call $084d,call $0000,acorn.asm,CALL	OSWORD
2108,2108,2027,0e5d,0dbb,dd 7e 04,dd 7e 04,"ld a,(ix+$04)","ld a,(ix+$04)","ld a,(ix+$00)",acorn.asm,"LD	A,(IX+4)"
2109,2109,2028,0e60,0dbe,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2110,2110,2029,0e61,0dbf,c6 01,c6 01,"add a,$01","add a,$01","add a,$00",acorn.asm,"ADD	A,1"
2111,2111,2030,0e63,0dc1,9f,9f,"sbc a,a","sbc a,a","sbc a,a",acorn.asm,"SBC	A,A"
2112,2112,2031,0e64,0dc2,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2113,2113,2032,0e65,0dc3,d9,d9,exx,exx,exx,acorn.asm,RETEXX:         EXX
2114,2114,2033,0e66,0dc4,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2115,2115,2034,0e67,0dc5,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2116,2116,2035,0e68,0dc6,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2117,2117,2036,0e69,0dc7,4f,4f,"ld c,a","ld c,a","ld c,a",acorn.asm,"LD	C,A"
2118,2118,2037,0e6a,0dc8,c9,c9,ret,ret,ret,acorn.asm,RET
2119,2119,2038,0e6b,0dc9,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,acorn.asm,ADVAL:          CALL	ITEMI
2120,2120,2039,0e6e,0dcc,d9,d9,exx,exx,exx,acorn.asm,EXX
2121,2121,2040,0e6f,0dcd,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",acorn.asm,"LD	A,128"
2122,2122,2041,0e71,0dcf,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2123,2123,2042,0e74,0dd2,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2124,2124,2043,0e75,0dd3,18 ee,18 ee,jr $-$10,jr $-$10,jr $-$00,acorn.asm,JR	RETEXX
2125,2125,2044,0e77,0dd5,3e 87,3e 87,"ld a,$87","ld a,$87","ld a,$00",acorn.asm,"MODEFN:         LD	A,135"
2126,2126,2045,0e79,0dd7,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2127,2127,2046,0e7c,0dda,6c,6c,"ld l,h","ld l,h","ld l,h",acorn.asm,"LD	L,H"
2128,2128,2047,0e7d,0ddb,af,af,xor a,xor a,xor a,acorn.asm,RETU8:          XOR	A
2129,2129,2048,0e7e,0ddc,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2130,2130,2049,0e7f,0ddd,18 e4,18 e4,jr $-$1a,jr $-$1a,jr $-$00,acorn.asm,JR	RETEXX
2131,2131,2050,0e81,0ddf,3a fc 55,3a fc 54,"ld a,($55fc)","ld a,($54fc)","ld a,($0000)",acorn.asm,"WIDFN:          LD	A,(WIDTH)"
2132,2132,2051,0e84,0de2,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2133,2133,2052,0e85,0de3,18 f6,18 f6,jr $-$08,jr $-$08,jr $-$00,acorn.asm,JR	RETU8
2134,2134,2053,0e87,0de5,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",acorn.asm,"ENVEL:          LD	B,0"
2135,2135,2054,0e89,0de7,dd 21 08 52,dd 21 f9 50,"ld ix,$5208","ld ix,$50f9","ld ix,$0000",acorn.asm,"LD	IX,SCRAP"
2136,2136,2055,0e8d,0deb,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2137,2137,2056,0e8e,0dec,dd e5,dd e5,push ix,push ix,push ix,acorn.asm,PUSH	IX
2138,2138,2057,0e90,0dee,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,ENVEL1:         CALL	EXPRI
2139,2139,2058,0e93,0df1,d9,d9,exx,exx,exx,acorn.asm,EXX
2140,2140,2059,0e94,0df2,dd e1,dd e1,pop ix,pop ix,pop ix,acorn.asm,POP	IX
2141,2141,2060,0e96,0df4,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2142,2142,2061,0e97,0df5,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",acorn.asm,"LD	(IX),L"
2143,2143,2062,0e9a,0df8,78,78,"ld a,b","ld a,b","ld a,b",acorn.asm,"LD	A,B"
2144,2144,2063,0e9b,0df9,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,acorn.asm,CP	13
2145,2145,2064,0e9d,0dfb,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",acorn.asm,"JR	Z,ENVEL2"
2146,2146,2065,0e9f,0dfd,04,04,inc b,inc b,inc b,acorn.asm,INC	B
2147,2147,2066,0ea0,0dfe,dd 23,dd 23,inc ix,inc ix,inc ix,acorn.asm,INC	IX
2148,2148,2067,0ea2,0e00,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2149,2149,2068,0ea3,0e01,dd e5,dd e5,push ix,push ix,push ix,acorn.asm,PUSH	IX
2150,2150,2069,0ea5,0e03,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,acorn.asm,CALL	COMMA
2151,2151,2070,0ea8,0e06,18 e6,18 e6,jr $-$18,jr $-$18,jr $-$00,acorn.asm,JR	ENVEL1
2152,2152,2071,0eaa,0e08,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"ENVEL2:         LD	HL,SCRAP"
2153,2153,2072,0ead,0e0b,3e 08,3e 08,"ld a,$08","ld a,$08","ld a,$00",acorn.asm,"LD	A,8"
2154,2154,2073,0eaf,0e0d,cd 6d 08,cd 4d 08,call $086d,call $084d,call $0000,acorn.asm,CALL	OSWORD
2155,2155,2074,0eb2,0e10,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,acorn.asm,JP	XEQ
2156,2156,2075,0eb5,0e13,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",acorn.asm,"SOUND:          LD	B,0"
2157,2157,2076,0eb7,0e15,dd 21 08 52,dd 21 f9 50,"ld ix,$5208","ld ix,$50f9","ld ix,$0000",acorn.asm,"LD	IX,SCRAP"
2158,2158,2077,0ebb,0e19,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2159,2159,2078,0ebc,0e1a,dd e5,dd e5,push ix,push ix,push ix,acorn.asm,PUSH	IX
2160,2160,2079,0ebe,0e1c,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,SOUND1:         CALL	EXPRI
2161,2161,2080,0ec1,0e1f,d9,d9,exx,exx,exx,acorn.asm,EXX
2162,2162,2081,0ec2,0e20,dd e1,dd e1,pop ix,pop ix,pop ix,acorn.asm,POP	IX
2163,2163,2082,0ec4,0e22,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2164,2164,2083,0ec5,0e23,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",acorn.asm,"LD	(IX+0),L"
2165,2165,2084,0ec8,0e26,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",acorn.asm,"LD	(IX+1),H"
2166,2166,2085,0ecb,0e29,dd 23,dd 23,inc ix,inc ix,inc ix,acorn.asm,INC	IX
2167,2167,2086,0ecd,0e2b,dd 23,dd 23,inc ix,inc ix,inc ix,acorn.asm,INC	IX
2168,2168,2087,0ecf,0e2d,04,04,inc b,inc b,inc b,acorn.asm,INC	B
2169,2169,2088,0ed0,0e2e,04,04,inc b,inc b,inc b,acorn.asm,INC	B
2170,2170,2089,0ed1,0e2f,78,78,"ld a,b","ld a,b","ld a,b",acorn.asm,"LD	A,B"
2171,2171,2090,0ed2,0e30,fe 08,fe 08,cp $08,cp $08,cp $00,acorn.asm,CP	8
2172,2172,2091,0ed4,0e32,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",acorn.asm,"JR	Z,SOUND2"
2173,2173,2092,0ed6,0e34,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2174,2174,2093,0ed7,0e35,dd e5,dd e5,push ix,push ix,push ix,acorn.asm,PUSH	IX
2175,2175,2094,0ed9,0e37,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,acorn.asm,CALL	COMMA
2176,2176,2095,0edc,0e3a,18 e0,18 e0,jr $-$1e,jr $-$1e,jr $-$00,acorn.asm,JR	SOUND1
2177,2177,2096,0ede,0e3c,21 08 52,21 f9 50,"ld hl,$5208","ld hl,$50f9","ld hl,$0000",acorn.asm,"SOUND2:         LD	HL,SCRAP"
2178,2178,2097,0ee1,0e3f,3e 07,3e 07,"ld a,$07","ld a,$07","ld a,$00",acorn.asm,"LD	A,7"
2179,2179,2098,0ee3,0e41,cd 6d 08,cd 4d 08,call $086d,call $084d,call $0000,acorn.asm,CALL	OSWORD
2180,2180,2099,0ee6,0e44,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,acorn.asm,JP	XEQ
2181,2181,2100,0ee9,0e47,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,MODE:           CALL	EXPRI
2182,2182,2101,0eec,0e4a,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2183,2183,2102,0eed,0e4b,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",acorn.asm,"LD	(COUNT),A"
2184,2184,2103,0ef0,0e4e,d9,d9,exx,exx,exx,acorn.asm,EXX
2185,2185,2104,0ef1,0e4f,65,65,"ld h,l","ld h,l","ld h,l",acorn.asm,"LD	H,L"
2186,2186,2105,0ef2,0e50,2e 16,2e 16,"ld l,$16","ld l,$16","ld l,$00",acorn.asm,"LD	L,22"
2187,2187,2106,0ef4,0e52,cd 5c 11,cd ba 10,call $115c,call $10ba,call $0000,acorn.asm,CALL	WRCH2
2188,2188,2107,0ef7,0e55,18 72,18 72,jr $+$74,jr $+$74,jr $+$00,acorn.asm,JR	XEQGO1
2189,2189,2108,0ef9,0e57,3e 10,3e 10,"ld a,$10","ld a,$10","ld a,$00",acorn.asm,"CLG:            LD	A,16"
2190,2190,2109,0efb,0e59,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2191,2191,2110,0efe,0e5c,18 6b,18 6b,jr $+$6d,jr $+$6d,jr $+$00,acorn.asm,JR	XEQGO1
2192,2192,2111,0f00,0e5e,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,ORIGIN:         CALL    EXPRI
2193,2193,2112,0f03,0e61,d9,d9,exx,exx,exx,acorn.asm,EXX
2194,2194,2113,0f04,0e62,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2195,2195,2114,0f05,0e63,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL    CEXPRI
2196,2196,2115,0f08,0e66,d9,d9,exx,exx,exx,acorn.asm,EXX
2197,2197,2116,0f09,0e67,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2198,2198,2117,0f0a,0e68,0e 1d,0e 1d,"ld c,$1d","ld c,$1d","ld c,$00",acorn.asm,"LD	C,29"
2199,2199,2118,0f0c,0e6a,cd 50 11,cd ae 10,call $1150,call $10ae,call $0000,acorn.asm,CALL	WRCH5
2200,2200,2119,0f0f,0e6d,18 5a,18 5a,jr $+$5c,jr $+$5c,jr $+$00,acorn.asm,JR	XEQGO1
2201,2201,2120,0f11,0e6f,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,COLOUR:         CALL	EXPRI		;n
2202,2202,2121,0f14,0e72,d9,d9,exx,exx,exx,acorn.asm,EXX
2203,2203,2122,0f15,0e73,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2204,2204,2123,0f18,0e76,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,acorn.asm,"CP	','"
2205,2205,2124,0f1a,0e78,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",acorn.asm,"JR      Z,PALCOL"
2206,2206,2125,0f1c,0e7a,65,65,"ld h,l","ld h,l","ld h,l",acorn.asm,"LD	H,L"
2207,2207,2126,0f1d,0e7b,2e 11,2e 11,"ld l,$11","ld l,$11","ld l,$00",acorn.asm,"LD	L,17"
2208,2208,2127,0f1f,0e7d,cd 5c 11,cd ba 10,call $115c,call $10ba,call $0000,acorn.asm,CALL	WRCH2
2209,2209,2128,0f22,0e80,18 47,18 47,jr $+$49,jr $+$49,jr $+$00,acorn.asm,JR	XEQGO1
2210,2210,2129,0f24,0e82,e5,e5,push hl,push hl,push hl,acorn.asm,PALCOL:         PUSH	HL
2211,2211,2130,0f25,0e83,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI		;p or r
2212,2212,2131,0f28,0e86,d9,d9,exx,exx,exx,acorn.asm,EXX
2213,2213,2132,0f29,0e87,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2214,2214,2133,0f2a,0e88,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",acorn.asm,"LD	HL,0"
2215,2215,2134,0f2d,0e8b,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2216,2216,2135,0f30,0e8e,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,acorn.asm,"CP	','"
2217,2217,2136,0f32,0e90,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",acorn.asm,"JR	NZ,PALET1"
2218,2218,2137,0f34,0e92,d5,d5,push de,push de,push de,acorn.asm,PUSH	DE
2219,2219,2138,0f35,0e93,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI		;g
2220,2220,2139,0f38,0e96,d9,d9,exx,exx,exx,acorn.asm,EXX
2221,2221,2140,0f39,0e97,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2222,2222,2141,0f3a,0e98,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI		;b
2223,2223,2142,0f3d,0e9b,d9,d9,exx,exx,exx,acorn.asm,EXX
2224,2224,2143,0f3e,0e9c,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2225,2225,2144,0f3f,0e9d,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2226,2226,2145,0f40,0e9e,7d,7d,"ld a,l","ld a,l","ld a,l",acorn.asm,"LD	A,L"
2227,2227,2146,0f41,0e9f,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2228,2228,2147,0f42,0ea0,51,51,"ld d,c","ld d,c","ld d,c",acorn.asm,"LD	D,C		;r"
2229,2229,2148,0f43,0ea1,4d,4d,"ld c,l","ld c,l","ld c,l",acorn.asm,"LD	C,L		;n"
2230,2230,2149,0f44,0ea2,6b,6b,"ld l,e","ld l,e","ld l,e",acorn.asm,"LD	L,E		;g"
2231,2231,2150,0f45,0ea3,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A		;b"
2232,2232,2151,0f46,0ea4,1e 10,1e 10,"ld e,$10","ld e,$10","ld e,$00",acorn.asm,"LD	E,16"
2233,2233,2152,0f48,0ea6,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2234,2234,2153,0f49,0ea7,c1,c1,pop bc,pop bc,pop bc,acorn.asm,PALET1:         POP	BC
2235,2235,2154,0f4a,0ea8,06 13,06 13,"ld b,$13","ld b,$13","ld b,$00",acorn.asm,"LD	B,19"
2236,2236,2155,0f4c,0eaa,cd 4c 11,cd aa 10,call $114c,call $10aa,call $0000,acorn.asm,CALL	WRCH6
2237,2237,2156,0f4f,0ead,18 1a,18 1a,jr $+$1c,jr $+$1c,jr $+$00,acorn.asm,JR	XEQGO1
2238,2238,2157,0f51,0eaf,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,GCOL:           CALL	EXPRI
2239,2239,2158,0f54,0eb2,d9,d9,exx,exx,exx,acorn.asm,EXX
2240,2240,2159,0f55,0eb3,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",acorn.asm,"LD	E,0"
2241,2241,2160,0f57,0eb5,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2242,2242,2161,0f5a,0eb8,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,acorn.asm,"CP	','"
2243,2243,2162,0f5c,0eba,20 06,20 06,"jr nz,$+$08","jr nz,$+$08","jr nz,$+$00",acorn.asm,"JR	NZ,GCOL0"
2244,2244,2163,0f5e,0ebc,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2245,2245,2164,0f5f,0ebd,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2246,2246,2165,0f62,0ec0,d9,d9,exx,exx,exx,acorn.asm,EXX
2247,2247,2166,0f63,0ec1,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2248,2248,2167,0f64,0ec2,65,65,"ld h,l","ld h,l","ld h,l",acorn.asm,"GCOL0:          LD	H,L"
2249,2249,2168,0f65,0ec3,6b,6b,"ld l,e","ld l,e","ld l,e",acorn.asm,"LD	L,E"
2250,2250,2169,0f66,0ec4,16 12,16 12,"ld d,$12","ld d,$12","ld d,$00",acorn.asm,"LD	D,18"
2251,2251,2170,0f68,0ec6,cd 58 11,cd b6 10,call $1158,call $10b6,call $0000,acorn.asm,CALL	WRCH3		;DLH
2252,2252,2171,0f6b,0ec9,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,acorn.asm,XEQGO1:         JP	XEQ
2253,2253,2172,0f6e,0ecc,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",acorn.asm,"CSRON:          LD	C,1"
2254,2254,2173,0f70,0ece,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,acorn.asm,JR	CSRGO
2255,2255,2174,0f72,0ed0,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",acorn.asm,"CSROFF:         LD	C,0"
2256,2256,2175,0f74,0ed2,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",acorn.asm,"CSRGO:          LD	A,23"
2257,2257,2176,0f76,0ed4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2258,2258,2177,0f79,0ed7,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",acorn.asm,"LD	A,1"
2259,2259,2178,0f7b,0ed9,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2260,2260,2179,0f7e,0edc,79,79,"ld a,c","ld a,c","ld a,c",acorn.asm,"LD	A,C"
2261,2261,2180,0f7f,0edd,06 08,06 08,"ld b,$08","ld b,$08","ld b,$00",acorn.asm,"LD	B,8"
2262,2262,2181,0f81,0edf,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CSRGO1:         CALL	OSWRCH
2263,2263,2182,0f84,0ee2,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2264,2264,2183,0f85,0ee3,10 fa,10 fa,djnz $-$04,djnz $-$04,djnz $-$00,acorn.asm,DJNZ	CSRGO1
2265,2265,2184,0f87,0ee5,18 e2,18 e2,jr $-$1c,jr $-$1c,jr $-$00,acorn.asm,JR	XEQGO1
2266,2266,2185,0f89,0ee7,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,LINE:           CALL	EXPRI
2267,2267,2186,0f8c,0eea,d9,d9,exx,exx,exx,acorn.asm,EXX
2268,2268,2187,0f8d,0eeb,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2269,2269,2188,0f8e,0eec,cd 64 11,cd c2 10,call $1164,call $10c2,call $0000,acorn.asm,CALL	EXPR3
2270,2270,2189,0f91,0eef,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",acorn.asm,"EX	(SP),HL		;HL <- x1, (SP) <- y2"
2271,2271,2190,0f92,0ef0,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2272,2272,2191,0f93,0ef1,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2273,2273,2192,0f94,0ef2,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",acorn.asm,"LD	C,4"
2274,2274,2193,0f96,0ef4,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2275,2275,2194,0f99,0ef7,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2276,2276,2195,0f9a,0ef8,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2277,2277,2196,0f9b,0ef9,0e 05,0e 05,"ld c,$05","ld c,$05","ld c,$00",acorn.asm,"LD	C,5"
2278,2278,2197,0f9d,0efb,18 2a,18 2a,jr $+$2c,jr $+$2c,jr $+$00,acorn.asm,JR	PLOT4A
2279,2279,2198,0f9f,0efd,fe 03,fe 03,cp $03,cp $03,cp $00,acorn.asm,CIRCLE:         CP	TFILL
2280,2280,2199,0fa1,0eff,f5,f5,push af,push af,push af,acorn.asm,PUSH	AF
2281,2281,2200,0fa2,0f00,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",acorn.asm,"JR	NZ,CIRCL0"
2282,2282,2201,0fa4,0f02,fd 23,fd 23,inc iy,inc iy,inc iy,acorn.asm,INC	IY
2283,2283,2202,0fa6,0f04,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,CIRCL0:         CALL	EXPRI
2284,2284,2203,0fa9,0f07,d9,d9,exx,exx,exx,acorn.asm,EXX
2285,2285,2204,0faa,0f08,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2286,2286,2205,0fab,0f09,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2287,2287,2206,0fae,0f0c,d9,d9,exx,exx,exx,acorn.asm,EXX
2288,2288,2207,0faf,0f0d,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2289,2289,2208,0fb0,0f0e,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2290,2290,2209,0fb3,0f11,d9,d9,exx,exx,exx,acorn.asm,EXX
2291,2291,2210,0fb4,0f12,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC		;y
2292,2292,2211,0fb5,0f13,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;x
2293,2293,2212,0fb6,0f14,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2294,2294,2213,0fb7,0f15,69,69,"ld l,c","ld l,c","ld l,c",acorn.asm,"LD	L,C"
2295,2295,2214,0fb8,0f16,60,60,"ld h,b","ld h,b","ld h,b",acorn.asm,"LD	H,B"
2296,2296,2215,0fb9,0f17,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",acorn.asm,"LD	C,4		; PLOT 4 = MOVE"
2297,2297,2216,0fbb,0f19,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2298,2298,2217,0fbe,0f1c,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;r
2299,2299,2218,0fbf,0f1d,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",acorn.asm,"LD	HL,0"
2300,2300,2219,0fc2,0f20,f1,f1,pop af,pop af,pop af,acorn.asm,POP	AF
2301,2301,2220,0fc3,0f21,0e 91,0e 91,"ld c,$91","ld c,$91","ld c,$00",acorn.asm,"LD	C,145		; PLOT 145 = outline circle"
2302,2302,2221,0fc5,0f23,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",acorn.asm,"JR	NZ,PLOT4A"
2303,2303,2222,0fc7,0f25,0e 99,0e 99,"ld c,$99","ld c,$99","ld c,$00",acorn.asm,"LD	C,153		; PLOT 153 = filled circle"
2304,2304,2223,0fc9,0f27,18 6c,18 6c,jr $+$6e,jr $+$6e,jr $+$00,acorn.asm,PLOT4A:         JR	PLOT4
2305,2305,2224,0fcb,0f29,fe 03,fe 03,cp $03,cp $03,cp $00,acorn.asm,ELLIPS:         CP	TFILL
2306,2306,2225,0fcd,0f2b,f5,f5,push af,push af,push af,acorn.asm,PUSH	AF
2307,2307,2226,0fce,0f2c,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",acorn.asm,"JR	NZ,ELLIP0"
2308,2308,2227,0fd0,0f2e,fd 23,fd 23,inc iy,inc iy,inc iy,acorn.asm,INC	IY
2309,2309,2228,0fd2,0f30,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,ELLIP0:         CALL	EXPRI
2310,2310,2229,0fd5,0f33,d9,d9,exx,exx,exx,acorn.asm,EXX
2311,2311,2230,0fd6,0f34,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2312,2312,2231,0fd7,0f35,cd 64 11,cd c2 10,call $1164,call $10c2,call $0000,acorn.asm,CALL	EXPR3
2313,2313,2232,0fda,0f38,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",acorn.asm,"EX	(SP),HL		;HL <- x, (SP) <- b"
2314,2314,2233,0fdb,0f39,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2315,2315,2234,0fdc,0f3a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2316,2316,2235,0fdd,0f3b,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",acorn.asm,"LD	C,4		; PLOT 4 = Move absolute"
2317,2317,2236,0fdf,0f3d,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2318,2318,2237,0fe2,0f40,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;a
2319,2319,2238,0fe3,0f41,d5,d5,push de,push de,push de,acorn.asm,PUSH	DE
2320,2320,2239,0fe4,0f42,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",acorn.asm,"LD	HL,0"
2321,2321,2240,0fe7,0f45,4d,4d,"ld c,l","ld c,l","ld c,l",acorn.asm,"LD	C,L		; PLOT 0 - Move relative"
2322,2322,2241,0fe8,0f46,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2323,2323,2242,0feb,0f49,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;a
2324,2324,2243,0fec,0f4a,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2325,2325,2244,0fed,0f4b,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2326,2326,2245,0fee,0f4c,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2327,2327,2246,0fef,0f4d,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",acorn.asm,"SBC	HL,DE"
2328,2328,2247,0ff1,0f4f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2329,2329,2248,0ff2,0f50,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL		;b
2330,2330,2249,0ff3,0f51,f1,f1,pop af,pop af,pop af,acorn.asm,POP	AF
2331,2331,2250,0ff4,0f52,0e c1,0e c1,"ld c,$c1","ld c,$c1","ld c,$00",acorn.asm,"LD	C,193		; PLOT 193 = outline ellipse"
2332,2332,2251,0ff6,0f54,20 3f,20 3f,"jr nz,$+$41","jr nz,$+$41","jr nz,$+$00",acorn.asm,"JR	NZ,PLOT4"
2333,2333,2252,0ff8,0f56,0e c9,0e c9,"ld c,$c9","ld c,$c9","ld c,$00",acorn.asm,"LD	C,201		; PLOT 201 = filled ellipse"
2334,2334,2253,0ffa,0f58,18 3b,18 3b,jr $+$3d,jr $+$3d,jr $+$00,acorn.asm,JR	PLOT4
2335,2335,2254,0ffc,0f5a,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",acorn.asm,"MOVE:           LD	C,4"
2336,2336,2255,0ffe,0f5c,18 23,18 23,jr $+$25,jr $+$25,jr $+$00,acorn.asm,JR	PLOT1
2337,2337,2256,1000,0f5e,0e 05,0e 05,"ld c,$05","ld c,$05","ld c,$00",acorn.asm,"DRAW:           LD	C,5"
2338,2338,2257,1002,0f60,18 1f,18 1f,jr $+$21,jr $+$21,jr $+$00,acorn.asm,JR	PLOT1
2339,2339,2258,1004,0f62,0e 85,0e 85,"ld c,$85","ld c,$85","ld c,$00",acorn.asm,"FILL:           LD	C,133"
2340,2340,2259,1006,0f64,18 1b,18 1b,jr $+$1d,jr $+$1d,jr $+$00,acorn.asm,JR	PLOT1
2341,2341,2260,1008,0f66,0e 45,0e 45,"ld c,$45","ld c,$45","ld c,$00",acorn.asm,"PLOT:           LD	C,69"
2342,2342,2261,100a,0f68,fe 0f,fe 0f,cp $0f,cp $0f,cp $00,acorn.asm,CP	TBY
2343,2343,2262,100c,0f6a,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",acorn.asm,"JR	Z,PLOT1"
2344,2344,2263,100e,0f6c,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,CALL	EXPRI
2345,2345,2264,1011,0f6f,d9,d9,exx,exx,exx,acorn.asm,EXX
2346,2346,2265,1012,0f70,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2347,2347,2266,1013,0f71,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2348,2348,2267,1016,0f74,d9,d9,exx,exx,exx,acorn.asm,EXX
2349,2349,2268,1017,0f75,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2350,2350,2269,101a,0f78,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,acorn.asm,"CP	','"
2351,2351,2270,101c,0f7a,28 12,28 12,"jr z,$+$14","jr z,$+$14","jr z,$+$00",acorn.asm,"JR	Z,PLOT3"
2352,2352,2271,101e,0f7c,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2353,2353,2272,101f,0f7d,0e 45,0e 45,"ld c,$45","ld c,$45","ld c,$00",acorn.asm,"LD	C,69"
2354,2354,2273,1021,0f7f,18 14,18 14,jr $+$16,jr $+$16,jr $+$00,acorn.asm,JR	PLOT4
2355,2355,2274,1023,0f81,fe 0f,fe 0f,cp $0f,cp $0f,cp $00,acorn.asm,PLOT1:          CP	TBY
2356,2356,2275,1025,0f83,20 04,20 04,"jr nz,$+$06","jr nz,$+$06","jr nz,$+$00",acorn.asm,"JR	NZ,PLOT2"
2357,2357,2276,1027,0f85,fd 23,fd 23,inc iy,inc iy,inc iy,acorn.asm,INC	IY
2358,2358,2277,1029,0f87,cb 91,cb 91,"res 2,c","res 2,c","res 2,c",acorn.asm,"RES	2,C		;Change absolute to relative"
2359,2359,2278,102b,0f89,c5,c5,push bc,push bc,push bc,acorn.asm,PLOT2:          PUSH	BC
2360,2360,2279,102c,0f8a,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,CALL	EXPRI
2361,2361,2280,102f,0f8d,d9,d9,exx,exx,exx,acorn.asm,EXX
2362,2362,2281,1030,0f8e,e5,e5,push hl,push hl,push hl,acorn.asm,PLOT3:          PUSH	HL
2363,2363,2282,1031,0f8f,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2364,2364,2283,1034,0f92,d9,d9,exx,exx,exx,acorn.asm,EXX
2365,2365,2284,1035,0f93,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2366,2366,2285,1036,0f94,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2367,2367,2286,1037,0f95,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,PLOT4:          CALL	VDU25
2368,2368,2287,103a,0f98,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,acorn.asm,JP	XEQ
2369,2369,2288,103d,0f9b,fe 03,fe 03,cp $03,cp $03,cp $00,acorn.asm,RECTAN:         CP	TFILL
2370,2370,2289,103f,0f9d,f5,f5,push af,push af,push af,acorn.asm,PUSH	AF
2371,2371,2290,1040,0f9e,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",acorn.asm,"JR	NZ,RECT0"
2372,2372,2291,1042,0fa0,fd 23,fd 23,inc iy,inc iy,inc iy,acorn.asm,INC	IY
2373,2373,2292,1044,0fa2,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,RECT0:          CALL	EXPRI
2374,2374,2293,1047,0fa5,d9,d9,exx,exx,exx,acorn.asm,EXX
2375,2375,2294,1048,0fa6,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2376,2376,2295,1049,0fa7,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2377,2377,2296,104c,0faa,d9,d9,exx,exx,exx,acorn.asm,EXX
2378,2378,2297,104d,0fab,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2379,2379,2298,104e,0fac,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2380,2380,2299,1051,0faf,d9,d9,exx,exx,exx,acorn.asm,EXX
2381,2381,2300,1052,0fb0,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2382,2382,2301,1053,0fb1,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2383,2383,2302,1056,0fb4,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,acorn.asm,"CP	','"
2384,2384,2303,1058,0fb6,20 04,20 04,"jr nz,$+$06","jr nz,$+$06","jr nz,$+$00",acorn.asm,"JR	NZ,RECT1"
2385,2385,2304,105a,0fb8,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2386,2386,2305,105d,0fbb,d9,d9,exx,exx,exx,acorn.asm,EXX
2387,2387,2306,105e,0fbc,c1,c1,pop bc,pop bc,pop bc,acorn.asm,RECT1:          POP	BC		;w
2388,2388,2307,105f,0fbd,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;y
2389,2389,2308,1060,0fbe,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",acorn.asm,"EX	(SP),HL		;HL <- x, (SP) <- h"
2390,2390,2309,1061,0fbf,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2391,2391,2310,1062,0fc0,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2392,2392,2311,1063,0fc1,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",acorn.asm,"LD	C,4"
2393,2393,2312,1065,0fc3,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2394,2394,2313,1068,0fc6,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",acorn.asm,"LD	A,(IY)"
2395,2395,2314,106b,0fc9,fe b8,fe b8,cp $b8,cp $b8,cp $00,acorn.asm,CP	TTO
2396,2396,2315,106d,0fcb,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",acorn.asm,"JR	Z,RECTTO"
2397,2397,2316,106f,0fcd,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;w
2398,2398,2317,1070,0fce,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL		;h
2399,2399,2318,1071,0fcf,f1,f1,pop af,pop af,pop af,acorn.asm,POP	AF
2400,2400,2319,1072,0fd0,20 22,20 22,"jr nz,$+$24","jr nz,$+$24","jr nz,$+$00",acorn.asm,"JR	NZ,OUTLIN"
2401,2401,2320,1074,0fd2,0e 61,0e 61,"ld c,$61","ld c,$61","ld c,$00",acorn.asm,"LD	C,97"
2402,2402,2321,1076,0fd4,18 bf,18 bf,jr $-$3f,jr $-$3f,jr $-$00,acorn.asm,JR	PLOT4
2403,2403,2322,1078,0fd6,fd 23,fd 23,inc iy,inc iy,inc iy,acorn.asm,RECTTO:         INC	IY		; Bump over TO
2404,2404,2323,107a,0fd8,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,CALL	EXPRI
2405,2405,2324,107d,0fdb,d9,d9,exx,exx,exx,acorn.asm,EXX
2406,2406,2325,107e,0fdc,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2407,2407,2326,107f,0fdd,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2408,2408,2327,1082,0fe0,d9,d9,exx,exx,exx,acorn.asm,EXX
2409,2409,2328,1083,0fe1,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC		;newx
2410,2410,2329,1084,0fe2,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;w
2411,2411,2330,1085,0fe3,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",acorn.asm,"EX	(SP),HL		;HL <- h, (SP) <- newy"
2412,2412,2331,1086,0fe4,c5,c5,push bc,push bc,push bc,acorn.asm,PUSH	BC
2413,2413,2332,1087,0fe5,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",acorn.asm,"LD	C,0"
2414,2414,2333,1089,0fe7,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25
2415,2415,2334,108c,0fea,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;newx
2416,2416,2335,108d,0feb,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL		;newy
2417,2417,2336,108e,0fec,f1,f1,pop af,pop af,pop af,acorn.asm,POP	AF
2418,2418,2337,108f,0fed,0e be,0e be,"ld c,$be","ld c,$be","ld c,$00",acorn.asm,"LD	C,190		; PLOT 190 - Block copy"
2419,2419,2338,1091,0fef,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",acorn.asm,"JR	NZ,PLOT4B"
2420,2420,2339,1093,0ff1,0d,0d,dec c,dec c,dec c,acorn.asm,DEC	C		; PLOT 189 - Block move
2421,2421,2340,1094,0ff2,18 a1,18 a1,jr $-$5d,jr $-$5d,jr $-$00,acorn.asm,PLOT4B:         JR	PLOT4
2422,2422,2341,1096,0ff4,0e 09,0e 09,"ld c,$09","ld c,$09","ld c,$00",acorn.asm,"OUTLIN:         LD	C,9		; PLOT 9 - draw relative"
2423,2423,2342,1098,0ff6,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2424,2424,2343,1099,0ff7,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",acorn.asm,"LD	HL,0"
2425,2425,2344,109c,0ffa,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25		; side 1
2426,2426,2345,109f,0ffd,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2427,2427,2346,10a0,0ffe,d5,d5,push de,push de,push de,acorn.asm,PUSH	DE
2428,2428,2347,10a1,0fff,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",acorn.asm,"LD	DE,0"
2429,2429,2348,10a4,1002,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL	VDU25		; side 2
2430,2430,2349,10a7,1005,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2431,2431,2350,10a8,1006,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2432,2432,2351,10a9,1007,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2433,2433,2352,10aa,1008,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2434,2434,2353,10ab,1009,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2435,2435,2354,10ac,100a,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",acorn.asm,"SBC	HL,DE"
2436,2436,2355,10ae,100c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2437,2437,2356,10af,100d,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2438,2438,2357,10b0,100e,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2439,2439,2358,10b1,100f,cd 4a 11,cd a8 10,call $114a,call $10a8,call $0000,acorn.asm,CALL 	VDU25		; side 3
2440,2440,2359,10b4,1012,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE
2441,2441,2360,10b5,1013,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2442,2442,2361,10b6,1014,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,"LD	L,A"
2443,2443,2362,10b7,1015,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2444,2444,2363,10b8,1016,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",acorn.asm,"SBC	HL,DE"
2445,2445,2364,10ba,1018,5f,5f,"ld e,a","ld e,a","ld e,a",acorn.asm,"LD	E,A"
2446,2446,2365,10bb,1019,57,57,"ld d,a","ld d,a","ld d,a",acorn.asm,"LD	D,A"
2447,2447,2366,10bc,101a,18 d6,18 d6,jr $-$28,jr $-$28,jr $-$00,acorn.asm,JR	PLOT4B
2448,2448,2367,10be,101c,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",acorn.asm,"MOUSE:          LD	A,128"
2449,2449,2368,10c0,101e,21 09 00,21 09 00,"ld hl,$0009","ld hl,$0009","ld hl,$0000",acorn.asm,"LD	HL,9"
2450,2450,2369,10c3,1021,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2451,2451,2370,10c6,1024,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2452,2452,2371,10c7,1025,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",acorn.asm,"LD	A,128"
2453,2453,2372,10c9,1027,21 08 00,21 08 00,"ld hl,$0008","ld hl,$0008","ld hl,$0000",acorn.asm,"LD	HL,8"
2454,2454,2373,10cc,102a,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2455,2455,2374,10cf,102d,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2456,2456,2375,10d0,102e,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",acorn.asm,"LD	A,128"
2457,2457,2376,10d2,1030,21 07 00,21 07 00,"ld hl,$0007","ld hl,$0007","ld hl,$0000",acorn.asm,"LD	HL,7"
2458,2458,2377,10d5,1033,cd d1 08,cd 6b 08,call $08d1,call $086b,call $0000,acorn.asm,CALL	OSBYTE
2459,2459,2378,10d8,1036,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2460,2460,2379,10d9,1037,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,acorn.asm,CALL	VAR_
2461,2461,2380,10dc,103a,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2462,2462,2381,10dd,103b,cd 7b 11,cd d9 10,call $117b,call $10d9,call $0000,acorn.asm,CALL	STOREI
2463,2463,2382,10e0,103e,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,acorn.asm,CALL	COMMA
2464,2464,2383,10e3,1041,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,acorn.asm,CALL	NXT
2465,2465,2384,10e6,1044,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,acorn.asm,CALL	VAR_
2466,2466,2385,10e9,1047,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2467,2467,2386,10ea,1048,cd 7b 11,cd d9 10,call $117b,call $10d9,call $0000,acorn.asm,CALL	STOREI
2468,2468,2387,10ed,104b,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,acorn.asm,CALL	COMMA
2469,2469,2388,10f0,104e,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,acorn.asm,CALL	NXT
2470,2470,2389,10f3,1051,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,acorn.asm,CALL	VAR_
2471,2471,2390,10f6,1054,e1,e1,pop hl,pop hl,pop hl,acorn.asm,POP	HL
2472,2472,2391,10f7,1055,cd 7b 11,cd d9 10,call $117b,call $10d9,call $0000,acorn.asm,CALL	STOREI
2473,2473,2392,10fa,1058,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,acorn.asm,XEQGO2:         JP	XEQ
2474,2474,2393,10fd,105b,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,acorn.asm,WAIT:           CALL	TERMQ
2475,2475,2394,1100,105e,28 f8,28 f8,"jr z,$-$06","jr z,$-$06","jr z,$-$00",acorn.asm,"JR	Z,XEQGO2"
2476,2476,2395,1102,1060,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,acorn.asm,CALL	EXPRI
2477,2477,2396,1105,1063,d9,d9,exx,exx,exx,acorn.asm,EXX
2478,2478,2397,1106,1064,44,44,"ld b,h","ld b,h","ld b,h",acorn.asm,"LD	B,H"
2479,2479,2398,1107,1065,4d,4d,"ld c,l","ld c,l","ld c,l",acorn.asm,"LD	C,L"
2480,2480,2399,1108,1066,cd ad 0d,cd 0b 0d,call $0dad,call $0d0b,call $0000,acorn.asm,CALL	GETIME
2481,2481,2400,110b,1069,09,09,"add hl,bc","add hl,bc","add hl,bc",acorn.asm,"ADD	HL,BC"
2482,2482,2401,110c,106a,01 00 00,01 00 00,"ld bc,$0000","ld bc,$0000","ld bc,$0000",acorn.asm,"LD	BC,0"
2483,2483,2402,110f,106d,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2484,2484,2403,1110,106e,ed 4a,ed 4a,"adc hl,bc","adc hl,bc","adc hl,bc",acorn.asm,"ADC	HL,BC"
2485,2485,2404,1112,1070,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2486,2486,2405,1113,1071,cd 35 06,cd 15 06,call $0635,call $0615,call $0000,acorn.asm,WAIT1:          CALL	TRAP
2487,2487,2406,1116,1074,d5,d5,push de,push de,push de,acorn.asm,PUSH	DE
2488,2488,2407,1117,1075,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2489,2489,2408,1118,1076,cd ad 0d,cd 0b 0d,call $0dad,call $0d0b,call $0000,acorn.asm,CALL	GETIME
2490,2490,2409,111b,1079,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2491,2491,2410,111c,107a,b7,b7,or a,or a,or a,acorn.asm,OR	A
2492,2492,2411,111d,107b,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",acorn.asm,"SBC	HL,BC"
2493,2493,2412,111f,107d,60,60,"ld h,b","ld h,b","ld h,b",acorn.asm,"LD	H,B"
2494,2494,2413,1120,107e,69,69,"ld l,c","ld l,c","ld l,c",acorn.asm,"LD	L,C"
2495,2495,2414,1121,107f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2496,2496,2415,1122,1080,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC
2497,2497,2416,1123,1081,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",acorn.asm,"SBC	HL,BC"
2498,2498,2417,1125,1083,30 d3,30 d3,"jr nc,$-$2b","jr nc,$-$2b","jr nc,$-$00",acorn.asm,"JR	NC,XEQGO2"
2499,2499,2418,1127,1085,eb,eb,"ex de,hl","ex de,hl","ex de,hl",acorn.asm,"EX	DE,HL"
2500,2500,2419,1128,1086,50,50,"ld d,b","ld d,b","ld d,b",acorn.asm,"LD	D,B"
2501,2501,2420,1129,1087,59,59,"ld e,c","ld e,c","ld e,c",acorn.asm,"LD	E,C"
2502,2502,2421,112a,1088,18 e7,18 e7,jr $-$17,jr $-$17,jr $-$00,acorn.asm,JR	WAIT1
2503,2503,2422,112c,108a,e1,e1,pop hl,pop hl,pop hl,acorn.asm,OSCALL:         POP	HL		;DITCH RETURN ADDRESS
2504,2504,2423,112d,108b,21 3f 11,21 9d 10,"ld hl,$113f","ld hl,$109d","ld hl,$0000",acorn.asm,"LD	HL,OSRET"
2505,2505,2424,1130,108e,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL		;NEW RETURN ADDRESS
2506,2506,2425,1131,108f,dd 7e 04,dd 7e 04,"ld a,(ix+$04)","ld a,(ix+$04)","ld a,(ix+$00)",acorn.asm,"LD	A,(IX+4)	;A%"
2507,2507,2426,1134,1092,dd 5e 14,dd 5e 14,"ld e,(ix+$14)","ld e,(ix+$14)","ld e,(ix+$00)",acorn.asm,"LD	E,(IX+20)	;E%"
2508,2508,2427,1137,1095,dd 66 64,dd 66 64,"ld h,(ix+$64)","ld h,(ix+$64)","ld h,(ix+$00)",acorn.asm,"LD	H,(IX+100)	;Y%"
2509,2509,2428,113a,1098,dd 6e 60,dd 6e 60,"ld l,(ix+$60)","ld l,(ix+$60)","ld l,(ix+$00)",acorn.asm,"LD	L,(IX+96)	;X%"
2510,2510,2429,113d,109b,fd e9,fd e9,jp (iy),jp (iy),jp (iy),acorn.asm,JP	(IY)
2511,2511,2430,113f,109d,f5,f5,push af,push af,push af,acorn.asm,OSRET:          PUSH	AF
2512,2512,2431,1140,109e,7d,7d,"ld a,l","ld a,l","ld a,l",acorn.asm,"LD	A,L		;F  H  L  A"
2513,2513,2432,1141,109f,6c,6c,"ld l,h","ld l,h","ld l,h",acorn.asm,"LD	L,H		;|  |  |  |"
2514,2514,2433,1142,10a0,d9,d9,exx,exx,exx,acorn.asm,EXX			;|  |  |  |
2515,2515,2434,1143,10a1,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC		;|  |  |  |
2516,2516,2435,1144,10a2,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A		;|  |  |  |"
2517,2517,2436,1145,10a3,68,68,"ld l,b","ld l,b","ld l,b",acorn.asm,"LD	L,B		;H  L  H' L'"
2518,2518,2437,1146,10a4,79,79,"ld a,c","ld a,c","ld a,c",acorn.asm,"LD	A,C"
2519,2519,2438,1147,10a5,d9,d9,exx,exx,exx,acorn.asm,EXX
2520,2520,2439,1148,10a6,67,67,"ld h,a","ld h,a","ld h,a",acorn.asm,"LD	H,A"
2521,2521,2440,1149,10a7,c9,c9,ret,ret,ret,acorn.asm,RET
2522,2522,2441,114a,10a8,06 19,06 19,"ld b,$19","ld b,$19","ld b,$00",acorn.asm,"VDU25:          LD	B,25"
2523,2523,2442,114c,10aa,78,78,"ld a,b","ld a,b","ld a,b",acorn.asm,"WRCH6:          LD	A,B"
2524,2524,2443,114d,10ab,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2525,2525,2444,1150,10ae,79,79,"ld a,c","ld a,c","ld a,c",acorn.asm,"WRCH5:          LD	A,C"
2526,2526,2445,1151,10af,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2527,2527,2446,1154,10b2,7b,7b,"ld a,e","ld a,e","ld a,e",acorn.asm,"WRCH4:          LD	A,E"
2528,2528,2447,1155,10b3,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2529,2529,2448,1158,10b6,7a,7a,"ld a,d","ld a,d","ld a,d",acorn.asm,"WRCH3:          LD	A,D"
2530,2530,2449,1159,10b7,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2531,2531,2450,115c,10ba,7d,7d,"ld a,l","ld a,l","ld a,l",acorn.asm,"WRCH2:          LD	A,L"
2532,2532,2451,115d,10bb,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,acorn.asm,CALL	OSWRCH
2533,2533,2452,1160,10be,7c,7c,"ld a,h","ld a,h","ld a,h",acorn.asm,"LD	A,H"
2534,2534,2453,1161,10bf,c3 97 05,c3 93 05,jp $0597,jp $0593,jp $0000,acorn.asm,JP	OSWRCH
2535,2535,2454,1164,10c2,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,EXPR3:          CALL	CEXPRI
2536,2536,2455,1167,10c5,d9,d9,exx,exx,exx,acorn.asm,EXX
2537,2537,2456,1168,10c6,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2538,2538,2457,1169,10c7,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2539,2539,2458,116c,10ca,d9,d9,exx,exx,exx,acorn.asm,EXX
2540,2540,2459,116d,10cb,e5,e5,push hl,push hl,push hl,acorn.asm,PUSH	HL
2541,2541,2460,116e,10cc,cd 75 11,cd d3 10,call $1175,call $10d3,call $0000,acorn.asm,CALL	CEXPRI
2542,2542,2461,1171,10cf,d9,d9,exx,exx,exx,acorn.asm,EXX
2543,2543,2462,1172,10d0,c1,c1,pop bc,pop bc,pop bc,acorn.asm,POP	BC		;x2
2544,2544,2463,1173,10d1,d1,d1,pop de,pop de,pop de,acorn.asm,POP	DE		;y1
2545,2545,2464,1174,10d2,c9,c9,ret,ret,ret,acorn.asm,RET
2546,2546,2465,1175,10d3,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,acorn.asm,CEXPRI:         CALL	COMMA
2547,2547,2466,1178,10d6,c3 b7 18,c3 15 18,jp $18b7,jp $1815,jp $0000,acorn.asm,JP	EXPRI
2548,2548,2467,117b,10d9,cb 7f,cb 7f,"bit 7,a","bit 7,a","bit 7,a",acorn.asm,"STOREI:         BIT	7,A"
2549,2549,2468,117d,10db,20 0c,20 0c,"jr nz,$+$0e","jr nz,$+$0e","jr nz,$+$00",acorn.asm,"JR	NZ,EEK"
2550,2550,2469,117f,10dd,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",acorn.asm,"BIT	6,A"
2551,2551,2470,1181,10df,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",acorn.asm,"JR	NZ,EEK"
2552,2552,2471,1183,10e1,d9,d9,exx,exx,exx,acorn.asm,EXX
2553,2553,2472,1184,10e2,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",acorn.asm,"LD	HL,0"
2554,2554,2473,1187,10e5,4d,4d,"ld c,l","ld c,l","ld c,l",acorn.asm,"LD	C,L"
2555,2555,2474,1188,10e6,c3 74 32,c3 d2 31,jp $3274,jp $31d2,jp $0000,acorn.asm,JP	STOREN
2556,2556,2475,118b,10e9,3e 32,3e 32,"ld a,$32","ld a,$32","ld a,$00",acorn.asm,"EEK:            LD	A,50"
2557,2557,2476,118d,10eb,cd d9 3f,cd 37 3f,call $3fd9,call $3f37,call $0000,acorn.asm,CALL	EXTERR
2558,2558,2477,1190,10ee,13,13,inc de,inc de,inc de,acorn.asm,DB	13H		;'Bad '
2559,2559,2478,1191,10ef,04,04,inc b,inc b,inc b,acorn.asm,DB	04H		;'MOUSE'
2560,2560,2479,1192,10f0,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",acorn.asm,DB	20H
2561,2561,2480,1194,10f2,00,00,nop,nop,nop,acorn.asm,DB	0
2562,2562,2481,1195,10f3,af,af,xor a,xor a,xor a,acorn.asm,XOR	A
2563,2563,2482,1196,10f4,cd d9 3f,cd 37 3f,call $3fd9,call $3f37,call $0000,acorn.asm,CALL	EXTERR
2564,2564,2483,1199,10f7,53,53,"ld d,e","ld d,e","ld d,e",acorn.asm,"DB	""Sorry"""
2565,2565,2484,119a,10f8,6f,6f,"ld l,a","ld l,a","ld l,a",acorn.asm,
2566,2566,2485,119b,10f9,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",acorn.asm,
2567,2567,2486,119c,10fa,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",acorn.asm,
2568,2568,2487,119d,10fb,79,79,"ld a,c","ld a,c","ld a,c",acorn.asm,
2569,2569,2488,119e,10fc,00,00,nop,nop,nop,acorn.asm,DB	0
2570,2570,2489,119f,10fd,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,ASSEM:          CALL	SKIP
2571,2571,2490,11a2,1100,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,INC	IY
2572,2572,2491,11a4,1102,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,asmb.asm,CP	':'
2573,2573,2492,11a6,1104,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",asmb.asm,"JR	Z,ASSEM"
2574,2574,2493,11a8,1106,fe 5d,fe 5d,cp $5d,cp $5d,cp $00,asmb.asm,CP	']'
2575,2575,2494,11aa,1108,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2576,2576,2495,11ab,1109,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,asmb.asm,CP	CR
2577,2577,2496,11ad,110b,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2578,2578,2497,11ae,110c,fd 2b,fd 2b,dec iy,dec iy,dec iy,asmb.asm,DEC	IY
2579,2579,2498,11b0,110e,dd 2a 40 55,dd 2a 40 54,"ld ix,($5540)","ld ix,($5440)","ld ix,($0000)",asmb.asm,"LD	IX,(PC)		;PROGRAM COUNTER"
2580,2580,2499,11b4,1112,21 fe 55,21 fe 54,"ld hl,$55fe","ld hl,$54fe","ld hl,$0000",asmb.asm,"LD	HL,LISTON"
2581,2581,2500,11b7,1115,cb 76,cb 76,"bit 6,(hl)","bit 6,(hl)","bit 6,(hl)",asmb.asm,"BIT	6,(HL)"
2582,2582,2501,11b9,1117,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",asmb.asm,"JR	Z,ASSEM0"
2583,2583,2502,11bb,1119,dd 2a 3c 55,dd 2a 3c 54,"ld ix,($553c)","ld ix,($543c)","ld ix,($0000)",asmb.asm,"LD	IX,(OC)		;ORIGIN of CODE"
2584,2584,2503,11bf,111d,dd e5,dd e5,push ix,push ix,push ix,asmb.asm,ASSEM0:         PUSH	IX
2585,2585,2504,11c1,111f,fd e5,fd e5,push iy,push iy,push iy,asmb.asm,PUSH	IY
2586,2586,2505,11c3,1121,cd 53 12,cd b1 11,call $1253,call $11b1,call $0000,asmb.asm,CALL	ASMB
2587,2587,2506,11c6,1124,c1,c1,pop bc,pop bc,pop bc,asmb.asm,POP	BC
2588,2588,2507,11c7,1125,d1,d1,pop de,pop de,pop de,asmb.asm,POP	DE
2589,2589,2508,11c8,1126,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2590,2590,2509,11c9,1127,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,CALL	SKIP
2591,2591,2510,11cc,112a,37,37,scf,scf,scf,asmb.asm,SCF
2592,2592,2511,11cd,112b,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
2593,2593,2512,11ce,112c,fd 2b,fd 2b,dec iy,dec iy,dec iy,asmb.asm,DEC	IY
2594,2594,2513,11d0,112e,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,ASSEM3:         INC	IY
2595,2595,2514,11d2,1130,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",asmb.asm,"LD	A,(IY)"
2596,2596,2515,11d5,1133,cd 4b 15,cd a9 14,call $154b,call $14a9,call $0000,asmb.asm,CALL	TERM0
2597,2597,2516,11d8,1136,20 f6,20 f6,"jr nz,$-$08","jr nz,$-$08","jr nz,$-$00",asmb.asm,"JR	NZ,ASSEM3"
2598,2598,2517,11da,1138,3a fe 55,3a fe 54,"ld a,($55fe)","ld a,($54fe)","ld a,($0000)",asmb.asm,"LD	A,(LISTON)"
2599,2599,2518,11dd,113b,dd e5,dd e5,push ix,push ix,push ix,asmb.asm,PUSH	IX
2600,2600,2519,11df,113d,e1,e1,pop hl,pop hl,pop hl,asmb.asm,POP	HL
2601,2601,2520,11e0,113e,b7,b7,or a,or a,or a,asmb.asm,OR	A
2602,2602,2521,11e1,113f,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",asmb.asm,"SBC	HL,DE"
2603,2603,2522,11e3,1141,eb,eb,"ex de,hl","ex de,hl","ex de,hl",asmb.asm,"EX	DE,HL		;DE= NO. OF BYTES"
2604,2604,2523,11e4,1142,e5,e5,push hl,push hl,push hl,asmb.asm,PUSH	HL
2605,2605,2524,11e5,1143,2a 40 55,2a 40 54,"ld hl,($5540)","ld hl,($5440)","ld hl,($0000)",asmb.asm,"LD	HL,(PC)"
2606,2606,2525,11e8,1146,e5,e5,push hl,push hl,push hl,asmb.asm,PUSH	HL
2607,2607,2526,11e9,1147,19,19,"add hl,de","add hl,de","add hl,de",asmb.asm,"ADD	HL,DE"
2608,2608,2527,11ea,1148,22 40 55,22 40 54,"ld ($5540),hl","ld ($5440),hl","ld ($0000),hl",asmb.asm,"LD	(PC),HL		;UPDATE PC"
2609,2609,2528,11ed,114b,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",asmb.asm,"BIT	6,A"
2610,2610,2529,11ef,114d,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",asmb.asm,"JR	Z,ASSEM5"
2611,2611,2530,11f1,114f,2a 3c 55,2a 3c 54,"ld hl,($553c)","ld hl,($543c)","ld hl,($0000)",asmb.asm,"LD	HL,(OC)"
2612,2612,2531,11f4,1152,19,19,"add hl,de","add hl,de","add hl,de",asmb.asm,"ADD	HL,DE"
2613,2613,2532,11f5,1153,22 3c 55,22 3c 54,"ld ($553c),hl","ld ($543c),hl","ld ($0000),hl",asmb.asm,"LD	(OC),HL		;UPDATE OC"
2614,2614,2533,11f8,1156,e1,e1,pop hl,pop hl,pop hl,asmb.asm,ASSEM5:         POP	HL		;OLD PC
2615,2615,2534,11f9,1157,dd e1,dd e1,pop ix,pop ix,pop ix,asmb.asm,POP	IX		;CODE HERE
2616,2616,2535,11fb,1159,cb 67,cb 67,"bit 4,a","bit 4,a","bit 4,a",asmb.asm,"BIT	4,A"
2617,2617,2536,11fd,115b,28 a0,28 a0,"jr z,$-$5e","jr z,$-$5e","jr z,$-$00",asmb.asm,"JR	Z,ASSEM"
2618,2618,2537,11ff,115d,7c,7c,"ld a,h","ld a,h","ld a,h",asmb.asm,"LD	A,H"
2619,2619,2538,1200,115e,cd 3f 12,cd 9d 11,call $123f,call $119d,call $0000,asmb.asm,CALL	HEX
2620,2620,2539,1203,1161,7d,7d,"ld a,l","ld a,l","ld a,l",asmb.asm,"LD	A,L"
2621,2621,2540,1204,1162,cd 38 12,cd 96 11,call $1238,call $1196,call $0000,asmb.asm,CALL	HEXSP
2622,2622,2541,1207,1165,af,af,xor a,xor a,xor a,asmb.asm,XOR	A
2623,2623,2542,1208,1166,bb,bb,cp e,cp e,cp e,asmb.asm,CP	E
2624,2624,2543,1209,1167,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",asmb.asm,"JR	Z,ASSEM2"
2625,2625,2544,120b,1169,3a fb 55,3a fb 54,"ld a,($55fb)","ld a,($54fb)","ld a,($0000)",asmb.asm,"ASSEM1:         LD	A,(COUNT)"
2626,2626,2545,120e,116c,fe 11,fe 11,cp $11,cp $11,cp $00,asmb.asm,CP	17
2627,2627,2546,1210,116e,3e 05,3e 05,"ld a,$05","ld a,$05","ld a,$00",asmb.asm,"LD	A,5"
2628,2628,2547,1212,1170,d4 01 36,d4 5f 35,"call nc,$3601","call nc,$355f","call nc,$0000",asmb.asm,"CALL	NC,TABIT	;NEXT LINE"
2629,2629,2548,1215,1173,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",asmb.asm,"LD	A,(IX)"
2630,2630,2549,1218,1176,cd 38 12,cd 96 11,call $1238,call $1196,call $0000,asmb.asm,CALL	HEXSP
2631,2631,2550,121b,1179,dd 23,dd 23,inc ix,inc ix,inc ix,asmb.asm,INC	IX
2632,2632,2551,121d,117b,1d,1d,dec e,dec e,dec e,asmb.asm,DEC	E
2633,2633,2552,121e,117c,20 eb,20 eb,"jr nz,$-$13","jr nz,$-$13","jr nz,$-$00",asmb.asm,"JR	NZ,ASSEM1"
2634,2634,2553,1220,117e,3e 12,3e 12,"ld a,$12","ld a,$12","ld a,$00",asmb.asm,"ASSEM2:         LD	A,18"
2635,2635,2554,1222,1180,cd 01 36,cd 5f 35,call $3601,call $355f,call $0000,asmb.asm,CALL	TABIT
2636,2636,2555,1225,1183,fd e5,fd e5,push iy,push iy,push iy,asmb.asm,PUSH	IY
2637,2637,2556,1227,1185,e1,e1,pop hl,pop hl,pop hl,asmb.asm,POP	HL
2638,2638,2557,1228,1186,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",asmb.asm,"SBC	HL,BC"
2639,2639,2558,122a,1188,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",asmb.asm,"ASSEM4:         LD	A,(BC)"
2640,2640,2559,122b,1189,cd 9f 41,cd fd 40,call $419f,call $40fd,call $0000,asmb.asm,CALL	OUT
2641,2641,2560,122e,118c,03,03,inc bc,inc bc,inc bc,asmb.asm,INC	BC
2642,2642,2561,122f,118d,2d,2d,dec l,dec l,dec l,asmb.asm,DEC	L
2643,2643,2562,1230,118e,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",asmb.asm,"JR	NZ,ASSEM4"
2644,2644,2563,1232,1190,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,asmb.asm,CALL	CRLF
2645,2645,2564,1235,1193,c3 9f 11,c3 fd 10,jp $119f,jp $10fd,jp $0000,asmb.asm,JP	ASSEM
2646,2646,2565,1238,1196,cd 3f 12,cd 9d 11,call $123f,call $119d,call $0000,asmb.asm,HEXSP:          CALL	HEX
2647,2647,2566,123b,1199,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",asmb.asm,"LD	A,' '"
2648,2648,2567,123d,119b,18 11,18 11,jr $+$13,jr $+$13,jr $+$00,asmb.asm,JR	OUTCH1
2649,2649,2568,123f,119d,f5,f5,push af,push af,push af,asmb.asm,HEX:            PUSH	AF
2650,2650,2569,1240,119e,0f,0f,rrca,rrca,rrca,asmb.asm,RRCA
2651,2651,2570,1241,119f,0f,0f,rrca,rrca,rrca,asmb.asm,RRCA
2652,2652,2571,1242,11a0,0f,0f,rrca,rrca,rrca,asmb.asm,RRCA
2653,2653,2572,1243,11a1,0f,0f,rrca,rrca,rrca,asmb.asm,RRCA
2654,2654,2573,1244,11a2,cd 48 12,cd a6 11,call $1248,call $11a6,call $0000,asmb.asm,CALL	HEXOUT
2655,2655,2574,1247,11a5,f1,f1,pop af,pop af,pop af,asmb.asm,POP	AF
2656,2656,2575,1248,11a6,e6 0f,e6 0f,and $0f,and $0f,and $00,asmb.asm,HEXOUT:         AND	0FH
2657,2657,2576,124a,11a8,c6 90,c6 90,"add a,$90","add a,$90","add a,$00",asmb.asm,"ADD	A,90H"
2658,2658,2577,124c,11aa,27,27,daa,daa,daa,asmb.asm,DAA
2659,2659,2578,124d,11ab,ce 40,ce 40,"adc a,$40","adc a,$40","adc a,$00",asmb.asm,"ADC	A,40H"
2660,2660,2579,124f,11ad,27,27,daa,daa,daa,asmb.asm,DAA
2661,2661,2580,1250,11ae,c3 9f 41,c3 fd 40,jp $419f,jp $40fd,jp $0000,asmb.asm,OUTCH1:         JP	OUT
2662,2662,2581,1253,11b1,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,asmb.asm,ASMB:           CP	'.'
2663,2663,2582,1255,11b3,20 28,20 28,"jr nz,$+$2a","jr nz,$+$2a","jr nz,$+$00",asmb.asm,"JR	NZ,ASMB1"
2664,2664,2583,1257,11b5,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,INC	IY
2665,2665,2584,1259,11b7,dd e5,dd e5,push ix,push ix,push ix,asmb.asm,PUSH	IX
2666,2666,2585,125b,11b9,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,asmb.asm,CALL	VAR_
2667,2667,2586,125e,11bc,f5,f5,push af,push af,push af,asmb.asm,PUSH	AF
2668,2668,2587,125f,11bd,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,asmb.asm,CALL	ZERO
2669,2669,2588,1262,11c0,d9,d9,exx,exx,exx,asmb.asm,EXX
2670,2670,2589,1263,11c1,2a 40 55,2a 40 54,"ld hl,($5540)","ld hl,($5440)","ld hl,($0000)",asmb.asm,"LD	HL,(PC)"
2671,2671,2590,1266,11c4,d9,d9,exx,exx,exx,asmb.asm,EXX
2672,2672,2591,1267,11c5,3a fe 55,3a fe 54,"ld a,($55fe)","ld a,($54fe)","ld a,($0000)",asmb.asm,"LD	A,(LISTON)"
2673,2673,2592,126a,11c8,e6 20,e6 20,and $20,and $20,and $00,asmb.asm,AND	20H
2674,2674,2593,126c,11ca,20 0b,20 0b,"jr nz,$+$0d","jr nz,$+$0d","jr nz,$+$00",asmb.asm,"JR	NZ,ASMB0"
2675,2675,2594,126e,11cc,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",asmb.asm,"LD	A,(IX)"
2676,2676,2595,1271,11cf,dd b6 01,dd b6 01,or (ix+$01),or (ix+$01),or (ix+$00),asmb.asm,OR	(IX+1)
2677,2677,2596,1274,11d2,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",asmb.asm,"LD	A,3"
2678,2678,2597,1276,11d4,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",asmb.asm,"JP	NZ,ERROR_	;Multiple label"
2679,2679,2598,1279,11d7,f1,f1,pop af,pop af,pop af,asmb.asm,ASMB0:          POP	AF
2680,2680,2599,127a,11d8,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,asmb.asm,CALL	STOREN
2681,2681,2600,127d,11db,dd e1,dd e1,pop ix,pop ix,pop ix,asmb.asm,POP	IX
2682,2682,2601,127f,11dd,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,ASMB1:          CALL	SKIP
2683,2683,2602,1282,11e0,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2684,2684,2603,1283,11e1,fe d6,fe d6,cp $d6,cp $d6,cp $00,asmb.asm,CP	TCALL
2685,2685,2604,1285,11e3,0e c4,0e c4,"ld c,$c4","ld c,$c4","ld c,$00",asmb.asm,"LD	C,0C4H"
2686,2686,2605,1287,11e5,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,INC	IY
2687,2687,2606,1289,11e7,ca 76 13,ca d4 12,"jp z,$1376","jp z,$12d4","jp z,$0000",asmb.asm,"JP	Z,GRPC"
2688,2688,2607,128c,11ea,fd 2b,fd 2b,dec iy,dec iy,dec iy,asmb.asm,DEC	IY
2689,2689,2608,128e,11ec,21 51 15,21 af 14,"ld hl,$1551","ld hl,$14af","ld hl,$0000",asmb.asm,"LD	HL,OPCODS"
2690,2690,2609,1291,11ef,cd de 14,cd 3c 14,call $14de,call $143c,call $0000,asmb.asm,CALL	FIND
2691,2691,2610,1294,11f2,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2692,2692,2611,1295,11f3,48,48,"ld c,b","ld c,b","ld c,b",asmb.asm,"LD	C,B	;ROOT OPCODE"
2693,2693,2612,1296,11f4,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",asmb.asm,"LD	D,0	;CLEAR IX/IY FLAG"
2694,2694,2613,1298,11f6,d6 27,d6 27,sub $27,sub $27,sub $00,asmb.asm,SUB	39
2695,2695,2614,129a,11f8,30 07,30 07,"jr nc,$+$09","jr nc,$+$09","jr nc,$+$00",asmb.asm,"JR	NC,GROUP2"
2696,2696,2615,129c,11fa,fe e8,fe e8,cp $e8,cp $e8,cp $00,asmb.asm,CP	15-39
2697,2697,2616,129e,11fc,d4 44 14,d4 a2 13,"call nc,$1444","call nc,$13a2","call nc,$0000",asmb.asm,"CALL	NC,ED"
2698,2698,2617,12a1,11ff,18 68,18 68,jr $+$6a,jr $+$6a,jr $+$00,asmb.asm,JR	BYTE0
2699,2699,2618,12a3,1201,d6 0a,d6 0a,sub $0a,sub $0a,sub $00,asmb.asm,GROUP2:         SUB	10
2700,2700,2619,12a5,1203,30 0f,30 0f,"jr nc,$+$11","jr nc,$+$11","jr nc,$+$00",asmb.asm,"JR	NC,GROUP4"
2701,2701,2620,12a7,1205,fe f9,fe f9,cp $f9,cp $f9,cp $00,asmb.asm,CP	3-10
2702,2702,2621,12a9,1207,dc ce 14,dc 2c 14,"call c,$14ce","call c,$142c","call c,$0000",asmb.asm,"CALL	C,BIT"
2703,2703,2622,12ac,120a,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2704,2704,2623,12ad,120b,cd a3 14,cd 01 14,call $14a3,call $1401,call $0000,asmb.asm,CALL	REGLO
2705,2705,2624,12b0,120e,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2706,2706,2625,12b1,120f,cd 48 14,cd a6 13,call $1448,call $13a6,call $0000,asmb.asm,CALL	CB
2707,2707,2626,12b4,1212,18 55,18 55,jr $+$57,jr $+$57,jr $+$00,asmb.asm,JR	BYTE0
2708,2708,2627,12b6,1214,d6 03,d6 03,sub $03,sub $03,sub $00,asmb.asm,GROUP4:         SUB	3
2709,2709,2628,12b8,1216,30 06,30 06,"jr nc,$+$08","jr nc,$+$08","jr nc,$+$00",asmb.asm,"JR	NC,GROUP5"
2710,2710,2629,12ba,1218,cd c2 14,cd 20 14,call $14c2,call $1420,call $0000,asmb.asm,G4:             CALL	PAIRasm
2711,2711,2630,12bd,121b,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2712,2712,2631,12be,121c,18 4b,18 4b,jr $+$4d,jr $+$4d,jr $+$00,asmb.asm,JR	BYTE0
2713,2713,2632,12c0,121e,d6 0a,d6 0a,sub $0a,sub $0a,sub $00,asmb.asm,GROUP5:         SUB	8+2
2714,2714,2633,12c2,1220,30 32,30 32,"jr nc,$+$34","jr nc,$+$34","jr nc,$+$00",asmb.asm,"JR	NC,GROUP7"
2715,2715,2634,12c4,1222,fe fd,fe fd,cp $fd,cp $fd,cp $00,asmb.asm,CP	5-8
2716,2716,2635,12c6,1224,06 07,06 07,"ld b,$07","ld b,$07","ld b,$00",asmb.asm,"LD	B,7"
2717,2717,2636,12c8,1226,d4 56 14,d4 b4 13,"call nc,$1456","call nc,$13b4","call nc,$0000",asmb.asm,"CALL	NC,OPND"
2718,2718,2637,12cb,1229,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2719,2719,2638,12cc,122a,fe 07,fe 07,cp $07,cp $07,cp $00,asmb.asm,CP	7
2720,2720,2639,12ce,122c,20 10,20 10,"jr nz,$+$12","jr nz,$+$12","jr nz,$+$00",asmb.asm,"JR	NZ,G6HL"
2721,2721,2640,12d0,122e,cd a3 14,cd 01 14,call $14a3,call $1401,call $0000,asmb.asm,G6:             CALL	REGLO
2722,2722,2641,12d3,1231,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2723,2723,2642,12d4,1232,30 28,30 28,"jr nc,$+$2a","jr nc,$+$2a","jr nc,$+$00",asmb.asm,"JR	NC,BIND1"
2724,2724,2643,12d6,1234,ee 46,ee 46,xor $46,xor $46,xor $00,asmb.asm,XOR	46H
2725,2725,2644,12d8,1236,cd 4a 14,cd a8 13,call $144a,call $13a8,call $0000,asmb.asm,CALL	BIND
2726,2726,2645,12db,1239,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,DB:             CALL	NUMBER
2727,2727,2646,12de,123c,18 78,18 78,jr $+$7a,jr $+$7a,jr $+$00,asmb.asm,JR	VAL8
2728,2728,2647,12e0,123e,e6 3f,e6 3f,and $3f,and $3f,and $00,asmb.asm,G6HL:           AND	3FH
2729,2729,2648,12e2,1240,fe 0c,fe 0c,cp $0c,cp $0c,cp $00,asmb.asm,CP	12
2730,2730,2649,12e4,1242,37,37,scf,scf,scf,asmb.asm,SCF
2731,2731,2650,12e5,1243,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
2732,2732,2651,12e6,1244,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2733,2733,2652,12e7,1245,fe 80,fe 80,cp $80,cp $80,cp $00,asmb.asm,CP	80H
2734,2734,2653,12e9,1247,0e 09,0e 09,"ld c,$09","ld c,$09","ld c,$00",asmb.asm,"LD	C,9"
2735,2735,2654,12eb,1249,28 cd,28 cd,"jr z,$-$31","jr z,$-$31","jr z,$-$00",asmb.asm,"JR	Z,G4"
2736,2736,2655,12ed,124b,ee 1c,ee 1c,xor $1c,xor $1c,xor $00,asmb.asm,XOR	1CH
2737,2737,2656,12ef,124d,0f,0f,rrca,rrca,rrca,asmb.asm,RRCA
2738,2738,2657,12f0,124e,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"LD	C,A"
2739,2739,2658,12f1,124f,cd 44 14,cd a2 13,call $1444,call $13a2,call $0000,asmb.asm,CALL	ED
2740,2740,2659,12f4,1252,18 c4,18 c4,jr $-$3a,jr $-$3a,jr $-$00,asmb.asm,JR	G4
2741,2741,2660,12f6,1254,d6 02,d6 02,sub $02,sub $02,sub $00,asmb.asm,GROUP7:         SUB	2
2742,2742,2661,12f8,1256,30 14,30 14,"jr nc,$+$16","jr nc,$+$16","jr nc,$+$00",asmb.asm,"JR	NC,GROUP8"
2743,2743,2662,12fa,1258,cd a9 14,cd 07 14,call $14a9,call $1407,call $0000,asmb.asm,CALL	REGHI
2744,2744,2663,12fd,125b,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2745,2745,2664,12fe,125c,d2 4a 14,d2 a8 13,"jp nc,$144a","jp nc,$13a8","jp nc,$0000",asmb.asm,"BIND1:          JP	NC,BIND"
2746,2746,2665,1301,125f,ee 64,ee 64,xor $64,xor $64,xor $00,asmb.asm,XOR	64H
2747,2747,2666,1303,1261,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2748,2748,2667,1304,1262,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2749,2749,2668,1305,1263,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2750,2750,2669,1306,1264,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"LD	C,A"
2751,2751,2670,1307,1265,cd c6 14,cd 24 14,call $14c6,call $1424,call $0000,asmb.asm,CALL	PAIR1asm
2752,2752,2671,130a,1268,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2753,2753,2672,130b,1269,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"BYTE0:          LD	A,C"
2754,2754,2673,130c,126a,18 7f,18 7f,jr $+$81,jr $+$81,jr $+$00,asmb.asm,JR	BYTE2
2755,2755,2674,130e,126c,d6 02,d6 02,sub $02,sub $02,sub $00,asmb.asm,GROUP8:         SUB	2
2756,2756,2675,1310,126e,30 21,30 21,"jr nc,$+$23","jr nc,$+$23","jr nc,$+$00",asmb.asm,"JR	NC,GROUPA"
2757,2757,2676,1312,1270,fe ff,fe ff,cp $ff,cp $ff,cp $00,asmb.asm,CP	1-2
2758,2758,2677,1314,1272,cc 39 14,cc 97 13,"call z,$1439","call z,$1397","call z,$0000",asmb.asm,"CALL	Z,CORN"
2759,2759,2678,1317,1275,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,"EX	AF,AF'"
2760,2760,2679,1318,1276,cd a9 14,cd 07 14,call $14a9,call $1407,call $0000,asmb.asm,CALL	REGHI
2761,2761,2680,131b,1279,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2762,2762,2681,131c,127a,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,"EX	AF,AF'"
2763,2763,2682,131d,127b,dc 39 14,dc 97 13,"call c,$1439","call c,$1397","call c,$0000",asmb.asm,"CALL	C,CORN"
2764,2764,2683,1320,127e,24,24,inc h,inc h,inc h,asmb.asm,INC	H
2765,2765,2684,1321,127f,28 e8,28 e8,"jr z,$-$16","jr z,$-$16","jr z,$-$00",asmb.asm,"JR	Z,BYTE0"
2766,2766,2685,1323,1281,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2767,2767,2686,1324,1282,fe 07,fe 07,cp $07,cp $07,cp $00,asmb.asm,CP	7
2768,2768,2687,1326,1284,37,37,scf,scf,scf,asmb.asm,SCF
2769,2769,2688,1327,1285,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
2770,2770,2689,1328,1286,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2771,2771,2690,1329,1287,ee 03,ee 03,xor $03,xor $03,xor $00,asmb.asm,XOR	3
2772,2772,2691,132b,1289,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2773,2773,2692,132c,128a,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2774,2774,2693,132d,128b,07,07,rlca,rlca,rlca,asmb.asm,RLCA
2775,2775,2694,132e,128c,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,CALL	BYTE
2776,2776,2695,1331,128f,18 25,18 25,jr $+$27,jr $+$27,jr $+$00,asmb.asm,JR	VAL8
2777,2777,2696,1333,1291,d6 02,d6 02,sub $02,sub $02,sub $00,asmb.asm,GROUPA:         SUB	2
2778,2778,2697,1335,1293,30 24,30 24,"jr nc,$+$26","jr nc,$+$26","jr nc,$+$00",asmb.asm,"JR	NC,GROUPB"
2779,2779,2698,1337,1295,fe ff,fe ff,cp $ff,cp $ff,cp $00,asmb.asm,CP	1-2
2780,2780,2699,1339,1297,c4 af 14,c4 0d 14,"call nz,$14af","call nz,$140d","call nz,$0000",asmb.asm,"CALL	NZ,COND_"
2781,2781,2700,133c,129a,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2782,2782,2701,133d,129b,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",asmb.asm,"JR	NC,GRPA"
2783,2783,2702,133f,129d,3e 18,3e 18,"ld a,$18","ld a,$18","ld a,$00",asmb.asm,"LD	A,18H"
2784,2784,2703,1341,129f,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,GRPA:           CALL	BYTE
2785,2785,2704,1344,12a2,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,CALL	NUMBER
2786,2786,2705,1347,12a5,ed 5b 40 55,ed 5b 40 54,"ld de,($5540)","ld de,($5440)","ld de,($0000)",asmb.asm,"LD	DE,(PC)"
2787,2787,2706,134b,12a9,13,13,inc de,inc de,inc de,asmb.asm,INC	DE
2788,2788,2707,134c,12aa,37,37,scf,scf,scf,asmb.asm,SCF
2789,2789,2708,134d,12ab,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",asmb.asm,"SBC	HL,DE"
2790,2790,2709,134f,12ad,7d,7d,"ld a,l","ld a,l","ld a,l",asmb.asm,"LD	A,L"
2791,2791,2710,1350,12ae,17,17,rla,rla,rla,asmb.asm,RLA
2792,2792,2711,1351,12af,9f,9f,"sbc a,a","sbc a,a","sbc a,a",asmb.asm,"SBC	A,A"
2793,2793,2712,1352,12b0,bc,bc,cp h,cp h,cp h,asmb.asm,CP	H
2794,2794,2713,1353,12b1,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",asmb.asm,"TOOFAR:         LD	A,1"
2795,2795,2714,1355,12b3,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",asmb.asm,"JP	NZ,ERROR_	;""Out of range"""
2796,2796,2715,1358,12b6,7d,7d,"ld a,l","ld a,l","ld a,l",asmb.asm,"VAL8:           LD	A,L"
2797,2797,2716,1359,12b7,18 32,18 32,jr $+$34,jr $+$34,jr $+$00,asmb.asm,JR	BYTE2
2798,2798,2717,135b,12b9,47,47,"ld b,a","ld b,a","ld b,a",asmb.asm,"GROUPB:         LD	B,A"
2799,2799,2718,135c,12ba,20 16,20 16,"jr nz,$+$18","jr nz,$+$18","jr nz,$+$00",asmb.asm,"JR	NZ,GROUPC"
2800,2800,2719,135e,12bc,cd af 14,cd 0d 14,call $14af,call $140d,call $0000,asmb.asm,CALL	COND_
2801,2801,2720,1361,12bf,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2802,2802,2721,1362,12c0,30 0b,30 0b,"jr nc,$+$0d","jr nc,$+$0d","jr nc,$+$00",asmb.asm,"JR	NC,GRPB"
2803,2803,2722,1364,12c2,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2804,2804,2723,1365,12c3,e6 3f,e6 3f,and $3f,and $3f,and $00,asmb.asm,AND	3FH
2805,2805,2724,1367,12c5,fe 06,fe 06,cp $06,cp $06,cp $00,asmb.asm,CP	6
2806,2806,2725,1369,12c7,3e e9,3e e9,"ld a,$e9","ld a,$e9","ld a,$00",asmb.asm,"LD	A,0E9H"
2807,2807,2726,136b,12c9,28 20,28 20,"jr z,$+$22","jr z,$+$22","jr z,$+$00",asmb.asm,"JR	Z,BYTE2"
2808,2808,2727,136d,12cb,3e c3,3e c3,"ld a,$c3","ld a,$c3","ld a,$00",asmb.asm,"LD	A,0C3H"
2809,2809,2728,136f,12cd,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,GRPB:           CALL	BYTE
2810,2810,2729,1372,12d0,18 05,18 05,jr $+$07,jr $+$07,jr $+$00,asmb.asm,JR	ADDR_
2811,2811,2730,1374,12d2,10 0c,10 0c,djnz $+$0e,djnz $+$0e,djnz $+$00,asmb.asm,GROUPC:         DJNZ	GROUPD
2812,2812,2731,1376,12d4,cd 91 13,cd ef 12,call $1391,call $12ef,call $0000,asmb.asm,GRPC:           CALL	GRPE
2813,2813,2732,1379,12d7,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,ADDR_:          CALL	NUMBER
2814,2814,2733,137c,12da,cd 58 13,cd b6 12,call $1358,call $12b6,call $0000,asmb.asm,VAL16:          CALL	VAL8
2815,2815,2734,137f,12dd,7c,7c,"ld a,h","ld a,h","ld a,h",asmb.asm,"LD	A,H"
2816,2816,2735,1380,12de,18 0b,18 0b,jr $+$0d,jr $+$0d,jr $+$00,asmb.asm,JR	BYTE2
2817,2817,2736,1382,12e0,10 0b,10 0b,djnz $+$0d,djnz $+$0d,djnz $+$00,asmb.asm,GROUPD:         DJNZ	GROUPE
2818,2818,2737,1384,12e2,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,CALL	NUMBER
2819,2819,2738,1387,12e5,a1,a1,and c,and c,and c,asmb.asm,AND	C
2820,2820,2739,1388,12e6,b4,b4,or h,or h,or h,asmb.asm,OR	H
2821,2821,2740,1389,12e7,20 c8,20 c8,"jr nz,$-$36","jr nz,$-$36","jr nz,$-$00",asmb.asm,"JR	NZ,TOOFAR"
2822,2822,2741,138b,12e9,7d,7d,"ld a,l","ld a,l","ld a,l",asmb.asm,"LD	A,L"
2823,2823,2742,138c,12ea,b1,b1,or c,or c,or c,asmb.asm,OR	C
2824,2824,2743,138d,12eb,18 78,18 78,jr $+$7a,jr $+$7a,jr $+$00,asmb.asm,BYTE2:          JR	BYTE1
2825,2825,2744,138f,12ed,10 0a,10 0a,djnz $+$0c,djnz $+$0c,djnz $+$00,asmb.asm,GROUPE:         DJNZ	GROUPF
2826,2826,2745,1391,12ef,cd af 14,cd 0d 14,call $14af,call $140d,call $0000,asmb.asm,GRPE:           CALL	COND_
2827,2827,2746,1394,12f2,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2828,2828,2747,1395,12f3,30 70,30 70,"jr nc,$+$72","jr nc,$+$72","jr nc,$+$00",asmb.asm,"JR	NC,BYTE1"
2829,2829,2748,1397,12f5,f6 09,f6 09,or $09,or $09,or $00,asmb.asm,OR	9
2830,2830,2749,1399,12f7,18 6c,18 6c,jr $+$6e,jr $+$6e,jr $+$00,asmb.asm,JR	BYTE1
2831,2831,2750,139b,12f9,10 6c,10 6c,djnz $+$6e,djnz $+$6e,djnz $+$00,asmb.asm,GROUPF:         DJNZ	MISC
2832,2832,2751,139d,12fb,cd db 14,cd 39 14,call $14db,call $1439,call $0000,asmb.asm,CALL	LDOP
2833,2833,2752,13a0,12fe,30 5f,30 5f,"jr nc,$+$61","jr nc,$+$61","jr nc,$+$00",asmb.asm,"JR	NC,LDA"
2834,2834,2753,13a2,1300,cd a9 14,cd 07 14,call $14a9,call $1407,call $0000,asmb.asm,CALL	REGHI
2835,2835,2754,13a5,1303,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,"EX	AF,AF'"
2836,2836,2755,13a6,1304,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,CALL	SKIP
2837,2837,2756,13a9,1307,fe 28,fe 28,cp $28,cp $28,cp $00,asmb.asm,CP	'('
2838,2838,2757,13ab,1309,28 1d,28 1d,"jr z,$+$1f","jr z,$+$1f","jr z,$+$00",asmb.asm,"JR	Z,LDIN"
2839,2839,2758,13ad,130b,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,"EX	AF,AF'"
2840,2840,2759,13ae,130c,d2 d0 12,d2 2e 12,"jp nc,$12d0","jp nc,$122e","jp nc,$0000",asmb.asm,"JP	NC,G6"
2841,2841,2760,13b1,130f,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",asmb.asm,"LD	C,1"
2842,2842,2761,13b3,1311,cd c6 14,cd 24 14,call $14c6,call $1424,call $0000,asmb.asm,CALL	PAIR1asm
2843,2843,2762,13b6,1314,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2844,2844,2763,13b7,1315,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",asmb.asm,"LD	A,14"
2845,2845,2764,13b9,1317,b8,b8,cp b,cp b,cp b,asmb.asm,CP	B
2846,2846,2765,13ba,1318,47,47,"ld b,a","ld b,a","ld b,a",asmb.asm,"LD	B,A"
2847,2847,2766,13bb,1319,cc c2 14,cc 20 14,"call z,$14c2","call z,$1420","call z,$0000",asmb.asm,"CALL	Z,PAIRasm"
2848,2848,2767,13be,131c,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2849,2849,2768,13bf,131d,e6 3f,e6 3f,and $3f,and $3f,and $00,asmb.asm,AND	3FH
2850,2850,2769,13c1,131f,fe 0c,fe 0c,cp $0c,cp $0c,cp $00,asmb.asm,CP	12
2851,2851,2770,13c3,1321,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2852,2852,2771,13c4,1322,20 a9,20 a9,"jr nz,$-$55","jr nz,$-$55","jr nz,$-$00",asmb.asm,"JR	NZ,GRPB"
2853,2853,2772,13c6,1324,3e f9,3e f9,"ld a,$f9","ld a,$f9","ld a,$00",asmb.asm,"LD	A,0F9H"
2854,2854,2773,13c8,1326,18 3d,18 3d,jr $+$3f,jr $+$3f,jr $+$00,asmb.asm,JR	BYTE1
2855,2855,2774,13ca,1328,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,"LDIN:           EX	AF,AF'"
2856,2856,2775,13cb,1329,c5,c5,push bc,push bc,push bc,asmb.asm,PUSH	BC
2857,2857,2776,13cc,132a,d4 a3 14,d4 01 14,"call nc,$14a3","call nc,$1401","call nc,$0000",asmb.asm,"CALL	NC,REGLO"
2858,2858,2777,13cf,132d,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2859,2859,2778,13d0,132e,c1,c1,pop bc,pop bc,pop bc,asmb.asm,POP	BC
2860,2860,2779,13d1,132f,30 77,30 77,"jr nc,$+$79","jr nc,$+$79","jr nc,$+$00",asmb.asm,"JR	NC,BIND"
2861,2861,2780,13d3,1331,0e 0a,0e 0a,"ld c,$0a","ld c,$0a","ld c,$00",asmb.asm,"LD	C,0AH"
2862,2862,2781,13d5,1333,cd c6 14,cd 24 14,call $14c6,call $1424,call $0000,asmb.asm,CALL	PAIR1asm
2863,2863,2782,13d8,1336,cd 20 14,cd 7e 13,call $1420,call $137e,call $0000,asmb.asm,CALL	LD16
2864,2864,2783,13db,1339,30 92,30 92,"jr nc,$-$6c","jr nc,$-$6c","jr nc,$-$00",asmb.asm,"JR	NC,GRPB"
2865,2865,2784,13dd,133b,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,CALL	NUMBER
2866,2866,2785,13e0,133e,0e 02,0e 02,"ld c,$02","ld c,$02","ld c,$00",asmb.asm,"LD	C,2"
2867,2867,2786,13e2,1340,cd c2 14,cd 20 14,call $14c2,call $1420,call $0000,asmb.asm,CALL	PAIRasm
2868,2868,2787,13e5,1343,cd 20 14,cd 7e 13,call $1420,call $137e,call $0000,asmb.asm,CALL	LD16
2869,2869,2788,13e8,1346,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2870,2870,2789,13e9,1347,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,CALL	BYTE
2871,2871,2790,13ec,134a,18 8e,18 8e,jr $-$70,jr $-$70,jr $-$00,asmb.asm,JR	VAL16
2872,2872,2791,13ee,134c,05,05,dec b,dec b,dec b,asmb.asm,OPT:            DEC	B
2873,2873,2792,13ef,134d,ca db 12,ca 39 12,"jp z,$12db","jp z,$1239","jp z,$0000",asmb.asm,"JP	Z,DB"
2874,2874,2793,13f2,1350,10 85,10 85,djnz $-$79,djnz $-$79,djnz $-$00,asmb.asm,DJNZ	ADDR_
2875,2875,2794,13f4,1352,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,CALL	NUMBER
2876,2876,2795,13f7,1355,21 fe 55,21 fe 54,"ld hl,$55fe","ld hl,$54fe","ld hl,$0000",asmb.asm,"LD	HL,LISTON"
2877,2877,2796,13fa,1358,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"LD	C,A"
2878,2878,2797,13fb,1359,ed 6f,ed 6f,rld,rld,rld,asmb.asm,RLD
2879,2879,2798,13fd,135b,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2880,2880,2799,13fe,135c,ed 67,ed 67,rrd,rrd,rrd,asmb.asm,RRD
2881,2881,2800,1400,135e,c9,c9,ret,ret,ret,asmb.asm,RET
2882,2882,2801,1401,135f,fe 04,fe 04,cp $04,cp $04,cp $00,asmb.asm,LDA:            CP	4
2883,2883,2802,1403,1361,dc 44 14,dc a2 13,"call c,$1444","call c,$13a2","call c,$0000",asmb.asm,"CALL	C,ED"
2884,2884,2803,1406,1364,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2885,2885,2804,1407,1365,18 6d,18 6d,jr $+$6f,jr $+$6f,jr $+$00,asmb.asm,BYTE1:          JR	BYTE
2886,2886,2805,1409,1367,10 e3,10 e3,djnz $-$1b,djnz $-$1b,djnz $-$00,asmb.asm,MISC:           DJNZ	OPT
2887,2887,2806,140b,1369,dd e5,dd e5,push ix,push ix,push ix,asmb.asm,PUSH	IX
2888,2888,2807,140d,136b,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,asmb.asm,CALL	EXPRS
2889,2889,2808,1410,136e,dd e1,dd e1,pop ix,pop ix,pop ix,asmb.asm,POP	IX
2890,2890,2809,1412,1370,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",asmb.asm,"LD	HL,ACCS"
2891,2891,2810,1415,1373,af,af,xor a,xor a,xor a,asmb.asm,DEFM1:          XOR	A
2892,2892,2811,1416,1374,bb,bb,cp e,cp e,cp e,asmb.asm,CP	E
2893,2893,2812,1417,1375,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2894,2894,2813,1418,1376,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",asmb.asm,"LD	A,(HL)"
2895,2895,2814,1419,1377,23,23,inc hl,inc hl,inc hl,asmb.asm,INC	HL
2896,2896,2815,141a,1378,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,CALL	BYTE
2897,2897,2816,141d,137b,1d,1d,dec e,dec e,dec e,asmb.asm,DEC	E
2898,2898,2817,141e,137c,18 f5,18 f5,jr $-$09,jr $-$09,jr $-$00,asmb.asm,JR	DEFM1
2899,2899,2818,1420,137e,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD16:           LD	A,B"
2900,2900,2819,1421,137f,38 0e,38 0e,"jr c,$+$10","jr c,$+$10","jr c,$+$00",asmb.asm,"JR	C,LD8"
2901,2901,2820,1423,1381,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2902,2902,2821,1424,1382,e6 3f,e6 3f,and $3f,and $3f,and $00,asmb.asm,AND	3FH
2903,2903,2822,1426,1384,fe 0c,fe 0c,cp $0c,cp $0c,cp $00,asmb.asm,CP	12
2904,2904,2823,1428,1386,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2905,2905,2824,1429,1387,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2906,2906,2825,142a,1388,cd 44 14,cd a2 13,call $1444,call $13a2,call $0000,asmb.asm,CALL	ED
2907,2907,2826,142d,138b,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2908,2908,2827,142e,138c,f6 43,f6 43,or $43,or $43,or $00,asmb.asm,OR	43H
2909,2909,2828,1430,138e,c9,c9,ret,ret,ret,asmb.asm,RET
2910,2910,2829,1431,138f,fe 07,fe 07,cp $07,cp $07,cp $00,asmb.asm,LD8:            CP	7
2911,2911,2830,1433,1391,37,37,scf,scf,scf,asmb.asm,SCF
2912,2912,2831,1434,1392,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
2913,2913,2832,1435,1393,79,79,"ld a,c","ld a,c","ld a,c",asmb.asm,"LD	A,C"
2914,2914,2833,1436,1394,f6 30,f6 30,or $30,or $30,or $00,asmb.asm,OR	30H
2915,2915,2834,1438,1396,c9,c9,ret,ret,ret,asmb.asm,RET
2916,2916,2835,1439,1397,c5,c5,push bc,push bc,push bc,asmb.asm,CORN:           PUSH	BC
2917,2917,2836,143a,1398,cd 56 14,cd b4 13,call $1456,call $13b4,call $0000,asmb.asm,CALL	OPND
2918,2918,2837,143d,139b,cb 68,cb 68,"bit 5,b","bit 5,b","bit 5,b",asmb.asm,"BIT	5,B"
2919,2919,2838,143f,139d,c1,c1,pop bc,pop bc,pop bc,asmb.asm,POP	BC
2920,2920,2839,1440,139e,28 44,28 44,"jr z,$+$46","jr z,$+$46","jr z,$+$00",asmb.asm,"JR	Z,NUMBER"
2921,2921,2840,1442,13a0,26 ff,26 ff,"ld h,$ff","ld h,$ff","ld h,$00",asmb.asm,"LD	H,-1"
2922,2922,2841,1444,13a2,3e ed,3e ed,"ld a,$ed","ld a,$ed","ld a,$00",asmb.asm,"ED:             LD	A,0EDH"
2923,2923,2842,1446,13a4,18 2e,18 2e,jr $+$30,jr $+$30,jr $+$00,asmb.asm,JR	BYTE
2924,2924,2843,1448,13a6,3e cb,3e cb,"ld a,$cb","ld a,$cb","ld a,$00",asmb.asm,"CB:             LD	A,0CBH"
2925,2925,2844,144a,13a8,fe 76,fe 76,cp $76,cp $76,cp $00,asmb.asm,BIND:           CP	76H
2926,2926,2845,144c,13aa,37,37,scf,scf,scf,asmb.asm,SCF
2927,2927,2846,144d,13ab,c8,c8,ret z,ret z,ret z,asmb.asm,"RET	Z		;REJECT LD (HL),(HL)"
2928,2928,2847,144e,13ac,cd 76 14,cd d4 13,call $1476,call $13d4,call $0000,asmb.asm,CALL	BYTE
2929,2929,2848,1451,13af,14,14,inc d,inc d,inc d,asmb.asm,INC	D
2930,2930,2849,1452,13b0,f0,f0,ret p,ret p,ret p,asmb.asm,RET	P
2931,2931,2850,1453,13b1,7b,7b,"ld a,e","ld a,e","ld a,e",asmb.asm,"LD	A,E"
2932,2932,2851,1454,13b2,18 20,18 20,jr $+$22,jr $+$22,jr $+$00,asmb.asm,JR	BYTE
2933,2933,2852,1456,13b4,e5,e5,push hl,push hl,push hl,asmb.asm,OPND:           PUSH	HL
2934,2934,2853,1457,13b5,21 98 16,21 f6 15,"ld hl,$1698","ld hl,$15f6","ld hl,$0000",asmb.asm,"LD	HL,OPRNDS"
2935,2935,2854,145a,13b8,cd de 14,cd 3c 14,call $14de,call $143c,call $0000,asmb.asm,CALL	FIND
2936,2936,2855,145d,13bb,e1,e1,pop hl,pop hl,pop hl,asmb.asm,POP	HL
2937,2937,2856,145e,13bc,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2938,2938,2857,145f,13bd,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",asmb.asm,"BIT	7,B"
2939,2939,2858,1461,13bf,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2940,2940,2859,1462,13c0,cb 58,cb 58,"bit 3,b","bit 3,b","bit 3,b",asmb.asm,"BIT	3,B"
2941,2941,2860,1464,13c2,e5,e5,push hl,push hl,push hl,asmb.asm,PUSH	HL
2942,2942,2861,1465,13c3,cc 7d 14,cc db 13,"call z,$147d","call z,$13db","call z,$0000",asmb.asm,"CALL	Z,OFFSETasm"
2943,2943,2862,1468,13c6,5d,5d,"ld e,l","ld e,l","ld e,l",asmb.asm,"LD	E,L"
2944,2944,2863,1469,13c7,e1,e1,pop hl,pop hl,pop hl,asmb.asm,POP	HL
2945,2945,2864,146a,13c8,3e dd,3e dd,"ld a,$dd","ld a,$dd","ld a,$00",asmb.asm,"LD	A,0DDH"
2946,2946,2865,146c,13ca,cb 70,cb 70,"bit 6,b","bit 6,b","bit 6,b",asmb.asm,"BIT	6,B"
2947,2947,2866,146e,13cc,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",asmb.asm,"JR	Z,OP1"
2948,2948,2867,1470,13ce,3e fd,3e fd,"ld a,$fd","ld a,$fd","ld a,$00",asmb.asm,"LD	A,0FDH"
2949,2949,2868,1472,13d0,b7,b7,or a,or a,or a,asmb.asm,OP1:            OR	A
2950,2950,2869,1473,13d1,14,14,inc d,inc d,inc d,asmb.asm,INC	D
2951,2951,2870,1474,13d2,57,57,"ld d,a","ld d,a","ld d,a",asmb.asm,"LD	D,A"
2952,2952,2871,1475,13d3,f8,f8,ret m,ret m,ret m,asmb.asm,RET	M
2953,2953,2872,1476,13d4,dd 77 00,dd 77 00,"ld (ix),a","ld (ix),a","ld (ix),a",asmb.asm,"BYTE:           LD	(IX),A"
2954,2954,2873,1479,13d7,dd 23,dd 23,inc ix,inc ix,inc ix,asmb.asm,INC	IX
2955,2955,2874,147b,13d9,b7,b7,or a,or a,or a,asmb.asm,OR	A
2956,2956,2875,147c,13da,c9,c9,ret,ret,ret,asmb.asm,RET
2957,2957,2876,147d,13db,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",asmb.asm,"OFFSETasm:         LD	A,(IY)"
2958,2958,2877,1480,13de,fe 29,fe 29,cp $29,cp $29,cp $00,asmb.asm,CP	')'
2959,2959,2878,1482,13e0,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",asmb.asm,"LD	HL,0"
2960,2960,2879,1485,13e3,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
2961,2961,2880,1486,13e4,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,NUMBER:         CALL	SKIP
2962,2962,2881,1489,13e7,c5,c5,push bc,push bc,push bc,asmb.asm,PUSH	BC
2963,2963,2882,148a,13e8,d5,d5,push de,push de,push de,asmb.asm,PUSH	DE
2964,2964,2883,148b,13e9,dd e5,dd e5,push ix,push ix,push ix,asmb.asm,PUSH	IX
2965,2965,2884,148d,13eb,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,asmb.asm,CALL	EXPRI
2966,2966,2885,1490,13ee,dd e1,dd e1,pop ix,pop ix,pop ix,asmb.asm,POP	IX
2967,2967,2886,1492,13f0,d9,d9,exx,exx,exx,asmb.asm,EXX
2968,2968,2887,1493,13f1,d1,d1,pop de,pop de,pop de,asmb.asm,POP	DE
2969,2969,2888,1494,13f2,c1,c1,pop bc,pop bc,pop bc,asmb.asm,POP	BC
2970,2970,2889,1495,13f3,7d,7d,"ld a,l","ld a,l","ld a,l",asmb.asm,"LD	A,L"
2971,2971,2890,1496,13f4,b7,b7,or a,or a,or a,asmb.asm,OR	A
2972,2972,2891,1497,13f5,c9,c9,ret,ret,ret,asmb.asm,RET
2973,2973,2892,1498,13f6,cd 56 14,cd b4 13,call $1456,call $13b4,call $0000,asmb.asm,REG:            CALL	OPND
2974,2974,2893,149b,13f9,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2975,2975,2894,149c,13fa,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2976,2976,2895,149d,13fb,e6 3f,e6 3f,and $3f,and $3f,and $00,asmb.asm,AND	3FH
2977,2977,2896,149f,13fd,fe 08,fe 08,cp $08,cp $08,cp $00,asmb.asm,CP	8
2978,2978,2897,14a1,13ff,3f,3f,ccf,ccf,ccf,asmb.asm,CCF
2979,2979,2898,14a2,1400,c9,c9,ret,ret,ret,asmb.asm,RET
2980,2980,2899,14a3,1401,cd 98 14,cd f6 13,call $1498,call $13f6,call $0000,asmb.asm,REGLO:          CALL	REG
2981,2981,2900,14a6,1404,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2982,2982,2901,14a7,1405,18 2f,18 2f,jr $+$31,jr $+$31,jr $+$00,asmb.asm,JR	ORC
2983,2983,2902,14a9,1407,cd 98 14,cd f6 13,call $1498,call $13f6,call $0000,asmb.asm,REGHI:          CALL	REG
2984,2984,2903,14ac,140a,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2985,2985,2904,14ad,140b,18 26,18 26,jr $+$28,jr $+$28,jr $+$00,asmb.asm,JR	SHL3
2986,2986,2905,14af,140d,cd 56 14,cd b4 13,call $1456,call $13b4,call $0000,asmb.asm,COND_:          CALL	OPND
2987,2987,2906,14b2,1410,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2988,2988,2907,14b3,1411,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"LD	A,B"
2989,2989,2908,14b4,1412,e6 1f,e6 1f,and $1f,and $1f,and $00,asmb.asm,AND	1FH
2990,2990,2909,14b6,1414,d6 10,d6 10,sub $10,sub $10,sub $00,asmb.asm,SUB	16
2991,2991,2910,14b8,1416,30 1b,30 1b,"jr nc,$+$1d","jr nc,$+$1d","jr nc,$+$00",asmb.asm,"JR	NC,SHL3"
2992,2992,2911,14ba,1418,fe f1,fe f1,cp $f1,cp $f1,cp $00,asmb.asm,CP	-15
2993,2993,2912,14bc,141a,37,37,scf,scf,scf,asmb.asm,SCF
2994,2994,2913,14bd,141b,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
2995,2995,2914,14be,141c,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",asmb.asm,"LD	A,3"
2996,2996,2915,14c0,141e,18 13,18 13,jr $+$15,jr $+$15,jr $+$00,asmb.asm,JR	SHL3
2997,2997,2916,14c2,1420,cd 56 14,cd b4 13,call $1456,call $13b4,call $0000,asmb.asm,PAIRasm:           CALL	OPND
2998,2998,2917,14c5,1423,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
2999,2999,2918,14c6,1424,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"PAIR1asm:          LD	A,B"
3000,3000,2919,14c7,1425,e6 0f,e6 0f,and $0f,and $0f,and $00,asmb.asm,AND	0FH
3001,3001,2920,14c9,1427,d6 08,d6 08,sub $08,sub $08,sub $00,asmb.asm,SUB	8
3002,3002,2921,14cb,1429,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
3003,3003,2922,14cc,142a,18 07,18 07,jr $+$09,jr $+$09,jr $+$00,asmb.asm,JR	SHL3
3004,3004,2923,14ce,142c,cd 86 14,cd e4 13,call $1486,call $13e4,call $0000,asmb.asm,BIT:            CALL	NUMBER
3005,3005,2924,14d1,142f,fe 08,fe 08,cp $08,cp $08,cp $00,asmb.asm,CP	8
3006,3006,2925,14d3,1431,3f,3f,ccf,ccf,ccf,asmb.asm,CCF
3007,3007,2926,14d4,1432,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
3008,3008,2927,14d5,1433,07,07,rlca,rlca,rlca,asmb.asm,SHL3:           RLCA
3009,3009,2928,14d6,1434,07,07,rlca,rlca,rlca,asmb.asm,RLCA
3010,3010,2929,14d7,1435,07,07,rlca,rlca,rlca,asmb.asm,RLCA
3011,3011,2930,14d8,1436,b1,b1,or c,or c,or c,asmb.asm,ORC:            OR	C
3012,3012,2931,14d9,1437,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"LD	C,A"
3013,3013,2932,14da,1438,c9,c9,ret,ret,ret,asmb.asm,RET
3014,3014,2933,14db,1439,21 dd 16,21 3b 16,"ld hl,$16dd","ld hl,$163b","ld hl,$0000",asmb.asm,"LDOP:           LD	HL,LDOPS"
3015,3015,2934,14de,143c,cd 27 15,cd 85 14,call $1527,call $1485,call $0000,asmb.asm,FIND:           CALL	SKIP
3016,3016,2935,14e1,143f,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",asmb.asm,"EXIT:           LD	B,0"
3017,3017,2936,14e3,1441,37,37,scf,scf,scf,asmb.asm,SCF
3018,3018,2937,14e4,1442,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3019,3019,2938,14e5,1443,fe dd,fe dd,cp $dd,cp $dd,cp $00,asmb.asm,CP	TDEF
3020,3020,2939,14e7,1445,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",asmb.asm,"JR	Z,FIND0"
3021,3021,2940,14e9,1447,fe 85,fe 85,cp $85,cp $85,cp $00,asmb.asm,CP	TOR+1
3022,3022,2941,14eb,1449,3f,3f,ccf,ccf,ccf,asmb.asm,CCF
3023,3023,2942,14ec,144a,d8,d8,ret c,ret c,ret c,asmb.asm,RET	C
3024,3024,2943,14ed,144b,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",asmb.asm,"FIND0:          LD	A,(HL)"
3025,3025,2944,14ee,144c,b7,b7,or a,or a,or a,asmb.asm,OR	A
3026,3026,2945,14ef,144d,28 f0,28 f0,"jr z,$-$0e","jr z,$-$0e","jr z,$-$00",asmb.asm,"JR	Z,EXIT"
3027,3027,2946,14f1,144f,fd ae 00,fd ae 00,xor (iy),xor (iy),xor (iy),asmb.asm,XOR	(IY)
3028,3028,2947,14f4,1452,e6 5f,e6 5f,and $5f,and $5f,and $00,asmb.asm,AND	01011111B
3029,3029,2948,14f6,1454,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",asmb.asm,"JR	Z,FIND2"
3030,3030,2949,14f8,1456,cb 7e,cb 7e,"bit 7,(hl)","bit 7,(hl)","bit 7,(hl)",asmb.asm,"FIND1:          BIT	7,(HL)"
3031,3031,2950,14fa,1458,23,23,inc hl,inc hl,inc hl,asmb.asm,INC	HL
3032,3032,2951,14fb,1459,28 fb,28 fb,"jr z,$-$03","jr z,$-$03","jr z,$-$00",asmb.asm,"JR	Z,FIND1"
3033,3033,2952,14fd,145b,23,23,inc hl,inc hl,inc hl,asmb.asm,INC	HL
3034,3034,2953,14fe,145c,04,04,inc b,inc b,inc b,asmb.asm,INC	B
3035,3035,2954,14ff,145d,18 ec,18 ec,jr $-$12,jr $-$12,jr $-$00,asmb.asm,JR	FIND0
3036,3036,2955,1501,145f,fd e5,fd e5,push iy,push iy,push iy,asmb.asm,FIND2:          PUSH	IY
3037,3037,2956,1503,1461,cb 7e,cb 7e,"bit 7,(hl)","bit 7,(hl)","bit 7,(hl)",asmb.asm,"FIND3:          BIT	7,(HL)"
3038,3038,2957,1505,1463,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,INC	IY
3039,3039,2958,1507,1465,23,23,inc hl,inc hl,inc hl,asmb.asm,INC	HL
3040,3040,2959,1508,1466,20 10,20 10,"jr nz,$+$12","jr nz,$+$12","jr nz,$+$00",asmb.asm,"JR	NZ,FIND5"
3041,3041,2960,150a,1468,be,be,cp (hl),cp (hl),cp (hl),asmb.asm,CP	(HL)
3042,3042,2961,150b,1469,cc 26 15,cc 84 14,"call z,$1526","call z,$1484","call z,$0000",asmb.asm,"CALL	Z,SKIP0"
3043,3043,2962,150e,146c,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",asmb.asm,"LD	A,(HL)"
3044,3044,2963,150f,146d,fd ae 00,fd ae 00,xor (iy),xor (iy),xor (iy),asmb.asm,XOR	(IY)
3045,3045,2964,1512,1470,e6 5f,e6 5f,and $5f,and $5f,and $00,asmb.asm,AND	01011111B
3046,3046,2965,1514,1472,28 ed,28 ed,"jr z,$-$11","jr z,$-$11","jr z,$-$00",asmb.asm,"JR	Z,FIND3"
3047,3047,2966,1516,1474,fd e1,fd e1,pop iy,pop iy,pop iy,asmb.asm,FIND4:          POP	IY
3048,3048,2967,1518,1476,18 de,18 de,jr $-$20,jr $-$20,jr $-$00,asmb.asm,JR	FIND1
3049,3049,2968,151a,1478,cd 39 15,cd 97 14,call $1539,call $1497,call $0000,asmb.asm,FIND5:          CALL	DELIM
3050,3050,2969,151d,147b,c4 33 15,c4 91 14,"call nz,$1533","call nz,$1491","call nz,$0000",asmb.asm,"CALL	NZ,SIGN"
3051,3051,2970,1520,147e,20 f4,20 f4,"jr nz,$-$0a","jr nz,$-$0a","jr nz,$-$00",asmb.asm,"JR	NZ,FIND4"
3052,3052,2971,1522,1480,78,78,"ld a,b","ld a,b","ld a,b",asmb.asm,"FIND6:          LD	A,B"
3053,3053,2972,1523,1481,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",asmb.asm,"LD	B,(HL)"
3054,3054,2973,1524,1482,e1,e1,pop hl,pop hl,pop hl,asmb.asm,POP	HL
3055,3055,2974,1525,1483,c9,c9,ret,ret,ret,asmb.asm,RET
3056,3056,2975,1526,1484,23,23,inc hl,inc hl,inc hl,asmb.asm,SKIP0:          INC	HL
3057,3057,2976,1527,1485,cd 39 15,cd 97 14,call $1539,call $1497,call $0000,asmb.asm,SKIP:           CALL	DELIM
3058,3058,2977,152a,1488,c0,c0,ret nz,ret nz,ret nz,asmb.asm,RET	NZ
3059,3059,2978,152b,1489,cd 45 15,cd a3 14,call $1545,call $14a3,call $0000,asmb.asm,CALL	TERM
3060,3060,2979,152e,148c,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3061,3061,2980,152f,148d,fd 23,fd 23,inc iy,inc iy,inc iy,asmb.asm,INC	IY
3062,3062,2981,1531,148f,18 f4,18 f4,jr $-$0a,jr $-$0a,jr $-$00,asmb.asm,JR	SKIP
3063,3063,2982,1533,1491,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,asmb.asm,SIGN:           CP	'+'
3064,3064,2983,1535,1493,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3065,3065,2984,1536,1494,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,asmb.asm,CP	'-'
3066,3066,2985,1538,1496,c9,c9,ret,ret,ret,asmb.asm,RET
3067,3067,2986,1539,1497,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",asmb.asm,"DELIM:          LD	A,(IY)		;ASSEMBLER DELIMITER"
3068,3068,2987,153c,149a,fe 20,fe 20,cp $20,cp $20,cp $00,asmb.asm,CP	' '
3069,3069,2988,153e,149c,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3070,3070,2989,153f,149d,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,asmb.asm,"CP	','"
3071,3071,2990,1541,149f,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3072,3072,2991,1542,14a0,fe 29,fe 29,cp $29,cp $29,cp $00,asmb.asm,CP	')'
3073,3073,2992,1544,14a2,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3074,3074,2993,1545,14a3,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,asmb.asm,TERM:           CP	';'		;ASSEMBLER TERMINATOR
3075,3075,2994,1547,14a5,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3076,3076,2995,1548,14a6,fe 5c,fe 5c,cp $5c,cp $5c,cp $00,asmb.asm,CP	'\'
3077,3077,2996,154a,14a8,c8,c8,ret z,ret z,ret z,asmb.asm,RET	Z
3078,3078,2997,154b,14a9,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,asmb.asm,TERM0:          CP	':'		;ASSEMBLER SEPARATOR
3079,3079,2998,154d,14ab,d0,d0,ret nc,ret nc,ret nc,asmb.asm,RET	NC
3080,3080,2999,154e,14ac,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,asmb.asm,CP	CR
3081,3081,3000,1550,14ae,c9,c9,ret,ret,ret,asmb.asm,RET
3082,3082,3001,1551,14af,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,"OPCODS:         DB	""NO"""
3083,3083,3002,1552,14b0,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,
3084,3084,3003,1553,14b1,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3085,3085,3004,1554,14b2,00,00,nop,nop,nop,asmb.asm,DB	0
3086,3086,3005,1555,14b3,52 4c,52 4c,"ld.sil c,h","ld.sil c,h","ld.sil c,h",asmb.asm,"DB	""RLC"""
3087,3087,3006,1557,14b5,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,
3088,3088,3007,1558,14b6,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3089,3089,3008,1559,14b7,07,07,rlca,rlca,rlca,asmb.asm,DB	7
3090,3090,3009,155a,14b8,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,"DB	""EX"""
3091,3091,3010,155b,14b9,58,58,"ld e,b","ld e,b","ld e,b",asmb.asm,
3092,3092,3011,155c,14ba,00,00,nop,nop,nop,asmb.asm,DB	0
3093,3093,3012,155d,14bb,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,"DB	""AF"""
3094,3094,3013,155e,14bc,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",asmb.asm,
3095,3095,3014,155f,14bd,00,00,nop,nop,nop,asmb.asm,DB	0
3096,3096,3015,1560,14be,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,"DB	""AF"""
3097,3097,3016,1561,14bf,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",asmb.asm,
3098,3098,,1562,,a7,,and a,,and a,,
3099,3099,3018,1563,14c1,08,08,"ex af,af'","ex af,af'","ex af,af'",asmb.asm,DB	8
3100,3100,3019,1564,14c2,52,52,noni.sil,noni.sil,noni.sil,asmb.asm,"DB	""RRC"""
3101,3101,3020,1565,14c3,52 43,52 43,"ld.sil b,e","ld.sil b,e","ld.sil b,e",asmb.asm,
3102,3102,3021,1567,14c5,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3103,3103,3022,1568,14c6,0f,0f,rrca,rrca,rrca,asmb.asm,DB	0FH
3104,3104,3023,1569,14c7,52 4c,52 4c,"ld.sil c,h","ld.sil c,h","ld.sil c,h",asmb.asm,"DB	""RL"""
3105,3105,3024,156b,14c9,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3106,3106,3025,156c,14ca,17,17,rla,rla,rla,asmb.asm,DB	17H
3107,3107,3026,156d,14cb,52,52,noni.sil,noni.sil,noni.sil,asmb.asm,"DB	""RR"""
3108,3108,3027,156e,14cc,52 c1,52 c1,pop.sil bc,pop.sil bc,pop.sil bc,asmb.asm,
3109,3109,3028,1570,14ce,1f,1f,rra,rra,rra,asmb.asm,DB	1FH
3110,3110,3029,1571,14cf,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,"DB	""DA"""
3111,3111,3030,1572,14d0,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,
3112,3112,3031,1573,14d1,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3113,3113,3032,1574,14d2,27,27,daa,daa,daa,asmb.asm,DB	27H
3114,3114,3033,1575,14d3,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,"DB	""CP"""
3115,3115,3034,1576,14d4,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3116,3116,3035,1577,14d5,cc 2f 53,cc 2f 53,"call z,$532f","call z,$532f","call z,$0000",asmb.asm,DB	'L'+80H
3117,3117,3036,157a,14d8,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,
3118,3118,3037,157b,14d9,c6 37,c6 37,"add a,$37","add a,$37","add a,$00",asmb.asm,DB	'F'+80H
3119,3119,3038,157d,14db,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,"DB	""CC"""
3120,3120,3039,157e,14dc,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,
3121,3121,3040,157f,14dd,c6 3f,c6 3f,"add a,$3f","add a,$3f","add a,$00",asmb.asm,DB	'F'+80H
3122,3122,3041,1581,14df,48,48,"ld c,b","ld c,b","ld c,b",asmb.asm,"DB	""HAL"""
3123,3123,3042,1582,14e0,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,
3124,3124,3043,1583,14e1,4c,4c,"ld c,h","ld c,h","ld c,h",asmb.asm,
3125,3125,3044,1584,14e2,d4 76 45,d4 76 45,"call nc,$4576","call nc,$4576","call nc,$0000",asmb.asm,DB	'T'+80H
3126,3126,3045,1587,14e5,58,58,"ld e,b","ld e,b","ld e,b",asmb.asm,
3127,3127,3046,1588,14e6,d8,d8,ret c,ret c,ret c,asmb.asm,DB	'X'+80H
3128,3128,3047,1589,14e7,d9,d9,exx,exx,exx,asmb.asm,DB	0D9H
3129,3129,3048,158a,14e8,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,"DB	""EX"""
3130,3130,3049,158b,14e9,58,58,"ld e,b","ld e,b","ld e,b",asmb.asm,
3131,3131,3050,158c,14ea,00,00,nop,nop,nop,asmb.asm,DB	0
3132,3132,3051,158d,14eb,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,"DB	""DE"""
3133,3133,3052,158e,14ec,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3134,3134,3053,158f,14ed,00,00,nop,nop,nop,asmb.asm,DB	0
3135,3135,3054,1590,14ee,48,48,"ld c,b","ld c,b","ld c,b",asmb.asm,DB	'H'
3136,3136,3055,1591,14ef,cc eb 44,cc eb 44,"call z,$44eb","call z,$44eb","call z,$0000",asmb.asm,DB	'L'+80H
3137,3137,3056,1594,14f2,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3138,3138,3057,1595,14f3,f3,f3,di,di,di,asmb.asm,DB	0F3H
3139,3139,3058,1596,14f4,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,DB	'E'
3140,3140,3059,1597,14f5,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3141,3141,3060,1598,14f6,fb,fb,ei,ei,ei,asmb.asm,DB	0FBH
3142,3142,3061,1599,14f7,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,"DB	""NE"""
3143,3143,3062,159a,14f8,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3144,3144,3063,159b,14f9,c7,c7,rst $00,rst $00,rst $00,asmb.asm,DB	'G'+80H
3145,3145,3064,159c,14fa,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,DB	44H
3146,3146,3065,159d,14fb,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",asmb.asm,"DB	""IM"""
3147,3147,3066,159f,14fd,00,00,nop,nop,nop,asmb.asm,DB	0
3148,3148,3067,15a0,14fe,b0,b0,or b,or b,or b,asmb.asm,DB	'0'+80H
3149,3149,3068,15a1,14ff,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",asmb.asm,DB	46H
3150,3150,3069,15a2,1500,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",asmb.asm,"DB	""RET"""
3151,3151,3070,15a4,1502,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3152,3152,3071,15a5,1503,ce 45,ce 45,"adc a,$45","adc a,$45","adc a,$00",asmb.asm,DB	'N'+80H
3153,3153,3072,15a7,1505,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",asmb.asm,"DB	""RET"""
3154,3154,3073,15a9,1507,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3155,3155,3074,15aa,1508,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3156,3156,3075,15ab,1509,4d,4d,"ld c,l","ld c,l","ld c,l",asmb.asm,DB	4DH
3157,3157,3076,15ac,150a,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",asmb.asm,"DB	""IM"""
3158,3158,3077,15ae,150c,00,00,nop,nop,nop,asmb.asm,DB	0
3159,3159,3078,15af,150d,b1,b1,or c,or c,or c,asmb.asm,DB	'1'+80H
3160,3160,3079,15b0,150e,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",asmb.asm,DB	56H
3161,3161,3080,15b1,150f,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",asmb.asm,"DB	""IM"""
3162,3162,3081,15b3,1511,00,00,nop,nop,nop,asmb.asm,DB	0
3163,3163,3082,15b4,1512,b2,b2,or d,or d,or d,asmb.asm,DB	'2'+80H
3164,3164,3083,15b5,1513,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",asmb.asm,DB	5EH
3165,3165,3084,15b6,1514,52,52,noni.sil,noni.sil,noni.sil,asmb.asm,"DB	""RR"""
3166,3166,3085,15b7,1515,52 c4 67 52 4c,52 c4 67 52 4c,"call.sil nz,$4c5267","call.sil nz,$4c5267","call.sil nz,$000000",asmb.asm,
3167,3167,3086,15bc,151a,c4 6f 4c,c4 6f 4c,"call nz,$4c6f","call nz,$4c6f","call nz,$0000",asmb.asm,DB	'D'+80H
3168,3168,3087,15bf,151d,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3169,3169,3088,15c0,151e,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3170,3170,3089,15c1,151f,a0,a0,and b,and b,and b,asmb.asm,DB	0A0H
3171,3171,3090,15c2,1520,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,"DB	""CP"""
3172,3172,3091,15c3,1521,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3173,3173,3092,15c4,1522,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3174,3174,3093,15c5,1523,a1,a1,and c,and c,and c,asmb.asm,DB	0A1H
3175,3175,3094,15c6,1524,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",asmb.asm,"DB	""IN"""
3176,3176,3095,15c8,1526,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3177,3177,3096,15c9,1527,a2,a2,and d,and d,and d,asmb.asm,DB	0A2H
3178,3178,3097,15ca,1528,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"DB	""OUT"""
3179,3179,3098,15cb,1529,55,55,"ld d,l","ld d,l","ld d,l",asmb.asm,
3180,3180,3099,15cc,152a,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3181,3181,3100,15cd,152b,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3182,3182,3101,15ce,152c,a3,a3,and e,and e,and e,asmb.asm,DB	0A3H
3183,3183,3102,15cf,152d,4c,4c,"ld c,h","ld c,h","ld c,h",asmb.asm,"DB	""LD"""
3184,3184,3103,15d0,152e,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3185,3185,3104,15d1,152f,c4 a8 43,c4 a8 43,"call nz,$43a8","call nz,$43a8","call nz,$0000",asmb.asm,DB	'D'+80H
3186,3186,3105,15d4,1532,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3187,3187,3106,15d5,1533,c4 a9 49,c4 a9 49,"call nz,$49a9","call nz,$49a9","call nz,$0000",asmb.asm,DB	'D'+80H
3188,3188,3107,15d8,1536,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3189,3189,3108,15d9,1537,c4 aa 4f,c4 aa 4f,"call nz,$4faa","call nz,$4faa","call nz,$0000",asmb.asm,DB	'D'+80H
3190,3190,3109,15dc,153a,55,55,"ld d,l","ld d,l","ld d,l",asmb.asm,
3191,3191,3110,15dd,153b,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3192,3192,3111,15de,153c,c4 ab 4c,c4 ab 4c,"call nz,$4cab","call nz,$4cab","call nz,$0000",asmb.asm,DB	'D'+80H
3193,3193,3112,15e1,153f,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3194,3194,3113,15e2,1540,49 d2 b0 43,49 d2 b0 43,"jp.lis nc,$43b0","jp.lis nc,$43b0","jp.lis nc,$0000",asmb.asm,
3195,3195,3114,15e6,1544,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3196,3196,3115,15e7,1545,49 d2 b1 49,49 d2 b1 49,"jp.lis nc,$49b1","jp.lis nc,$49b1","jp.lis nc,$0000",asmb.asm,
3197,3197,3116,15eb,1549,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3198,3198,3117,15ec,154a,49 d2 b2 4f,49 d2 b2 4f,"jp.lis nc,$4fb2","jp.lis nc,$4fb2","jp.lis nc,$0000",asmb.asm,
3199,3199,3118,15f0,154e,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3200,3200,3119,15f1,154f,49 d2 b3 4c,49 d2 b3 4c,"jp.lis nc,$4cb3","jp.lis nc,$4cb3","jp.lis nc,$0000",asmb.asm,
3201,3201,3120,15f5,1553,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3202,3202,3121,15f6,1554,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3203,3203,3122,15f7,1555,d2 b8 43,d2 b8 43,"jp nc,$43b8","jp nc,$43b8","jp nc,$0000",asmb.asm,DB	'R'+80H
3204,3204,3123,15fa,1558,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3205,3205,3124,15fb,1559,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3206,3206,3125,15fc,155a,d2 b9 49,d2 b9 49,"jp nc,$49b9","jp nc,$49b9","jp nc,$0000",asmb.asm,DB	'R'+80H
3207,3207,3126,15ff,155d,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3208,3208,3127,1600,155e,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3209,3209,3128,1601,155f,d2 ba 4f,d2 ba 4f,"jp nc,$4fba","jp nc,$4fba","jp nc,$0000",asmb.asm,DB	'R'+80H
3210,3210,3129,1604,1562,54,54,"ld d,h","ld d,h","ld d,h",asmb.asm,
3211,3211,3130,1605,1563,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3212,3212,3131,1606,1564,d2 bb 42,d2 bb 42,"jp nc,$42bb","jp nc,$42bb","jp nc,$0000",asmb.asm,DB	'R'+80H
3213,3213,3132,1609,1567,49 d4 40 52,49 d4 40 52,"call.lis nc,$5240","call.lis nc,$5240","call.lis nc,$0000",asmb.asm,
3214,3214,3133,160d,156b,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3215,3215,3134,160e,156c,d3 80,d3 80,"out ($80),a","out ($80),a","out ($00),a",asmb.asm,DB	'S'+80H
3216,3216,3135,1610,156e,53,53,"ld d,e","ld d,e","ld d,e",asmb.asm,"DB	""SE"""
3217,3217,3136,1611,156f,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3218,3218,3137,1612,1570,d4 c0 52,d4 c0 52,"call nc,$52c0","call nc,$52c0","call nc,$0000",asmb.asm,DB	'T'+80H
3219,3219,3138,1615,1573,4c,4c,"ld c,h","ld c,h","ld c,h",asmb.asm,
3220,3220,3139,1616,1574,c3 00 52,c3 00 52,jp $5200,jp $5200,jp $0000,asmb.asm,DB	'C'+80H
3221,3221,3140,1619,1577,52 c3 08 52 cc,52 c3 08 52 cc,jp.sil $cc5208,jp.sil $cc5208,jp.sil $000000,asmb.asm,
3222,3222,3141,161e,157c,10 52,10 52,djnz $+$54,djnz $+$54,djnz $+$00,asmb.asm,DB	10H
3223,3223,3142,1620,157e,d2 18 53,d2 18 53,"jp nc,$5318","jp nc,$5318","jp nc,$0000",asmb.asm,DB	'R'+80H
3224,3224,3143,1623,1581,4c,4c,"ld c,h","ld c,h","ld c,h",asmb.asm,
3225,3225,3144,1624,1582,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3226,3226,3145,1625,1583,20 53,20 53,"jr nz,$+$55","jr nz,$+$55","jr nz,$+$00",asmb.asm,DB	20H
3227,3227,3146,1627,1585,52 c1,52 c1,pop.sil bc,pop.sil bc,pop.sil bc,asmb.asm,
3228,3228,3147,1629,1587,28 53,28 53,"jr z,$+$55","jr z,$+$55","jr z,$+$00",asmb.asm,DB	28H
3229,3229,3148,162b,1589,52 cc 38 50 4f,52 cc 38 50 4f,"call.sil z,$4f5038","call.sil z,$4f5038","call.sil z,$000000",asmb.asm,
3230,3230,3149,1630,158e,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3231,3231,3150,1631,158f,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	0C1H
3232,3232,3151,1632,1590,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,"DB	""PUS"""
3233,3233,3152,1633,1591,55,55,"ld d,l","ld d,l","ld d,l",asmb.asm,
3234,3234,3153,1634,1592,53,53,"ld d,e","ld d,e","ld d,e",asmb.asm,
3235,3235,3154,1635,1593,c8,c8,ret z,ret z,ret z,asmb.asm,DB	'H'+80H
3236,3236,3155,1636,1594,c5,c5,push bc,push bc,push bc,asmb.asm,DB	0C5H
3237,3237,3156,1637,1595,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,"DB	""EX"""
3238,3238,3157,1638,1596,58,58,"ld e,b","ld e,b","ld e,b",asmb.asm,
3239,3239,3158,1639,1597,00,00,nop,nop,nop,asmb.asm,DB	0
3240,3240,3159,163a,1598,28 53,28 53,"jr z,$+$55","jr z,$+$55","jr z,$+$00",asmb.asm,"DB	""(S"""
3241,3241,3160,163c,159a,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3242,3242,3161,163d,159b,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",asmb.asm,DB	0E3H
3243,3243,3162,163e,159c,53,53,"ld d,e","ld d,e","ld d,e",asmb.asm,"DB	""SU"""
3244,3244,3163,163f,159d,55,55,"ld d,l","ld d,l","ld d,l",asmb.asm,
3245,3245,3164,1640,159e,c2 90 41,c2 90 41,"jp nz,$4190","jp nz,$4190","jp nz,$0000",asmb.asm,DB	'B'+80H
3246,3246,3165,1643,15a1,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3247,3247,3166,1644,15a2,c4 a0 58,c4 a0 58,"call nz,$58a0","call nz,$58a0","call nz,$0000",asmb.asm,DB	'D'+80H
3248,3248,3167,1647,15a5,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,
3249,3249,3168,1648,15a6,d2 a8 4f,d2 a8 4f,"jp nc,$4fa8","jp nc,$4fa8","jp nc,$0000",asmb.asm,DB	'R'+80H
3250,3250,3169,164b,15a9,d2 b0 43,d2 b0 43,"jp nc,$43b0","jp nc,$43b0","jp nc,$0000",asmb.asm,DB	'R'+80H
3251,3251,3170,164e,15ac,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3252,3252,3171,164f,15ad,b8,b8,cp b,cp b,cp b,asmb.asm,DB	0B8H
3253,3253,3172,1650,15ae,80,80,"add a,b","add a,b","add a,b",asmb.asm,DB	TAND
3254,3254,3173,1651,15af,a0,a0,and b,and b,and b,asmb.asm,DB	0A0H
3255,3255,3174,1652,15b0,84,84,"add a,h","add a,h","add a,h",asmb.asm,DB	TOR
3256,3256,3175,1653,15b1,b0,b0,or b,or b,or b,asmb.asm,DB	0B0H
3257,3257,3176,1654,15b2,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,"DB	""AD"""
3258,3258,3177,1655,15b3,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3259,3259,3178,1656,15b4,c4 80 41,c4 80 41,"call nz,$4180","call nz,$4180","call nz,$0000",asmb.asm,DB	'D'+80H
3260,3260,3179,1659,15b7,44,44,"ld b,h","ld b,h","ld b,h",asmb.asm,
3261,3261,3180,165a,15b8,c3 88 53,c3 88 53,jp $5388,jp $5388,jp $0000,asmb.asm,DB	'C'+80H
3262,3262,3181,165d,15bb,42,42,"ld b,d","ld b,d","ld b,d",asmb.asm,
3263,3263,3182,165e,15bc,c3 98 49,c3 98 49,jp $4998,jp $4998,jp $0000,asmb.asm,DB	'C'+80H
3264,3264,3183,1661,15bf,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3265,3265,3184,1662,15c0,c3 04 44,c3 04 44,jp $4404,jp $4404,jp $0000,asmb.asm,DB	'C'+80H
3266,3266,3185,1665,15c3,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3267,3267,3186,1666,15c4,c3 05 49,c3 05 49,jp $4905,jp $4905,jp $0000,asmb.asm,DB	'C'+80H
3268,3268,3187,1669,15c7,ce 40,ce 40,"adc a,$40","adc a,$40","adc a,$00",asmb.asm,DB	'N'+80H
3269,3269,3188,166b,15c9,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,"DB	""OU"""
3270,3270,3189,166c,15ca,55,55,"ld d,l","ld d,l","ld d,l",asmb.asm,
3271,3271,3190,166d,15cb,d4 41 4a,d4 41 4a,"call nc,$4a41","call nc,$4a41","call nc,$0000",asmb.asm,DB	'T'+80H
3272,3272,3191,1670,15ce,d2 20 44,d2 20 44,"jp nc,$4420","jp nc,$4420","jp nc,$0000",asmb.asm,DB	'R'+80H
3273,3273,3192,1673,15d1,4a,4a,"ld c,d","ld c,d","ld c,d",asmb.asm,
3274,3274,3193,1674,15d2,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",asmb.asm,
3275,3275,3194,1675,15d3,da 10 4a,da 10 4a,"jp c,$4a10","jp c,$4a10","jp c,$0000",asmb.asm,DB	'Z'+80H
3276,3276,3195,1678,15d6,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3277,3277,3196,1679,15d7,c2 43 41,c2 43 41,"jp nz,$4143","jp nz,$4143","jp nz,$0000",asmb.asm,DB	0C2H
3278,3278,3197,167c,15da,4c,4c,"ld c,h","ld c,h","ld c,h",asmb.asm,
3279,3279,3198,167d,15db,cc c4 52,cc c4 52,"call z,$52c4","call z,$52c4","call z,$0000",asmb.asm,DB	'L'+80H
3280,3280,3199,1680,15de,53,53,"ld d,e","ld d,e","ld d,e",asmb.asm,
3281,3281,3200,1681,15df,d4 c7 52,d4 c7 52,"call nc,$52c7","call nc,$52c7","call nc,$0000",asmb.asm,DB	'T'+80H
3282,3282,3201,1684,15e2,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3283,3283,3202,1685,15e3,d4 c0 4c,d4 c0 4c,"call nc,$4cc0","call nc,$4cc0","call nc,$0000",asmb.asm,DB	'T'+80H
3284,3284,3203,1688,15e6,c4 40 5d,c4 40 5d,"call nz,$5d40","call nz,$5d40","call nz,$0000",asmb.asm,DB	'D'+80H
3285,3285,3204,168b,15e9,cd 00 5d,cd 00 5d,call $5d00,call $5d00,call $0000,asmb.asm,DB	'M'+80H
3286,3286,3205,168e,15ec,c2 00 4f,c2 00 4f,"jp nz,$4f00","jp nz,$4f00","jp nz,$0000",asmb.asm,DB	'B'+80H
3287,3287,3206,1691,15ef,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,
3288,3288,3207,1692,15f0,d4 00 5d,d4 00 5d,"call nc,$5d00","call nc,$5d00","call nc,$0000",asmb.asm,DB	'T'+80H
3289,3289,3208,1695,15f3,d7,d7,rst $10,rst $10,rst $00,asmb.asm,DB	'W'+80H
3290,3290,3209,1696,15f4,00,00,nop,nop,nop,asmb.asm,DB	0
3291,3291,3210,1697,15f5,00,00,nop,nop,nop,asmb.asm,DB	0
3292,3292,3211,1698,15f6,c2 00 c3,c2 00 c3,"jp nz,$c300","jp nz,$c300","jp nz,$0000",asmb.asm,OPRNDS:         DB	'B'+80H
3293,3293,3212,169b,15f9,01 c4 02,01 c4 02,"ld bc,$02c4","ld bc,$02c4","ld bc,$0000",asmb.asm,DB	1
3294,3294,3213,169e,15fc,c5,c5,push bc,push bc,push bc,asmb.asm,DB	'E'+80H
3295,3295,3214,169f,15fd,03,03,inc bc,inc bc,inc bc,asmb.asm,DB	3
3296,3296,3215,16a0,15fe,c8,c8,ret z,ret z,ret z,asmb.asm,DB	'H'+80H
3297,3297,3216,16a1,15ff,04,04,inc b,inc b,inc b,asmb.asm,DB	4
3298,3298,3217,16a2,1600,cc 05 28,cc 05 28,"call z,$2805","call z,$2805","call z,$0000",asmb.asm,DB	'L'+80H
3299,3299,3218,16a5,1603,48,48,"ld c,b","ld c,b","ld c,b",asmb.asm,
3300,3300,3219,16a6,1604,cc 06 c1,cc 06 c1,"call z,$c106","call z,$c106","call z,$0000",asmb.asm,DB	'L'+80H
3301,3301,3220,16a9,1607,07,07,rlca,rlca,rlca,asmb.asm,DB	7
3302,3302,3221,16aa,1608,28 49,28 49,"jr z,$+$4b","jr z,$+$4b","jr z,$+$00",asmb.asm,"DB	""(I"""
3303,3303,3222,16ac,160a,d8,d8,ret c,ret c,ret c,asmb.asm,DB	'X'+80H
3304,3304,3223,16ad,160b,86,86,"add a,(hl)","add a,(hl)","add a,(hl)",asmb.asm,DB	86H
3305,3305,3224,16ae,160c,28 49,28 49,"jr z,$+$4b","jr z,$+$4b","jr z,$+$00",asmb.asm,"DB	""(I"""
3306,3306,3225,16b0,160e,d9,d9,exx,exx,exx,asmb.asm,DB	'Y'+80H
3307,3307,3226,16b1,160f,c6 42,c6 42,"add a,$42","add a,$42","add a,$00",asmb.asm,DB	0C6H
3308,3308,3227,16b3,1611,c3 08 44,c3 08 44,jp $4408,jp $4408,jp $0000,asmb.asm,DB	'C'+80H
3309,3309,3228,16b6,1614,c5,c5,push bc,push bc,push bc,asmb.asm,DB	'E'+80H
3310,3310,3229,16b7,1615,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",asmb.asm,DB	10
3311,3311,3230,16b8,1616,48,48,"ld c,b","ld c,b","ld c,b",asmb.asm,DB	'H'
3312,3312,3231,16b9,1617,cc 0c 49,cc 0c 49,"call z,$490c","call z,$490c","call z,$0000",asmb.asm,DB	'L'+80H
3313,3313,3232,16bc,161a,d8,d8,ret c,ret c,ret c,asmb.asm,DB	'X'+80H
3314,3314,3233,16bd,161b,8c,8c,"adc a,h","adc a,h","adc a,h",asmb.asm,DB	8CH
3315,3315,3234,16be,161c,49 d9,49 d9,exx.lis,exx.lis,exx.lis,asmb.asm,DB	'I'
3316,3316,3235,16c0,161e,cc 41 c6,cc 41 c6,"call z,$c641","call z,$c641","call z,$0000",asmb.asm,DB	0CCH
3317,3317,3236,16c3,1621,0e 53,0e 53,"ld c,$53","ld c,$53","ld c,$00",asmb.asm,DB	14
3318,3318,3237,16c5,1623,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3319,3319,3238,16c6,1624,0e 4e,0e 4e,"ld c,$4e","ld c,$4e","ld c,$00",asmb.asm,DB	14
3320,3320,3239,16c8,1626,da 10 da,da 10 da,"jp c,$da10","jp c,$da10","jp c,$0000",asmb.asm,DB	'Z'+80H
3321,3321,3240,16cb,1629,11 4e c3,11 4e c3,"ld de,$c34e","ld de,$c34e","ld de,$0000",asmb.asm,DB	17
3322,3322,3241,16ce,162c,12,12,"ld (de),a","ld (de),a","ld (de),a",asmb.asm,DB	18
3323,3323,3242,16cf,162d,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,DB	'P'
3324,3324,3243,16d0,162e,cf,cf,rst $08,rst $08,rst $00,asmb.asm,DB	'O'+80H
3325,3325,3244,16d1,162f,14,14,inc d,inc d,inc d,asmb.asm,DB	20
3326,3326,3245,16d2,1630,50,50,"ld d,b","ld d,b","ld d,b",asmb.asm,DB	'P'
3327,3327,3246,16d3,1631,c5,c5,push bc,push bc,push bc,asmb.asm,DB	'E'+80H
3328,3328,3247,16d4,1632,15,15,dec d,dec d,dec d,asmb.asm,DB	21
3329,3329,3248,16d5,1633,d0,d0,ret nc,ret nc,ret nc,asmb.asm,DB	'P'+80H
3330,3330,3249,16d6,1634,16 cd,16 cd,"ld d,$cd","ld d,$cd","ld d,$00",asmb.asm,DB	22
3331,3331,3250,16d8,1636,17,17,rla,rla,rla,asmb.asm,DB	23
3332,3332,3251,16d9,1637,28 c3,28 c3,"jr z,$-$3b","jr z,$-$3b","jr z,$-$00",asmb.asm,DB	'('
3333,3333,3252,16db,1639,20 00,20 00,"jr nz,$+$02","jr nz,$+$02","jr nz,$+$00",asmb.asm,DB	20H
3334,3334,3253,16dd,163b,49 00,49 00,nop.lis,nop.lis,nop.lis,asmb.asm,LDOPS:          DB	'I'
3335,3335,3254,16df,163d,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3336,3336,3255,16e0,163e,47,47,"ld b,a","ld b,a","ld b,a",asmb.asm,DB	47H
3337,3337,3256,16e1,163f,52 00,52 00,nop.sil,nop.sil,nop.sil,asmb.asm,DB	'R'
3338,3338,3257,16e3,1641,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3339,3339,3258,16e4,1642,4f,4f,"ld c,a","ld c,a","ld c,a",asmb.asm,DB	4FH
3340,3340,3259,16e5,1643,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,DB	'A'
3341,3341,3260,16e6,1644,00,00,nop,nop,nop,asmb.asm,DB	0
3342,3342,3261,16e7,1645,c9,c9,ret,ret,ret,asmb.asm,DB	'I'+80H
3343,3343,3262,16e8,1646,57,57,"ld d,a","ld d,a","ld d,a",asmb.asm,DB	57H
3344,3344,3263,16e9,1647,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,DB	'A'
3345,3345,3264,16ea,1648,00,00,nop,nop,nop,asmb.asm,DB	0
3346,3346,3265,16eb,1649,d2 5f 28,d2 5f 28,"jp nc,$285f","jp nc,$285f","jp nc,$0000",asmb.asm,DB	'R'+80H
3347,3347,3266,16ee,164c,42,42,"ld b,d","ld b,d","ld b,d",asmb.asm,
3348,3348,3267,16ef,164d,43,43,"ld b,e","ld b,e","ld b,e",asmb.asm,
3349,3349,3268,16f0,164e,00,00,nop,nop,nop,asmb.asm,DB	0
3350,3350,3269,16f1,164f,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3351,3351,3270,16f2,1650,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",asmb.asm,DB	2
3352,3352,3271,16f3,1651,28 44,28 44,"jr z,$+$46","jr z,$+$46","jr z,$+$00",asmb.asm,"DB	""(DE"""
3353,3353,3272,16f5,1653,45,45,"ld b,l","ld b,l","ld b,l",asmb.asm,
3354,3354,3273,16f6,1654,00,00,nop,nop,nop,asmb.asm,DB	0
3355,3355,3274,16f7,1655,c1,c1,pop bc,pop bc,pop bc,asmb.asm,DB	'A'+80H
3356,3356,3275,16f8,1656,12,12,"ld (de),a","ld (de),a","ld (de),a",asmb.asm,DB	12H
3357,3357,3276,16f9,1657,41,41,"ld b,c","ld b,c","ld b,c",asmb.asm,DB	'A'
3358,3358,3277,16fa,1658,00,00,nop,nop,nop,asmb.asm,DB	0
3359,3359,3278,16fb,1659,28 42,28 42,"jr z,$+$44","jr z,$+$44","jr z,$+$00",asmb.asm,"DB	""(B"""
3360,3360,3279,16fd,165b,c3 0a 41,c3 0a 41,jp $410a,jp $410a,jp $0000,asmb.asm,DB	'C'+80H
3361,3361,3280,1700,165e,00,00,nop,nop,nop,asmb.asm,DB	0
3362,3362,3281,1701,165f,28 44,28 44,"jr z,$+$46","jr z,$+$46","jr z,$+$00",asmb.asm,"DB	""(D"""
3363,3363,3282,1703,1661,c5,c5,push bc,push bc,push bc,asmb.asm,DB	'E'+80H
3364,3364,3283,1704,1662,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",asmb.asm,DB	1AH
3365,3365,3284,1705,1663,00,00,nop,nop,nop,asmb.asm,DB	0
3366,3366,,1706,,e4 1f df,,"call po,$df1f",,"call po,$0000",,
3367,3367,,1709,,1b,,dec de,,dec de,,
3368,3368,,170a,,fc 1b b1,,"call m,$b11b",,"call m,$0000",,
3369,3369,,170d,,1b,,dec de,,dec de,,
3370,3370,,170e,,04,,inc b,,inc b,,
3371,3371,,170f,,1c,,inc e,,inc e,,
3372,3372,,1710,,a7,,and a,,and a,,
3373,3373,,1711,,1b,,dec de,,dec de,,
3374,3374,,1712,,ac,,xor h,,xor h,,
3375,3375,,1713,,1b,,dec de,,dec de,,
3376,3376,,1714,,50,,"ld d,b",,"ld d,b",,
3377,3377,,1715,,1c,,inc e,,inc e,,
3378,3378,,1716,,8c,,"adc a,h",,"adc a,h",,
3379,3379,,1717,,1c,,inc e,,inc e,,
3380,3380,,1718,,6b,,"ld l,e",,"ld l,e",,
3381,3381,,1719,,0e 94,,"ld c,$94",,"ld c,$00",,
3382,3382,,171b,,1b,,dec de,,dec de,,
3383,3383,,171c,,84,,"add a,h",,"add a,h",,
3384,3384,,171d,,1c,,inc e,,inc e,,
3385,3385,,171e,,88,,"adc a,b",,"adc a,b",,
3386,3386,,171f,,1c,,inc e,,inc e,,
3387,3387,,1720,,70,,"ld (hl),b",,"ld (hl),b",,
3388,3388,,1721,,1b,,dec de,,dec de,,
3389,3389,,1722,,70,,"ld (hl),b",,"ld (hl),b",,
3390,3390,,1723,,1c,,inc e,,inc e,,
3391,3391,,1724,,cf,,rst $08,,rst $00,,
3392,3392,,1725,,1b,,dec de,,dec de,,
3393,3393,,1726,,58,,"ld e,b",,"ld e,b",,
3394,3394,,1727,,1c,,inc e,,inc e,,
3395,3395,,1728,,c5,,push bc,,push bc,,
3396,3396,,1729,,1b,,dec de,,dec de,,
3397,3397,,172a,,ca 1b b0,,"jp z,$b01b",,"jp z,$0000",,
3398,3398,,172d,,1c,,inc e,,inc e,,
3399,3399,,172e,,78,,"ld a,b",,"ld a,b",,
3400,3400,,172f,,1c,,inc e,,inc e,,
3401,3401,,1730,,f4 1b 7c,,"call p,$7c1b",,"call p,$0000",,
3402,3402,,1733,,20 67,,"jr nz,$+$69",,"jr nz,$+$00",,
3403,3403,,1735,,2a 7e 1b,,"ld hl,($1b7e)",,"ld hl,($0000)",,
3404,3404,,1738,,79,,"ld a,c",,"ld a,c",,
3405,3405,,1739,,1b,,dec de,,dec de,,
3406,3406,,173a,,29,,"add hl,hl",,"add hl,hl",,
3407,3407,,173b,,1e 64,,"ld e,$64",,"ld e,$00",,
3408,3408,,173d,,1c,,inc e,,inc e,,
3409,3409,,173e,,a1,,and c,,and c,,
3410,3410,,173f,,1b,,dec de,,dec de,,
3411,3411,,1740,,7c,,"ld a,h",,"ld a,h",,
3412,3412,,1741,,1c,,inc e,,inc e,,
3413,3413,,1742,,80,,"add a,b",,"add a,b",,
3414,3414,,1743,,1c,,inc e,,inc e,,
3415,3415,,1744,,54,,"ld d,h",,"ld d,h",,
3416,3416,,1745,,1c,,inc e,,inc e,,
3417,3417,,1746,,dc 1b da,,"call c,$da1b",,"call c,$0000",,
3418,3418,,1749,,1b,,dec de,,dec de,,
3419,3419,,174a,,4c,,"ld c,h",,"ld c,h",,
3420,3420,,174b,,1c,,inc e,,inc e,,
3421,3421,,174c,,38 0e,,"jr c,$+$10",,"jr c,$+$00",,
3422,3422,,174e,,59,,"ld e,c",,"ld e,c",,
3423,3423,,174f,,1b,,dec de,,dec de,,
3424,3424,,1750,,5c,,"ld e,h",,"ld e,h",,
3425,3425,,1751,,1c,,inc e,,inc e,,
3426,3426,,1752,,dd 1c,,trap,,trap,,
3427,3427,,1754,,60,,"ld h,b",,"ld h,b",,
3428,3428,,1755,,1c,,inc e,,inc e,,
3429,3429,,1756,,74,,"ld (hl),h",,"ld (hl),h",,
3430,3430,,1757,,1c,,inc e,,inc e,,
3431,3431,,1758,,68,,"ld l,b",,"ld l,b",,
3432,3432,,1759,,1c,,inc e,,inc e,,
3433,3433,,175a,,6c,,"ld l,h",,"ld l,h",,
3434,3434,,175b,,1c,,inc e,,inc e,,
3435,3435,,175c,,b6,,or (hl),,or (hl),,
3436,3436,,175d,,1b,,dec de,,dec de,,
3437,3437,,175e,,41,,"ld b,c",,"ld b,c",,
3438,3438,,175f,,1c,,inc e,,inc e,,
3439,3439,,1760,,c3 30 a3,,jp $a330,,jp $0000,,
3440,3440,,1763,,1c,,inc e,,inc e,,
3441,3441,,1764,,5f,,"ld e,a",,"ld e,a",,
3442,3442,,1765,,1b,,dec de,,dec de,,
3443,3443,,1766,,aa,,xor d,,xor d,,
3444,3444,,1767,,1e b1,,"ld e,$b1",,"ld e,$00",,
3445,3445,,1769,,1e 12,,"ld e,$12",,"ld e,$00",,
3446,3446,,176b,,1f,,rra,,rra,,
3447,3447,,176c,,52 1f,,rra.sil,,rra.sil,,
3448,3448,,176e,,22 1f 80,,"ld ($801f),hl",,"ld ($0000),hl",,
3449,3449,,1771,,1f,,rra,,rra,,
3450,3450,,1772,,3c,,inc a,,inc a,,
3451,3451,,1773,,20 aa,,"jr nz,$-$54",,"jr nz,$-$00",,
3452,3452,,1775,,1f,,rra,,rra,,
3453,3453,,1776,,64,,"ld h,h",,"ld h,h",,
3454,3454,,1777,,1b,,dec de,,dec de,,
3455,3455,,1778,,6d,,"ld l,l",,"ld l,l",,
3456,3456,,1779,,1d,,dec e,,dec e,,
3457,3457,,177a,,2f,,cpl,,cpl,,
3458,3458,,177b,,1c,,inc e,,inc e,,
3459,3459,,177c,,37,,scf,,scf,,
3460,3460,,177d,,1c,,inc e,,inc e,,
3461,3461,,177e,,29,,"add hl,hl",,"add hl,hl",,
3462,3462,,177f,,1c,,inc e,,inc e,,
3463,3463,,1780,,1c,,inc e,,inc e,,
3464,3464,,1781,,1c,,inc e,,inc e,,
3465,3465,,1782,,3d,,dec a,,dec a,,
3466,3466,,1783,,1c,,inc e,,inc e,,
3467,3467,,1784,,22 1c cd,,"ld ($cd1c),hl",,"ld ($0000),hl",,
3468,3468,,1787,,9b,,"sbc a,e",,"sbc a,e",,
3469,3469,,1788,,17,,rla,,rla,,
3470,3470,3379,1789,16e7,fe 82,fe 82,cp $82,cp $82,cp $00,eval.asm,EXPR0A:         CP	EOR		;CHECK OPERATOR
3471,3471,3380,178b,16e9,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",eval.asm,"JR	Z,EXPR0B"
3472,3472,3381,178d,16eb,fe 84,fe 84,cp $84,cp $84,cp $00,eval.asm,CP	OR_
3473,3473,3382,178f,16ed,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3474,3474,3383,1790,16ee,cd f7 20,cd 55 20,call $20f7,call $2055,call $0000,eval.asm,EXPR0B:         CALL	SAVEev		;SAVE FIRST OPERAND
3475,3475,3384,1793,16f1,cd 9b 17,cd f9 16,call $179b,call $16f9,call $0000,eval.asm,CALL	EXPR1		;GET SECOND OPERAND
3476,3476,3385,1796,16f4,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,CALL	DOIT		;DO OPERATION
3477,3477,3386,1799,16f7,18 ee,18 ee,jr $-$10,jr $-$10,jr $-$00,eval.asm,JR	EXPR0A		;CONTINUE
3478,3478,3387,179b,16f9,cd ac 17,cd 0a 17,call $17ac,call $170a,call $0000,eval.asm,EXPR1:          CALL	EXPR2
3479,3479,3388,179e,16fc,fe 80,fe 80,cp $80,cp $80,cp $00,eval.asm,EXPR1A:         CP	AND_
3480,3480,3389,17a0,16fe,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3481,3481,3390,17a1,16ff,cd f7 20,cd 55 20,call $20f7,call $2055,call $0000,eval.asm,CALL	SAVEev
3482,3482,3391,17a4,1702,cd ac 17,cd 0a 17,call $17ac,call $170a,call $0000,eval.asm,CALL	EXPR2
3483,3483,3392,17a7,1705,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,CALL	DOIT
3484,3484,3393,17aa,1708,18 f2,18 f2,jr $-$0c,jr $-$0c,jr $-$00,eval.asm,JR	EXPR1A
3485,3485,3394,17ac,170a,cd 24 18,cd 82 17,call $1824,call $1782,call $0000,eval.asm,EXPR2:          CALL	EXPR3ev
3486,3486,3395,17af,170d,cd ee 20,cd 4c 20,call $20ee,call $204c,call $0000,eval.asm,CALL	RELOPQ
3487,3487,3396,17b2,1710,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3488,3488,3397,17b3,1711,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
3489,3489,3398,17b4,1712,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY		;BUMP OVER OPERATOR
3490,3490,3399,17b6,1714,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
3491,3491,3400,17b9,1717,cd ee 20,cd 4c 20,call $20ee,call $204c,call $0000,eval.asm,CALL	RELOPQ		;COMPOUND OPERATOR?
3492,3492,3401,17bc,171a,20 07,20 07,"jr nz,$+$09","jr nz,$+$09","jr nz,$+$00",eval.asm,"JR	NZ,EXPR2B"
3493,3493,3402,17be,171c,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3494,3494,3403,17c0,171e,b8,b8,cp b,cp b,cp b,eval.asm,CP	B
3495,3495,3404,17c1,171f,28 1c,28 1c,"jr z,$+$1e","jr z,$+$1e","jr z,$+$00",eval.asm,"JR	Z,SHIFT		;SHIFT | =="
3496,3496,3405,17c3,1721,80,80,"add a,b","add a,b","add a,b",eval.asm,"ADD	A,B"
3497,3497,3406,17c4,1722,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
3498,3498,3407,17c5,1723,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"EXPR2B:         LD	A,B"
3499,3499,3408,17c6,1724,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3500,3500,3409,17c7,1725,fa f7 17,fa 55 17,"jp m,$17f7","jp m,$1755","jp m,$0000",eval.asm,"JP	M,EXPR2S"
3501,3501,3410,17ca,1728,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3502,3502,3411,17cb,1729,d6 04,d6 04,sub $04,sub $04,sub $00,eval.asm,SUB	4
3503,3503,3412,17cd,172b,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,eval.asm,CP	'>'-4
3504,3504,3413,17cf,172d,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",eval.asm,"JR	NZ,EXPR2C"
3505,3505,3414,17d1,172f,c6 02,c6 02,"add a,$02","add a,$02","add a,$00",eval.asm,"ADD	A,2"
3506,3506,3415,17d3,1731,e6 0f,e6 0f,and $0f,and $0f,and $00,eval.asm,EXPR2C:         AND	0FH
3507,3507,3416,17d5,1733,cd fb 20,cd 59 20,call $20fb,call $2059,call $0000,eval.asm,EXPR2D:         CALL	SAVE1
3508,3508,3417,17d8,1736,cd 24 18,cd 82 17,call $1824,call $1782,call $0000,eval.asm,CALL	EXPR3ev
3509,3509,3418,17db,1739,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,"CALL	DOIT		;Must NOT be ""JP DOIT"""
3510,3510,3419,17de,173c,c9,c9,ret,ret,ret,eval.asm,RET
3511,3511,3420,17df,173d,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,eval.asm,SHIFT:          CP	'='
3512,3512,3421,17e1,173f,28 e2,28 e2,"jr z,$-$1c","jr z,$-$1c","jr z,$-$00",eval.asm,"JR	Z,EXPR2B	;=="
3513,3513,3422,17e3,1741,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
3514,3514,3423,17e6,1744,cd ee 20,cd 4c 20,call $20ee,call $204c,call $0000,eval.asm,CALL	RELOPQ
3515,3515,3424,17e9,1747,20 07,20 07,"jr nz,$+$09","jr nz,$+$09","jr nz,$+$00",eval.asm,"JR	NZ,SHIFT1"
3516,3516,3425,17eb,1749,b8,b8,cp b,cp b,cp b,eval.asm,CP	B
3517,3517,3426,17ec,174a,c2 64 26,c2 c2 25,"jp nz,$2664","jp nz,$25c2","jp nz,$0000",eval.asm,"JP	NZ,SYNTAX"
3518,3518,3427,17ef,174d,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3519,3519,3428,17f1,174f,04,04,inc b,inc b,inc b,eval.asm,INC	B
3520,3520,3429,17f2,1750,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"SHIFT1:         LD	A,B"
3521,3521,3430,17f3,1751,d6 12,d6 12,sub $12,sub $12,sub $00,eval.asm,SUB	18
3522,3522,3431,17f5,1753,18 de,18 de,jr $-$20,jr $-$20,jr $-$00,eval.asm,JR	EXPR2D
3523,3523,3432,17f7,1755,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EXPR2S:         EX	AF,AF'"
3524,3524,3433,17f8,1756,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
3525,3525,3434,17f9,1757,e6 07,e6 07,and $07,and $07,and $00,eval.asm,AND	7
3526,3526,3435,17fb,1759,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;SAVE STRING ON STACK
3527,3527,3436,17fe,175c,f5,f5,push af,push af,push af,eval.asm,PUSH	AF		;SAVE OPERATOR
3528,3528,3437,17ff,175d,cd 24 18,cd 82 17,call $1824,call $1782,call $0000,eval.asm,CALL	EXPR3ev		;SECOND STRING
3529,3529,3438,1802,1760,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3530,3530,3439,1803,1761,f2 f2 18,f2 50 18,"jp p,$18f2","jp p,$1850","jp p,$0000",eval.asm,"JP	P,MISMATev"
3531,3531,3440,1806,1764,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
3532,3532,3441,1807,1765,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E		;LENGTH OF STRING #2"
3533,3533,3442,1808,1766,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
3534,3534,3443,1809,1767,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",eval.asm,"LD	HL,0"
3535,3535,3444,180c,176a,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
3536,3536,3445,180d,176b,43,43,"ld b,e","ld b,e","ld b,e",eval.asm,"LD	B,E		;LENGTH OF STRING #1"
3537,3537,3446,180e,176c,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
3538,3538,3447,180f,176d,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
3539,3539,3448,1812,1770,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3540,3540,3449,1813,1771,cd 3f 21,cd 9d 20,call $213f,call $209d,call $0000,eval.asm,CALL	DISPT2
3541,3541,3450,1816,1774,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
3542,3542,3451,1817,1775,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3543,3543,3452,1818,1776,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",eval.asm,"LD	H,0"
3544,3544,3453,181a,1778,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
3545,3545,3454,181b,1779,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"LD	SP,HL"
3546,3546,3455,181c,177a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3547,3547,3456,181d,177b,af,af,xor a,xor a,xor a,eval.asm,XOR	A		;NUMERIC MARKER
3548,3548,3457,181e,177c,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A		;INTEGER MARKER"
3549,3549,3458,181f,177d,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3550,3550,3459,1820,177e,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"LD	A,(IY)"
3551,3551,3460,1823,1781,c9,c9,ret,ret,ret,eval.asm,RET
3552,3552,3461,1824,1782,cd 72 18,cd d0 17,call $1872,call $17d0,call $0000,eval.asm,EXPR3ev:          CALL	EXPR4
3553,3553,3462,1827,1785,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,eval.asm,EXPR3A:         CP	'-'
3554,3554,3463,1829,1787,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",eval.asm,"JR	Z,EXPR3B"
3555,3555,3464,182b,1789,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,eval.asm,CP	'+'
3556,3556,3465,182d,178b,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3557,3557,3466,182e,178c,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3558,3558,3467,182f,178d,fa 3e 18,fa 9c 17,"jp m,$183e","jp m,$179c","jp m,$0000",eval.asm,"JP	M,EXPR3S"
3559,3559,3468,1832,1790,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3560,3560,3469,1833,1791,cd f7 20,cd 55 20,call $20f7,call $2055,call $0000,eval.asm,EXPR3B:         CALL	SAVEev
3561,3561,3470,1836,1794,cd 72 18,cd d0 17,call $1872,call $17d0,call $0000,eval.asm,CALL	EXPR4
3562,3562,3471,1839,1797,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,CALL	DOIT
3563,3563,3472,183c,179a,18 e9,18 e9,jr $-$15,jr $-$15,jr $-$00,eval.asm,JR	EXPR3A
3564,3564,3473,183e,179c,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EXPR3S:         EX	AF,AF'"
3565,3565,3474,183f,179d,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY		;BUMP PAST '+'
3566,3566,3475,1841,179f,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;SAVE STRING ON STACK
3567,3567,3476,1844,17a2,cd 72 18,cd d0 17,call $1872,call $17d0,call $0000,eval.asm,CALL	EXPR4		;SECOND STRING
3568,3568,3477,1847,17a5,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3569,3569,3478,1848,17a6,f2 f2 18,f2 50 18,"jp p,$18f2","jp p,$1850","jp p,$0000",eval.asm,"JP	P,MISMATev"
3570,3570,3479,184b,17a9,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E		;C=LENGTH"
3571,3571,3480,184c,17aa,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
3572,3572,3481,184d,17ab,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
3573,3573,3482,184e,17ac,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",eval.asm,"LD	HL,ACCS"
3574,3574,3483,1851,17af,54,54,"ld d,h","ld d,h","ld d,h",eval.asm,"LD	D,H"
3575,3575,3484,1852,17b0,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
3576,3576,3485,1853,17b1,b7,b7,or a,or a,or a,eval.asm,OR	A
3577,3577,3486,1854,17b2,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",eval.asm,"JR	Z,EXP3S3"
3578,3578,3487,1856,17b4,45,45,"ld b,l","ld b,l","ld b,l",eval.asm,"LD	B,L"
3579,3579,3488,1857,17b5,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A		;SOURCE"
3580,3580,3489,1858,17b6,83,83,"add a,e","add a,e","add a,e",eval.asm,"ADD	A,E"
3581,3581,3490,1859,17b7,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LD	E,A		;DESTINATION"
3582,3582,3491,185a,17b8,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",eval.asm,"LD	A,19"
3583,3583,3492,185c,17ba,38 6b,38 6b,"jr c,$+$6d","jr c,$+$6d","jr c,$+$00",eval.asm,"JR	C,ERROR2ev	;""String too long"""
3584,3584,3493,185e,17bc,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
3585,3585,3494,185f,17bd,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
3586,3586,3495,1860,17be,2d,2d,dec l,dec l,dec l,eval.asm,DEC	L
3587,3587,3496,1861,17bf,ed b8,ed b8,lddr,lddr,lddr,eval.asm,LDDR			;COPY
3588,3588,3497,1863,17c1,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
3589,3589,3498,1864,17c2,d9,d9,exx,exx,exx,eval.asm,EXP3S3:         EXX
3590,3590,3499,1865,17c3,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
3591,3591,3500,1866,17c4,cd bb 20,cd 19 20,call $20bb,call $2019,call $0000,eval.asm,CALL	POPS		;RESTORE FROM STACK
3592,3592,3501,1869,17c7,d9,d9,exx,exx,exx,eval.asm,EXX
3593,3593,3502,186a,17c8,f6 80,f6 80,or $80,or $80,or $00,eval.asm,OR	80H		;FLAG STRING
3594,3594,3503,186c,17ca,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3595,3595,3504,186d,17cb,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"LD	A,(IY)"
3596,3596,3505,1870,17ce,18 b5,18 b5,jr $-$49,jr $-$49,jr $-$00,eval.asm,JR	EXPR3A
3597,3597,3506,1872,17d0,cd 98 18,cd f6 17,call $1898,call $17f6,call $0000,eval.asm,EXPR4:          CALL	EXPR5
3598,3598,3507,1875,17d3,fe 2a,fe 2a,cp $2a,cp $2a,cp $00,eval.asm,EXPR4A:         CP	'*'
3599,3599,3508,1877,17d5,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",eval.asm,"JR	Z,EXPR4B"
3600,3600,3509,1879,17d7,fe 2f,fe 2f,cp $2f,cp $2f,cp $00,eval.asm,CP	'/'
3601,3601,3510,187b,17d9,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",eval.asm,"JR	Z,EXPR4B"
3602,3602,3511,187d,17db,fe 83,fe 83,cp $83,cp $83,cp $00,eval.asm,CP	MOD_
3603,3603,3512,187f,17dd,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",eval.asm,"JR	Z,EXPR4B"
3604,3604,3513,1881,17df,fe 81,fe 81,cp $81,cp $81,cp $00,eval.asm,CP	DIV_
3605,3605,3514,1883,17e1,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3606,3606,3515,1884,17e2,cd f7 20,cd 55 20,call $20f7,call $2055,call $0000,eval.asm,EXPR4B:         CALL	SAVEev
3607,3607,3516,1887,17e5,cd 98 18,cd f6 17,call $1898,call $17f6,call $0000,eval.asm,CALL	EXPR5
3608,3608,3517,188a,17e8,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,CALL	DOIT
3609,3609,3518,188d,17eb,18 e6,18 e6,jr $-$18,jr $-$18,jr $-$00,eval.asm,JR	EXPR4A
3610,3610,3519,188f,17ed,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"EXPR45:         LD	A,E"
3611,3611,3520,1890,17ee,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,eval.asm,CP	'+'
3612,3612,3521,1892,17f0,28 de,28 de,"jr z,$-$20","jr z,$-$20","jr z,$-$00",eval.asm,"JR	Z,EXPR4"
3613,3613,3522,1894,17f2,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,eval.asm,CP	'-'
3614,3614,3523,1896,17f4,28 da,28 da,"jr z,$-$24","jr z,$-$24","jr z,$-$00",eval.asm,"JR	Z,EXPR4"
3615,3615,3524,1898,17f6,cd 54 19,cd b2 18,call $1954,call $18b2,call $0000,eval.asm,EXPR5:          CALL	ITEM
3616,3616,3525,189b,17f9,b7,b7,or a,or a,or a,eval.asm,OR	A		;TEST TYPE
3617,3617,3526,189c,17fa,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'		;SAVE TYPE"
3618,3618,3527,189d,17fb,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,EXPR5A:         CALL	NXT
3619,3619,3528,18a0,17fe,fe 5e,fe 5e,cp $5e,cp $5e,cp $00,eval.asm,CP	'^'
3620,3620,3529,18a2,1800,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3621,3621,3530,18a3,1801,cd f7 20,cd 55 20,call $20f7,call $2055,call $0000,eval.asm,CALL	SAVEev
3622,3622,3531,18a6,1804,cd 54 19,cd b2 18,call $1954,call $18b2,call $0000,eval.asm,CALL	ITEM
3623,3623,3532,18a9,1807,b7,b7,or a,or a,or a,eval.asm,OR	A
3624,3624,3533,18aa,1808,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3625,3625,3534,18ab,1809,cd 07 21,cd 65 20,call $2107,call $2065,call $0000,eval.asm,CALL	DOIT
3626,3626,3535,18ae,180c,18 ed,18 ed,jr $-$11,jr $-$11,jr $-$00,eval.asm,JR	EXPR5A
3627,3627,3536,18b0,180e,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,eval.asm,EXPRN:          CALL	EXPR
3628,3628,3537,18b3,1811,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3629,3629,3538,18b4,1812,f0,f0,ret p,ret p,ret p,eval.asm,RET	P
3630,3630,3539,18b5,1813,18 3b,18 3b,jr $+$3d,jr $+$3d,jr $+$00,eval.asm,JR	MISMATev
3631,3631,3540,18b7,1815,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,eval.asm,EXPRI:          CALL	EXPR
3632,3632,3541,18ba,1818,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3633,3633,3542,18bb,1819,f2 9b 1c,f2 f9 1b,"jp p,$1c9b","jp p,$1bf9","jp p,$0000",eval.asm,"JP	P,SFIX"
3634,3634,3543,18be,181c,18 32,18 32,jr $+$34,jr $+$34,jr $+$00,eval.asm,JR	MISMATev
3635,3635,3544,18c0,181e,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,eval.asm,EXPRS:          CALL	EXPR
3636,3636,3545,18c3,1821,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3637,3637,3546,18c4,1822,f8,f8,ret m,ret m,ret m,eval.asm,RET	M
3638,3638,3547,18c5,1823,18 2b,18 2b,jr $+$2d,jr $+$2d,jr $+$00,eval.asm,JR	MISMATev
3639,3639,3548,18c7,1825,3e 1c,3e 1c,"ld a,$1c","ld a,$1c","ld a,$00",eval.asm,"BADHEX:         LD	A,28"
3640,3640,3549,18c9,1827,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,eval.asm,"ERROR2ev:         JP	ERROR_		;""Bad HEX or binary"""
3641,3641,3550,18cc,182a,d9,d9,exx,exx,exx,eval.asm,NEGATEev:         EXX
3642,3642,3551,18cd,182b,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
3643,3643,3552,18ce,182c,2f,2f,cpl,cpl,cpl,eval.asm,CPL
3644,3644,3553,18cf,182d,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
3645,3645,3554,18d0,182e,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
3646,3646,3555,18d1,182f,2f,2f,cpl,cpl,cpl,eval.asm,CPL
3647,3647,3556,18d2,1830,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
3648,3648,3557,18d3,1831,d9,d9,exx,exx,exx,eval.asm,EXX
3649,3649,3558,18d4,1832,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
3650,3650,3559,18d5,1833,2f,2f,cpl,cpl,cpl,eval.asm,CPL
3651,3651,3560,18d6,1834,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
3652,3652,3561,18d7,1835,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
3653,3653,3562,18d8,1836,2f,2f,cpl,cpl,cpl,eval.asm,CPL
3654,3654,3563,18d9,1837,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
3655,3655,3564,18da,1838,d9,d9,exx,exx,exx,eval.asm,ADD1ev:           EXX
3656,3656,3565,18db,1839,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3657,3657,3566,18dc,183a,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
3658,3658,3567,18dd,183b,b5,b5,or l,or l,or l,eval.asm,OR	L
3659,3659,3568,18de,183c,d9,d9,exx,exx,exx,eval.asm,EXX
3660,3660,3569,18df,183d,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",eval.asm,"LD	A,0		;NUMERIC MARKER"
3661,3661,3570,18e1,183f,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
3662,3662,3571,18e2,1840,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3663,3663,3572,18e3,1841,c9,c9,ret,ret,ret,eval.asm,RET
3664,3664,3573,18e4,1842,cd 54 19,cd b2 18,call $1954,call $18b2,call $0000,eval.asm,ITEMI:          CALL	ITEM
3665,3665,3574,18e7,1845,b7,b7,or a,or a,or a,eval.asm,OR	A
3666,3666,3575,18e8,1846,f2 9b 1c,f2 f9 1b,"jp p,$1c9b","jp p,$1bf9","jp p,$0000",eval.asm,"JP	P,SFIX"
3667,3667,3576,18eb,1849,18 05,18 05,jr $+$07,jr $+$07,jr $+$00,eval.asm,JR	MISMATev
3668,3668,3577,18ed,184b,cd 54 19,cd b2 18,call $1954,call $18b2,call $0000,eval.asm,ITEMS:          CALL	ITEM
3669,3669,3578,18f0,184e,b7,b7,or a,or a,or a,eval.asm,OR	A
3670,3670,3579,18f1,184f,f8,f8,ret m,ret m,ret m,eval.asm,RET	M
3671,3671,3580,18f2,1850,3e 06,3e 06,"ld a,$06","ld a,$06","ld a,$00",eval.asm,"MISMATev:         LD	A,6"
3672,3672,3581,18f4,1852,18 d3,18 d3,jr $-$2b,jr $-$2b,jr $-$00,eval.asm,"JR	ERROR2ev		;""Type mismatch"""
3673,3673,3582,18f6,1854,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,eval.asm,ITEM1:          CALL	EXPR		;BRACKETED EXPR
3674,3674,3583,18f9,1857,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
3675,3675,3584,18fc,185a,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
3676,3676,3585,18fd,185b,c9,c9,ret,ret,ret,eval.asm,RET
3677,3677,3586,18fe,185c,cd 54 19,cd b2 18,call $1954,call $18b2,call $0000,eval.asm,ITEMN:          CALL	ITEM
3678,3678,3587,1901,185f,b7,b7,or a,or a,or a,eval.asm,OR	A
3679,3679,3588,1902,1860,f0,f0,ret p,ret p,ret p,eval.asm,RET	P
3680,3680,3589,1903,1861,18 ed,18 ed,jr $-$11,jr $-$11,jr $-$00,eval.asm,JR	MISMATev
3681,3681,3590,1905,1863,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,eval.asm,HEXev:            CALL	ZERO
3682,3682,3591,1908,1866,cd db 20,cd 39 20,call $20db,call $2039,call $0000,eval.asm,CALL	HEXDIG
3683,3683,3592,190b,1869,38 ba,38 ba,"jr c,$-$44","jr c,$-$44","jr c,$-$00",eval.asm,"JR	C,BADHEX"
3684,3684,3593,190d,186b,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,HEX1:           INC	IY
3685,3685,3594,190f,186d,e6 0f,e6 0f,and $0f,and $0f,and $00,eval.asm,AND	0FH
3686,3686,3595,1911,186f,06 04,06 04,"ld b,$04","ld b,$04","ld b,$00",eval.asm,"LD	B,4"
3687,3687,3596,1913,1871,d9,d9,exx,exx,exx,eval.asm,HEX2:           EXX
3688,3688,3597,1914,1872,29,29,"add hl,hl","add hl,hl","add hl,hl",eval.asm,"ADD	HL,HL"
3689,3689,3598,1915,1873,d9,d9,exx,exx,exx,eval.asm,EXX
3690,3690,3599,1916,1874,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
3691,3691,3600,1918,1876,10 f9,10 f9,djnz $-$05,djnz $-$05,djnz $-$00,eval.asm,DJNZ	HEX2
3692,3692,3601,191a,1878,d9,d9,exx,exx,exx,eval.asm,EXX
3693,3693,3602,191b,1879,b5,b5,or l,or l,or l,eval.asm,OR	L
3694,3694,3603,191c,187a,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
3695,3695,3604,191d,187b,d9,d9,exx,exx,exx,eval.asm,EXX
3696,3696,3605,191e,187c,cd db 20,cd 39 20,call $20db,call $2039,call $0000,eval.asm,CALL	HEXDIG
3697,3697,3606,1921,187f,30 ea,30 ea,"jr nc,$-$14","jr nc,$-$14","jr nc,$-$00",eval.asm,"JR	NC,HEX1"
3698,3698,3607,1923,1881,af,af,xor a,xor a,xor a,eval.asm,XOR	A
3699,3699,3608,1924,1882,c9,c9,ret,ret,ret,eval.asm,RET
3700,3700,3609,1925,1883,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,eval.asm,BIN:            CALL	ZERO
3701,3701,3610,1928,1886,cd ce 20,cd 2c 20,call $20ce,call $202c,call $0000,eval.asm,CALL	BINDIG
3702,3702,3611,192b,1889,38 9a,38 9a,"jr c,$-$64","jr c,$-$64","jr c,$-$00",eval.asm,"JR	C,BADHEX"
3703,3703,3612,192d,188b,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,BIN1:           INC	IY
3704,3704,3613,192f,188d,cb 1f,cb 1f,rr a,rr a,rr a,eval.asm,RR	A
3705,3705,3614,1931,188f,d9,d9,exx,exx,exx,eval.asm,EXX
3706,3706,3615,1932,1890,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
3707,3707,3616,1934,1892,d9,d9,exx,exx,exx,eval.asm,EXX
3708,3708,3617,1935,1893,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
3709,3709,3618,1937,1895,cd ce 20,cd 2c 20,call $20ce,call $202c,call $0000,eval.asm,CALL	BINDIG
3710,3710,3619,193a,1898,30 f1,30 f1,"jr nc,$-$0d","jr nc,$-$0d","jr nc,$-$00",eval.asm,"JR	NC,BIN1"
3711,3711,3620,193c,189a,af,af,xor a,xor a,xor a,eval.asm,XOR	A
3712,3712,3621,193d,189b,c9,c9,ret,ret,ret,eval.asm,RET
3713,3713,3622,193e,189c,cd fe 18,cd 5c 18,call $18fe,call $185c,call $0000,eval.asm,MINUS:          CALL	ITEMN
3714,3714,3623,1941,189f,0d,0d,dec c,dec c,dec c,eval.asm,MINUS0:         DEC	C
3715,3715,3624,1942,18a0,0c,0c,inc c,inc c,inc c,eval.asm,INC	C
3716,3716,3625,1943,18a1,28 87,28 87,"jr z,$-$77","jr z,$-$77","jr z,$-$00",eval.asm,"JR	Z,NEGATEev	;ZERO/INTEGER"
3717,3717,3626,1945,18a3,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
3718,3718,3627,1946,18a4,ee 80,ee 80,xor $80,xor $80,xor $00,eval.asm,XOR	80H		;CHANGE SIGN (FP)
3719,3719,3628,1948,18a6,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
3720,3720,3629,1949,18a7,af,af,xor a,xor a,xor a,eval.asm,XOR	A		;NUMERIC MARKER
3721,3721,3630,194a,18a8,c9,c9,ret,ret,ret,eval.asm,RET
3722,3722,3631,194b,18a9,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,eval.asm,ADDROF:         CALL	VAR_
3723,3723,3632,194e,18ac,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
3724,3724,3633,194f,18ad,d9,d9,exx,exx,exx,eval.asm,EXX
3725,3725,3634,1950,18ae,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
3726,3726,3635,1951,18af,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,eval.asm,JP	COUNT1
3727,3727,3636,1954,18b2,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,eval.asm,ITEM:           CALL	CHECK
3728,3728,3637,1957,18b5,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
3729,3729,3638,195a,18b8,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3730,3730,3639,195c,18ba,fe 8d,fe 8d,cp $8d,cp $8d,cp $00,eval.asm,CP	FUNTOK
3731,3731,3640,195e,18bc,38 08,38 08,"jr c,$+$0a","jr c,$+$0a","jr c,$+$00",eval.asm,"JR	C,ITEM0"
3732,3732,3641,1960,18be,fe c7,fe c7,cp $c7,cp $c7,cp $00,eval.asm,CP	TCMD
3733,3733,3642,1962,18c0,da 45 21,da a3 20,"jp c,$2145","jp c,$20a3","jp c,$0000",eval.asm,"JP	C,DISPATev	;FUNCTIONS"
3734,3734,3643,1965,18c3,c3 b4 1a,c3 12 1a,jp $1ab4,jp $1a12,jp $0000,eval.asm,"JP	EXTRASev		;DIM, END, MODE, REPORT$, WIDTH"
3735,3735,3644,1968,18c6,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,eval.asm,ITEM0:          CP	':'
3736,3736,3645,196a,18c8,30 25,30 25,"jr nc,$+$27","jr nc,$+$27","jr nc,$+$00",eval.asm,"JR	NC,ITEM2	;VARIABLES"
3737,3737,3646,196c,18ca,fe 30,fe 30,cp $30,cp $30,cp $00,eval.asm,CP	'0'
3738,3738,3647,196e,18cc,30 7b,30 7b,"jr nc,$+$7d","jr nc,$+$7d","jr nc,$+$00",eval.asm,"JR	NC,CONev		;NUMERIC CONSTANT"
3739,3739,3648,1970,18ce,fe 28,fe 28,cp $28,cp $28,cp $00,eval.asm,CP	'('
3740,3740,3649,1972,18d0,28 82,28 82,"jr z,$-$7c","jr z,$-$7c","jr z,$-$00",eval.asm,"JR	Z,ITEM1		;EXPRESSION"
3741,3741,3650,1974,18d2,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,eval.asm,CP	'-'
3742,3742,3651,1976,18d4,28 c6,28 c6,"jr z,$-$38","jr z,$-$38","jr z,$-$00",eval.asm,"JR	Z,MINUS		;UNARY MINUS"
3743,3743,3652,1978,18d6,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,eval.asm,CP	'+'
3744,3744,3653,197a,18d8,28 82,28 82,"jr z,$-$7c","jr z,$-$7c","jr z,$-$00",eval.asm,"JR	Z,ITEMN		;UNARY PLUS"
3745,3745,3654,197c,18da,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,eval.asm,CP	'.'
3746,3746,3655,197e,18dc,28 6b,28 6b,"jr z,$+$6d","jr z,$+$6d","jr z,$+$00",eval.asm,"JR	Z,CONev		;NUMERIC CONSTANT"
3747,3747,3656,1980,18de,fe 26,fe 26,cp $26,cp $26,cp $00,eval.asm,CP	'&'
3748,3748,3657,1982,18e0,28 81,28 81,"jr z,$-$7d","jr z,$-$7d","jr z,$-$00",eval.asm,"JR	Z,HEXev		;HEX CONSTANT"
3749,3749,3658,1984,18e2,fe 25,fe 25,cp $25,cp $25,cp $00,eval.asm,CP	'%'
3750,3750,3659,1986,18e4,28 9d,28 9d,"jr z,$-$61","jr z,$-$61","jr z,$-$00",eval.asm,"JR	Z,BIN		;BINARY CONSTANT"
3751,3751,3660,1988,18e6,fe 22,fe 22,cp $22,cp $22,cp $00,eval.asm,"CP	'""'"
3752,3752,3661,198a,18e8,28 72,28 72,"jr z,$+$74","jr z,$+$74","jr z,$+$00",eval.asm,"JR	Z,CONS		;STRING CONSTANT"
3753,3753,3662,198c,18ea,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,eval.asm,CP	TTINT
3754,3754,3663,198e,18ec,ca 54 1b,ca b2 1a,"jp z,$1b54","jp z,$1ab2","jp z,$0000",eval.asm,"JP	Z,TINTev		;TINT FUNCTION"
3755,3755,3664,1991,18ef,fe 83,fe 83,cp $83,cp $83,cp $00,eval.asm,ITEM2:          CP	TMOD
3756,3756,3665,1993,18f1,ca d1 1d,ca 2f 1d,"jp z,$1dd1","jp z,$1d2f","jp z,$0000",eval.asm,"JP	Z,MODFUN	;MOD"
3757,3757,3666,1996,18f4,fe 5e,fe 5e,cp $5e,cp $5e,cp $00,eval.asm,CP	'^'
3758,3758,3667,1998,18f6,28 b1,28 b1,"jr z,$-$4d","jr z,$-$4d","jr z,$-$00",eval.asm,"JR	Z,ADDROF	;^ OPERATOR"
3759,3759,3668,199a,18f8,fd 2b,fd 2b,dec iy,dec iy,dec iy,eval.asm,DEC	IY
3760,3760,3669,199c,18fa,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,eval.asm,CALL	GETVAR		;VARIABLE
3761,3761,3670,199f,18fd,20 2f,20 2f,"jr nz,$+$31","jr nz,$+$31","jr nz,$+$00",eval.asm,"JR	NZ,NOSUCHev"
3762,3762,3671,19a1,18ff,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",eval.asm,"BIT	6,A"
3763,3763,3672,19a3,1901,20 7e,20 7e,"jr nz,$+$80","jr nz,$+$80","jr nz,$+$00",eval.asm,"JR	NZ,ARRAYev"
3764,3764,3673,19a5,1903,b7,b7,or a,or a,or a,eval.asm,OR	A
3765,3765,3674,19a6,1904,fa 92 1a,fa f0 19,"jp m,$1a92","jp m,$19f0","jp m,$0000",eval.asm,"JP	M,LOADS		;STRING VARIABLE"
3766,3766,3675,19a9,1907,cb 57,cb 57,"bit 2,a","bit 2,a","bit 2,a",eval.asm,"LOADN:          BIT	2,A"
3767,3767,3676,19ab,1909,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",eval.asm,"LD	C,0"
3768,3768,3677,19ad,190b,28 16,28 16,"jr z,$+$18","jr z,$+$18","jr z,$+$00",eval.asm,"JR	Z,LOAD1		;BYTE VARIABLE"
3769,3769,3678,19af,190d,cb 47,cb 47,"bit 0,a","bit 0,a","bit 0,a",eval.asm,"BIT	0,A"
3770,3770,3679,19b1,190f,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",eval.asm,"JR	Z,LOAD4		;INTEGER VARIABLE"
3771,3771,3680,19b3,1911,dd 4e 04,dd 4e 04,"ld c,(ix+$04)","ld c,(ix+$04)","ld c,(ix+$00)",eval.asm,"LOAD5:          LD	C,(IX+4)"
3772,3772,3681,19b6,1914,d9,d9,exx,exx,exx,eval.asm,LOAD4:          EXX
3773,3773,3682,19b7,1915,dd 6e 00,dd 6e 00,"ld l,(ix)","ld l,(ix)","ld l,(ix)",eval.asm,"LD	L,(IX+0)"
3774,3774,3683,19ba,1918,dd 66 01,dd 66 01,"ld h,(ix+$01)","ld h,(ix+$01)","ld h,(ix+$00)",eval.asm,"LD	H,(IX+1)"
3775,3775,3684,19bd,191b,d9,d9,exx,exx,exx,eval.asm,EXX
3776,3776,3685,19be,191c,dd 6e 02,dd 6e 02,"ld l,(ix+$02)","ld l,(ix+$02)","ld l,(ix+$00)",eval.asm,"LD	L,(IX+2)"
3777,3777,3686,19c1,191f,dd 66 03,dd 66 03,"ld h,(ix+$03)","ld h,(ix+$03)","ld h,(ix+$00)",eval.asm,"LD	H,(IX+3)"
3778,3778,3687,19c4,1922,c9,c9,ret,ret,ret,eval.asm,RET
3779,3779,3688,19c5,1923,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",eval.asm,"LOAD1:          LD	HL,0"
3780,3780,3689,19c8,1926,d9,d9,exx,exx,exx,eval.asm,EXX
3781,3781,3690,19c9,1927,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",eval.asm,"LD	H,0"
3782,3782,3691,19cb,1929,dd 6e 00,dd 6e 00,"ld l,(ix)","ld l,(ix)","ld l,(ix)",eval.asm,"LD	L,(IX+0)"
3783,3783,3692,19ce,192c,d9,d9,exx,exx,exx,eval.asm,EXX
3784,3784,3693,19cf,192d,c9,c9,ret,ret,ret,eval.asm,RET
3785,3785,3694,19d0,192e,da 64 26,da c2 25,"jp c,$2664","jp c,$25c2","jp c,$0000",eval.asm,"NOSUCHev:         JP	C,SYNTAX"
3786,3786,3695,19d3,1931,3a fe 55,3a fe 54,"ld a,($55fe)","ld a,($54fe)","ld a,($0000)",eval.asm,"LD	A,(LISTON)"
3787,3787,3696,19d6,1934,cb 6f,cb 6f,"bit 5,a","bit 5,a","bit 5,a",eval.asm,"BIT	5,A"
3788,3788,3697,19d8,1936,3e 1a,3e 1a,"ld a,$1a","ld a,$1a","ld a,$00",eval.asm,"LD	A,26"
3789,3789,3698,19da,1938,20 36,20 36,"jr nz,$+$38","jr nz,$+$38","jr nz,$+$00",eval.asm,"JR	NZ,ERROR0ev	;""No such variable"""
3790,3790,3699,19dc,193a,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,NOS1:           INC	IY
3791,3791,3700,19de,193c,cd 73 44,cd d1 43,call $4473,call $43d1,call $0000,eval.asm,CALL	RANGE
3792,3792,3701,19e1,193f,30 f9,30 f9,"jr nc,$-$05","jr nc,$-$05","jr nc,$-$00",eval.asm,"JR	NC,NOS1"
3793,3793,3702,19e3,1941,dd 21 40 55,dd 21 40 54,"ld ix,$5540","ld ix,$5440","ld ix,$0000",eval.asm,"LD	IX,PC"
3794,3794,3703,19e7,1945,af,af,xor a,xor a,xor a,eval.asm,XOR	A
3795,3795,3704,19e8,1946,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
3796,3796,3705,19e9,1947,18 cb,18 cb,jr $-$33,jr $-$33,jr $-$00,eval.asm,JR	LOAD4
3797,3797,3706,19eb,1949,fd 2b,fd 2b,dec iy,dec iy,dec iy,eval.asm,CONev:            DEC	IY
3798,3798,3707,19ed,194b,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY
3799,3799,3708,19ef,194d,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
3800,3800,3709,19f1,194f,3e 24,3e 24,"ld a,$24","ld a,$24","ld a,$00",eval.asm,"LD	A,36"
3801,3801,3710,19f3,1951,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP
3802,3802,3711,19f6,1954,38 1a,38 1a,"jr c,$+$1c","jr c,$+$1c","jr c,$+$00",eval.asm,"JR	C,ERROR0ev"
3803,3803,3712,19f8,1956,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
3804,3804,3713,19fa,1958,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
3805,3805,3714,19fc,195a,af,af,xor a,xor a,xor a,eval.asm,XOR	A
3806,3806,3715,19fd,195b,c9,c9,ret,ret,ret,eval.asm,RET
3807,3807,3716,19fe,195c,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"CONS:           LD	DE,ACCS"
3808,3808,3717,1a01,195f,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"CONS3:          LD	A,(IY)"
3809,3809,3718,1a04,1962,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3810,3810,3719,1a06,1964,fe 22,fe 22,cp $22,cp $22,cp $00,eval.asm,"CP	'""'"
3811,3811,3720,1a08,1966,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",eval.asm,"JR	Z,CONS2"
3812,3812,3721,1a0a,1968,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"CONS1:          LD	(DE),A"
3813,3813,3722,1a0b,1969,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
3814,3814,3723,1a0c,196a,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,eval.asm,CP	CR
3815,3815,3724,1a0e,196c,20 f1,20 f1,"jr nz,$-$0d","jr nz,$-$0d","jr nz,$-$00",eval.asm,"JR	NZ,CONS3"
3816,3816,3725,1a10,196e,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",eval.asm,"LD	A,9"
3817,3817,3726,1a12,1970,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,eval.asm,"ERROR0ev:         JP	ERROR_		;""Missing """""""
3818,3818,3727,1a15,1973,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"CONS2:          LD	A,(IY)"
3819,3819,3728,1a18,1976,fe 22,fe 22,cp $22,cp $22,cp $00,eval.asm,"CP	'""'"
3820,3820,3729,1a1a,1978,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3821,3821,3730,1a1c,197a,28 ec,28 ec,"jr z,$-$12","jr z,$-$12","jr z,$-$00",eval.asm,"JR	Z,CONS1"
3822,3822,3731,1a1e,197c,fd 2b,fd 2b,dec iy,dec iy,dec iy,eval.asm,DEC	IY
3823,3823,3732,1a20,197e,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H		;STRING MARKER"
3824,3824,3733,1a22,1980,c9,c9,ret,ret,ret,eval.asm,RET
3825,3825,3734,1a23,1981,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",eval.asm,"ARRAYev:          LD	A,14		;'Bad use of array'"
3826,3826,3735,1a25,1983,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,eval.asm,JP	ERROR_
3827,3827,3736,1a28,1986,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"ARRLEN:         LD	A,(HL)		;Number of dimensions"
3828,3828,3737,1a29,1987,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3829,3829,3738,1a2a,1988,b7,b7,or a,or a,or a,eval.asm,OR	A
3830,3830,3739,1a2b,1989,28 f6,28 f6,"jr z,$-$08","jr z,$-$08","jr z,$-$00",eval.asm,"JR	Z,ARRAYev"
3831,3831,3740,1a2d,198b,11 01 00,11 01 00,"ld de,$0001","ld de,$0001","ld de,$0000",eval.asm,"LD	DE,1"
3832,3832,3741,1a30,198e,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",eval.asm,"ARLOOP:         LD	C,(HL)"
3833,3833,3742,1a31,198f,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3834,3834,3743,1a32,1990,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",eval.asm,"LD	B,(HL)		;BC = size of this dimension"
3835,3835,3744,1a33,1991,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3836,3836,3745,1a34,1992,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3837,3837,3746,1a35,1993,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
3838,3838,3747,1a36,1994,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
3839,3839,3748,1a37,1995,cd 41 37,cd 9f 36,call $3741,call $369f,call $0000,eval.asm,CALL	MUL16		;HL=HL*BC
3840,3840,3749,1a3a,1998,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
3841,3841,3750,1a3b,1999,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
3842,3842,3751,1a3c,199a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3843,3843,3752,1a3d,199b,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
3844,3844,3753,1a3e,199c,20 f0,20 f0,"jr nz,$-$0e","jr nz,$-$0e","jr nz,$-$00",eval.asm,"JR	NZ,ARLOOP"
3845,3845,3754,1a40,199e,c9,c9,ret,ret,ret,eval.asm,RET
3846,3846,3755,1a41,199f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,GETARR:         CALL	NXT
3847,3847,3756,1a44,19a2,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,eval.asm,CALL	GETVAR
3848,3848,3757,1a47,19a5,20 87,20 87,"jr nz,$-$77","jr nz,$-$77","jr nz,$-$00",eval.asm,"JR	NZ,NOSUCHev"
3849,3849,3758,1a49,19a7,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",eval.asm,"BIT	6,A"
3850,3850,3759,1a4b,19a9,37,37,scf,scf,scf,eval.asm,SCF
3851,3851,3760,1a4c,19aa,28 82,28 82,"jr z,$-$7c","jr z,$-$7c","jr z,$-$00",eval.asm,"JR	Z,NOSUCHev"
3852,3852,3761,1a4e,19ac,e6 8f,e6 8f,and $8f,and $8f,and $00,eval.asm,AND	8FH
3853,3853,3762,1a50,19ae,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A		;Type + size"
3854,3854,3763,1a51,19af,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"GETAR1:         LD	A,(HL)"
3855,3855,3764,1a52,19b0,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3856,3856,3765,1a53,19b1,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",eval.asm,"LD	H,(HL)"
3857,3857,3766,1a54,19b2,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
3858,3858,3767,1a55,19b3,e6 fe,e6 fe,and $fe,and $fe,and $00,eval.asm,AND	0FEH
3859,3859,3768,1a57,19b5,b4,b4,or h,or h,or h,eval.asm,OR	H
3860,3860,3769,1a58,19b6,28 c9,28 c9,"jr z,$-$35","jr z,$-$35","jr z,$-$00",eval.asm,"JR	Z,ARRAYev		;Bad use of array"
3861,3861,3770,1a5a,19b8,c9,c9,ret,ret,ret,eval.asm,RET
3862,3862,3771,1a5b,19b9,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,GETARB:         CALL	NXT
3863,3863,3772,1a5e,19bc,fe 28,fe 28,cp $28,cp $28,cp $00,eval.asm,CP	'('
3864,3864,3773,1a60,19be,20 df,20 df,"jr nz,$-$1f","jr nz,$-$1f","jr nz,$-$00",eval.asm,"JR	NZ,GETARR"
3865,3865,3774,1a62,19c0,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3866,3866,3775,1a64,19c2,cd 41 1a,cd 9f 19,call $1a41,call $199f,call $0000,eval.asm,CALL	GETARR
3867,3867,3776,1a67,19c5,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
3868,3868,3777,1a6a,19c8,c9,c9,ret,ret,ret,eval.asm,RET
3869,3869,3778,1a6b,19c9,cb 57,cb 57,"bit 2,a","bit 2,a","bit 2,a",eval.asm,"DLOADN:         BIT	2,A"
3870,3870,3779,1a6d,19cb,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
3871,3871,3780,1a6f,19cd,28 16,28 16,"jr z,$+$18","jr z,$+$18","jr z,$+$00",eval.asm,"JR	Z,DLOAD1	;BYTE VARIABLE"
3872,3872,3781,1a71,19cf,cb 47,cb 47,"bit 0,a","bit 0,a","bit 0,a",eval.asm,"BIT	0,A"
3873,3873,3782,1a73,19d1,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",eval.asm,"JR	Z,DLOAD4	;INTEGER VARIABLE"
3874,3874,3783,1a75,19d3,dd 46 04,dd 46 04,"ld b,(ix+$04)","ld b,(ix+$04)","ld b,(ix+$00)",eval.asm,"DLOAD5:         LD	B,(IX+4)"
3875,3875,3784,1a78,19d6,d9,d9,exx,exx,exx,eval.asm,DLOAD4:         EXX
3876,3876,3785,1a79,19d7,dd 5e 00,dd 5e 00,"ld e,(ix)","ld e,(ix)","ld e,(ix)",eval.asm,"LD	E,(IX+0)"
3877,3877,3786,1a7c,19da,dd 56 01,dd 56 01,"ld d,(ix+$01)","ld d,(ix+$01)","ld d,(ix+$00)",eval.asm,"LD	D,(IX+1)"
3878,3878,3787,1a7f,19dd,d9,d9,exx,exx,exx,eval.asm,EXX
3879,3879,3788,1a80,19de,dd 5e 02,dd 5e 02,"ld e,(ix+$02)","ld e,(ix+$02)","ld e,(ix+$00)",eval.asm,"LD	E,(IX+2)"
3880,3880,3789,1a83,19e1,dd 56 03,dd 56 03,"ld d,(ix+$03)","ld d,(ix+$03)","ld d,(ix+$00)",eval.asm,"LD	D,(IX+3)"
3881,3881,3790,1a86,19e4,c9,c9,ret,ret,ret,eval.asm,RET
3882,3882,3791,1a87,19e5,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",eval.asm,"DLOAD1:         LD	DE,0"
3883,3883,3792,1a8a,19e8,d9,d9,exx,exx,exx,eval.asm,EXX
3884,3884,3793,1a8b,19e9,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",eval.asm,"LD	D,0"
3885,3885,3794,1a8d,19eb,dd 5e 00,dd 5e 00,"ld e,(ix)","ld e,(ix)","ld e,(ix)",eval.asm,"LD	E,(IX+0)"
3886,3886,3795,1a90,19ee,d9,d9,exx,exx,exx,eval.asm,EXX
3887,3887,3796,1a91,19ef,c9,c9,ret,ret,ret,eval.asm,RET
3888,3888,3797,1a92,19f0,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LOADS:          LD	DE,ACCS"
3889,3889,3798,1a95,19f3,1f,1f,rra,rra,rra,eval.asm,RRA
3890,3890,3799,1a96,19f4,30 10,30 10,"jr nc,$+$12","jr nc,$+$12","jr nc,$+$00",eval.asm,"JR	NC,LOADS2	;FIXED STRING"
3891,3891,3800,1a98,19f6,cd b6 19,cd 14 19,call $19b6,call $1914,call $0000,eval.asm,CALL	LOAD4
3892,3892,3801,1a9b,19f9,d9,d9,exx,exx,exx,eval.asm,EXX
3893,3893,3802,1a9c,19fa,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
3894,3894,3803,1a9d,19fb,d9,d9,exx,exx,exx,eval.asm,EXX
3895,3895,3804,1a9e,19fc,b7,b7,or a,or a,or a,eval.asm,OR	A
3896,3896,3805,1a9f,19fd,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
3897,3897,3806,1aa0,19fe,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H		;STRING MARKER"
3898,3898,3807,1aa2,1a00,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
3899,3899,3808,1aa3,1a01,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
3900,3900,3809,1aa5,1a03,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR
3901,3901,3810,1aa7,1a05,c9,c9,ret,ret,ret,eval.asm,RET
3902,3902,3811,1aa8,1a06,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"LOADS2:         LD	A,(HL)"
3903,3903,3812,1aa9,1a07,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
3904,3904,3813,1aaa,1a08,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3905,3905,3814,1aab,1a09,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,eval.asm,CP	CR
3906,3906,3815,1aad,1a0b,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"REPDUN:         LD	A,80H		;STRING MARKER"
3907,3907,3816,1aaf,1a0d,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
3908,3908,3817,1ab0,1a0e,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
3909,3909,3818,1ab1,1a0f,20 f5,20 f5,"jr nz,$-$09","jr nz,$-$09","jr nz,$-$00",eval.asm,"JR	NZ,LOADS2"
3910,3910,3819,1ab3,1a11,c9,c9,ret,ret,ret,eval.asm,RET			;RETURN NULL STRING
3911,3911,3820,1ab4,1a12,fe eb,fe eb,cp $eb,cp $eb,cp $00,eval.asm,EXTRASev:         CP	TMODE
3912,3912,3821,1ab6,1a14,ca 77 0e,ca d5 0d,"jp z,$0e77","jp z,$0dd5","jp z,$0000",eval.asm,"JP	Z,MODEFN	;MODE"
3913,3913,3822,1ab9,1a17,fe fe,fe fe,cp $fe,cp $fe,cp $00,eval.asm,CP	TWIDTH
3914,3914,3823,1abb,1a19,ca 81 0e,ca df 0d,"jp z,$0e81","jp z,$0ddf","jp z,$0000",eval.asm,"JP	Z,WIDFN		;WIDTH"
3915,3915,3824,1abe,1a1c,fe f6,fe f6,cp $f6,cp $f6,cp $00,eval.asm,CP	TREPORT
3916,3916,3825,1ac0,1a1e,28 11,28 11,"jr z,$+$13","jr z,$+$13","jr z,$+$00",eval.asm,"JR	Z,REPORS	;REPORT$"
3917,3917,3826,1ac2,1a20,fe e0,fe e0,cp $e0,cp $e0,cp $00,eval.asm,CP	TEND
3918,3918,3827,1ac4,1a22,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",eval.asm,"JR	Z,ENDFUN	;END"
3919,3919,3828,1ac6,1a24,fe de,fe de,cp $de,cp $de,cp $00,eval.asm,CP	TDIM
3920,3920,3829,1ac8,1a26,28 44,28 44,"jr z,$+$46","jr z,$+$46","jr z,$+$00",eval.asm,"JR	Z,DIMFUN	;DIM"
3921,3921,3830,1aca,1a28,c3 64 26,c3 c2 25,jp $2664,jp $25c2,jp $0000,eval.asm,SYNERR:         JP	SYNTAX		; 'Syntax error'
3922,3922,3831,1acd,1a2b,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",eval.asm,"ENDFUN:         LD	HL,(FREE)"
3923,3923,3832,1ad0,1a2e,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,eval.asm,JP	COUNT1
3924,3924,3833,1ad3,1a31,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"REPORS:         LD	A,(IY)"
3925,3925,3834,1ad6,1a34,fe 24,fe 24,cp $24,cp $24,cp $00,eval.asm,CP	'$'
3926,3926,3835,1ad8,1a36,20 f0,20 f0,"jr nz,$-$0e","jr nz,$-$0e","jr nz,$-$00",eval.asm,"JR	NZ,SYNERR"
3927,3927,3836,1ada,1a38,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3928,3928,3837,1adc,1a3a,2a ee 55,2a ee 54,"ld hl,($55ee)","ld hl,($54ee)","ld hl,($0000)",eval.asm,"LD	HL,(ERRTXT)"
3929,3929,3838,1adf,1a3d,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
3930,3930,3839,1ae2,1a40,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"REPCPY:         LD	A,(HL)"
3931,3931,3840,1ae3,1a41,b7,b7,or a,or a,or a,eval.asm,OR	A
3932,3932,3841,1ae4,1a42,28 c7,28 c7,"jr z,$-$37","jr z,$-$37","jr z,$-$00",eval.asm,"JR	Z,REPDUN"
3933,3933,3842,1ae6,1a44,ed a0,ed a0,ldi,ldi,ldi,eval.asm,LDI
3934,3934,3843,1ae8,1a46,fe a0,fe a0,cp $a0,cp $a0,cp $00,eval.asm,CP	160
3935,3935,3844,1aea,1a48,ea e2 1a,ea 40 1a,"jp pe,$1ae2","jp pe,$1a40","jp pe,$0000",eval.asm,"JP	PE,REPCPY"
3936,3936,3845,1aed,1a4b,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,eval.asm,CP	LF
3937,3937,3846,1aef,1a4d,28 f1,28 f1,"jr z,$-$0d","jr z,$-$0d","jr z,$-$00",eval.asm,"JR	Z,REPCPY"
3938,3938,3847,1af1,1a4f,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
3939,3939,3848,1af2,1a50,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
3940,3940,3849,1af3,1a51,21 08 39,21 66 38,"ld hl,$3908","ld hl,$3866","ld hl,$0000",eval.asm,"LD	HL,KEYWDS"
3941,3941,3850,1af6,1a54,01 5b 03,01 5b 03,"ld bc,$035b","ld bc,$035b","ld bc,$0000",eval.asm,"LD	BC,KEYWDL"
3942,3942,3851,1af9,1a57,ed b1,ed b1,cpir,cpir,cpir,eval.asm,CPIR
3943,3943,3852,1afb,1a59,06 a0,06 a0,"ld b,$a0","ld b,$a0","ld b,$00",eval.asm,"LD	B,160"
3944,3944,3853,1afd,1a5b,fe 91,fe 91,cp $91,cp $91,cp $00,eval.asm,CP	145
3945,3945,3854,1aff,1a5d,ea 03 1b,ea 61 1a,"jp pe,$1b03","jp pe,$1a61","jp pe,$0000",eval.asm,"JP	PE,REPTOK"
3946,3946,3855,1b02,1a60,04,04,inc b,inc b,inc b,eval.asm,INC	B
3947,3947,3856,1b03,1a61,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"REPTOK:         LD	A,(HL)"
3948,3948,3857,1b04,1a62,ed a0,ed a0,ldi,ldi,ldi,eval.asm,LDI
3949,3949,3858,1b06,1a64,b8,b8,cp b,cp b,cp b,eval.asm,CP	B
3950,3950,3859,1b07,1a65,ea 03 1b,ea 61 1a,"jp pe,$1b03","jp pe,$1a61","jp pe,$0000",eval.asm,"JP	PE,REPTOK"
3951,3951,3860,1b0a,1a68,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
3952,3952,3861,1b0b,1a69,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
3953,3953,3862,1b0c,1a6a,18 d4,18 d4,jr $-$2a,jr $-$2a,jr $-$00,eval.asm,JR	REPCPY
3954,3954,3863,1b0e,1a6c,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,DIMFUN:         CALL	NXT
3955,3955,3864,1b11,1a6f,fe 28,fe 28,cp $28,cp $28,cp $00,eval.asm,CP	'('
3956,3956,3865,1b13,1a71,20 09,20 09,"jr nz,$+$0b","jr nz,$+$0b","jr nz,$+$00",eval.asm,"JR	NZ,DIMF0"
3957,3957,3866,1b15,1a73,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3958,3958,3867,1b17,1a75,cd 1e 1b,cd 7c 1a,call $1b1e,call $1a7c,call $0000,eval.asm,CALL	DIMF0
3959,3959,3868,1b1a,1a78,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
3960,3960,3869,1b1d,1a7b,c9,c9,ret,ret,ret,eval.asm,RET
3961,3961,3870,1b1e,1a7c,cd 41 1a,cd 9f 19,call $1a41,call $199f,call $0000,eval.asm,DIMF0:          CALL	GETARR
3962,3962,3871,1b21,1a7f,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
3963,3963,3872,1b22,1a80,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
3964,3964,3873,1b25,1a83,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",eval.asm,"LD	E,0"
3965,3965,3874,1b27,1a85,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
3966,3966,3875,1b29,1a87,20 0b,20 0b,"jr nz,$+$0d","jr nz,$+$0d","jr nz,$+$00",eval.asm,"JR	NZ,DIMF1"
3967,3967,3876,1b2b,1a89,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
3968,3968,3877,1b2d,1a8b,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,eval.asm,CALL	EXPRI
3969,3969,3878,1b30,1a8e,d9,d9,exx,exx,exx,eval.asm,EXX
3970,3970,3879,1b31,1a8f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3971,3971,3880,1b32,1a90,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
3972,3972,3881,1b33,1a91,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
3973,3973,3882,1b34,1a92,28 19,28 19,"jr z,$+$1b","jr z,$+$1b","jr z,$+$00",eval.asm,"JR	Z,BADSUB"
3974,3974,3883,1b36,1a94,e1,e1,pop hl,pop hl,pop hl,eval.asm,DIMF1:          POP	HL
3975,3975,3884,1b37,1a95,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"LD	A,(HL)"
3976,3976,3885,1b38,1a96,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3977,3977,3886,1b39,1a97,bb,bb,cp e,cp e,cp e,eval.asm,CP	E
3978,3978,3887,1b3a,1a98,38 13,38 13,"jr c,$+$15","jr c,$+$15","jr c,$+$00",eval.asm,"JR	C,BADSUB"
3979,3979,3888,1b3c,1a9a,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
3980,3980,3889,1b3d,1a9b,fa 4a 1b,fa a8 1a,"jp m,$1b4a","jp m,$1aa8","jp m,$0000",eval.asm,"JP	M,DIMF3"
3981,3981,3890,1b40,1a9e,19,19,"add hl,de","add hl,de","add hl,de",eval.asm,"ADD	HL,DE"
3982,3982,3891,1b41,1a9f,19,19,"add hl,de","add hl,de","add hl,de",eval.asm,"ADD	HL,DE"
3983,3983,3892,1b42,1aa0,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"LD	A,(HL)"
3984,3984,3893,1b43,1aa1,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
3985,3985,3894,1b44,1aa2,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",eval.asm,"LD	H,(HL)"
3986,3986,3895,1b45,1aa3,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
3987,3987,3896,1b46,1aa4,2b,2b,dec hl,dec hl,dec hl,eval.asm,DEC	HL
3988,3988,3897,1b47,1aa5,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,eval.asm,DIMF2:          JP	COUNT1
3989,3989,3898,1b4a,1aa8,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"DIMF3:          LD	L,A"
3990,3990,3899,1b4b,1aa9,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",eval.asm,"LD	H,0"
3991,3991,3900,1b4d,1aab,18 f8,18 f8,jr $-$06,jr $-$06,jr $-$00,eval.asm,JR	DIMF2
3992,3992,3901,1b4f,1aad,3e 0f,3e 0f,"ld a,$0f","ld a,$0f","ld a,$00",eval.asm,"BADSUB:         LD	A,15"
3993,3993,3902,1b51,1aaf,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,eval.asm,"JP	ERROR_			;""Bad subscript"""
3994,3994,3903,1b54,1ab2,cd 95 11,cd f3 10,call $1195,call $10f3,call $0000,eval.asm,TINTev:           CALL	TINTFN
3995,3995,3904,1b57,1ab5,18 7b,18 7b,jr $+$7d,jr $+$7d,jr $+$00,eval.asm,JR	COUNT1
3996,3996,3905,1b59,1ab7,cd 2d 0e,cd 8b 0d,call $0e2d,call $0d8b,call $0000,eval.asm,POS:            CALL	GETCSR
3997,3997,3906,1b5c,1aba,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
3998,3998,3907,1b5d,1abb,18 75,18 75,jr $+$77,jr $+$77,jr $+$00,eval.asm,JR	COUNT1
3999,3999,3908,1b5f,1abd,cd 2d 0e,cd 8b 0d,call $0e2d,call $0d8b,call $0000,eval.asm,VPOS:           CALL	GETCSR
4000,4000,3909,1b62,1ac0,18 70,18 70,jr $+$72,jr $+$72,jr $+$00,eval.asm,JR	COUNT1
4001,4001,3910,1b64,1ac2,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,eval.asm,EOF:            CALL	CHANEL
4002,4002,3911,1b67,1ac5,cd 6e 06,cd 4e 06,call $066e,call $064e,call $0000,eval.asm,CALL	OSSTAT
4003,4003,3912,1b6a,1ac8,ca 41 1c,ca 9f 1b,"jp z,$1c41","jp z,$1b9f","jp z,$0000",eval.asm,"JP	Z,TRUEev"
4004,4004,3913,1b6d,1acb,c3 7c 20,c3 da 1f,jp $207c,jp $1fda,jp $0000,eval.asm,JP	ZERO
4005,4005,3914,1b70,1ace,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,eval.asm,BGET:           CALL	CHANEL		;CHANNEL NUMBER
4006,4006,3915,1b73,1ad1,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,eval.asm,CALL	OSBGET
4007,4007,3916,1b76,1ad4,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4008,4008,3917,1b77,1ad5,18 59,18 59,jr $+$5b,jr $+$5b,jr $+$00,eval.asm,JR	COUNT0
4009,4009,3918,1b79,1ad7,cd 12 1f,cd 70 1e,call $1f12,call $1e70,call $0000,eval.asm,INKEY:          CALL	INKEYS
4010,4010,3919,1b7c,1ada,18 19,18 19,jr $+$1b,jr $+$1b,jr $+$00,eval.asm,JR	ASC0
4011,4011,3920,1b7e,1adc,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,GET:            CALL	NXT
4012,4012,3921,1b81,1adf,fe 28,fe 28,cp $28,cp $28,cp $00,eval.asm,CP	'('
4013,4013,3922,1b83,1ae1,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",eval.asm,"JR	NZ,GET0"
4014,4014,3923,1b85,1ae3,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,eval.asm,CALL	ITEMI		;PORT ADDRESS
4015,4015,3924,1b88,1ae6,d9,d9,exx,exx,exx,eval.asm,EXX
4016,4016,3925,1b89,1ae7,44,44,"ld b,h","ld b,h","ld b,h",eval.asm,"LD	B,H"
4017,4017,3926,1b8a,1ae8,4d,4d,"ld c,l","ld c,l","ld c,l",eval.asm,"LD	C,L"
4018,4018,3927,1b8b,1ae9,ed 68,ed 68,"in l,(bc)","in l,(bc)","in l,(bc)",eval.asm,"IN	L,(C)		;INPUT FROM PORT BC"
4019,4019,3928,1b8d,1aeb,18 43,18 43,jr $+$45,jr $+$45,jr $+$00,eval.asm,JR	COUNT0
4020,4020,3929,1b8f,1aed,cd b1 1e,cd 0f 1e,call $1eb1,call $1e0f,call $0000,eval.asm,GET0:           CALL	GETS
4021,4021,3930,1b92,1af0,18 08,18 08,jr $+$0a,jr $+$0a,jr $+$00,eval.asm,JR	ASC1
4022,4022,3931,1b94,1af2,cd ed 18,cd 4b 18,call $18ed,call $184b,call $0000,eval.asm,ASC:            CALL	ITEMS
4023,4023,3932,1b97,1af5,af,af,xor a,xor a,xor a,eval.asm,ASC0:           XOR	A
4024,4024,3933,1b98,1af6,bb,bb,cp e,cp e,cp e,eval.asm,CP	E
4025,4025,3934,1b99,1af7,ca 41 1c,ca 9f 1b,"jp z,$1c41","jp z,$1b9f","jp z,$0000",eval.asm,"JP	Z,TRUEev		;NULL STRING"
4026,4026,3935,1b9c,1afa,2a 00 53,2a 00 52,"ld hl,($5300)","ld hl,($5200)","ld hl,($0000)",eval.asm,"ASC1:           LD	HL,(ACCS)"
4027,4027,3936,1b9f,1afd,18 31,18 31,jr $+$33,jr $+$33,jr $+$00,eval.asm,JR	COUNT0
4028,4028,3937,1ba1,1aff,cd ed 18,cd 4b 18,call $18ed,call $184b,call $0000,eval.asm,LEN:            CALL	ITEMS
4029,4029,3938,1ba4,1b02,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4030,4030,3939,1ba5,1b03,18 2b,18 2b,jr $+$2d,jr $+$2d,jr $+$00,eval.asm,JR	COUNT0
4031,4031,3940,1ba7,1b05,2a de 55,2a de 54,"ld hl,($55de)","ld hl,($54de)","ld hl,($0000)",eval.asm,"LOMEMVev:         LD	HL,(LOMEM)"
4032,4032,3941,1baa,1b08,18 28,18 28,jr $+$2a,jr $+$2a,jr $+$00,eval.asm,JR	COUNT1
4033,4033,3942,1bac,1b0a,2a e2 55,2a e2 54,"ld hl,($55e2)","ld hl,($54e2)","ld hl,($0000)",eval.asm,"HIMEMVev:         LD	HL,(HIMEM)"
4034,4034,3943,1baf,1b0d,18 23,18 23,jr $+$25,jr $+$25,jr $+$00,eval.asm,JR	COUNT1
4035,4035,3944,1bb1,1b0f,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",eval.asm,"PAGEVev:          LD	HL,(PAGE_)"
4036,4036,3945,1bb4,1b12,18 1e,18 1e,jr $+$20,jr $+$20,jr $+$00,eval.asm,JR	COUNT1
4037,4037,3946,1bb6,1b14,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"TOPV:           LD	A,(IY)"
4038,4038,3947,1bb9,1b17,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,"INC	IY		;SKIP ""P"""
4039,4039,3948,1bbb,1b19,fe 50,fe 50,cp $50,cp $50,cp $00,eval.asm,CP	'P'
4040,4040,3949,1bbd,1b1b,c2 64 26,c2 c2 25,"jp nz,$2664","jp nz,$25c2","jp nz,$0000",eval.asm,"JP	NZ,SYNTAX	;""Syntax Error"""
4041,4041,3950,1bc0,1b1e,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,eval.asm,CALL	GETTOP
4042,4042,3951,1bc3,1b21,18 0f,18 0f,jr $+$11,jr $+$11,jr $+$00,eval.asm,JR	COUNT1
4043,4043,3952,1bc5,1b23,2a f2 55,2a f2 54,"ld hl,($55f2)","ld hl,($54f2)","ld hl,($0000)",eval.asm,"ERLV:           LD	HL,(ERL)"
4044,4044,3953,1bc8,1b26,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	COUNT1
4045,4045,3954,1bca,1b28,2a fd 55,2a fd 54,"ld hl,($55fd)","ld hl,($54fd)","ld hl,($0000)",eval.asm,"ERRV:           LD	HL,(ERR)"
4046,4046,3955,1bcd,1b2b,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,eval.asm,JR	COUNT0
4047,4047,3956,1bcf,1b2d,2a fb 55,2a fb 54,"ld hl,($55fb)","ld hl,($54fb)","ld hl,($0000)",eval.asm,"COUNTV:         LD	HL,(COUNT)"
4048,4048,3957,1bd2,1b30,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",eval.asm,"COUNT0:         LD	H,0"
4049,4049,3958,1bd4,1b32,d9,d9,exx,exx,exx,eval.asm,COUNT1:         EXX
4050,4050,3959,1bd5,1b33,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4051,4051,3960,1bd6,1b34,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A		;INTEGER MARKER"
4052,4052,3961,1bd7,1b35,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4053,4053,3962,1bd8,1b36,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4054,4054,3963,1bd9,1b37,c9,c9,ret,ret,ret,eval.asm,RET
4055,4055,3964,1bda,1b38,af,af,xor a,xor a,xor a,eval.asm,OPENOT:         XOR	A
4056,4056,3965,1bdb,1b39,21 3e 02,21 3e 02,"ld hl,$023e","ld hl,$023e","ld hl,$0000",eval.asm,DB	21H		;SKIP NEXT 2 BYTES
4057,4057,3966,1bde,1b3c,21 3e 01,21 3e 01,"ld hl,$013e","ld hl,$013e","ld hl,$0000",eval.asm,DB	21H		;SKIP NEXT 2 BYTES
4058,4058,3967,1be1,1b3f,f5,f5,push af,push af,push af,eval.asm,PUSH	AF		;SAVE OPEN TYPE
4059,4059,3968,1be2,1b40,cd ed 18,cd 4b 18,call $18ed,call $184b,call $0000,eval.asm,CALL	ITEMS		;FILENAME
4060,4060,3969,1be5,1b43,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",eval.asm,"LD	A,CR"
4061,4061,3970,1be7,1b45,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4062,4062,3971,1be8,1b46,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF		;RESTORE OPEN TYPE
4063,4063,3972,1be9,1b47,c6 ff,c6 ff,"add a,$ff","add a,$ff","add a,$00",eval.asm,"ADD	A,-1		;AFFECT FLAGS"
4064,4064,3973,1beb,1b49,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",eval.asm,"LD	HL,ACCS"
4065,4065,3974,1bee,1b4c,cd 46 06,cd 26 06,call $0646,call $0626,call $0000,eval.asm,CALL	OSOPEN
4066,4066,3975,1bf1,1b4f,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4067,4067,3976,1bf2,1b50,18 de,18 de,jr $-$20,jr $-$20,jr $-$00,eval.asm,JR	COUNT0
4068,4068,3977,1bf4,1b52,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,eval.asm,EXTev:            CALL	CHANEL
4069,4069,3978,1bf7,1b55,cd af 06,cd 8f 06,call $06af,call $068f,call $0000,eval.asm,CALL	GETEXT
4070,4070,3979,1bfa,1b58,18 12,18 12,jr $+$14,jr $+$14,jr $+$00,eval.asm,JR	TIME0
4071,4071,3980,1bfc,1b5a,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,eval.asm,PTRev:            CALL	CHANEL
4072,4072,3981,1bff,1b5d,cd 78 06,cd 58 06,call $0678,call $0658,call $0000,eval.asm,CALL	GETPTR
4073,4073,3982,1c02,1b60,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	TIME0
4074,4074,3983,1c04,1b62,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"TIMEVev:          LD	A,(IY)"
4075,4075,3984,1c07,1b65,fe 24,fe 24,cp $24,cp $24,cp $00,eval.asm,CP	'$'
4076,4076,3985,1c09,1b67,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",eval.asm,"JR	Z,TIMEVSev"
4077,4077,3986,1c0b,1b69,cd ad 0d,cd 0b 0d,call $0dad,call $0d0b,call $0000,eval.asm,CALL	GETIME
4078,4078,3987,1c0e,1b6c,d5,d5,push de,push de,push de,eval.asm,TIME0:          PUSH	DE
4079,4079,3988,1c0f,1b6d,d9,d9,exx,exx,exx,eval.asm,EXX
4080,4080,3989,1c10,1b6e,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4081,4081,3990,1c11,1b6f,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4082,4082,3991,1c12,1b70,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4083,4083,3992,1c13,1b71,c9,c9,ret,ret,ret,eval.asm,RET
4084,4084,3993,1c14,1b72,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,TIMEVSev:         INC	IY		;SKIP $
4085,4085,3994,1c16,1b74,cd c2 0d,cd 20 0d,call $0dc2,call $0d20,call $0000,eval.asm,CALL	GETIMS
4086,4086,3995,1c19,1b77,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H		;MARK STRING"
4087,4087,3996,1c1b,1b79,c9,c9,ret,ret,ret,eval.asm,RET
4088,4088,3997,1c1c,1b7a,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SLT:            CALL	SCP
4089,4089,3998,1c1f,1b7d,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4090,4090,3999,1c20,1b7e,18 1f,18 1f,jr $+$21,jr $+$21,jr $+$00,eval.asm,JR	TRUEev
4091,4091,4000,1c22,1b80,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SGT:            CALL	SCP
4092,4092,4001,1c25,1b83,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4093,4093,4002,1c26,1b84,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4094,4094,4003,1c27,1b85,18 18,18 18,jr $+$1a,jr $+$1a,jr $+$00,eval.asm,JR	TRUEev
4095,4095,4004,1c29,1b87,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SGE:            CALL	SCP
4096,4096,4005,1c2c,1b8a,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4097,4097,4006,1c2d,1b8b,18 12,18 12,jr $+$14,jr $+$14,jr $+$00,eval.asm,JR	TRUEev
4098,4098,4007,1c2f,1b8d,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SLE:            CALL	SCP
4099,4099,4008,1c32,1b90,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",eval.asm,"JR	Z,TRUEev"
4100,4100,4009,1c34,1b92,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4101,4101,4010,1c35,1b93,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	TRUEev
4102,4102,4011,1c37,1b95,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SNE:            CALL	SCP
4103,4103,4012,1c3a,1b98,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4104,4104,4013,1c3b,1b99,18 04,18 04,jr $+$06,jr $+$06,jr $+$00,eval.asm,JR	TRUEev
4105,4105,4014,1c3d,1b9b,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,eval.asm,SEQ:            CALL	SCP
4106,4106,4015,1c40,1b9e,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
4107,4107,4016,1c41,1b9f,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",eval.asm,"TRUEev:           LD	A,-1"
4108,4108,4017,1c43,1ba1,d9,d9,exx,exx,exx,eval.asm,EXX
4109,4109,4018,1c44,1ba2,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4110,4110,4019,1c45,1ba3,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4111,4111,4020,1c46,1ba4,d9,d9,exx,exx,exx,eval.asm,EXX
4112,4112,4021,1c47,1ba5,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4113,4113,4022,1c48,1ba6,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4114,4114,4023,1c49,1ba7,3c,3c,inc a,inc a,inc a,eval.asm,INC	A
4115,4115,4024,1c4a,1ba8,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4116,4116,4025,1c4b,1ba9,c9,c9,ret,ret,ret,eval.asm,RET
4117,4117,4026,1c4c,1baa,3e 23,3e 23,"ld a,$23","ld a,$23","ld a,$00",eval.asm,"PIev:             LD	A,35"
4118,4118,4027,1c4e,1bac,18 43,18 43,jr $+$45,jr $+$45,jr $+$00,eval.asm,JR	FPP1
4119,4119,4028,1c50,1bae,3e 10,3e 10,"ld a,$10","ld a,$10","ld a,$00",eval.asm,"ABSev:            LD	A,16"
4120,4120,4029,1c52,1bb0,18 3a,18 3a,jr $+$3c,jr $+$3c,jr $+$00,eval.asm,JR	FPPN
4121,4121,4030,1c54,1bb2,3e 1a,3e 1a,"ld a,$1a","ld a,$1a","ld a,$00",eval.asm,"CPL_ev:           LD	A,26"
4122,4122,4031,1c56,1bb4,18 36,18 36,jr $+$38,jr $+$38,jr $+$00,eval.asm,JR	FPPN
4123,4123,4032,1c58,1bb6,3e 15,3e 15,"ld a,$15","ld a,$15","ld a,$00",eval.asm,"DEGev:            LD	A,21"
4124,4124,4033,1c5a,1bb8,18 32,18 32,jr $+$34,jr $+$34,jr $+$00,eval.asm,JR	FPPN
4125,4125,4034,1c5c,1bba,3e 1b,3e 1b,"ld a,$1b","ld a,$1b","ld a,$00",eval.asm,"RADev:            LD	A,27"
4126,4126,4035,1c5e,1bbc,18 2e,18 2e,jr $+$30,jr $+$30,jr $+$00,eval.asm,JR	FPPN
4127,4127,4036,1c60,1bbe,3e 1c,3e 1c,"ld a,$1c","ld a,$1c","ld a,$00",eval.asm,"SGNev:            LD	A,28"
4128,4128,4037,1c62,1bc0,18 2a,18 2a,jr $+$2c,jr $+$2c,jr $+$00,eval.asm,JR	FPPN
4129,4129,4038,1c64,1bc2,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",eval.asm,"INT_ev:           LD	A,23"
4130,4130,4039,1c66,1bc4,18 26,18 26,jr $+$28,jr $+$28,jr $+$00,eval.asm,JR	FPPN
4131,4131,4040,1c68,1bc6,3e 1e,3e 1e,"ld a,$1e","ld a,$1e","ld a,$00",eval.asm,"SQRev:            LD	A,30"
4132,4132,4041,1c6a,1bc8,18 22,18 22,jr $+$24,jr $+$24,jr $+$00,eval.asm,JR	FPPN
4133,4133,4042,1c6c,1bca,3e 1f,3e 1f,"ld a,$1f","ld a,$1f","ld a,$00",eval.asm,"TANev:            LD	A,31"
4134,4134,4043,1c6e,1bcc,18 1e,18 1e,jr $+$20,jr $+$20,jr $+$00,eval.asm,JR	FPPN
4135,4135,4044,1c70,1bce,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",eval.asm,"COSev:            LD	A,20"
4136,4136,4045,1c72,1bd0,18 1a,18 1a,jr $+$1c,jr $+$1c,jr $+$00,eval.asm,JR	FPPN
4137,4137,4046,1c74,1bd2,3e 1d,3e 1d,"ld a,$1d","ld a,$1d","ld a,$00",eval.asm,"SINev:            LD	A,29"
4138,4138,4047,1c76,1bd4,18 16,18 16,jr $+$18,jr $+$18,jr $+$00,eval.asm,JR	FPPN
4139,4139,4048,1c78,1bd6,3e 16,3e 16,"ld a,$16","ld a,$16","ld a,$00",eval.asm,"EXPev:            LD	A,22"
4140,4140,4049,1c7a,1bd8,18 12,18 12,jr $+$14,jr $+$14,jr $+$00,eval.asm,JR	FPPN
4141,4141,4050,1c7c,1bda,3e 18,3e 18,"ld a,$18","ld a,$18","ld a,$00",eval.asm,"LNev:             LD	A,24"
4142,4142,4051,1c7e,1bdc,18 0e,18 0e,jr $+$10,jr $+$10,jr $+$00,eval.asm,JR	FPPN
4143,4143,4052,1c80,1bde,3e 19,3e 19,"ld a,$19","ld a,$19","ld a,$00",eval.asm,"LOGev:            LD	A,25"
4144,4144,4053,1c82,1be0,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	FPPN
4145,4145,4054,1c84,1be2,3e 12,3e 12,"ld a,$12","ld a,$12","ld a,$00",eval.asm,"ASNev:            LD	A,18"
4146,4146,4055,1c86,1be4,18 06,18 06,jr $+$08,jr $+$08,jr $+$00,eval.asm,JR	FPPN
4147,4147,4056,1c88,1be6,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",eval.asm,"ATNev:            LD	A,19"
4148,4148,4057,1c8a,1be8,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,eval.asm,JR	FPPN
4149,4149,4058,1c8c,1bea,3e 11,3e 11,"ld a,$11","ld a,$11","ld a,$00",eval.asm,"ACSev:            LD	A,17"
4150,4150,4059,1c8e,1bec,f5,f5,push af,push af,push af,eval.asm,FPPN:           PUSH	AF
4151,4151,4060,1c8f,1bed,cd fe 18,cd 5c 18,call $18fe,call $185c,call $0000,eval.asm,CALL	ITEMN
4152,4152,4061,1c92,1bf0,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4153,4153,4062,1c93,1bf1,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,FPP1:           CALL	FPP
4154,4154,4063,1c96,1bf4,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4155,4155,4064,1c99,1bf7,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4156,4156,4065,1c9a,1bf8,c9,c9,ret,ret,ret,eval.asm,RET
4157,4157,4066,1c9b,1bf9,3e 26,3e 26,"ld a,$26","ld a,$26","ld a,$00",eval.asm,"SFIX:           LD	A,38"
4158,4158,4067,1c9d,1bfb,18 f4,18 f4,jr $-$0a,jr $-$0a,jr $-$00,eval.asm,JR	FPP1
4159,4159,4068,1c9f,1bfd,3e 27,3e 27,"ld a,$27","ld a,$27","ld a,$00",eval.asm,"SFLOATev:         LD	A,39"
4160,4160,4069,1ca1,1bff,18 f0,18 f0,jr $-$0e,jr $-$0e,jr $-$00,eval.asm,JR	FPP1
4161,4161,4070,1ca3,1c01,cd ed 18,cd 4b 18,call $18ed,call $184b,call $0000,eval.asm,VALev:            CALL	ITEMS
4162,4162,4071,1ca6,1c04,af,af,xor a,xor a,xor a,eval.asm,VAL0:           XOR	A
4163,4163,4072,1ca7,1c05,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4164,4164,4073,1ca8,1c06,dd 21 00 53,dd 21 00 52,"ld ix,$5300","ld ix,$5200","ld ix,$0000",eval.asm,"LD	IX,ACCS"
4165,4165,4074,1cac,1c0a,3e 24,3e 24,"ld a,$24","ld a,$24","ld a,$00",eval.asm,"LD	A,36"
4166,4166,4075,1cae,1c0c,18 e3,18 e3,jr $-$1b,jr $-$1b,jr $-$00,eval.asm,JR	FPP1
4167,4167,4076,1cb0,1c0e,cd ed 18,cd 4b 18,call $18ed,call $184b,call $0000,eval.asm,EVAL_:          CALL	ITEMS
4168,4168,4077,1cb3,1c11,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",eval.asm,"LD	A,CR"
4169,4169,4078,1cb5,1c13,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4170,4170,4079,1cb6,1c14,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY
4171,4171,4080,1cb8,1c16,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
4172,4172,4081,1cbb,1c19,fd 21 00 53,fd 21 00 52,"ld iy,$5300","ld iy,$5200","ld iy,$0000",eval.asm,"LD	IY,ACCS"
4173,4173,4082,1cbf,1c1d,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",eval.asm,"LD	C,0"
4174,4174,4083,1cc1,1c1f,cd 9c 44,cd fa 43,call $449c,call $43fa,call $0000,eval.asm,CALL	LEXAN2		;TOKENISE
4175,4175,4084,1cc4,1c22,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4176,4176,4085,1cc5,1c23,13,13,inc de,inc de,inc de,eval.asm,INC	DE
4177,4177,4086,1cc6,1c24,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4178,4178,4087,1cc7,1c25,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;PUT ON STACK
4179,4179,4088,1cca,1c28,fd 21 02 00,fd 21 02 00,"ld iy,$0002","ld iy,$0002","ld iy,$0000",eval.asm,"LD	IY,2"
4180,4180,4089,1cce,1c2c,fd 39,fd 39,"add iy,sp","add iy,sp","add iy,sp",eval.asm,"ADD	IY,SP"
4181,4181,4090,1cd0,1c2e,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,eval.asm,CALL	EXPR
4182,4182,4091,1cd3,1c31,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
4183,4183,4092,1cd5,1c33,fd 39,fd 39,"add iy,sp","add iy,sp","add iy,sp",eval.asm,"ADD	IY,SP"
4184,4184,4093,1cd7,1c35,fd f9,fd f9,"ld sp,iy","ld sp,iy","ld sp,iy",eval.asm,"LD	SP,IY		;ADJUST STACK POINTER"
4185,4185,4094,1cd9,1c37,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
4186,4186,4095,1cdb,1c39,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
4187,4187,4096,1cdc,1c3a,c9,c9,ret,ret,ret,eval.asm,RET
4188,4188,4097,1cdd,1c3b,dd 21 f6 55,dd 21 f6 54,"ld ix,$55f6","ld ix,$54f6","ld ix,$0000",eval.asm,"RND:            LD	IX,RANDOM"
4189,4189,4098,1ce1,1c3f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4190,4190,4099,1ce4,1c42,fe 28,fe 28,cp $28,cp $28,cp $00,eval.asm,CP	'('
4191,4191,4100,1ce6,1c44,28 1c,28 1c,"jr z,$+$1e","jr z,$+$1e","jr z,$+$00",eval.asm,"JR	Z,RND5		;ARGUMENT FOLLOWS"
4192,4192,4101,1ce8,1c46,cd b3 19,cd 11 19,call $19b3,call $1911,call $0000,eval.asm,CALL	LOAD5
4193,4193,4102,1ceb,1c49,cb 19,cb 19,rr c,rr c,rr c,eval.asm,RND1:           RR	C
4194,4194,4103,1ced,1c4b,06 20,06 20,"ld b,$20","ld b,$20","ld b,$00",eval.asm,"LD	B,32"
4195,4195,4104,1cef,1c4d,d9,d9,exx,exx,exx,eval.asm,RND2:           EXX			;CALCULATE NEXT
4196,4196,4105,1cf0,1c4e,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
4197,4197,4106,1cf2,1c50,d9,d9,exx,exx,exx,eval.asm,EXX
4198,4198,4107,1cf3,1c51,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
4199,4199,4108,1cf5,1c53,cb 5d,cb 5d,"bit 3,l","bit 3,l","bit 3,l",eval.asm,"BIT	3,L"
4200,4200,4109,1cf7,1c55,28 01,28 01,"jr z,$+$03","jr z,$+$03","jr z,$+$00",eval.asm,"JR	Z,RND3"
4201,4201,4110,1cf9,1c57,3f,3f,ccf,ccf,ccf,eval.asm,CCF
4202,4202,4111,1cfa,1c58,10 f3,10 f3,djnz $-$0b,djnz $-$0b,djnz $-$00,eval.asm,RND3:           DJNZ	RND2
4203,4203,4112,1cfc,1c5a,cb 11,cb 11,rl c,rl c,rl c,eval.asm,RND4:           RL	C		;SAVE CARRY
4204,4204,4113,1cfe,1c5c,cd 8a 32,cd e8 31,call $328a,call $31e8,call $0000,eval.asm,CALL	STORE5		;STORE NEW NUMBER
4205,4205,4114,1d01,1c5f,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4206,4206,4115,1d02,1c60,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4207,4207,4116,1d03,1c61,c9,c9,ret,ret,ret,eval.asm,RET
4208,4208,4117,1d04,1c62,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,eval.asm,RND5:           CALL	ITEMI
4209,4209,4118,1d07,1c65,dd 21 f6 55,dd 21 f6 54,"ld ix,$55f6","ld ix,$54f6","ld ix,$0000",eval.asm,"LD	IX,RANDOM"
4210,4210,4119,1d0b,1c69,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",eval.asm,"BIT	7,H		;NEGATIVE?"
4211,4211,4120,1d0d,1c6b,37,37,scf,scf,scf,eval.asm,SCF
4212,4212,4121,1d0e,1c6c,20 ec,20 ec,"jr nz,$-$12","jr nz,$-$12","jr nz,$-$00",eval.asm,"JR	NZ,RND4		;SEED"
4213,4213,4122,1d10,1c6e,cd dd 1f,cd 3b 1f,call $1fdd,call $1f3b,call $0000,eval.asm,CALL	TEST
4214,4214,4123,1d13,1c71,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4215,4215,4124,1d14,1c72,41,41,"ld b,c","ld b,c","ld b,c",eval.asm,"LD	B,C"
4216,4216,4125,1d15,1c73,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4217,4217,4126,1d16,1c74,d9,d9,exx,exx,exx,eval.asm,EXX
4218,4218,4127,1d17,1c75,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4219,4219,4128,1d18,1c76,cd b3 19,cd 11 19,call $19b3,call $1911,call $0000,eval.asm,CALL	LOAD5
4220,4220,4129,1d1b,1c79,c4 eb 1c,c4 49 1c,"call nz,$1ceb","call nz,$1c49","call nz,$0000",eval.asm,"CALL	NZ,RND1		;NEXT IF NON-ZERO"
4221,4221,4130,1d1e,1c7c,d9,d9,exx,exx,exx,eval.asm,EXX			;SCRAMBLE (CARE!)
4222,4222,4131,1d1f,1c7d,0e 7f,0e 7f,"ld c,$7f","ld c,$7f","ld c,$00",eval.asm,"LD	C,7FH"
4223,4223,4132,1d21,1c7f,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",eval.asm,"RND6:           BIT	7,H		;FLOAT"
4224,4224,4133,1d23,1c81,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",eval.asm,"JR	NZ,RND7"
4225,4225,4134,1d25,1c83,d9,d9,exx,exx,exx,eval.asm,EXX
4226,4226,4135,1d26,1c84,29,29,"add hl,hl","add hl,hl","add hl,hl",eval.asm,"ADD	HL,HL"
4227,4227,4136,1d27,1c85,d9,d9,exx,exx,exx,eval.asm,EXX
4228,4228,4137,1d28,1c86,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
4229,4229,4138,1d2a,1c88,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4230,4230,4139,1d2b,1c89,20 f4,20 f4,"jr nz,$-$0a","jr nz,$-$0a","jr nz,$-$00",eval.asm,"JR	NZ,RND6"
4231,4231,4140,1d2d,1c8b,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",eval.asm,"RND7:           RES	7,H		;POSITIVE 0-0.999999"
4232,4232,4141,1d2f,1c8d,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4233,4233,4142,1d30,1c8e,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z		;ZERO ARGUMENT
4234,4234,4143,1d31,1c8f,d9,d9,exx,exx,exx,eval.asm,EXX
4235,4235,4144,1d32,1c90,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"LD	A,E"
4236,4236,4145,1d33,1c91,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
4237,4237,4146,1d34,1c92,b2,b2,or d,or d,or d,eval.asm,OR	D
4238,4238,4147,1d35,1c93,d9,d9,exx,exx,exx,eval.asm,EXX
4239,4239,4148,1d36,1c94,b3,b3,or e,or e,or e,eval.asm,OR	E
4240,4240,4149,1d37,1c95,b2,b2,or d,or d,or d,eval.asm,OR	D
4241,4241,4150,1d38,1c96,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z		;ARGUMENT=1
4242,4242,4151,1d39,1c97,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0		;INTEGER MARKER"
4243,4243,4152,1d3b,1c99,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",eval.asm,"LD	A,10"
4244,4244,4153,1d3d,1c9b,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;MULTIPLY
4245,4245,4154,1d40,1c9e,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4246,4246,4155,1d43,1ca1,cd 9b 1c,cd f9 1b,call $1c9b,call $1bf9,call $0000,eval.asm,CALL	SFIX
4247,4247,4156,1d46,1ca4,c3 da 18,c3 38 18,jp $18da,jp $1838,jp $0000,eval.asm,JP	ADD1ev
4248,4248,4157,1d49,1ca7,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,SUMLEN:         INC	IY		;Skip LEN
4249,4249,4158,1d4b,1ca9,cd 5b 1a,cd b9 19,call $1a5b,call $19b9,call $0000,eval.asm,CALL	GETARB
4250,4250,4159,1d4e,1cac,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",eval.asm,"BIT	7,B"
4251,4251,4160,1d50,1cae,ca f2 18,ca 50 18,"jp z,$18f2","jp z,$1850","jp z,$0000",eval.asm,"JP	Z,MISMATev	;Type mismatch"
4252,4252,4161,1d53,1cb1,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,CALL	ARRLEN
4253,4253,4162,1d56,1cb4,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4254,4254,4163,1d57,1cb5,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;IX addresses array
4255,4255,4164,1d59,1cb7,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4256,4256,4165,1d5a,1cb8,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4257,4257,4166,1d5b,1cb9,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4258,4258,4167,1d5c,1cba,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4259,4259,4168,1d5d,1cbb,dd 4e 00,dd 4e 00,"ld c,(ix)","ld c,(ix)","ld c,(ix)",eval.asm,"SUMLN1:         LD	C,(IX)"
4260,4260,4169,1d60,1cbe,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
4261,4261,4170,1d61,1cbf,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",eval.asm,"LD	C,4"
4262,4262,4171,1d63,1cc1,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
4263,4263,4172,1d65,1cc3,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE		;Count elements
4264,4264,4173,1d66,1cc4,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D"
4265,4265,4174,1d67,1cc5,b3,b3,or e,or e,or e,eval.asm,OR	E
4266,4266,4175,1d68,1cc6,20 f3,20 f3,"jr nz,$-$0b","jr nz,$-$0b","jr nz,$-$00",eval.asm,"JR	NZ,SUMLN1"
4267,4267,4176,1d6a,1cc8,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,eval.asm,JP	COUNT1
4268,4268,4177,1d6d,1ccb,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,SUM:            CALL	NXT
4269,4269,4178,1d70,1cce,fe a9,fe a9,cp $a9,cp $a9,cp $00,eval.asm,CP	TLEN
4270,4270,4179,1d72,1cd0,28 d5,28 d5,"jr z,$-$29","jr z,$-$29","jr z,$-$00",eval.asm,"JR	Z,SUMLEN"
4271,4271,4180,1d74,1cd2,cd 5b 1a,cd b9 19,call $1a5b,call $19b9,call $0000,eval.asm,CALL	GETARB
4272,4272,4181,1d77,1cd5,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",eval.asm,"BIT	7,B"
4273,4273,4182,1d79,1cd7,20 27,20 27,"jr nz,$+$29","jr nz,$+$29","jr nz,$+$00",eval.asm,"JR	NZ,SUMSTR"
4274,4274,4183,1d7b,1cd9,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4275,4275,4184,1d7c,1cda,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,CALL	ARRLEN
4276,4276,4185,1d7f,1cdd,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4277,4277,4186,1d80,1cde,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;IX addresses array
4278,4278,4187,1d82,1ce0,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,eval.asm,CALL	ZERO
4279,4279,4188,1d85,1ce3,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF		;A = element size
4280,4280,4189,1d86,1ce4,d5,d5,push de,push de,push de,eval.asm,SUMUP:          PUSH	DE
4281,4281,4190,1d87,1ce5,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4282,4282,4191,1d88,1ce6,cd 6b 1a,cd c9 19,call $1a6b,call $19c9,call $0000,eval.asm,CALL	DLOADN
4283,4283,4192,1d8b,1ce9,3e 0b,3e 0b,"ld a,$0b","ld a,$0b","ld a,$00",eval.asm,"LD	A,11"
4284,4284,4193,1d8d,1ceb,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP
4285,4285,4194,1d90,1cee,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4286,4286,4195,1d93,1cf1,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4287,4287,4196,1d94,1cf2,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",eval.asm,"LD	D,0"
4288,4288,4197,1d96,1cf4,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LD	E,A"
4289,4289,4198,1d97,1cf5,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",eval.asm,"ADD	IX,DE		;Bump to next element"
4290,4290,4199,1d99,1cf7,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4291,4291,4200,1d9a,1cf8,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE		;Count elements
4292,4292,4201,1d9b,1cf9,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4293,4293,4202,1d9c,1cfa,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D"
4294,4294,4203,1d9d,1cfb,b3,b3,or e,or e,or e,eval.asm,OR	E
4295,4295,4204,1d9e,1cfc,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
4296,4296,4205,1d9f,1cfd,20 e5,20 e5,"jr nz,$-$19","jr nz,$-$19","jr nz,$-$00",eval.asm,"JR	NZ,SUMUP"
4297,4297,4206,1da1,1cff,c9,c9,ret,ret,ret,eval.asm,RET
4298,4298,4207,1da2,1d00,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,SUMSTR:         CALL	ARRLEN
4299,4299,4208,1da5,1d03,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4300,4300,4209,1da6,1d04,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;IX addresses array
4301,4301,4210,1da8,1d06,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4302,4302,4211,1da9,1d07,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
4303,4303,4212,1dac,1d0a,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4304,4304,4213,1dae,1d0c,e5,e5,push hl,push hl,push hl,eval.asm,SUMST1:         PUSH	HL
4305,4305,4214,1daf,1d0d,dd 4e 00,dd 4e 00,"ld c,(ix)","ld c,(ix)","ld c,(ix)",eval.asm,"LD	C,(IX)"
4306,4306,4215,1db2,1d10,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
4307,4307,4216,1db3,1d11,b7,b7,or a,or a,or a,eval.asm,OR	A
4308,4308,4217,1db4,1d12,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",eval.asm,"JR	Z,SUMST2"
4309,4309,4218,1db6,1d14,83,83,"add a,e","add a,e","add a,e",eval.asm,"ADD	A,E"
4310,4310,4219,1db7,1d15,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",eval.asm,"LD	A,19"
4311,4311,4220,1db9,1d17,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_		;""String too long"""
4312,4312,4221,1dbc,1d1a,dd 6e 02,dd 6e 02,"ld l,(ix+$02)","ld l,(ix+$02)","ld l,(ix+$00)",eval.asm,"LD	L,(IX+2)"
4313,4313,4222,1dbf,1d1d,dd 66 03,dd 66 03,"ld h,(ix+$03)","ld h,(ix+$03)","ld h,(ix+$00)",eval.asm,"LD	H,(IX+3)"
4314,4314,4223,1dc2,1d20,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR
4315,4315,4224,1dc4,1d22,e1,e1,pop hl,pop hl,pop hl,eval.asm,SUMST2:         POP	HL
4316,4316,4225,1dc5,1d23,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",eval.asm,"LD	C,4"
4317,4317,4226,1dc7,1d25,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
4318,4318,4227,1dc9,1d27,2b,2b,dec hl,dec hl,dec hl,eval.asm,DEC	HL		;Count elements
4319,4319,4228,1dca,1d28,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
4320,4320,4229,1dcb,1d29,b5,b5,or l,or l,or l,eval.asm,OR	L
4321,4321,4230,1dcc,1d2a,20 e0,20 e0,"jr nz,$-$1e","jr nz,$-$1e","jr nz,$-$00",eval.asm,"JR	NZ,SUMST1"
4322,4322,4231,1dce,1d2c,f6 80,f6 80,or $80,or $80,or $00,eval.asm,OR	80H
4323,4323,4232,1dd0,1d2e,c9,c9,ret,ret,ret,eval.asm,RET
4324,4324,4233,1dd1,1d2f,cd 5b 1a,cd b9 19,call $1a5b,call $19b9,call $0000,eval.asm,MODFUN:         CALL	GETARB
4325,4325,4234,1dd4,1d32,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",eval.asm,"BIT	7,B"
4326,4326,4235,1dd6,1d34,c2 f2 18,c2 50 18,"jp nz,$18f2","jp nz,$1850","jp nz,$0000",eval.asm,"JP	NZ,MISMATev"
4327,4327,4236,1dd9,1d37,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4328,4328,4237,1dda,1d38,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,CALL	ARRLEN
4329,4329,4238,1ddd,1d3b,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4330,4330,4239,1dde,1d3c,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;IX addresses array
4331,4331,4240,1de0,1d3e,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,eval.asm,CALL	ZERO
4332,4332,4241,1de3,1d41,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF		;A = element size
4333,4333,4242,1de4,1d42,d5,d5,push de,push de,push de,eval.asm,MODUP:          PUSH	DE
4334,4334,4243,1de5,1d43,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4335,4335,4244,1de6,1d44,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4336,4336,4245,1de7,1d45,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4337,4337,4246,1de8,1d46,d9,d9,exx,exx,exx,eval.asm,EXX
4338,4338,4247,1de9,1d47,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4339,4339,4248,1dea,1d48,d9,d9,exx,exx,exx,eval.asm,EXX
4340,4340,4249,1deb,1d49,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,eval.asm,CALL	LOADN
4341,4341,4250,1dee,1d4c,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4342,4342,4251,1def,1d4d,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4343,4343,4252,1df0,1d4e,57,57,"ld d,a","ld d,a","ld d,a",eval.asm,"LD	D,A"
4344,4344,4253,1df1,1d4f,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LD	E,A"
4345,4345,4254,1df2,1d50,d9,d9,exx,exx,exx,eval.asm,EXX
4346,4346,4255,1df3,1d51,57,57,"ld d,a","ld d,a","ld d,a",eval.asm,"LD	D,A"
4347,4347,4256,1df4,1d52,1e 02,1e 02,"ld e,$02","ld e,$02","ld e,$00",eval.asm,"LD	E,2"
4348,4348,4257,1df6,1d54,d9,d9,exx,exx,exx,eval.asm,EXX
4349,4349,4258,1df7,1d55,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",eval.asm,"LD	A,14"
4350,4350,4259,1df9,1d57,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
4351,4351,4260,1dfb,1d59,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;Square
4352,4352,4261,1dfe,1d5c,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
4353,4353,4262,1e00,1d5e,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4354,4354,4263,1e03,1d61,d9,d9,exx,exx,exx,eval.asm,EXX
4355,4355,4264,1e04,1d62,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4356,4356,4265,1e05,1d63,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4357,4357,4266,1e06,1d64,d9,d9,exx,exx,exx,eval.asm,EXX
4358,4358,4267,1e07,1d65,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4359,4359,4268,1e08,1d66,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4360,4360,4269,1e09,1d67,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
4361,4361,4270,1e0a,1d68,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4362,4362,4271,1e0b,1d69,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4363,4363,4272,1e0c,1d6a,3e 0b,3e 0b,"ld a,$0b","ld a,$0b","ld a,$00",eval.asm,"LD	A,11"
4364,4364,4273,1e0e,1d6c,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;Accumulate
4365,4365,4274,1e11,1d6f,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4366,4366,4275,1e14,1d72,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4367,4367,4276,1e15,1d73,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",eval.asm,"LD	D,0"
4368,4368,4277,1e17,1d75,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LD	E,A"
4369,4369,4278,1e18,1d76,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",eval.asm,"ADD	IX,DE		;Bump to next element"
4370,4370,4279,1e1a,1d78,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4371,4371,4280,1e1b,1d79,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE		;Count elements
4372,4372,4281,1e1c,1d7a,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4373,4373,4282,1e1d,1d7b,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D"
4374,4374,4283,1e1e,1d7c,b3,b3,or e,or e,or e,eval.asm,OR	E
4375,4375,4284,1e1f,1d7d,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
4376,4376,4285,1e20,1d7e,20 c2,20 c2,"jr nz,$-$3c","jr nz,$-$3c","jr nz,$-$00",eval.asm,"JR	NZ,MODUP"
4377,4377,4286,1e22,1d80,3e 1e,3e 1e,"ld a,$1e","ld a,$1e","ld a,$00",eval.asm,"LD	A,30"
4378,4378,4287,1e24,1d82,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;Square root
4379,4379,4288,1e27,1d85,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4380,4380,4289,1e28,1d86,c9,c9,ret,ret,ret,eval.asm,RET
4381,4381,4290,1e29,1d87,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,INSTR:          CALL	EXPRS		;STRING TO SEARCH
4382,4382,4291,1e2c,1d8a,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,eval.asm,CALL	COMMA
4383,4383,4292,1e2f,1d8d,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;SAVE STRING ON STACK
4384,4384,4293,1e32,1d90,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,CALL	EXPRS		;SUB-STRING
4385,4385,4294,1e35,1d93,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4386,4386,4295,1e36,1d94,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",eval.asm,"LD	HL,0"
4387,4387,4296,1e39,1d97,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP		;HL ADDRESSES MAIN"
4388,4388,4297,1e3a,1d98,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC		;C = MAIN STRING LENGTH
4389,4389,4298,1e3b,1d99,43,43,"ld b,e","ld b,e","ld b,e",eval.asm,"LD	B,E		;B = SUB-STRING LENGTH"
4390,4390,4299,1e3c,1d9a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4391,4391,4300,1e3f,1d9d,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
4392,4392,4301,1e41,1d9f,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",eval.asm,"LD	A,0"
4393,4393,4302,1e43,1da1,20 17,20 17,"jr nz,$+$19","jr nz,$+$19","jr nz,$+$00",eval.asm,"JR	NZ,INSTR1"
4394,4394,4303,1e45,1da3,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY		;SKIP COMMA
4395,4395,4304,1e47,1da5,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC		;SAVE LENGTHS
4396,4396,4305,1e48,1da6,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL		;SAVE MAIN ADDRESS
4397,4397,4306,1e49,1da7,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS
4398,4398,4307,1e4c,1daa,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,eval.asm,CALL	EXPRI
4399,4399,4308,1e4f,1dad,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4400,4400,4309,1e50,1dae,cd bb 20,cd 19 20,call $20bb,call $2019,call $0000,eval.asm,CALL	POPS
4401,4401,4310,1e53,1db1,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL		;RESTORE MAIN ADDRESS
4402,4402,4311,1e54,1db2,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;RESTORE LENGTHS
4403,4403,4312,1e55,1db3,d9,d9,exx,exx,exx,eval.asm,EXX
4404,4404,4313,1e56,1db4,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4405,4405,4314,1e57,1db5,d9,d9,exx,exx,exx,eval.asm,EXX
4406,4406,4315,1e58,1db6,b7,b7,or a,or a,or a,eval.asm,OR	A
4407,4407,4316,1e59,1db7,28 01,28 01,"jr z,$+$03","jr z,$+$03","jr z,$+$00",eval.asm,"JR	Z,INSTR1"
4408,4408,4317,1e5b,1db9,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
4409,4409,4318,1e5c,1dba,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"INSTR1:         LD	DE,ACCS		;DE ADDRESSES SUB"
4410,4410,4319,1e5f,1dbd,cd 76 1e,cd d4 1d,call $1e76,call $1dd4,call $0000,eval.asm,CALL	SEARCH
4411,4411,4320,1e62,1dc0,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4412,4412,4321,1e63,1dc1,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",eval.asm,"JR	Z,INSTR2	;N.B. CARRY CLEARED"
4413,4413,4322,1e65,1dc3,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",eval.asm,"SBC	HL,HL"
4414,4414,4323,1e67,1dc5,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
4415,4415,4324,1e68,1dc6,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",eval.asm,"INSTR2:         SBC	HL,SP"
4416,4416,4325,1e6a,1dc8,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4417,4417,4326,1e6b,1dc9,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",eval.asm,"LD	H,0"
4418,4418,4327,1e6d,1dcb,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
4419,4419,4328,1e6e,1dcc,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"LD	SP,HL"
4420,4420,4329,1e6f,1dcd,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4421,4421,4330,1e70,1dce,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4422,4422,4331,1e73,1dd1,c3 d4 1b,c3 32 1b,jp $1bd4,jp $1b32,jp $0000,eval.asm,JP	COUNT1
4423,4423,4332,1e76,1dd4,c5,c5,push bc,push bc,push bc,eval.asm,SEARCH:         PUSH	BC
4424,4424,4333,1e77,1dd5,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4425,4425,4334,1e79,1dd7,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4426,4426,4335,1e7a,1dd8,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC		;NEW START ADDRESS"
4427,4427,4336,1e7b,1dd9,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4428,4428,4337,1e7c,1dda,91,91,sub c,sub c,sub c,eval.asm,SUB	C
4429,4429,4338,1e7d,1ddb,30 28,30 28,"jr nc,$+$2a","jr nc,$+$2a","jr nc,$+$00",eval.asm,"JR	NC,SRCH4"
4430,4430,4339,1e7f,1ddd,ed 44,ed 44,neg,neg,neg,eval.asm,NEG
4431,4431,4340,1e81,1ddf,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A		;REMAINING LENGTH"
4432,4432,4341,1e82,1de0,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",eval.asm,"SRCH1ev:          LD	A,(DE)"
4433,4433,4342,1e83,1de1,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4434,4434,4343,1e84,1de2,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4435,4435,4344,1e86,1de4,ed b1,ed b1,cpir,cpir,cpir,eval.asm,CPIR			;FIND FIRST CHARACTER
4436,4436,4345,1e88,1de6,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
4437,4437,4346,1e89,1de7,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4438,4438,4347,1e8a,1de8,20 1b,20 1b,"jr nz,$+$1d","jr nz,$+$1d","jr nz,$+$00",eval.asm,"JR	NZ,SRCH4"
4439,4439,4348,1e8c,1dea,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4440,4440,4349,1e8d,1deb,05,05,dec b,dec b,dec b,eval.asm,DEC	B		;Bug fix
4441,4441,4350,1e8e,1dec,b8,b8,cp b,cp b,cp b,eval.asm,CP	B		;Bug fix
4442,4442,4351,1e8f,1ded,04,04,inc b,inc b,inc b,eval.asm,INC	B		;Bug fix
4443,4443,4352,1e90,1dee,38 15,38 15,"jr c,$+$17","jr c,$+$17","jr c,$+$00",eval.asm,"JR	C,SRCH4		;Bug fix"
4444,4444,4353,1e92,1df0,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4445,4445,4354,1e93,1df1,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4446,4446,4355,1e94,1df2,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4447,4447,4356,1e95,1df3,05,05,dec b,dec b,dec b,eval.asm,DEC	B
4448,4448,4357,1e96,1df4,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",eval.asm,"JR	Z,SRCH3		;FOUND !"
4449,4449,4358,1e98,1df6,13,13,inc de,inc de,inc de,eval.asm,SRCH2ev:          INC	DE
4450,4450,4359,1e99,1df7,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",eval.asm,"LD	A,(DE)"
4451,4451,4360,1e9a,1df8,be,be,cp (hl),cp (hl),cp (hl),eval.asm,CP	(HL)
4452,4452,4361,1e9b,1df9,20 03,20 03,"jr nz,$+$05","jr nz,$+$05","jr nz,$+$00",eval.asm,"JR	NZ,SRCH3"
4453,4453,4362,1e9d,1dfb,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4454,4454,4363,1e9e,1dfc,10 f8,10 f8,djnz $-$06,djnz $-$06,djnz $-$00,eval.asm,DJNZ	SRCH2ev
4455,4455,4364,1ea0,1dfe,e1,e1,pop hl,pop hl,pop hl,eval.asm,SRCH3:          POP	HL
4456,4456,4365,1ea1,1dff,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4457,4457,4366,1ea2,1e00,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4458,4458,4367,1ea3,1e01,20 dd,20 dd,"jr nz,$-$21","jr nz,$-$21","jr nz,$-$00",eval.asm,"JR	NZ,SRCH1ev"
4459,4459,4368,1ea5,1e03,af,af,xor a,xor a,xor a,eval.asm,"XOR	A		;Z, NC"
4460,4460,4369,1ea6,1e04,c9,c9,ret,ret,ret,eval.asm,RET			;FOUND
4461,4461,4370,1ea7,1e05,f6 ff,f6 ff,or $ff,or $ff,or $00,eval.asm,"SRCH4:          OR	0FFH		;NZ, NC"
4462,4462,4371,1ea9,1e07,c9,c9,ret,ret,ret,eval.asm,RET			;NOT FOUND
4463,4463,4372,1eaa,1e08,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,eval.asm,CHRS:           CALL	ITEMI
4464,4464,4373,1ead,1e0b,d9,d9,exx,exx,exx,eval.asm,EXX
4465,4465,4374,1eae,1e0c,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4466,4466,4375,1eaf,1e0d,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	GET1
4467,4467,4376,1eb1,1e0f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,GETS:           CALL	NXT
4468,4468,4377,1eb4,1e12,fe 23,fe 23,cp $23,cp $23,cp $00,eval.asm,CP	'#'
4469,4469,4378,1eb6,1e14,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",eval.asm,"JR	Z,GET2"
4470,4470,4379,1eb8,1e16,cd c4 05,cd c0 05,call $05c4,call $05c0,call $0000,eval.asm,CALL	OSRDCH
4471,4471,4380,1ebb,1e19,37,37,scf,scf,scf,eval.asm,GET1:           SCF
4472,4472,4381,1ebc,1e1a,18 5b,18 5b,jr $+$5d,jr $+$5d,jr $+$00,eval.asm,JR	INKEY1
4473,4473,4382,1ebe,1e1c,cd 5f 37,cd bd 36,call $375f,call $36bd,call $0000,eval.asm,GET2:           CALL	CHNL		;File channel
4474,4474,4383,1ec1,1e1f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4475,4475,4384,1ec4,1e22,fe 0f,fe 0f,cp $0f,cp $0f,cp $00,eval.asm,CP	TBY
4476,4476,4385,1ec6,1e24,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",eval.asm,"JR	Z,GET3"
4477,4477,4386,1ec8,1e26,fe b8,fe b8,cp $b8,cp $b8,cp $00,eval.asm,CP	TTO
4478,4478,4387,1eca,1e28,20 0c,20 0c,"jr nz,$+$0e","jr nz,$+$0e","jr nz,$+$00",eval.asm,"JR	NZ,GET4"
4479,4479,4388,1ecc,1e2a,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,GET3:           INC	IY
4480,4480,4389,1ece,1e2c,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4481,4481,4390,1ecf,1e2d,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4482,4482,4391,1ed0,1e2e,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,eval.asm,CALL	ITEMI		;Get BY or TO qualifier
4483,4483,4392,1ed3,1e31,d9,d9,exx,exx,exx,eval.asm,EXX
4484,4484,4393,1ed4,1e32,44,44,"ld b,h","ld b,h","ld b,h",eval.asm,"LD	B,H"
4485,4485,4394,1ed5,1e33,4d,4d,"ld c,l","ld c,l","ld c,l",eval.asm,"LD	C,L"
4486,4486,4395,1ed6,1e34,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4487,4487,4396,1ed7,1e35,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4488,4488,4397,1ed8,1e36,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",eval.asm,"GET4:           LD	HL,ACCS"
4489,4489,4398,1edb,1e39,fe b8,fe b8,cp $b8,cp $b8,cp $00,eval.asm,CP	TTO
4490,4490,4399,1edd,1e3b,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",eval.asm,"JR	Z,GET5"
4491,4491,4400,1edf,1e3d,51,51,"ld d,c","ld d,c","ld d,c",eval.asm,"LD	D,C		;Maximum count"
4492,4492,4401,1ee0,1e3e,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",eval.asm,"LD	BC,100H		;Default"
4493,4493,4402,1ee3,1e41,fe 0f,fe 0f,cp $0f,cp $0f,cp $00,eval.asm,CP	TBY
4494,4494,4403,1ee5,1e43,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",eval.asm,"JR	Z,GET6"
4495,4495,4404,1ee7,1e45,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",eval.asm,"GET5:           LD	D,0"
4496,4496,4405,1ee9,1e47,cb c8,cb c8,"set 1,b","set 1,b","set 1,b",eval.asm,"SET	1,B		;Flag no count"
4497,4497,4406,1eeb,1e49,c5,c5,push bc,push bc,push bc,eval.asm,GET6:           PUSH	BC
4498,4498,4407,1eec,1e4a,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,eval.asm,CALL	OSBGET
4499,4499,4408,1eef,1e4d,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4500,4500,4409,1ef0,1e4e,38 1c,38 1c,"jr c,$+$1e","jr c,$+$1e","jr c,$+$00",eval.asm,"JR	C,GET9		;EOF"
4501,4501,4410,1ef2,1e50,cb 48,cb 48,"bit 1,b","bit 1,b","bit 1,b",eval.asm,"BIT	1,B"
4502,4502,4411,1ef4,1e52,28 13,28 13,"jr z,$+$15","jr z,$+$15","jr z,$+$00",eval.asm,"JR	Z,GET8"
4503,4503,4412,1ef6,1e54,b9,b9,cp c,cp c,cp c,eval.asm,CP	C
4504,4504,4413,1ef7,1e55,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",eval.asm,"JR	Z,GET9		;NUL (or supplied term)"
4505,4505,4414,1ef9,1e57,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",eval.asm,"BIT	7,B"
4506,4506,4415,1efb,1e59,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",eval.asm,"JR	NZ,GET7"
4507,4507,4416,1efd,1e5b,cb 40,cb 40,"bit 0,b","bit 0,b","bit 0,b",eval.asm,"BIT	0,B"
4508,4508,4417,1eff,1e5d,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",eval.asm,"JR	Z,GET8"
4509,4509,4418,1f01,1e5f,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,eval.asm,CP	LF
4510,4510,4419,1f03,1e61,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",eval.asm,"JR	Z,GET9		;LF"
4511,4511,4420,1f05,1e63,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,eval.asm,GET7:           CP	CR
4512,4512,4421,1f07,1e65,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",eval.asm,"JR	Z,GET9		;CR"
4513,4513,4422,1f09,1e67,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",eval.asm,"GET8:           LD	(HL),A"
4514,4514,4423,1f0a,1e68,2c,2c,inc l,inc l,inc l,eval.asm,INC	L
4515,4515,4424,1f0b,1e69,15,15,dec d,dec d,dec d,eval.asm,DEC	D
4516,4516,4425,1f0c,1e6a,20 dd,20 dd,"jr nz,$-$21","jr nz,$-$21","jr nz,$-$00",eval.asm,"JR	NZ,GET6"
4517,4517,4426,1f0e,1e6c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"GET9:           EX	DE,HL"
4518,4518,4427,1f0f,1e6d,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4519,4519,4428,1f11,1e6f,c9,c9,ret,ret,ret,eval.asm,RET
4520,4520,4429,1f12,1e70,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,eval.asm,INKEYS:         CALL	ITEMI
4521,4521,4430,1f15,1e73,d9,d9,exx,exx,exx,eval.asm,EXX
4522,4522,4431,1f16,1e74,cd 15 0e,cd 73 0d,call $0e15,call $0d73,call $0000,eval.asm,CALL	OSKEY
4523,4523,4432,1f19,1e77,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"INKEY1:         LD	DE,ACCS"
4524,4524,4433,1f1c,1e7a,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4525,4525,4434,1f1d,1e7b,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4526,4526,4435,1f1f,1e7d,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4527,4527,4436,1f20,1e7e,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
4528,4528,4437,1f21,1e7f,c9,c9,ret,ret,ret,eval.asm,RET
4529,4529,4438,1f22,1e80,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,MIDS:           CALL	EXPRS
4530,4530,4439,1f25,1e83,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,eval.asm,CALL	COMMA
4531,4531,4440,1f28,1e86,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;SAVE STRING ON STACK
4532,4532,4441,1f2b,1e89,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,eval.asm,CALL	EXPRI
4533,4533,4442,1f2e,1e8c,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4534,4534,4443,1f2f,1e8d,cd bb 20,cd 19 20,call $20bb,call $2019,call $0000,eval.asm,CALL	POPS
4535,4535,4444,1f32,1e90,d9,d9,exx,exx,exx,eval.asm,EXX
4536,4536,4445,1f33,1e91,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4537,4537,4446,1f34,1e92,d9,d9,exx,exx,exx,eval.asm,EXX
4538,4538,4447,1f35,1e93,b7,b7,or a,or a,or a,eval.asm,OR	A
4539,4539,4448,1f36,1e94,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",eval.asm,"JR	Z,MIDS1"
4540,4540,4449,1f38,1e96,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
4541,4541,4450,1f39,1e97,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4542,4542,4451,1f3a,1e98,93,93,sub e,sub e,sub e,eval.asm,SUB	E
4543,4543,4452,1f3b,1e99,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",eval.asm,"LD	E,0"
4544,4544,4453,1f3d,1e9b,30 06,30 06,"jr nc,$+$08","jr nc,$+$08","jr nc,$+$00",eval.asm,"JR	NC,MIDS1"
4545,4545,4454,1f3f,1e9d,ed 44,ed 44,neg,neg,neg,eval.asm,NEG
4546,4546,4455,1f41,1e9f,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4547,4547,4456,1f42,1ea0,cd a1 1f,cd ff 1e,call $1fa1,call $1eff,call $0000,eval.asm,CALL	RIGHT1
4548,4548,4457,1f45,1ea3,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,MIDS1:          CALL	NXT
4549,4549,4458,1f48,1ea6,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
4550,4550,4459,1f4a,1ea8,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",eval.asm,"JR	Z,LEFT1"
4551,4551,4460,1f4c,1eaa,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4552,4552,4461,1f4f,1ead,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4553,4553,4462,1f51,1eaf,c9,c9,ret,ret,ret,eval.asm,RET
4554,4554,4463,1f52,1eb0,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,LEFTS:          CALL	EXPRS
4555,4555,4464,1f55,1eb3,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4556,4556,4465,1f58,1eb6,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
4557,4557,4466,1f5a,1eb8,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",eval.asm,"JR	Z,LEFT1"
4558,4558,4467,1f5c,1eba,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4559,4559,4468,1f5f,1ebd,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"LD	A,E"
4560,4560,4469,1f60,1ebe,b7,b7,or a,or a,or a,eval.asm,OR	A
4561,4561,4470,1f61,1ebf,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",eval.asm,"JR	Z,LEFT3"
4562,4562,4471,1f63,1ec1,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
4563,4563,4472,1f64,1ec2,18 17,18 17,jr $+$19,jr $+$19,jr $+$00,eval.asm,JR	LEFT3
4564,4564,4473,1f66,1ec4,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,LEFT1:          INC	IY
4565,4565,4474,1f68,1ec6,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,eval.asm,CALL	PUSHS		;SAVE STRING ON STACK
4566,4566,4475,1f6b,1ec9,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,eval.asm,CALL	EXPRI
4567,4567,4476,1f6e,1ecc,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4568,4568,4477,1f6f,1ecd,cd bb 20,cd 19 20,call $20bb,call $2019,call $0000,eval.asm,CALL	POPS
4569,4569,4478,1f72,1ed0,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4570,4570,4479,1f75,1ed3,d9,d9,exx,exx,exx,eval.asm,EXX
4571,4571,4480,1f76,1ed4,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4572,4572,4481,1f77,1ed5,d9,d9,exx,exx,exx,eval.asm,EXX
4573,4573,4482,1f78,1ed6,bb,bb,cp e,cp e,cp e,eval.asm,CP	E
4574,4574,4483,1f79,1ed7,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",eval.asm,"JR	NC,LEFT3"
4575,4575,4484,1f7b,1ed9,6b,6b,"ld l,e","ld l,e","ld l,e",eval.asm,"LD	L,E		;FOR RIGHT$"
4576,4576,4485,1f7c,1eda,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LEFT2:          LD	E,A"
4577,4577,4486,1f7d,1edb,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LEFT3:          LD	A,80H		;STRING MARKER"
4578,4578,4487,1f7f,1edd,c9,c9,ret,ret,ret,eval.asm,RET
4579,4579,4488,1f80,1ede,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,RIGHTS:         CALL	EXPRS
4580,4580,4489,1f83,1ee1,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4581,4581,4490,1f86,1ee4,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
4582,4582,4491,1f88,1ee6,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",eval.asm,"JR	Z,RIGHT0"
4583,4583,4492,1f8a,1ee8,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4584,4584,4493,1f8d,1eeb,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"LD	A,E"
4585,4585,4494,1f8e,1eec,b7,b7,or a,or a,or a,eval.asm,OR	A
4586,4586,4495,1f8f,1eed,28 ec,28 ec,"jr z,$-$12","jr z,$-$12","jr z,$-$00",eval.asm,"JR	Z,LEFT3"
4587,4587,4496,1f91,1eef,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
4588,4588,4497,1f92,1ef0,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",eval.asm,"LD	C,1"
4589,4589,4498,1f94,1ef2,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,JR	RIGHT2
4590,4590,4499,1f96,1ef4,cd 66 1f,cd c4 1e,call $1f66,call $1ec4,call $0000,eval.asm,RIGHT0:         CALL	LEFT1
4591,4591,4500,1f99,1ef7,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4592,4592,4501,1f9a,1ef8,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
4593,4593,4502,1f9b,1ef9,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
4594,4594,4503,1f9c,1efa,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4595,4595,4504,1f9d,1efb,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E"
4596,4596,4505,1f9e,1efc,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4597,4597,4506,1f9f,1efd,93,93,sub e,sub e,sub e,eval.asm,SUB	E
4598,4598,4507,1fa0,1efe,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"RIGHT2:         LD	L,A"
4599,4599,4508,1fa1,1eff,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"RIGHT1:         LD	B,0"
4600,4600,4509,1fa3,1f01,62,62,"ld h,d","ld h,d","ld h,d",eval.asm,"LD	H,D"
4601,4601,4510,1fa4,1f02,58,58,"ld e,b","ld e,b","ld e,b",eval.asm,"LD	E,B"
4602,4602,4511,1fa5,1f03,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR			;MOVE
4603,4603,4512,1fa7,1f05,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4604,4604,4513,1fa9,1f07,c9,c9,ret,ret,ret,eval.asm,RET
4605,4605,4514,1faa,1f08,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,eval.asm,STRING_:        CALL	EXPRI
4606,4606,4515,1fad,1f0b,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,eval.asm,CALL	COMMA
4607,4607,4516,1fb0,1f0e,d9,d9,exx,exx,exx,eval.asm,EXX
4608,4608,4517,1fb1,1f0f,7d,7d,"ld a,l","ld a,l","ld a,l",eval.asm,"LD	A,L"
4609,4609,4518,1fb2,1f10,d9,d9,exx,exx,exx,eval.asm,EXX
4610,4610,4519,1fb3,1f11,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4611,4611,4520,1fb4,1f12,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,CALL	EXPRS
4612,4612,4521,1fb7,1f15,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,eval.asm,CALL	BRAKET
4613,4613,4522,1fba,1f18,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
4614,4614,4523,1fbb,1f19,b7,b7,or a,or a,or a,eval.asm,OR	A
4615,4615,4524,1fbc,1f1a,28 be,28 be,"jr z,$-$40","jr z,$-$40","jr z,$-$00",eval.asm,"JR	Z,LEFT2		;N=0"
4616,4616,4525,1fbe,1f1c,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
4617,4617,4526,1fbf,1f1d,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4618,4618,4527,1fc0,1f1e,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H		;STRING MARKER"
4619,4619,4528,1fc2,1f20,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4620,4620,4529,1fc3,1f21,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
4621,4621,4530,1fc4,1f22,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
4622,4622,4531,1fc5,1f23,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z		;NULL STRING
4623,4623,4532,1fc6,1f24,43,43,"ld b,e","ld b,e","ld b,e",eval.asm,"LD	B,E"
4624,4624,4533,1fc7,1f25,62,62,"ld h,d","ld h,d","ld h,d",eval.asm,"LD	H,D"
4625,4625,4534,1fc8,1f26,2e 00,2e 00,"ld l,$00","ld l,$00","ld l,$00",eval.asm,"LD	L,0"
4626,4626,4535,1fca,1f28,c5,c5,push bc,push bc,push bc,eval.asm,STRIN1:         PUSH	BC
4627,4627,4536,1fcb,1f29,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"STRIN2:         LD	A,(HL)"
4628,4628,4537,1fcc,1f2a,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4629,4629,4538,1fcd,1f2b,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4630,4630,4539,1fce,1f2c,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
4631,4631,4540,1fcf,1f2d,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",eval.asm,"LD	A,19"
4632,4632,4541,1fd1,1f2f,ca c8 3f,ca 26 3f,"jp z,$3fc8","jp z,$3f26","jp z,$0000",eval.asm,"JP	Z,ERROR_		;""String too long"""
4633,4633,4542,1fd4,1f32,10 f5,10 f5,djnz $-$09,djnz $-$09,djnz $-$00,eval.asm,DJNZ	STRIN2
4634,4634,4543,1fd6,1f34,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4635,4635,4544,1fd7,1f35,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4636,4636,4545,1fd8,1f36,20 f0,20 f0,"jr nz,$-$0e","jr nz,$-$0e","jr nz,$-$00",eval.asm,"JR	NZ,STRIN1"
4637,4637,4546,1fda,1f38,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4638,4638,4547,1fdc,1f3a,c9,c9,ret,ret,ret,eval.asm,RET
4639,4639,4548,1fdd,1f3b,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"TEST:           LD	A,H"
4640,4640,4549,1fde,1f3c,b5,b5,or l,or l,or l,eval.asm,OR	L
4641,4641,4550,1fdf,1f3d,d9,d9,exx,exx,exx,eval.asm,EXX
4642,4642,4551,1fe0,1f3e,b4,b4,or h,or h,or h,eval.asm,OR	H
4643,4643,4552,1fe1,1f3f,b5,b5,or l,or l,or l,eval.asm,OR	L
4644,4644,4553,1fe2,1f40,d9,d9,exx,exx,exx,eval.asm,EXX
4645,4645,4554,1fe3,1f41,c9,c9,ret,ret,ret,eval.asm,RET
4646,4646,4555,1fe4,1f42,d9,d9,exx,exx,exx,eval.asm,DECODE:         EXX
4647,4647,4556,1fe5,1f43,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"LD	A,(IY)"
4648,4648,4557,1fe8,1f46,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
4649,4649,4558,1fea,1f48,17,17,rla,rla,rla,eval.asm,RLA
4650,4650,4559,1feb,1f49,17,17,rla,rla,rla,eval.asm,RLA
4651,4651,4560,1fec,1f4a,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4652,4652,4561,1fed,1f4b,e6 c0,e6 c0,and $c0,and $c0,and $00,eval.asm,AND	0C0H
4653,4653,4562,1fef,1f4d,fd ae 00,fd ae 00,xor (iy),xor (iy),xor (iy),eval.asm,XOR	(IY)
4654,4654,4563,1ff2,1f50,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
4655,4655,4564,1ff4,1f52,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4656,4656,4565,1ff5,1f53,7c,7c,"ld a,h","ld a,h","ld a,h",eval.asm,"LD	A,H"
4657,4657,4566,1ff6,1f54,17,17,rla,rla,rla,eval.asm,RLA
4658,4658,4567,1ff7,1f55,17,17,rla,rla,rla,eval.asm,RLA
4659,4659,4568,1ff8,1f56,e6 c0,e6 c0,and $c0,and $c0,and $00,eval.asm,AND	0C0H
4660,4660,4569,1ffa,1f58,fd ae 00,fd ae 00,xor (iy),xor (iy),xor (iy),eval.asm,XOR	(IY)
4661,4661,4570,1ffd,1f5b,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
4662,4662,4571,1fff,1f5d,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4663,4663,4572,2000,1f5e,d9,d9,exx,exx,exx,eval.asm,EXX
4664,4664,4573,2001,1f5f,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4665,4665,4574,2002,1f60,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4666,4666,4575,2003,1f61,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4667,4667,4576,2004,1f62,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4668,4668,4577,2005,1f63,c9,c9,ret,ret,ret,eval.asm,RET
4669,4669,4578,2006,1f64,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,HEXSTS:         INC	IY		;SKIP TILDE
4670,4670,4579,2008,1f66,cd fe 18,cd 5c 18,call $18fe,call $185c,call $0000,eval.asm,CALL	ITEMN
4671,4671,4580,200b,1f69,cd 11 20,cd 6f 1f,call $2011,call $1f6f,call $0000,eval.asm,CALL	HEXSTR
4672,4672,4581,200e,1f6c,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"LD	A,80H"
4673,4673,4582,2010,1f6e,c9,c9,ret,ret,ret,eval.asm,RET
4674,4674,4583,2011,1f6f,cd 9b 1c,cd f9 1b,call $1c9b,call $1bf9,call $0000,eval.asm,HEXSTR:         CALL	SFIX
4675,4675,4584,2014,1f72,01 08 00,01 08 00,"ld bc,$0008","ld bc,$0008","ld bc,$0000",eval.asm,"LD	BC,8"
4676,4676,4585,2017,1f75,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
4677,4677,4586,201a,1f78,c5,c5,push bc,push bc,push bc,eval.asm,HEXST1:         PUSH	BC
4678,4678,4587,201b,1f79,06 04,06 04,"ld b,$04","ld b,$04","ld b,$00",eval.asm,"LD	B,4"
4679,4679,4588,201d,1f7b,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4680,4680,4589,201e,1f7c,d9,d9,exx,exx,exx,eval.asm,HEXST2:         EXX
4681,4681,4590,201f,1f7d,29,29,"add hl,hl","add hl,hl","add hl,hl",eval.asm,"ADD	HL,HL"
4682,4682,4591,2020,1f7e,d9,d9,exx,exx,exx,eval.asm,EXX
4683,4683,4592,2021,1f7f,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
4684,4684,4593,2023,1f81,17,17,rla,rla,rla,eval.asm,RLA
4685,4685,4594,2024,1f82,10 f8,10 f8,djnz $-$06,djnz $-$06,djnz $-$00,eval.asm,DJNZ	HEXST2
4686,4686,4595,2026,1f84,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4687,4687,4596,2027,1f85,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4688,4688,4597,2028,1f86,f8,f8,ret m,ret m,ret m,eval.asm,RET	M
4689,4689,4598,2029,1f87,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",eval.asm,"JR	Z,HEXST3"
4690,4690,4599,202b,1f89,b7,b7,or a,or a,or a,eval.asm,OR	A
4691,4691,4600,202c,1f8a,20 03,20 03,"jr nz,$+$05","jr nz,$+$05","jr nz,$+$00",eval.asm,"JR	NZ,HEXST3"
4692,4692,4601,202e,1f8c,b8,b8,cp b,cp b,cp b,eval.asm,CP	B
4693,4693,4602,202f,1f8d,28 e9,28 e9,"jr z,$-$15","jr z,$-$15","jr z,$-$00",eval.asm,"JR	Z,HEXST1"
4694,4694,4603,2031,1f8f,c6 90,c6 90,"add a,$90","add a,$90","add a,$00",eval.asm,"HEXST3:         ADD	A,90H"
4695,4695,4604,2033,1f91,27,27,daa,daa,daa,eval.asm,DAA
4696,4696,4605,2034,1f92,ce 40,ce 40,"adc a,$40","adc a,$40","adc a,$00",eval.asm,"ADC	A,40H"
4697,4697,4606,2036,1f94,27,27,daa,daa,daa,eval.asm,DAA
4698,4698,4607,2037,1f95,12,12,"ld (de),a","ld (de),a","ld (de),a",eval.asm,"LD	(DE),A"
4699,4699,4608,2038,1f96,13,13,inc de,inc de,inc de,eval.asm,INC	DE
4700,4700,4609,2039,1f97,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4701,4701,4610,203a,1f98,18 de,18 de,jr $-$20,jr $-$20,jr $-$00,eval.asm,JR	HEXST1
4702,4702,4611,203c,1f9a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,STRS:           CALL	NXT
4703,4703,4612,203f,1f9d,fe 7e,fe 7e,cp $7e,cp $7e,cp $00,eval.asm,CP	'~'
4704,4704,4613,2041,1f9f,28 c3,28 c3,"jr z,$-$3b","jr z,$-$3b","jr z,$-$00",eval.asm,"JR	Z,HEXSTS"
4705,4705,4614,2043,1fa1,cd fe 18,cd 5c 18,call $18fe,call $185c,call $0000,eval.asm,CALL	ITEMN
4706,4706,4615,2046,1fa4,dd 21 00 55,dd 21 00 54,"ld ix,$5500","ld ix,$5400","ld ix,$0000",eval.asm,"LD	IX,STAVAR"
4707,4707,4616,204a,1fa8,dd 7e 03,dd 7e 03,"ld a,(ix+$03)","ld a,(ix+$03)","ld a,(ix+$00)",eval.asm,"LD	A,(IX+3)"
4708,4708,4617,204d,1fab,b7,b7,or a,or a,or a,eval.asm,OR	A
4709,4709,4618,204e,1fac,dd 21 76 20,dd 21 d4 1f,"ld ix,$2076","ld ix,$1fd4","ld ix,$0000",eval.asm,"LD	IX,G9-1		;G9 FORMAT"
4710,4710,4619,2052,1fb0,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",eval.asm,"JR	Z,STR0"
4711,4711,4620,2054,1fb2,dd 21 00 55,dd 21 00 54,"ld ix,$5500","ld ix,$5400","ld ix,$0000",eval.asm,"STR:            LD	IX,STAVAR"
4712,4712,4621,2058,1fb6,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"STR0:           LD	DE,ACCS"
4713,4713,4622,205b,1fb9,3e 25,3e 25,"ld a,$25","ld a,$25","ld a,$00",eval.asm,"LD	A,37"
4714,4714,4623,205d,1fbb,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP
4715,4715,4624,2060,1fbe,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
4716,4716,4625,2063,1fc1,dd cb 02 46,dd cb 02 46,"bit 0,(ix+$02)","bit 0,(ix+$02)","bit 0,(ix+$00)",eval.asm,"BIT	0,(IX+2)"
4717,4717,4626,2067,1fc5,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",eval.asm,"STR1:           LD	A,80H		;STRING MARKER"
4718,4718,4627,2069,1fc7,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4719,4719,4628,206a,1fc8,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
4720,4720,4629,206b,1fc9,c6 04,c6 04,"add a,$04","add a,$04","add a,$00",eval.asm,"ADD	A,4"
4721,4721,4630,206d,1fcb,bb,bb,cp e,cp e,cp e,eval.asm,STR2:           CP	E
4722,4722,4631,206e,1fcc,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",eval.asm,"JR	Z,STR1"
4723,4723,4632,2070,1fce,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4724,4724,4633,2071,1fcf,36 20,36 20,"ld (hl),$20","ld (hl),$20","ld (hl),$00",eval.asm,"LD	(HL),' '	;TRAILING SPACE"
4725,4725,4634,2073,1fd1,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4726,4726,4635,2074,1fd2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4727,4727,4636,2075,1fd3,18 f6,18 f6,jr $-$08,jr $-$08,jr $-$00,eval.asm,JR	STR2
4728,4728,4637,2077,1fd5,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,G9:             DW	9
4729,4729,4638,2078,1fd6,00,00,nop,nop,nop,eval.asm,
4730,4730,4639,2079,1fd7,cd 86 20,cd e4 1f,call $2086,call $1fe4,call $0000,eval.asm,SCP:            CALL	SCP0
4731,4731,4640,207c,1fda,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",eval.asm,"ZERO:           LD	A,0"
4732,4732,4641,207e,1fdc,d9,d9,exx,exx,exx,eval.asm,EXX
4733,4733,4642,207f,1fdd,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4734,4734,4643,2080,1fde,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4735,4735,4644,2081,1fdf,d9,d9,exx,exx,exx,eval.asm,EXX
4736,4736,4645,2082,1fe0,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4737,4737,4646,2083,1fe1,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4738,4738,4647,2084,1fe2,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4739,4739,4648,2085,1fe3,c9,c9,ret,ret,ret,eval.asm,RET
4740,4740,4649,2086,1fe4,04,04,inc b,inc b,inc b,eval.asm,SCP0:           INC	B
4741,4741,4650,2087,1fe5,0c,0c,inc c,inc c,inc c,eval.asm,INC	C
4742,4742,4651,2088,1fe6,05,05,dec b,dec b,dec b,eval.asm,SCP1:           DEC	B
4743,4743,4652,2089,1fe7,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",eval.asm,"JR	Z,SCP2"
4744,4744,4653,208b,1fe9,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4745,4745,4654,208c,1fea,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",eval.asm,"JR	Z,SCP3"
4746,4746,4655,208e,1fec,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",eval.asm,"LD	A,(DE)"
4747,4747,4656,208f,1fed,be,be,cp (hl),cp (hl),cp (hl),eval.asm,CP	(HL)
4748,4748,4657,2090,1fee,c0,c0,ret nz,ret nz,ret nz,eval.asm,RET	NZ
4749,4749,4658,2091,1fef,13,13,inc de,inc de,inc de,eval.asm,INC	DE
4750,4750,4659,2092,1ff0,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4751,4751,4660,2093,1ff1,18 f3,18 f3,jr $-$0b,jr $-$0b,jr $-$00,eval.asm,JR	SCP1
4752,4752,4661,2095,1ff3,b7,b7,or a,or a,or a,eval.asm,SCP2:           OR	A
4753,4753,4662,2096,1ff4,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4754,4754,4663,2097,1ff5,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4755,4755,4664,2098,1ff6,37,37,scf,scf,scf,eval.asm,SCF
4756,4756,4665,2099,1ff7,c9,c9,ret,ret,ret,eval.asm,RET
4757,4757,4666,209a,1ff8,b7,b7,or a,or a,or a,eval.asm,SCP3:           OR	A
4758,4758,4667,209b,1ff9,0c,0c,inc c,inc c,inc c,eval.asm,INC	C
4759,4759,4668,209c,1ffa,c9,c9,ret,ret,ret,eval.asm,RET
4760,4760,4669,209d,1ffb,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",eval.asm,"PUSHS:          LD	HL,ACCS"
4761,4761,4670,20a0,1ffe,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,eval.asm,CALL	CHECK
4762,4762,4671,20a3,2001,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;RETURN ADDRESS
4763,4763,4672,20a5,2003,b7,b7,or a,or a,or a,eval.asm,OR	A		;CLEAR CARRY
4764,4764,4673,20a6,2004,54,54,"ld d,h","ld d,h","ld d,h",eval.asm,"LD	D,H"
4765,4765,4674,20a7,2005,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E"
4766,4766,4675,20a8,2006,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",eval.asm,"SBC	HL,DE"
4767,4767,4676,20aa,2008,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
4768,4768,4677,20ab,2009,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"LD	SP,HL"
4769,4769,4678,20ac,200a,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4770,4770,4679,20ad,200b,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4771,4771,4680,20ae,200c,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",eval.asm,"JR	Z,PUSHS1	;ZERO LENGTH"
4772,4772,4681,20b0,200e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4773,4773,4682,20b1,200f,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4774,4774,4683,20b3,2011,68,68,"ld l,b","ld l,b","ld l,b",eval.asm,"LD	L,B		;L=0"
4775,4775,4684,20b4,2012,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR			;COPY TO STACK
4776,4776,4685,20b6,2014,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,eval.asm,CALL	CHECK
4777,4777,4686,20b9,2017,dd e9,dd e9,jp (ix),jp (ix),jp (ix),eval.asm,"PUSHS1:         JP	(IX)		;""RETURN"""
4778,4778,4687,20bb,2019,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POPS:           POP	IX		;RETURN ADDRESS
4779,4779,4688,20bd,201b,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",eval.asm,"LD	HL,0"
4780,4780,4689,20c0,201e,44,44,"ld b,h","ld b,h","ld b,h",eval.asm,"LD	B,H		;B=0"
4781,4781,4690,20c1,201f,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
4782,4782,4691,20c2,2020,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",eval.asm,"LD	DE,ACCS"
4783,4783,4692,20c5,2023,0c,0c,inc c,inc c,inc c,eval.asm,INC	C
4784,4784,4693,20c6,2024,0d,0d,dec c,dec c,dec c,eval.asm,DEC	C
4785,4785,4694,20c7,2025,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",eval.asm,"JR	Z,POPS1		;ZERO LENGTH"
4786,4786,4695,20c9,2027,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR			;COPY FROM STACK
4787,4787,4696,20cb,2029,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"POPS1:          LD	SP,HL"
4788,4788,4697,20cc,202a,dd e9,dd e9,jp (ix),jp (ix),jp (ix),eval.asm,"JP	(IX)		;""RETURN"""
4789,4789,4698,20ce,202c,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"BINDIG:         LD	A,(IY)"
4790,4790,4699,20d1,202f,fe 30,fe 30,cp $30,cp $30,cp $00,eval.asm,CP	'0'
4791,4791,4700,20d3,2031,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4792,4792,4701,20d4,2032,fe 32,fe 32,cp $32,cp $32,cp $00,eval.asm,CP	'1'+1
4793,4793,4702,20d6,2034,3f,3f,ccf,ccf,ccf,eval.asm,CCF
4794,4794,4703,20d7,2035,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4795,4795,4704,20d8,2036,d6 30,d6 30,sub $30,sub $30,sub $00,eval.asm,SUB	'0'
4796,4796,4705,20da,2038,c9,c9,ret,ret,ret,eval.asm,RET
4797,4797,4706,20db,2039,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"HEXDIG:         LD	A,(IY)"
4798,4798,4707,20de,203c,fe 30,fe 30,cp $30,cp $30,cp $00,eval.asm,CP	'0'
4799,4799,4708,20e0,203e,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4800,4800,4709,20e1,203f,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,eval.asm,CP	'9'+1
4801,4801,4710,20e3,2041,3f,3f,ccf,ccf,ccf,eval.asm,CCF
4802,4802,4711,20e4,2042,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4803,4803,4712,20e5,2043,fe 41,fe 41,cp $41,cp $41,cp $00,eval.asm,CP	'A'
4804,4804,4713,20e7,2045,d8,d8,ret c,ret c,ret c,eval.asm,RET	C
4805,4805,4714,20e8,2046,d6 37,d6 37,sub $37,sub $37,sub $00,eval.asm,SUB	'A'-10
4806,4806,4715,20ea,2048,fe 10,fe 10,cp $10,cp $10,cp $00,eval.asm,CP	16
4807,4807,4716,20ec,204a,3f,3f,ccf,ccf,ccf,eval.asm,CCF
4808,4808,4717,20ed,204b,c9,c9,ret,ret,ret,eval.asm,RET
4809,4809,4718,20ee,204c,fe 3e,fe 3e,cp $3e,cp $3e,cp $00,eval.asm,RELOPQ:         CP	'>'
4810,4810,4719,20f0,204e,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4811,4811,4720,20f1,204f,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,eval.asm,CP	'='
4812,4812,4721,20f3,2051,d0,d0,ret nc,ret nc,ret nc,eval.asm,RET	NC
4813,4813,4722,20f4,2052,fe 3c,fe 3c,cp $3c,cp $3c,cp $00,eval.asm,CP	'<'
4814,4814,4723,20f6,2054,c9,c9,ret,ret,ret,eval.asm,RET
4815,4815,4724,20f7,2055,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,SAVEev:           INC	IY
4816,4816,4725,20f9,2057,e6 0f,e6 0f,and $0f,and $0f,and $00,eval.asm,AND	0FH
4817,4817,4726,20fb,2059,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"SAVE1:          EX	AF,AF'"
4818,4818,4727,20fc,205a,fa f2 18,fa 50 18,"jp m,$18f2","jp m,$1850","jp m,$0000",eval.asm,"JP	M,MISMATev"
4819,4819,4728,20ff,205d,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
4820,4820,4729,2100,205e,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",eval.asm,"EX	(SP),HL"
4821,4821,4730,2101,205f,d9,d9,exx,exx,exx,eval.asm,EXX
4822,4822,4731,2102,2060,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4823,4823,4732,2103,2061,d9,d9,exx,exx,exx,eval.asm,EXX
4824,4824,4733,2104,2062,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
4825,4825,4734,2105,2063,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4826,4826,4735,2106,2064,e9,e9,jp (hl),jp (hl),jp (hl),eval.asm,JP	(HL)
4827,4827,4736,2107,2065,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"DOIT:           EX	AF,AF'"
4828,4828,4737,2108,2066,fa f2 18,fa 50 18,"jp m,$18f2","jp m,$1850","jp m,$0000",eval.asm,"JP	M,MISMATev"
4829,4829,4738,210b,2069,d9,d9,exx,exx,exx,eval.asm,EXX
4830,4830,4739,210c,206a,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;RETURN ADDRESS
4831,4831,4740,210d,206b,d9,d9,exx,exx,exx,eval.asm,EXX
4832,4832,4741,210e,206c,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
4833,4833,4742,210f,206d,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4834,4834,4743,2110,206e,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
4835,4835,4744,2111,206f,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF		;OPERATOR
4836,4836,4745,2112,2070,d9,d9,exx,exx,exx,eval.asm,EXX
4837,4837,4746,2113,2071,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4838,4838,4747,2114,2072,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4839,4839,4748,2115,2073,d9,d9,exx,exx,exx,eval.asm,EXX
4840,4840,4749,2116,2074,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
4841,4841,4750,2117,2075,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4842,4842,4751,2118,2076,d9,d9,exx,exx,exx,eval.asm,EXX
4843,4843,4752,2119,2077,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4844,4844,4753,211a,2078,d9,d9,exx,exx,exx,eval.asm,EXX
4845,4845,4754,211b,2079,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP
4846,4846,4755,211e,207c,38 1c,38 1c,"jr c,$+$1e","jr c,$+$1e","jr c,$+$00",eval.asm,"JR	C,ERROR1ev"
4847,4847,4756,2120,207e,af,af,xor a,xor a,xor a,eval.asm,XOR	A
4848,4848,4757,2121,207f,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'		;TYPE"
4849,4849,4758,2122,2080,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",eval.asm,"LD	A,(IY)"
4850,4850,4759,2125,2083,c9,c9,ret,ret,ret,eval.asm,RET
4851,4851,4760,2126,2084,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,COMMA:          CALL	NXT
4852,4852,4761,2129,2087,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
4853,4853,4762,212b,2089,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
4854,4854,4763,212d,208b,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4855,4855,4764,212e,208c,3e 05,3e 05,"ld a,$05","ld a,$05","ld a,$00",eval.asm,"LD	A,5"
4856,4856,4765,2130,208e,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,eval.asm,"JR	ERROR1ev		;""Missing ,"""
4857,4857,4766,2132,2090,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,BRAKET:         CALL	NXT
4858,4858,4767,2135,2093,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY
4859,4859,4768,2137,2095,fe 29,fe 29,cp $29,cp $29,cp $00,eval.asm,CP	')'
4860,4860,4769,2139,2097,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4861,4861,4770,213a,2098,3e 1b,3e 1b,"ld a,$1b","ld a,$1b","ld a,$00",eval.asm,"LD	A,27"
4862,4862,4771,213c,209a,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,eval.asm,"ERROR1ev:         JP	ERROR_		;""Missing )"""
4863,4863,4772,213f,209d,e5,e5,push hl,push hl,push hl,eval.asm,DISPT2:         PUSH	HL
4864,4864,4773,2140,209e,21 7a 17,21 d8 16,"ld hl,$177a","ld hl,$16d8","ld hl,$0000",eval.asm,"LD	HL,SOPTBL"
4865,4865,4774,2143,20a1,18 06,18 06,jr $+$08,jr $+$08,jr $+$00,eval.asm,JR	DISPT0
4866,4866,4775,2145,20a3,e5,e5,push hl,push hl,push hl,eval.asm,DISPATev:         PUSH	HL
4867,4867,4776,2146,20a4,d6 8d,d6 8d,sub $8d,sub $8d,sub $00,eval.asm,SUB	FUNTOK
4868,4868,4777,2148,20a6,21 06 17,21 64 16,"ld hl,$1706","ld hl,$1664","ld hl,$0000",eval.asm,"LD	HL,FUNTBL"
4869,4869,4778,214b,20a9,c5,c5,push bc,push bc,push bc,eval.asm,DISPT0:         PUSH	BC
4870,4870,4779,214c,20aa,87,87,"add a,a","add a,a","add a,a",eval.asm,"ADD	A,A"
4871,4871,4780,214d,20ab,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
4872,4872,4781,214e,20ac,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4873,4873,4782,2150,20ae,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
4874,4874,4783,2151,20af,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",eval.asm,"LD	A,(HL)"
4875,4875,4784,2152,20b0,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4876,4876,4785,2153,20b1,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",eval.asm,"LD	H,(HL)"
4877,4877,4786,2154,20b2,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4878,4878,4787,2155,20b3,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4879,4879,4788,2156,20b4,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",eval.asm,"EX	(SP),HL"
4880,4880,4789,2157,20b5,c9,c9,ret,ret,ret,eval.asm,RET			;OFF TO ROUTINE
4881,4881,4790,2158,20b6,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"STOREA:         LD	A,D"
4882,4882,4791,2159,20b7,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4883,4883,4792,215a,20b8,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4884,4884,4793,215b,20b9,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
4885,4885,4794,215d,20bb,b7,b7,or a,or a,or a,eval.asm,OR	A
4886,4886,4795,215e,20bc,fa 6f 21,fa cd 20,"jp m,$216f","jp m,$20cd","jp m,$0000",eval.asm,"JP	M,STORA1"
4887,4887,4796,2161,20bf,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,eval.asm,CALL	LOADN
4888,4888,4797,2164,20c2,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
4889,4889,4798,2166,20c4,cd 52 32,cd b0 31,call $3252,call $31b0,call $0000,eval.asm,CALL	MODIFY
4890,4890,4799,2169,20c7,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4891,4891,4800,216a,20c8,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4892,4892,4801,216b,20c9,4a,4a,"ld c,d","ld c,d","ld c,d",eval.asm,"LD	C,D"
4893,4893,4802,216c,20ca,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
4894,4894,4803,216e,20cc,c9,c9,ret,ret,ret,eval.asm,RET
4895,4895,4804,216f,20cd,d5,d5,push de,push de,push de,eval.asm,STORA1:         PUSH	DE
4896,4896,4805,2170,20ce,cd 92 1a,cd f0 19,call $1a92,call $19f0,call $0000,eval.asm,CALL	LOADS
4897,4897,4806,2173,20d1,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4898,4898,4807,2174,20d2,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
4899,4899,4808,2176,20d4,cd 9c 32,cd fa 31,call $329c,call $31fa,call $0000,eval.asm,CALL	MODIFS
4900,4900,4809,2179,20d7,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4901,4901,4810,217a,20d8,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4902,4902,4811,217b,20d9,01 04 00,01 04 00,"ld bc,$0004","ld bc,$0004","ld bc,$0000",eval.asm,"LD	BC,4"
4903,4903,4812,217e,20dc,c9,c9,ret,ret,ret,eval.asm,RET
4904,4904,4813,217f,20dd,cb b2,cb b2,"res 6,d","res 6,d","res 6,d",eval.asm,"LETARR:         RES	6,D		;Lose array marker"
4905,4905,4814,2181,20df,d5,d5,push de,push de,push de,eval.asm,PUSH	DE		;Save type & opcode
4906,4906,4815,2182,20e0,cd 51 1a,cd af 19,call $1a51,call $19af,call $0000,eval.asm,CALL	GETAR1		;Get and check indirect link
4907,4907,4816,2185,20e3,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,"CALL	ARRLEN		;DE = elements, HL addresses first"
4908,4908,4817,2188,20e6,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4909,4909,4818,2189,20e7,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B		;A = type"
4910,4910,4819,218a,20e8,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4911,4911,4820,218b,20e9,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4912,4912,4821,218c,20ea,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4913,4913,4822,218d,20eb,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,eval.asm,CALL	X14OR5		;DE = size in bytes
4914,4914,4823,2190,20ee,42,42,"ld b,d","ld b,d","ld b,d",eval.asm,"LD	B,D"
4915,4915,4824,2191,20ef,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E"
4916,4916,4825,2192,20f0,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
4917,4917,4826,2194,20f2,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4918,4918,4827,2195,20f3,af,af,xor a,xor a,xor a,eval.asm,XOR	A		;Clear carry and zero error code
4919,4919,4828,2196,20f4,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",eval.asm,"SBC	HL,HL"
4920,4920,4829,2198,20f6,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP		;HL = SP"
4921,4921,4830,2199,20f7,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"SBC	HL,BC"
4922,4922,4831,219b,20f9,38 9f,38 9f,"jr c,$-$5f","jr c,$-$5f","jr c,$-$00",eval.asm,"JR	C,ERROR1ev	;'No room'"
4923,4923,4832,219d,20fb,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4924,4924,4833,219e,20fc,ed 4b e0 55,ed 4b e0 54,"ld bc,($55e0)","ld bc,($54e0)","ld bc,($0000)",eval.asm,"LD	BC,(FREE)"
4925,4925,4834,21a2,2100,04,04,inc b,inc b,inc b,eval.asm,INC	B		;Safety margin
4926,4926,4835,21a3,2101,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"SBC	HL,BC"
4927,4927,4836,21a5,2103,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
4928,4928,4837,21a6,2104,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4929,4929,4838,21a7,2105,38 93,38 93,"jr c,$-$6b","jr c,$-$6b","jr c,$-$00",eval.asm,"JR	C,ERROR1ev	;'No room'"
4930,4930,4839,21a9,2107,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"LD	SP,HL"
4931,4931,4840,21aa,2108,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",eval.asm,"LETA0:          LD	(HL),0"
4932,4932,4841,21ac,210a,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4933,4933,4842,21ad,210b,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
4934,4934,4843,21ae,210c,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
4935,4935,4844,21af,210d,b1,b1,or c,or c,or c,eval.asm,OR	C
4936,4936,4845,21b0,210e,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",eval.asm,"JR	NZ,LETA0	;Clear allocated stack"
4937,4937,4846,21b2,2110,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",eval.asm,"LD	C,(HL)"
4938,4938,4847,21b3,2111,23,23,inc hl,inc hl,inc hl,eval.asm,INC	HL
4939,4939,4848,21b4,2112,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",eval.asm,"LD	B,(HL)"
4940,4940,4849,21b5,2113,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
4941,4941,4850,21b6,2114,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
4942,4942,4851,21b7,2115,39,39,"add hl,sp","add hl,sp","add hl,sp",eval.asm,"ADD	HL,SP"
4943,4943,4852,21b8,2116,cd c0 21,cd 1e 21,call $21c0,call $211e,call $0000,eval.asm,CALL	EXPRA
4944,4944,4853,21bb,2119,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",eval.asm,"LD	SP,HL		;Update stack pointer"
4945,4945,4854,21bc,211a,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;Level stack
4946,4946,4855,21bd,211b,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,eval.asm,JP	XEQ
4947,4947,4856,21c0,211e,3e 3d,3e 3d,"ld a,$3d","ld a,$3d","ld a,$00",eval.asm,"EXPRA:          LD	A,'='"
4948,4948,4857,21c2,2120,fd 2b,fd 2b,dec iy,dec iy,dec iy,eval.asm,DEC	IY
4949,4949,4858,21c4,2122,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,EXPRA1:         INC	IY
4950,4950,4859,21c6,2124,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4951,4951,4860,21c7,2125,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4952,4952,4861,21c8,2126,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4953,4953,4862,21c9,2127,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
4954,4954,4863,21cb,2129,5f,5f,"ld e,a","ld e,a","ld e,a",eval.asm,"LD	E,A		;Operator"
4955,4955,4864,21cc,212a,cd 3a 22,cd 98 21,call $223a,call $2198,call $0000,eval.asm,CALL	ITEMA
4956,4956,4865,21cf,212d,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
4957,4957,4866,21d1,212f,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
4958,4958,4867,21d2,2130,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4959,4959,4868,21d3,2131,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4960,4960,4869,21d4,2132,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
4961,4961,4870,21d7,2135,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','		;List?"
4962,4962,4871,21d9,2137,28 13,28 13,"jr z,$+$15","jr z,$+$15","jr z,$+$00",eval.asm,"JR	Z,EXPRA3"
4963,4963,4872,21db,2139,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,eval.asm,CALL	TERMQ
4964,4964,4873,21de,213c,20 e4,20 e4,"jr nz,$-$1a","jr nz,$-$1a","jr nz,$-$00",eval.asm,"JR	NZ,EXPRA1"
4965,4965,4874,21e0,213e,c5,c5,push bc,push bc,push bc,eval.asm,EXPRA2:         PUSH	BC
4966,4966,4875,21e1,213f,cd 58 21,cd b6 20,call $2158,call $20b6,call $0000,eval.asm,CALL	STOREA		;(IX) <- (HL)
4967,4967,4876,21e4,2142,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
4968,4968,4877,21e5,2143,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
4969,4969,4878,21e7,2145,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4970,4970,4879,21e8,2146,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
4971,4971,4880,21e9,2147,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
4972,4972,4881,21ea,2148,b1,b1,or c,or c,or c,eval.asm,OR	C
4973,4973,4882,21eb,2149,20 f3,20 f3,"jr nz,$-$0b","jr nz,$-$0b","jr nz,$-$00",eval.asm,"JR	NZ,EXPRA2"
4974,4974,4883,21ed,214b,c9,c9,ret,ret,ret,eval.asm,RET
4975,4975,4884,21ee,214c,c5,c5,push bc,push bc,push bc,eval.asm,EXPRA3:         PUSH	BC
4976,4976,4885,21ef,214d,cd 58 21,cd b6 20,call $2158,call $20b6,call $0000,eval.asm,CALL	STOREA		;(IX) <- (HL)
4977,4977,4886,21f2,2150,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,EXPRA4:         INC	IY		;Bump past comma
4978,4978,4887,21f4,2152,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
4979,4979,4888,21f5,2153,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
4980,4980,4889,21f7,2155,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
4981,4981,4890,21f8,2156,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
4982,4982,4891,21f9,2157,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
4983,4983,4892,21fa,2158,b1,b1,or c,or c,or c,eval.asm,OR	C
4984,4984,4893,21fb,2159,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
4985,4985,4894,21fc,215a,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
4986,4986,4895,21fd,215b,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4987,4987,4896,21fe,215c,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
4988,4988,4897,21ff,215d,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
4989,4989,4898,2201,215f,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",eval.asm,"BIT	7,D"
4990,4990,4899,2203,2161,20 0e,20 0e,"jr nz,$+$10","jr nz,$+$10","jr nz,$+$00",eval.asm,"JR	NZ,EXPRA5"
4991,4991,4900,2205,2163,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
4992,4992,4901,2206,2164,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,eval.asm,CALL	EXPRN
4993,4993,4902,2209,2167,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
4994,4994,4903,220a,2168,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
4995,4995,4904,220c,216a,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
4996,4996,4905,220e,216c,cd 52 32,cd b0 31,call $3252,call $31b0,call $0000,eval.asm,CALL	MODIFY
4997,4997,4906,2211,216f,18 0c,18 0c,jr $+$0e,jr $+$0e,jr $+$00,eval.asm,JR	EXPRA6
4998,4998,4907,2213,2171,d5,d5,push de,push de,push de,eval.asm,EXPRA5:         PUSH	DE
4999,4999,4908,2214,2172,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,CALL	EXPRS
5000,5000,4909,2217,2175,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5001,5001,4910,2218,2176,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5002,5002,4911,221a,2178,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
5003,5003,4912,221c,217a,cd 9c 32,cd fa 31,call $329c,call $31fa,call $0000,eval.asm,CALL	MODIFS
5004,5004,4913,221f,217d,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,EXPRA6:         POP	IX
5005,5005,4914,2221,217f,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5006,5006,4915,2222,2180,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5007,5007,4916,2223,2181,01 04 00,01 04 00,"ld bc,$0004","ld bc,$0004","ld bc,$0000",eval.asm,"LD	BC,4"
5008,5008,4917,2226,2184,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",eval.asm,"BIT	7,D"
5009,5009,4918,2228,2186,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",eval.asm,"JR	NZ,EXPRA7"
5010,5010,4919,222a,2188,4a,4a,"ld c,d","ld c,d","ld c,d",eval.asm,"LD	C,D"
5011,5011,4920,222b,2189,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,EXPRA7:         CALL	NXT
5012,5012,4921,222e,218c,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,eval.asm,"CP	','"
5013,5013,4922,2230,218e,28 c0,28 c0,"jr z,$-$3e","jr z,$-$3e","jr z,$-$00",eval.asm,"JR	Z,EXPRA4"
5014,5014,4923,2232,2190,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5015,5015,4924,2233,2191,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"EXPRA8:         ADD	HL,BC		;Skip remaining elements"
5016,5016,4925,2234,2192,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE
5017,5017,4926,2235,2193,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D"
5018,5018,4927,2236,2194,b3,b3,or e,or e,or e,eval.asm,OR	E
5019,5019,4928,2237,2195,20 fa,20 fa,"jr nz,$-$04","jr nz,$-$04","jr nz,$-$00",eval.asm,"JR	NZ,EXPRA8"
5020,5020,4929,2239,2197,c9,c9,ret,ret,ret,eval.asm,RET
5021,5021,4930,223a,2198,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,ITEMA:          CALL	NXT
5022,5022,4931,223d,219b,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL		;Pointer to destination
5023,5023,4932,223e,219c,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC		;Number of elements
5024,5024,4933,223f,219d,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY		;In case normal expression
5025,5025,4934,2241,219f,d5,d5,push de,push de,push de,eval.asm,PUSH	DE		;Ditto
5026,5026,4935,2242,21a0,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,eval.asm,CP	'-'
5027,5027,4936,2244,21a2,20 0c,20 0c,"jr nz,$+$0e","jr nz,$+$0e","jr nz,$+$00",eval.asm,"JR	NZ,ITEMA1	;Not unary minus"
5028,5028,4937,2246,21a4,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"LD	A,E"
5029,5029,4938,2247,21a5,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,eval.asm,CP	'='
5030,5030,4939,2249,21a7,20 07,20 07,"jr nz,$+$09","jr nz,$+$09","jr nz,$+$00",eval.asm,"JR	NZ,ITEMA1	;Not unary minus"
5031,5031,4940,224b,21a9,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,INC	IY		;Bump past '-'
5032,5032,4941,224d,21ab,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
5033,5033,4942,2250,21ae,1e 2d,1e 2d,"ld e,$2d","ld e,$2d","ld e,$00",eval.asm,"LD	E,'-'		;Unary minus"
5034,5034,4943,2252,21b0,d5,d5,push de,push de,push de,eval.asm,ITEMA1:         PUSH	DE		;Type and operator
5035,5035,4944,2253,21b1,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,eval.asm,CALL	GETVAR
5036,5036,4945,2256,21b4,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE		;Type & operator
5037,5037,4946,2257,21b5,20 56,20 56,"jr nz,$+$58","jr nz,$+$58","jr nz,$+$00",eval.asm,"JR	NZ,ITEMA4	;Non-array expression"
5038,5038,4947,2259,21b7,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",eval.asm,"BIT	6,A"
5039,5039,4948,225b,21b9,28 52,28 52,"jr z,$+$54","jr z,$+$54","jr z,$+$00",eval.asm,"JR	Z,ITEMA4	;Not a whole array"
5040,5040,4949,225d,21bb,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;Junk saved original op
5041,5041,4950,225e,21bc,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;Junk saved text pointer
5042,5042,4951,225f,21bd,cb b7,cb b7,"res 6,a","res 6,a","res 6,a",eval.asm,"RES	6,A"
5043,5043,4952,2261,21bf,ba,ba,cp d,cp d,cp d,eval.asm,CP	D
5044,5044,4953,2262,21c0,c2 f2 18,c2 50 18,"jp nz,$18f2","jp nz,$1850","jp nz,$0000",eval.asm,"JP	NZ,MISMATev	;'Type mismatch'"
5045,5045,4954,2265,21c3,d5,d5,push de,push de,push de,eval.asm,PUSH	DE		;Save type & operator again
5046,5046,4955,2266,21c4,cd 51 1a,cd af 19,call $1a51,call $19af,call $0000,eval.asm,CALL	GETAR1
5047,5047,4956,2269,21c7,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,CALL	ARRLEN
5048,5048,4957,226c,21ca,42,42,"ld b,d","ld b,d","ld b,d",eval.asm,"LD	B,D		;BC = number of elements"
5049,5049,4958,226d,21cb,4b,4b,"ld c,e","ld c,e","ld c,e",eval.asm,"LD	C,E"
5050,5050,4959,226e,21cc,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE		;Restore type & operator
5051,5051,4960,226f,21cd,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",eval.asm,"EX	(SP),HL"
5052,5052,4961,2270,21ce,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,eval.asm,CALL	NXT
5053,5053,4962,2273,21d1,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;Pointer to source
5054,5054,4963,2275,21d3,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,eval.asm,CP	'.'
5055,5055,4964,2277,21d5,ca 07 23,ca 65 22,"jp z,$2307","jp z,$2265","jp z,$0000",eval.asm,"JP	Z,ARRDOT	;Dot product"
5056,5056,4965,227a,21d8,b7,b7,or a,or a,or a,eval.asm,OR	A
5057,5057,4966,227b,21d9,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"SBC	HL,BC		;Same number of elements?"
5058,5058,4967,227d,21db,c2 f2 18,c2 50 18,"jp nz,$18f2","jp nz,$1850","jp nz,$0000",eval.asm,"JP	NZ,MISMATev	;'Type mismatch'"
5059,5059,4968,2280,21de,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL		;Pointer to destination
5060,5060,4969,2281,21df,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",eval.asm,"BIT	7,D"
5061,5061,4970,2283,21e1,20 1d,20 1d,"jr nz,$+$1f","jr nz,$+$1f","jr nz,$+$00",eval.asm,"JR	NZ,ITEMA3"
5062,5062,4971,2285,21e3,c5,c5,push bc,push bc,push bc,eval.asm,ITEMA2:         PUSH	BC
5063,5063,4972,2286,21e4,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5064,5064,4973,2287,21e5,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D"
5065,5065,4974,2288,21e6,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,eval.asm,CALL	LOADN
5066,5066,4975,228b,21e9,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
5067,5067,4976,228d,21eb,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5068,5068,4977,228e,21ec,cd 52 32,cd b0 31,call $3252,call $31b0,call $0000,eval.asm,CALL	MODIFY
5069,5069,4978,2291,21ef,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5070,5070,4979,2292,21f0,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
5071,5071,4980,2294,21f2,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5072,5072,4981,2295,21f3,4a,4a,"ld c,d","ld c,d","ld c,d",eval.asm,"LD	C,D"
5073,5073,4982,2296,21f4,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5074,5074,4983,2298,21f6,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
5075,5075,4984,229a,21f8,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
5076,5076,4985,229b,21f9,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5077,5077,4986,229c,21fa,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
5078,5078,4987,229d,21fb,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
5079,5079,4988,229e,21fc,b1,b1,or c,or c,or c,eval.asm,OR	C
5080,5080,4989,229f,21fd,20 e4,20 e4,"jr nz,$-$1a","jr nz,$-$1a","jr nz,$-$00",eval.asm,"JR	NZ,ITEMA2"
5081,5081,4990,22a1,21ff,c9,c9,ret,ret,ret,eval.asm,RET
5082,5082,4991,22a2,2200,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"ITEMA3:         EX	DE,HL		;DE = destination"
5083,5083,4992,22a3,2201,60,60,"ld h,b","ld h,b","ld h,b",eval.asm,"LD	H,B"
5084,5084,4993,22a4,2202,69,69,"ld l,c","ld l,c","ld l,c",eval.asm,"LD	L,C"
5085,5085,4994,22a5,2203,29,29,"add hl,hl","add hl,hl","add hl,hl",eval.asm,"ADD	HL,HL"
5086,5086,4995,22a6,2204,29,29,"add hl,hl","add hl,hl","add hl,hl",eval.asm,"ADD	HL,HL"
5087,5087,4996,22a7,2205,44,44,"ld b,h","ld b,h","ld b,h",eval.asm,"LD	B,H"
5088,5088,4997,22a8,2206,4d,4d,"ld c,l","ld c,l","ld c,l",eval.asm,"LD	C,L"
5089,5089,4998,22a9,2207,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
5090,5090,4999,22ab,2209,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL		;HL = source
5091,5091,5000,22ac,220a,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR
5092,5092,5001,22ae,220c,c9,c9,ret,ret,ret,eval.asm,RET
5093,5093,5002,22af,220d,d1,d1,pop de,pop de,pop de,eval.asm,ITEMA4:         POP	DE		;Restore original operator
5094,5094,5003,22b0,220e,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY		;Restore original text pointer
5095,5095,5004,22b2,2210,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",eval.asm,"BIT	7,D"
5096,5096,5005,22b4,2212,20 28,20 28,"jr nz,$+$2a","jr nz,$+$2a","jr nz,$+$00",eval.asm,"JR	NZ,ITEMA5"
5097,5097,5006,22b6,2214,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5098,5098,5007,22b7,2215,cd 8f 18,cd ed 17,call $188f,call $17ed,call $0000,eval.asm,CALL	EXPR45		;; should be EXP345
5099,5099,5008,22ba,2218,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C		;Exponent"
5100,5100,5009,22bb,2219,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE		;Type / operator
5101,5101,5010,22bc,221a,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;Count
5102,5102,5011,22bd,221b,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5103,5103,5012,22bf,221d,e5,e5,push hl,push hl,push hl,eval.asm,ITEMA7:         PUSH	HL
5104,5104,5013,22c0,221e,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
5105,5105,5014,22c1,221f,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5106,5106,5015,22c2,2220,d9,d9,exx,exx,exx,eval.asm,EXX
5107,5107,5016,22c3,2221,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5108,5108,5017,22c4,2222,d9,d9,exx,exx,exx,eval.asm,EXX
5109,5109,5018,22c5,2223,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5110,5110,5019,22c6,2224,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
5111,5111,5020,22c7,2225,cd 52 32,cd b0 31,call $3252,call $31b0,call $0000,eval.asm,CALL	MODIFY
5112,5112,5021,22ca,2228,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5113,5113,5022,22cb,2229,d9,d9,exx,exx,exx,eval.asm,EXX
5114,5114,5023,22cc,222a,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5115,5115,5024,22cd,222b,d9,d9,exx,exx,exx,eval.asm,EXX
5116,5116,5025,22ce,222c,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5117,5117,5026,22cf,222d,4a,4a,"ld c,d","ld c,d","ld c,d",eval.asm,"LD	C,D"
5118,5118,5027,22d0,222e,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5119,5119,5028,22d2,2230,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
5120,5120,5029,22d4,2232,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5121,5121,5030,22d5,2233,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
5122,5122,5031,22d6,2234,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",eval.asm,"SBC	HL,HL"
5123,5123,5032,22d8,2236,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"SBC	HL,BC"
5124,5124,5033,22da,2238,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5125,5125,5034,22db,2239,20 e2,20 e2,"jr nz,$-$1c","jr nz,$-$1c","jr nz,$-$00",eval.asm,"JR	NZ,ITEMA7	;Copy into every element!"
5126,5126,5035,22dd,223b,c9,c9,ret,ret,ret,eval.asm,RET
5127,5127,5036,22de,223c,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,eval.asm,ITEMA5:         CALL	EXPRS
5128,5128,5037,22e1,223f,7b,7b,"ld a,e","ld a,e","ld a,e",eval.asm,"LD	A,E"
5129,5129,5038,22e2,2240,b7,b7,or a,or a,or a,eval.asm,OR	A
5130,5130,5039,22e3,2241,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",eval.asm,"JR	Z,ITEMA0"
5131,5131,5040,22e5,2243,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",eval.asm,"LD	HL,ACCS"
5132,5132,5041,22e8,2246,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",eval.asm,"LD	DE,BUFFER"
5133,5133,5042,22eb,2249,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
5134,5134,5043,22ec,224a,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5135,5135,5044,22ee,224c,ed b0,ed b0,ldir,ldir,ldir,eval.asm,LDIR
5136,5136,5045,22f0,224e,c1,c1,pop bc,pop bc,pop bc,eval.asm,ITEMA0:         POP	BC
5137,5137,5046,22f1,224f,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5138,5138,5047,22f3,2251,d9,d9,exx,exx,exx,eval.asm,EXX
5139,5139,5048,22f4,2252,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
5140,5140,5049,22f5,2253,d9,d9,exx,exx,exx,eval.asm,EXX
5141,5141,5050,22f6,2254,11 04 00,11 04 00,"ld de,$0004","ld de,$0004","ld de,$0000",eval.asm,"LD	DE,4"
5142,5142,5051,22f9,2257,21 00 54,21 00 53,"ld hl,$5400","ld hl,$5300","ld hl,$0000",eval.asm,"LD	HL,BUFFER"
5143,5143,5052,22fc,225a,cd 8d 32,cd eb 31,call $328d,call $31eb,call $0000,eval.asm,ITEMA6:         CALL	STORE4
5144,5144,5053,22ff,225d,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",eval.asm,"ADD	IX,DE"
5145,5145,5054,2301,225f,0b,0b,dec bc,dec bc,dec bc,eval.asm,DEC	BC
5146,5146,5055,2302,2260,78,78,"ld a,b","ld a,b","ld a,b",eval.asm,"LD	A,B"
5147,5147,5056,2303,2261,b1,b1,or c,or c,or c,eval.asm,OR	C
5148,5148,5057,2304,2262,20 f6,20 f6,"jr nz,$-$08","jr nz,$-$08","jr nz,$-$00",eval.asm,"JR	NZ,ITEMA6	;Copy into every element!"
5149,5149,5058,2306,2264,c9,c9,ret,ret,ret,eval.asm,RET
5150,5150,5059,2307,2265,fd 23,fd 23,inc iy,inc iy,inc iy,eval.asm,ARRDOT:         INC	IY		;Bump past dot
5151,5151,5060,2309,2267,7a,7a,"ld a,d","ld a,d","ld a,d",eval.asm,"LD	A,D		;Type"
5152,5152,5061,230a,2268,b7,b7,or a,or a,or a,eval.asm,OR	A
5153,5153,5062,230b,2269,fa f2 18,fa 50 18,"jp m,$18f2","jp m,$1850","jp m,$0000",eval.asm,"JP	M,MISMATev	;'Type mismatch'"
5154,5154,5063,230e,226c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5155,5155,5064,230f,226d,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5156,5156,5065,2310,226e,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5157,5157,5066,2311,226f,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5158,5158,5067,2312,2270,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
5159,5159,5068,2314,2272,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5160,5160,5069,2315,2273,cd 41 1a,cd 9f 19,call $1a41,call $199f,call $0000,eval.asm,CALL	GETARR
5161,5161,5070,2318,2276,cd 28 1a,cd 86 19,call $1a28,call $1986,call $0000,eval.asm,CALL	ARRLEN
5162,5162,5071,231b,2279,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5163,5163,5072,231c,227a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5164,5164,5073,231d,227b,dd 6e 00,dd 6e 00,"ld l,(ix)","ld l,(ix)","ld l,(ix)",eval.asm,"LD	L,(IX)"
5165,5165,5074,2320,227e,dd 66 01,dd 66 01,"ld h,(ix+$01)","ld h,(ix+$01)","ld h,(ix+$00)",eval.asm,"LD	H,(IX+1)	;Indirect pointer"
5166,5166,5075,2323,2281,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",eval.asm,"LD	L,(HL)		;No. of dimensions"
5167,5167,5076,2324,2282,2d,2d,dec l,dec l,dec l,eval.asm,DEC	L
5168,5168,5077,2325,2283,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5169,5169,5078,2326,2284,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5170,5170,5079,2328,2286,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5171,5171,5080,2329,2287,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5172,5172,5081,232a,2288,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY		;Save text pointer
5173,5173,5082,232c,228a,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC		;Save destination pointer
5174,5174,5083,232d,228b,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5175,5175,5084,232e,228c,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
5176,5176,5085,2330,228e,21 01 00,21 01 00,"ld hl,$0001","ld hl,$0001","ld hl,$0000",eval.asm,"LD	HL,1"
5177,5177,5086,2333,2291,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",eval.asm,"JR	Z,ARR1D"
5178,5178,5087,2335,2293,fd 66 ff,fd 66 ff,"ld h,(iy-$01)","ld h,(iy-$01)","ld h,(iy-$00)",eval.asm,"LD	H,(IY-1)"
5179,5179,5088,2338,2296,fd 6e fe,fd 6e fe,"ld l,(iy-$02)","ld l,(iy-$02)","ld l,(iy-$00)",eval.asm,"LD	L,(IY-2)"
5180,5180,5089,233b,2299,d5,d5,push de,push de,push de,eval.asm,ARR1D:          PUSH	DE
5181,5181,5090,233c,229a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5182,5182,5091,233d,229b,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,eval.asm,CALL	X14OR5
5183,5183,5092,2340,229e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5184,5184,5093,2341,229f,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5185,5185,5094,2342,22a0,dd 46 ff,dd 46 ff,"ld b,(ix-$01)","ld b,(ix-$01)","ld b,(ix-$00)",eval.asm,"LD	B,(IX-1)"
5186,5186,5095,2345,22a3,dd 4e fe,dd 4e fe,"ld c,(ix-$02)","ld c,(ix-$02)","ld c,(ix-$00)",eval.asm,"LD	C,(IX-2)"
5187,5187,5096,2348,22a6,c5,c5,push bc,push bc,push bc,eval.asm,OUTER:          PUSH	BC		;1
5188,5188,5097,2349,22a7,d5,d5,push de,push de,push de,eval.asm,PUSH	DE		;2
5189,5189,5098,234a,22a8,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL		;3
5190,5190,5099,234b,22a9,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX		;4
5191,5191,5100,234d,22ab,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY		;5
5192,5192,5101,234f,22ad,50,50,"ld d,b","ld d,b","ld d,b",eval.asm,"LD	D,B"
5193,5193,5102,2350,22ae,59,59,"ld e,c","ld e,c","ld e,c",eval.asm,"LD	E,C"
5194,5194,5103,2351,22af,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5195,5195,5104,2352,22b0,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,eval.asm,CALL	ZERO		;Zero accumulator
5196,5196,5105,2355,22b3,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5197,5197,5106,2356,22b4,d5,d5,push de,push de,push de,eval.asm,INNER:          PUSH	DE		;6
5198,5198,5107,2357,22b5,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC		;Save accumulator
5199,5199,5108,2358,22b6,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5200,5200,5109,2359,22b7,d9,d9,exx,exx,exx,eval.asm,EXX
5201,5201,5110,235a,22b8,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5202,5202,5111,235b,22b9,d9,d9,exx,exx,exx,eval.asm,EXX
5203,5203,5112,235c,22ba,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,eval.asm,CALL	LOADN		;Load from (IX)
5204,5204,5113,235f,22bd,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
5205,5205,5114,2361,22bf,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",eval.asm,"EX	(SP),IY"
5206,5206,5115,2363,22c1,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5207,5207,5116,2365,22c3,cd 6b 1a,cd c9 19,call $1a6b,call $19c9,call $0000,eval.asm,CALL	DLOADN		;Load from (IY)
5208,5208,5117,2368,22c6,dd e5,dd e5,push ix,push ix,push ix,eval.asm,PUSH	IX
5209,5209,5118,236a,22c8,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",eval.asm,"EX	(SP),IY"
5210,5210,5119,236c,22ca,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX
5211,5211,5120,236e,22cc,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5212,5212,5121,236f,22cd,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",eval.asm,"LD	A,10"
5213,5213,5122,2371,22cf,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;Multiply
5214,5214,5123,2374,22d2,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
5215,5215,5124,2377,22d5,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5216,5216,5125,2378,22d6,d9,d9,exx,exx,exx,eval.asm,EXX			;Restore accumulator
5217,5217,5126,2379,22d7,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5218,5218,5127,237a,22d8,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5219,5219,5128,237b,22d9,d9,d9,exx,exx,exx,eval.asm,EXX
5220,5220,5129,237c,22da,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5221,5221,5130,237d,22db,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5222,5222,5131,237e,22dc,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5223,5223,5132,237f,22dd,79,79,"ld a,c","ld a,c","ld a,c",eval.asm,"LD	A,C"
5224,5224,5133,2380,22de,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5225,5225,5134,2381,22df,47,47,"ld b,a","ld b,a","ld b,a",eval.asm,"LD	B,A"
5226,5226,5135,2382,22e0,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5227,5227,5136,2383,22e1,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5228,5228,5137,2384,22e2,3e 0b,3e 0b,"ld a,$0b","ld a,$0b","ld a,$00",eval.asm,"LD	A,11"
5229,5229,5138,2386,22e4,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,eval.asm,CALL	FPP		;Accumulate
5230,5230,5139,2389,22e7,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",eval.asm,"JP	C,ERROR_"
5231,5231,5140,238c,22ea,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5232,5232,5141,238d,22eb,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE		;5
5233,5233,5142,238e,22ec,d9,d9,exx,exx,exx,eval.asm,EXX
5234,5234,5143,238f,22ed,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
5235,5235,5144,2390,22ee,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5236,5236,5145,2392,22f0,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
5237,5237,5146,2394,22f2,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5238,5238,5147,2395,22f3,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5239,5239,5148,2396,22f4,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",eval.asm,"EX	(SP),HL"
5240,5240,5149,2397,22f5,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5241,5241,5150,2398,22f6,fd 19,fd 19,"add iy,de","add iy,de","add iy,de",eval.asm,"ADD	IY,DE"
5242,5242,5151,239a,22f8,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5243,5243,5152,239b,22f9,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",eval.asm,"EX	(SP),HL"
5244,5244,5153,239c,22fa,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
5245,5245,5154,239d,22fb,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5246,5246,5155,239e,22fc,d9,d9,exx,exx,exx,eval.asm,EXX
5247,5247,5156,239f,22fd,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE		;Inner loop counter
5248,5248,5157,23a0,22fe,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
5249,5249,5158,23a1,22ff,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
5250,5250,5159,23a2,2300,20 b2,20 b2,"jr nz,$-$4c","jr nz,$-$4c","jr nz,$-$00",eval.asm,"JR	NZ,INNER"
5251,5251,5160,23a4,2302,14,14,inc d,inc d,inc d,eval.asm,INC	D
5252,5252,5161,23a5,2303,15,15,dec d,dec d,dec d,eval.asm,DEC	D
5253,5253,5162,23a6,2304,20 ae,20 ae,"jr nz,$-$50","jr nz,$-$50","jr nz,$-$00",eval.asm,"JR	NZ,INNER"
5254,5254,5163,23a8,2306,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY		;4
5255,5255,5164,23aa,2308,dd e1,dd e1,pop ix,pop ix,pop ix,eval.asm,POP	IX		;3
5256,5256,5165,23ac,230a,d9,d9,exx,exx,exx,eval.asm,EXX
5257,5257,5166,23ad,230b,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5258,5258,5167,23ae,230c,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5259,5259,5168,23af,230d,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5260,5260,5169,23b0,230e,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5261,5261,5170,23b1,230f,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
5262,5262,5171,23b3,2311,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5263,5263,5172,23b4,2312,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
5264,5264,5173,23b5,2313,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5265,5265,5174,23b6,2314,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5266,5266,5175,23b7,2315,d9,d9,exx,exx,exx,eval.asm,EXX
5267,5267,5176,23b8,2316,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5268,5268,5177,23b9,2317,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5269,5269,5178,23ba,2318,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,eval.asm,CALL	STOREN
5270,5270,5179,23bd,231b,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5271,5271,5180,23be,231c,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5272,5272,5181,23bf,231d,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
5273,5273,5182,23c0,231e,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5274,5274,5183,23c2,2320,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",eval.asm,"ADD	IX,BC"
5275,5275,5184,23c4,2322,d9,d9,exx,exx,exx,eval.asm,EXX
5276,5276,5185,23c5,2323,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5277,5277,5186,23c6,2324,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5278,5278,5187,23c7,2325,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5279,5279,5188,23c8,2326,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5280,5280,5189,23c9,2327,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",eval.asm,"EX	(SP),IX"
5281,5281,5190,23cb,2329,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5282,5282,5191,23cc,232a,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
5283,5283,5192,23cd,232b,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5284,5284,5193,23ce,232c,08,08,"ex af,af'","ex af,af'","ex af,af'",eval.asm,"EX	AF,AF'"
5285,5285,5194,23cf,232d,d9,d9,exx,exx,exx,eval.asm,EXX
5286,5286,5195,23d0,232e,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL		;2
5287,5287,5196,23d1,232f,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE		;1 Outer loop counter
5288,5288,5197,23d2,2330,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC		;0
5289,5289,5198,23d3,2331,1b,1b,dec de,dec de,dec de,eval.asm,DEC	DE		;Count outer loops
5290,5290,5199,23d4,2332,c5,c5,push bc,push bc,push bc,eval.asm,PUSH	BC
5291,5291,5200,23d5,2333,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5292,5292,5201,23d6,2334,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5293,5293,5202,23d7,2335,4f,4f,"ld c,a","ld c,a","ld c,a",eval.asm,"LD	C,A"
5294,5294,5203,23d8,2336,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",eval.asm,"LD	B,0"
5295,5295,5204,23da,2338,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",eval.asm,"ADD	IY,BC"
5296,5296,5205,23dc,233a,f5,f5,push af,push af,push af,eval.asm,PUSH	AF
5297,5297,5206,23dd,233b,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5298,5298,5207,23de,233c,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,eval.asm,CALL	X14OR5
5299,5299,5208,23e1,233f,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5300,5300,5209,23e2,2340,cd 14 24,cd 72 23,call $2414,call $2372,call $0000,eval.asm,CALL	MOD16
5301,5301,5210,23e5,2343,f1,f1,pop af,pop af,pop af,eval.asm,POP	AF
5302,5302,5211,23e6,2344,b7,b7,or a,or a,or a,eval.asm,OR	A
5303,5303,5212,23e7,2345,01 00 00,01 00 00,"ld bc,$0000","ld bc,$0000","ld bc,$0000",eval.asm,"LD	BC,0"
5304,5304,5213,23ea,2348,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"SBC	HL,BC"
5305,5305,5214,23ec,234a,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5306,5306,5215,23ed,234b,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5307,5307,5216,23ee,234c,c1,c1,pop bc,pop bc,pop bc,eval.asm,POP	BC
5308,5308,5217,23ef,234d,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",eval.asm,"JR	NZ,MODNZ"
5309,5309,5218,23f1,234f,d5,d5,push de,push de,push de,eval.asm,PUSH	DE
5310,5310,5219,23f2,2350,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5311,5311,5220,23f3,2351,eb,eb,"ex de,hl","ex de,hl","ex de,hl",eval.asm,"EX	DE,HL"
5312,5312,5221,23f4,2352,fd e5,fd e5,push iy,push iy,push iy,eval.asm,PUSH	IY
5313,5313,5222,23f6,2354,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5314,5314,5223,23f7,2355,b7,b7,or a,or a,or a,eval.asm,OR	A
5315,5315,5224,23f8,2356,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",eval.asm,"SBC	HL,DE"
5316,5316,5225,23fa,2358,e5,e5,push hl,push hl,push hl,eval.asm,PUSH	HL
5317,5317,5226,23fb,2359,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
5318,5318,5227,23fd,235b,50,50,"ld d,b","ld d,b","ld d,b",eval.asm,"LD	D,B"
5319,5319,5228,23fe,235c,59,59,"ld e,c","ld e,c","ld e,c",eval.asm,"LD	E,C"
5320,5320,5229,23ff,235d,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,eval.asm,CALL	X14OR5
5321,5321,5230,2402,2360,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",eval.asm,"ADD	IX,DE"
5322,5322,5231,2404,2362,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5323,5323,5232,2405,2363,d1,d1,pop de,pop de,pop de,eval.asm,POP	DE
5324,5324,5233,2406,2364,1c,1c,inc e,inc e,inc e,eval.asm,INC	E
5325,5325,5234,2407,2365,1d,1d,dec e,dec e,dec e,eval.asm,DEC	E
5326,5326,5235,2408,2366,c2 48 23,c2 a6 22,"jp nz,$2348","jp nz,$22a6","jp nz,$0000",eval.asm,"JP	NZ,OUTER"
5327,5327,5236,240b,2369,14,14,inc d,inc d,inc d,eval.asm,INC	D
5328,5328,5237,240c,236a,15,15,dec d,dec d,dec d,eval.asm,DEC	D
5329,5329,5238,240d,236b,c2 48 23,c2 a6 22,"jp nz,$2348","jp nz,$22a6","jp nz,$0000",eval.asm,"JP	NZ,OUTER"
5330,5330,5239,2410,236e,e1,e1,pop hl,pop hl,pop hl,eval.asm,POP	HL
5331,5331,5240,2411,236f,fd e1,fd e1,pop iy,pop iy,pop iy,eval.asm,POP	IY
5332,5332,5241,2413,2371,c9,c9,ret,ret,ret,eval.asm,RET
5333,5333,5242,2414,2372,af,af,xor a,xor a,xor a,eval.asm,MOD16:          XOR	A
5334,5334,5243,2415,2373,67,67,"ld h,a","ld h,a","ld h,a",eval.asm,"LD	H,A"
5335,5335,5244,2416,2374,6f,6f,"ld l,a","ld l,a","ld l,a",eval.asm,"LD	L,A"
5336,5336,5245,2417,2375,3e 11,3e 11,"ld a,$11","ld a,$11","ld a,$00",eval.asm,"LD	A,17"
5337,5337,5246,2419,2377,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",eval.asm,"MOD160:         SBC	HL,BC"
5338,5338,5247,241b,2379,30 01,30 01,"jr nc,$+$03","jr nc,$+$03","jr nc,$+$00",eval.asm,"JR	NC,MOD161"
5339,5339,5248,241d,237b,09,09,"add hl,bc","add hl,bc","add hl,bc",eval.asm,"ADD	HL,BC"
5340,5340,5249,241e,237c,3f,3f,ccf,ccf,ccf,eval.asm,MOD161:         CCF
5341,5341,5250,241f,237d,cb 13,cb 13,rl e,rl e,rl e,eval.asm,RL	E
5342,5342,5251,2421,237f,cb 12,cb 12,rl d,rl d,rl d,eval.asm,RL	D
5343,5343,5252,2423,2381,3d,3d,dec a,dec a,dec a,eval.asm,DEC	A
5344,5344,5253,2424,2382,c8,c8,ret z,ret z,ret z,eval.asm,RET	Z
5345,5345,5254,2425,2383,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",eval.asm,"ADC	HL,HL"
5346,5346,5255,2427,2385,18 f0,18 f0,jr $-$0e,jr $-$0e,jr $-$00,eval.asm,JR	MOD160
5347,5347,,2429,,fb,,ei,,ei,,
5348,5348,,242a,,30 0f,,"jr nc,$+$11",,"jr nc,$+$00",,
5349,5349,,242c,,31 05 31,,"ld sp,$3105",,"ld sp,$0000",,
5350,5350,,242f,,64,,"ld h,h",,"ld h,h",,
5351,5351,,2430,,26 64,,"ld h,$64",,"ld h,$00",,
5352,5352,,2432,,26 64,,"ld h,$64",,"ld h,$00",,
5353,5353,,2434,,26 64,,"ld h,$64",,"ld h,$00",,
5354,5354,,2436,,26 aa,,"ld h,$aa",,"ld h,$00",,
5355,5355,,2438,,2e db,,"ld l,$db",,"ld l,$00",,
5356,5356,,243a,,2d,,dec l,,dec l,,
5357,5357,,243b,,64,,"ld h,h",,"ld h,h",,
5358,5358,,243c,,26 64,,"ld h,$64",,"ld h,$00",,
5359,5359,,243e,,26 1d,,"ld h,$1d",,"ld h,$00",,
5360,5360,,2440,,25,,dec h,,dec h,,
5361,5361,,2441,,64,,"ld h,h",,"ld h,h",,
5362,5362,,2442,,26 1d,,"ld h,$1d",,"ld h,$00",,
5363,5363,,2444,,25,,dec h,,dec h,,
5364,5364,,2445,,c7,,rst $00,,rst $00,,
5365,5365,,2446,,2e 85,,"ld l,$85",,"ld l,$00",,
5366,5366,,2448,,2f,,cpl,,cpl,,
5367,5367,,2449,,99,,"sbc a,c",,"sbc a,c",,
5368,5368,,244a,,2f,,cpl,,cpl,,
5369,5369,,244b,,a7,,and a,,and a,,
5370,5370,,244c,,2f,,cpl,,cpl,,
5371,5371,,244d,,c6 2f,,"add a,$2f",,"add a,$00",,
5372,5372,,244f,,d8,,ret c,,ret c,,
5373,5373,,2450,,2f,,cpl,,cpl,,
5374,5374,,2451,,b5,,or l,,or l,,
5375,5375,,2452,,0e 57,,"ld c,$57",,"ld c,$00",,
5376,5376,,2454,,30 90,,"jr nc,$-$6e",,"jr nc,$-$00",,
5377,5377,,2456,,30 d0,,"jr nc,$-$2e",,"jr nc,$-$00",,
5378,5378,,2458,,24,,inc h,,inc h,,
5379,5379,,2459,,1a,,"ld a,(de)",,"ld a,(de)",,
5380,5380,,245a,,2f,,cpl,,cpl,,
5381,5381,,245b,,4f,,"ld c,a",,"ld c,a",,
5382,5382,,245c,,30 f9,,"jr nc,$-$05",,"jr nc,$-$00",,
5383,5383,,245e,,0e f9,,"ld c,$f9",,"ld c,$00",,
5384,5384,,2460,,2e b5,,"ld l,$b5",,"ld l,$00",,
5385,5385,,2462,,25,,dec h,,dec h,,
5386,5386,,2463,,b5,,or l,,or l,,
5387,5387,,2464,,25,,dec h,,dec h,,
5388,5388,,2465,,c2 26 00,,"jp nz,$0026",,"jp nz,$0000",,
5389,5389,,2468,,10 57,,djnz $+$59,,djnz $+$00,,
5390,5390,,246a,,25,,dec h,,dec h,,
5391,5391,,246b,,01 2c 87,,"ld bc,$872c",,"ld bc,$0000",,
5392,5392,,246e,,0e 98,,"ld c,$98",,"ld c,$00",,
5393,5393,,2470,,29,,"add hl,hl",,"add hl,hl",,
5394,5394,,2471,,4f,,"ld c,a",,"ld c,a",,
5395,5395,,2472,,29,,"add hl,hl",,"add hl,hl",,
5396,5396,,2473,,38 29,,"jr c,$+$2b",,"jr c,$+$00",,
5397,5397,,2475,,51,,"ld d,c",,"ld d,c",,
5398,5398,,2476,,0f,,rrca,,rrca,,
5399,5399,,2477,,4d,,"ld c,l",,"ld c,l",,
5400,5400,,2478,,2d,,dec l,,dec l,,
5401,5401,,2479,,66,,"ld h,(hl)",,"ld h,(hl)",,
5402,5402,,247a,,2c,,inc l,,inc l,,
5403,5403,,247b,,25,,dec h,,dec h,,
5404,5404,,247c,,26 97,,"ld h,$97",,"ld h,$00",,
5405,5405,,247e,,2b,,dec hl,,dec hl,,
5406,5406,,247f,,e9,,jp (hl),,jp (hl),,
5407,5407,,2480,,0e fc,,"ld c,$fc",,"ld c,$00",,
5408,5408,,2482,,0f,,rrca,,rrca,,
5409,5409,,2483,,e5,,push hl,,push hl,,
5410,5410,,2484,,29,,"add hl,hl",,"add hl,hl",,
5411,5411,,2485,,be,,cp (hl),,cp (hl),,
5412,5412,,2486,,28 20,,"jr z,$+$22",,"jr z,$+$00",,
5413,5413,,2488,,30 08,,"jr nc,$+$0a",,"jr nc,$+$00",,
5414,5414,,248a,,10 ca,,djnz $-$34,,djnz $-$00,,
5415,5415,,248c,,27,,daa,,daa,,
5416,5416,,248d,,6b,,"ld l,e",,"ld l,e",,
5417,5417,,248e,,2a 04 2d,,"ld hl,($2d04)",,"ld hl,($0000)",,
5418,5418,,2491,,b5,,or l,,or l,,
5419,5419,,2492,,25,,dec h,,dec h,,
5420,5420,,2493,,69,,"ld l,c",,"ld l,c",,
5421,5421,,2494,,29,,"add hl,hl",,"add hl,hl",,
5422,5422,,2495,,15,,dec d,,dec d,,
5423,5423,,2496,,2f,,cpl,,cpl,,
5424,5424,,2497,,40 2f,,cpl.sis,,cpl.sis,,
5425,5425,,2499,,5a,,"ld e,d",,"ld e,d",,
5426,5426,,249a,,29,,"add hl,hl",,"add hl,hl",,
5427,5427,,249b,,cb 24,,sla h,,sla h,,
5428,5428,,249d,,02,,"ld (bc),a",,"ld (bc),a",,
5429,5429,,249e,,2f,,cpl,,cpl,,
5430,5430,,249f,,11 0f 07,,"ld de,$070f",,"ld de,$0000",,
5431,5431,,24a2,,30 71,,"jr nc,$+$73",,"jr nc,$+$00",,
5432,5432,,24a4,,29,,"add hl,hl",,"add hl,hl",,
5433,5433,,24a5,,fd 2f 8c,,"ld (iy-$74),hl",,"ld (iy-$00),hl",,
5434,5434,,24a8,,25,,dec h,,dec h,,
5435,5435,,24a9,,b5,,or l,,or l,,
5436,5436,,24aa,,25,,dec h,,dec h,,
5437,5437,,24ab,,9f,,"sbc a,a",,"sbc a,a",,
5438,5438,,24ac,,0f,,rrca,,rrca,,
5439,5439,,24ad,,cb 0f,,rrc a,,rrc a,,
5440,5440,,24af,,04,,inc b,,inc b,,
5441,5441,,24b0,,10 be,,djnz $-$40,,djnz $-$00,,
5442,5442,,24b2,,10 00,,djnz $+$02,,djnz $+$00,,
5443,5443,,24b4,,0f,,rrca,,rrca,,
5444,5444,,24b5,,b0,,or b,,or b,,
5445,5445,,24b6,,0a,,"ld a,(bc)",,"ld a,(bc)",,
5446,5446,,24b7,,3d,,dec a,,dec a,,
5447,5447,,24b8,,10 e2,,djnz $-$1c,,djnz $-$00,,
5448,5448,,24ba,,25,,dec h,,dec h,,
5449,5449,,24bb,,95,,sub l,,sub l,,
5450,5450,,24bc,,11 95 11,,"ld de,$1195",,"ld de,$0000",,
5451,5451,,24bf,,fd 10,,trap,,trap,,
5452,5452,,24c1,,64,,"ld h,h",,"ld h,h",,
5453,5453,,24c2,,26 b5,,"ld h,$b5",,"ld h,$00",,
5454,5454,,24c4,,25,,dec h,,dec h,,
5455,5455,,24c5,,21 32 64,,"ld hl,$6432",,"ld hl,$0000",,
5456,5456,,24c8,,26 a7,,"ld h,$a7",,"ld h,$00",,
5457,5457,5366,24ca,2428,31 cd ba,31 cd 18,"ld sp,$bacd","ld sp,$18cd","ld sp,$0000",exec.asm,
5458,5458,5367,24cd,242b,35,35,dec (hl),dec (hl),dec (hl),exec.asm,
5459,5459,5368,24ce,242c,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",exec.asm,"JR	Z,RUN0"
5460,5460,5369,24d0,242e,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CHAIN:          CALL	EXPRS
5461,5461,5370,24d3,2431,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
5462,5462,5371,24d5,2433,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
5463,5463,5372,24d6,2434,ed 7b e2 55,ed 7b e2 54,"ld sp,($55e2)","ld sp,($54e2)","ld sp,($0000)",exec.asm,"CHAIN0:         LD	SP,(HIMEM)"
5464,5464,5373,24da,2438,cd 84 40,cd e2 3f,call $4084,call $3fe2,call $0000,exec.asm,CALL	LOAD0
5465,5465,5374,24dd,243b,ed 7b e2 55,ed 7b e2 54,"ld sp,($55e2)","ld sp,($54e2)","ld sp,($0000)",exec.asm,"RUN0:           LD	SP,(HIMEM)	;PREPARE FOR RUN"
5466,5466,5375,24e1,243f,dd 21 f6 55,dd 21 f6 54,"ld ix,$55f6","ld ix,$54f6","ld ix,$0000",exec.asm,"LD	IX,RANDOM"
5467,5467,5376,24e5,2443,ed 5f,ed 5f,"ld a,r","ld a,r","ld a,r",exec.asm,"RAND:           LD	A,R		;RANDOMISE (CARE!)"
5468,5468,5377,24e7,2445,28 fc,28 fc,"jr z,$-$02","jr z,$-$02","jr z,$-$00",exec.asm,"JR	Z,RAND"
5469,5469,5378,24e9,2447,07,07,rlca,rlca,rlca,exec.asm,RLCA
5470,5470,5379,24ea,2448,07,07,rlca,rlca,rlca,exec.asm,RLCA
5471,5471,5380,24eb,2449,dd 77 03,dd 77 03,"ld (ix+$03),a","ld (ix+$03),a","ld (ix+$00),a",exec.asm,"LD	(IX+3),A"
5472,5472,5381,24ee,244c,9f,9f,"sbc a,a","sbc a,a","sbc a,a",exec.asm,"SBC	A,A"
5473,5473,5382,24ef,244d,dd 77 04,dd 77 04,"ld (ix+$04),a","ld (ix+$04),a","ld (ix+$00),a",exec.asm,"LD	(IX+4),A"
5474,5474,5383,24f2,2450,cd c7 40,cd 25 40,call $40c7,call $4025,call $0000,exec.asm,CALL	CLEAR
5475,5475,5384,24f5,2453,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
5476,5476,5385,24f8,2456,22 ea 55,22 ea 54,"ld ($55ea),hl","ld ($54ea),hl","ld ($0000),hl",exec.asm,"LD	(ERRTRP),HL"
5477,5477,5386,24fb,2459,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",exec.asm,"LD	HL,(PAGE_)"
5478,5478,5387,24fe,245c,cd 7d 36,cd db 35,call $367d,call $35db,call $0000,exec.asm,"CALL	DSRCH		;LOOK FOR ""DATA"""
5479,5479,5388,2501,245f,22 f0 55,22 f0 54,"ld ($55f0),hl","ld ($54f0),hl","ld ($0000),hl",exec.asm,"LD	(DATPTR),HL	;SET DATA POINTER"
5480,5480,5389,2504,2462,fd 2a dc 55,fd 2a dc 54,"ld iy,($55dc)","ld iy,($54dc)","ld iy,($0000)",exec.asm,"LD	IY,(PAGE_)"
5481,5481,5390,2508,2466,cd 5f 25,cd bd 24,call $255f,call $24bd,call $0000,exec.asm,XEQ0:           CALL	NEWLIN
5482,5482,5391,250b,2469,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
5483,5483,5392,250e,246c,fe 8b,fe 8b,cp $8b,cp $8b,cp $00,exec.asm,CP	TELSE
5484,5484,5393,2510,246e,ca b4 2d,ca 12 2d,"jp z,$2db4","jp z,$2d12","jp z,$0000",exec.asm,"JP	Z,MELSE		;ELSE"
5485,5485,5394,2513,2471,fe c9,fe c9,cp $c9,cp $c9,cp $00,exec.asm,CP	TWHEN
5486,5486,5395,2515,2473,ca c7 2d,ca 25 2d,"jp z,$2dc7","jp z,$2d25","jp z,$0000",exec.asm,"JP	Z,WHEN		;WHEN"
5487,5487,5396,2518,2476,fe cc,fe cc,cp $cc,cp $cc,cp $00,exec.asm,CP	TOTHERWISE
5488,5488,5397,251a,2478,ca c7 2d,ca 25 2d,"jp z,$2dc7","jp z,$2d25","jp z,$0000",exec.asm,"JP	Z,WHEN"
5489,5489,5398,251d,247b,fd 22 f4 55,fd 22 f4 54,"ld ($55f4),iy","ld ($54f4),iy","ld ($0000),iy",exec.asm,"XEQ:            LD	(CURLIN),IY	;ERROR POINTER"
5490,5490,5399,2521,247f,cd 35 06,cd 15 06,call $0635,call $0615,call $0000,exec.asm,CALL	TRAP		;CHECK KEYBOARD
5491,5491,5400,2524,2482,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,XEQ1:           CALL	NXT
5492,5492,5401,2527,2485,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
5493,5493,5402,2529,2487,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,exec.asm,CP	':'		;SEPARATOR
5494,5494,5403,252b,2489,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",exec.asm,"JR	Z,XEQ1"
5495,5495,5404,252d,248b,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
5496,5496,5405,252f,248d,28 d7,28 d7,"jr z,$-$27","jr z,$-$27","jr z,$-$00",exec.asm,"JR	Z,XEQ0		;NEW PROGRAM LINE"
5497,5497,5406,2531,248f,fe 91,fe 98,cp $91,cp $98,cp $00,exec.asm,CP	TLAST
5498,5498,5407,2533,2491,ea 17 26,ea 75 25,"jp pe,$2617","jp pe,$2575","jp pe,$0000",exec.asm,"JP	PE,LET0		;IMPLIED LET"
5499,5499,5408,2536,2494,d6 c0,d6 c7,sub $c0,sub $c7,sub $00,exec.asm,SUB	TCMD
5500,5500,5409,2538,2496,fa 9a 25,fa f8 24,"jp m,$259a","jp m,$24f8","jp m,$0000",exec.asm,"JP	M,EXTRAS"
5501,5501,5410,253b,2499,87,87,"add a,a","add a,a","add a,a",exec.asm,"ADD	A,A"
5502,5502,5411,253c,249a,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
5503,5503,5412,253d,249b,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0"
5504,5504,5413,253f,249d,21 29 24,21 87 23,"ld hl,$2429","ld hl,$2387","ld hl,$0000",exec.asm,"LD	HL,CMDTAB"
5505,5505,5414,2542,24a0,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
5506,5506,5415,2543,24a1,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)		;TABLE ENTRY"
5507,5507,5416,2544,24a2,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5508,5508,5417,2545,24a3,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",exec.asm,"LD	H,(HL)"
5509,5509,5418,2546,24a4,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A"
5510,5510,5419,2547,24a5,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5511,5511,5420,254a,24a8,e9,e9,jp (hl),jp (hl),jp (hl),exec.asm,JP	(HL)		;EXECUTE STATEMENT
5512,5512,5421,254b,24a9,fd e5,fd e5,push iy,push iy,push iy,exec.asm,ENDIM:          PUSH	IY
5513,5513,5422,254d,24ab,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5514,5514,5423,254e,24ac,ed 4b dc 55,ed 4b dc 54,"ld bc,($55dc)","ld bc,($54dc)","ld bc,($0000)",exec.asm,"LD	BC,(PAGE_)"
5515,5515,5424,2552,24b0,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC		;IMMEDIATE MODE ?"
5516,5516,5425,2554,24b2,da 34 38,da 92 37,"jp c,$3834","jp c,$3792","jp c,$0000",exec.asm,"JP	C,CLOOP"
5517,5517,5426,2557,24b5,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",exec.asm,"END:            LD	E,0"
5518,5518,5427,2559,24b7,cd 55 06,cd 35 06,call $0655,call $0635,call $0000,exec.asm,CALL	OSSHUT		;CLOSE ALL FILES
5519,5519,5428,255c,24ba,c3 33 38,c3 91 37,jp $3833,jp $3791,jp $0000,exec.asm,"JP	WARM		;""Ready"""
5520,5520,5429,255f,24bd,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"NEWLIN:         LD	A,(IY+0)	;A=LINE LENGTH"
5521,5521,5430,2562,24c0,01 03 00,01 03 00,"ld bc,$0003","ld bc,$0003","ld bc,$0000",exec.asm,"LD	BC,3"
5522,5522,5431,2565,24c3,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",exec.asm,"ADD	IY,BC"
5523,5523,5432,2567,24c5,b7,b7,or a,or a,or a,exec.asm,OR	A
5524,5524,5433,2568,24c6,28 e1,28 e1,"jr z,$-$1d","jr z,$-$1d","jr z,$-$00",exec.asm,"JR	Z,ENDIM		;LENGTH=0, EXITex"
5525,5525,5434,256a,24c8,2a e6 55,2a e6 54,"ld hl,($55e6)","ld hl,($54e6)","ld hl,($0000)",exec.asm,"LD	HL,(TRACEN)"
5526,5526,5435,256d,24cb,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
5527,5527,5436,256e,24cc,b5,b5,or l,or l,or l,exec.asm,OR	L
5528,5528,5437,256f,24cd,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
5529,5529,5438,2570,24ce,fd 56 ff,fd 56 ff,"ld d,(iy-$01)","ld d,(iy-$01)","ld d,(iy-$00)",exec.asm,"LD	D,(IY-1)	;DE = LINE NUMBER"
5530,5530,5439,2573,24d1,fd 5e fe,fd 5e fe,"ld e,(iy-$02)","ld e,(iy-$02)","ld e,(iy-$00)",exec.asm,"LD	E,(IY-2)"
5531,5531,5440,2576,24d4,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
5532,5532,5441,2578,24d6,d8,d8,ret c,ret c,ret c,exec.asm,RET	C
5533,5533,5442,2579,24d7,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
5534,5534,5443,257a,24d8,3e 5b,3e 5b,"ld a,$5b","ld a,$5b","ld a,$00",exec.asm,"LD	A,'['		;TRACE"
5535,5535,5444,257c,24da,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR
5536,5536,5445,257f,24dd,cd 16 42,cd 74 41,call $4216,call $4174,call $0000,exec.asm,CALL	PBCDL
5537,5537,5446,2582,24e0,3e 5d,3e 5d,"ld a,$5d","ld a,$5d","ld a,$00",exec.asm,"LD	A,']'"
5538,5538,5447,2584,24e2,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR
5539,5539,5448,2587,24e5,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",exec.asm,"LD	A,' '"
5540,5540,5449,2589,24e7,c3 86 41,c3 e4 40,jp $4186,jp $40e4,jp $0000,exec.asm,JP	OUTCHR
5541,5541,5450,258c,24ea,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CLI:            CALL	EXPRS
5542,5542,5451,258f,24ed,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
5543,5543,5452,2591,24ef,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
5544,5544,5453,2592,24f0,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
5545,5545,5454,2595,24f3,cd 37 0a,cd 95 09,call $0a37,call $0995,call $0000,exec.asm,CALL	OSCLI
5546,5546,5455,2598,24f6,18 83,18 83,jr $-$7b,jr $-$7b,jr $-$00,exec.asm,JR	XEQ
5547,5547,5456,259a,24f8,fe cb,fe c4,cp $cb,cp $c4,cp $00,exec.asm,EXTRAS:         CP	TELSE-TCMD
5548,5548,5457,259c,24fa,28 17,28 17,"jr z,$+$19","jr z,$+$19","jr z,$+$00",exec.asm,"JR	Z,REM		;ELSE"
5549,5549,5458,259e,24fc,fe c5,fe be,cp $c5,cp $be,cp $00,exec.asm,CP	TERROR-TCMD
5550,5550,5459,25a0,24fe,28 21,28 21,"jr z,$+$23","jr z,$+$23","jr z,$+$00",exec.asm,"JR	Z,THROW		;ERROR"
5551,5551,5460,25a2,2500,fe c6,fe bf,cp $c6,cp $bf,cp $00,exec.asm,CP	TLINE-TCMD
5552,5552,5461,25a4,2502,ca 89 0f,ca e7 0e,"jp z,$0f89","jp z,$0ee7","jp z,$0000",exec.asm,"JP	Z,LINE		;LINE"
5553,5553,5462,25a7,2505,fe c7,fe c0,cp $c7,cp $c0,cp $00,exec.asm,CP	TOFF-TCMD
5554,5554,5463,25a9,2507,ca 72 0f,ca d0 0e,"jp z,$0f72","jp z,$0ed0","jp z,$0000",exec.asm,"JP	Z,CSROFF	;OFF"
5555,5555,5464,25ac,250a,c3 64 26,c3 c2 25,jp $2664,jp $25c2,jp $0000,exec.asm,JP	SYNTAX
5556,5556,5465,25af,250d,fd e5,fd e5,push iy,push iy,push iy,exec.asm,EXT:            PUSH	IY
5557,5557,5466,25b1,250f,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5558,5558,5467,25b2,2510,cd 37 0a,cd 95 09,call $0a37,call $0995,call $0000,exec.asm,CALL	OSCLI
5559,5559,5468,25b5,2513,fd e5,fd e5,push iy,push iy,push iy,exec.asm,REM:            PUSH	IY
5560,5560,5469,25b7,2515,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5561,5561,5470,25b8,2516,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
5562,5562,5471,25ba,2518,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
5563,5563,5472,25bb,2519,ed b1,ed b1,cpir,cpir,cpir,exec.asm,CPIR			;FIND LINE END
5564,5564,5473,25bd,251b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5565,5565,5474,25be,251c,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
5566,5566,5475,25c0,251e,c3 08 25,c3 66 24,jp $2508,jp $2466,jp $0000,exec.asm,JP	XEQ0
5567,5567,5476,25c3,2521,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,THROW:          CALL	EXPRI
5568,5568,5477,25c6,2524,d9,d9,exx,exx,exx,exec.asm,EXX
5569,5569,5478,25c7,2525,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5570,5570,5479,25c8,2526,d9,d9,exx,exx,exx,exec.asm,EXX
5571,5571,5480,25c9,2527,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,exec.asm,CALL	COMMA
5572,5572,5481,25cc,252a,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
5573,5573,5482,25cf,252d,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5574,5574,5483,25d0,252e,af,af,xor a,xor a,xor a,exec.asm,XOR	A
5575,5575,5484,25d1,252f,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
5576,5576,5485,25d2,2530,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
5577,5577,5486,25d3,2531,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
5578,5578,5487,25d6,2534,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",exec.asm,"LD	DE,BUFFER"
5579,5579,5488,25d9,2537,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5580,5580,5489,25da,2538,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",exec.asm,"LD	BC,256"
5581,5581,5490,25dd,253b,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
5582,5582,5491,25df,253d,c3 d9 3f,c3 37 3f,jp $3fd9,jp $3f37,jp $0000,exec.asm,JP	EXTERR
5583,5583,5492,25e2,2540,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,SWAPex:           CALL	GETVAR
5584,5584,5493,25e5,2543,20 0b,20 0b,"jr nz,$+$0d","jr nz,$+$0d","jr nz,$+$00",exec.asm,"JR	NZ,SWAPNZ"
5585,5585,5494,25e7,2545,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
5586,5586,5495,25e8,2546,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5587,5587,5496,25e9,2547,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,exec.asm,CALL	COMMA
5588,5588,5497,25ec,254a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5589,5589,5498,25ef,254d,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,CALL	GETVAR
5590,5590,5499,25f2,2550,20 6d,20 6d,"jr nz,$+$6f","jr nz,$+$6f","jr nz,$+$00",exec.asm,"SWAPNZ:         JR	NZ,NOSUCH"
5591,5591,5500,25f4,2552,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
5592,5592,5501,25f5,2553,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5593,5593,5502,25f6,2554,b8,b8,cp b,cp b,cp b,exec.asm,CP	B
5594,5594,5503,25f7,2555,20 74,20 74,"jr nz,$+$76","jr nz,$+$76","jr nz,$+$00",exec.asm,"JR	NZ,MISMAT"
5595,5595,5504,25f9,2557,e6 0f,e6 0f,and $0f,and $0f,and $00,exec.asm,AND	00001111B
5596,5596,5505,25fb,2559,28 70,28 70,"jr z,$+$72","jr z,$+$72","jr z,$+$00",exec.asm,"JR	Z,MISMAT"
5597,5597,5506,25fd,255b,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
5598,5598,5507,25fe,255c,e6 c0,e6 c0,and $c0,and $c0,and $00,exec.asm,AND	11000000B
5599,5599,5508,2600,255e,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",exec.asm,"JR	Z,SWAP1ex"
5600,5600,5509,2602,2560,06 02,06 02,"ld b,$02","ld b,$02","ld b,$00",exec.asm,"LD	B,2"
5601,5601,5510,2604,2562,f2 0c 26,f2 6a 25,"jp p,$260c","jp p,$256a","jp p,$0000",exec.asm,"JP	P,SWAP1ex"
5602,5602,5511,2607,2565,ea 0c 26,ea 6a 25,"jp pe,$260c","jp pe,$256a","jp pe,$0000",exec.asm,"JP	PE,SWAP1ex"
5603,5603,5512,260a,2568,06 04,06 04,"ld b,$04","ld b,$04","ld b,$00",exec.asm,"LD	B,4"
5604,5604,5513,260c,256a,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"SWAP1ex:          LD	C,(HL)"
5605,5605,5514,260d,256b,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",exec.asm,"LD	A,(DE)"
5606,5606,5515,260e,256c,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",exec.asm,"LD	(HL),A"
5607,5607,5516,260f,256d,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
5608,5608,5517,2610,256e,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
5609,5609,5518,2611,256f,13,13,inc de,inc de,inc de,exec.asm,INC	DE
5610,5610,5519,2612,2570,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5611,5611,5520,2613,2571,10 f7,10 f7,djnz $-$07,djnz $-$07,djnz $-$00,exec.asm,DJNZ	SWAP1ex
5612,5612,5521,2615,2573,18 28,18 28,jr $+$2a,jr $+$2a,jr $+$00,exec.asm,JR	XEQGO4
5613,5613,5522,2617,2575,fe 2a,fe 2a,cp $2a,cp $2a,cp $00,exec.asm,LET0:           CP	'*'
5614,5614,5523,2619,2577,28 94,28 94,"jr z,$-$6a","jr z,$-$6a","jr z,$-$00",exec.asm,"JR	Z,EXT"
5615,5615,5524,261b,2579,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,exec.asm,CP	'='
5616,5616,5525,261d,257b,28 71,28 71,"jr z,$+$73","jr z,$+$73","jr z,$+$00",exec.asm,"JR	Z,FNEND"
5617,5617,5526,261f,257d,fe 5b,fe 5b,cp $5b,cp $5b,cp $00,exec.asm,CP	'['
5618,5618,5527,2621,257f,28 52,28 52,"jr z,$+$54","jr z,$+$54","jr z,$+$00",exec.asm,"JR	Z,ASM"
5619,5619,5528,2623,2581,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
5620,5620,5529,2625,2583,cd 33 32,cd 91 31,call $3233,call $3191,call $0000,exec.asm,LET:            CALL	ASSIGN
5621,5621,5530,2628,2586,ca 1d 25,ca 7b 24,"jp z,$251d","jp z,$247b","jp z,$0000",exec.asm,"JP	Z,XEQ"
5622,5622,5531,262b,2589,38 37,38 37,"jr c,$+$39","jr c,$+$39","jr c,$+$00",exec.asm,"JR	C,SYNTAX	;""Syntax error"""
5623,5623,5532,262d,258b,f2 7f 21,f2 dd 20,"jp p,$217f","jp p,$20dd","jp p,$0000",exec.asm,"JP	P,LETARR	;Numeric array"
5624,5624,5533,2630,258e,ea 7f 21,ea dd 20,"jp pe,$217f","jp pe,$20dd","jp pe,$0000",exec.asm,"JP	PE,LETARR	;String array"
5625,5625,5534,2633,2591,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"LD	A,D		;Type"
5626,5626,5535,2634,2592,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5627,5627,5536,2635,2593,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5628,5628,5537,2636,2594,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
5629,5629,5538,2639,2597,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
5630,5630,5539,263b,2599,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5631,5631,5540,263c,259a,cd 9c 32,cd fa 31,call $329c,call $31fa,call $0000,exec.asm,CALL	MODIFS
5632,5632,5541,263f,259d,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO4:         JP	XEQ
5633,5633,5542,2642,25a0,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,GETSTR:         CALL	GETVAR
5634,5634,5543,2645,25a3,20 1a,20 1a,"jr nz,$+$1c","jr nz,$+$1c","jr nz,$+$00",exec.asm,"JR	NZ,NOSUCH"
5635,5635,5544,2647,25a5,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
5636,5636,5545,2648,25a6,e6 c0,e6 c0,and $c0,and $c0,and $00,exec.asm,AND	11000000B
5637,5637,5546,264a,25a8,f2 6d 26,f2 cb 25,"jp p,$266d","jp p,$25cb","jp p,$0000",exec.asm,"JP	P,MISMAT"
5638,5638,5547,264d,25ab,ea 6a 26,ea c8 25,"jp pe,$266a","jp pe,$25c8","jp pe,$0000",exec.asm,"JP	PE,BADUSE"
5639,5639,5548,2650,25ae,cb 40,cb 40,"bit 0,b","bit 0,b","bit 0,b",exec.asm,"BIT	0,B"
5640,5640,5549,2652,25b0,28 19,28 19,"jr z,$+$1b","jr z,$+$1b","jr z,$+$00",exec.asm,"JR	Z,MISMAT"
5641,5641,5550,2654,25b2,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5642,5642,5551,2657,25b5,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
5643,5643,5552,2659,25b7,c9,c9,ret,ret,ret,exec.asm,RET
5644,5644,5553,265a,25b8,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,VAR_:           CALL	GETVAR
5645,5645,5554,265d,25bb,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
5646,5646,5555,265e,25bc,d2 51 42,d2 af 41,"jp nc,$4251","jp nc,$41af","jp nc,$0000",exec.asm,"JP	NC,PUTVAR"
5647,5647,5556,2661,25bf,3e 1a,3e 1a,"ld a,$1a","ld a,$1a","ld a,$00",exec.asm,"NOSUCH:         LD	A,26		;'No such variable'"
5648,5648,5557,2663,25c1,21 3e 10,21 3e 10,"ld hl,$103e","ld hl,$103e","ld hl,$0000",exec.asm,DB	21H
5649,5649,5558,2666,25c4,21 3e 11,21 3e 11,"ld hl,$113e","ld hl,$113e","ld hl,$0000",exec.asm,DB	21H
5650,5650,5559,2669,25c7,21 3e 0e,21 3e 0e,"ld hl,$0e3e","ld hl,$0e3e","ld hl,$0000",exec.asm,DB	21H
5651,5651,5560,266c,25ca,21 3e 06,21 3e 06,"ld hl,$063e","ld hl,$063e","ld hl,$0000",exec.asm,DB	21H
5652,5652,5561,266f,25cd,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,ERROR0ex:         JP	ERROR_
5653,5653,5562,2672,25d0,cd 5f 25,cd bd 24,call $255f,call $24bd,call $0000,exec.asm,ASM0:           CALL	NEWLIN
5654,5654,5563,2675,25d3,fd 22 f4 55,fd 22 f4 54,"ld ($55f4),iy","ld ($54f4),iy","ld ($0000),iy",exec.asm,"ASM:            LD	(CURLIN),IY"
5655,5655,5564,2679,25d7,cd 35 06,cd 15 06,call $0635,call $0615,call $0000,exec.asm,CALL	TRAP
5656,5656,5565,267c,25da,cd 9f 11,cd fd 10,call $119f,call $10fd,call $0000,exec.asm,CALL	ASSEM
5657,5657,5566,267f,25dd,38 e3,38 e3,"jr c,$-$1b","jr c,$-$1b","jr c,$-$00",exec.asm,"JR	C,SYNTAX"
5658,5658,5567,2681,25df,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
5659,5659,5568,2683,25e1,28 ed,28 ed,"jr z,$-$11","jr z,$-$11","jr z,$-$00",exec.asm,"JR	Z,ASM0"
5660,5660,5569,2685,25e3,21 fe 55,21 fe 54,"ld hl,$55fe","ld hl,$54fe","ld hl,$0000",exec.asm,"LD	HL,LISTON"
5661,5661,5570,2688,25e6,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
5662,5662,5571,2689,25e7,e6 0f,e6 0f,and $0f,and $0f,and $00,exec.asm,AND	0FH
5663,5663,5572,268b,25e9,f6 30,f6 30,or $30,or $30,or $00,exec.asm,OR	30H
5664,5664,5573,268d,25eb,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",exec.asm,"LD	(HL),A"
5665,5665,5574,268e,25ec,18 af,18 af,jr $-$4f,jr $-$4f,jr $-$00,exec.asm,JR	XEQGO4
5666,5666,5575,2690,25ee,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,FNEND:          CALL	EXPR		;FUNCTION RESULT
5667,5667,5576,2693,25f1,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
5668,5668,5577,2694,25f2,87,87,"add a,a","add a,a","add a,a",exec.asm,"ADD	A,A"
5669,5669,5578,2695,25f3,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"LD	A,E"
5670,5670,5579,2696,25f4,38 01,38 01,"jr c,$+$03","jr c,$+$03","jr c,$+$00",exec.asm,"JR	C,FNEND1"
5671,5671,5580,2698,25f6,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
5672,5672,5581,2699,25f7,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"FNEND1:         EX	AF,AF'"
5673,5673,5582,269a,25f8,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5674,5674,5583,269b,25f9,d9,d9,exx,exx,exx,exec.asm,EXX
5675,5675,5584,269c,25fa,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5676,5676,5585,269d,25fb,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL		;SAVE RESULT IN A'B'C'D'E'"
5677,5677,5586,269e,25fc,d9,d9,exx,exx,exx,exec.asm,EXX
5678,5678,5587,269f,25fd,c1,c1,pop bc,pop bc,pop bc,exec.asm,FNEND2:         POP	BC
5679,5679,5588,26a0,25fe,21 6b 2a,21 c9 29,"ld hl,$2a6b","ld hl,$29c9","ld hl,$0000",exec.asm,"LD	HL,FNCHK"
5680,5680,5589,26a3,2601,af,af,xor a,xor a,xor a,exec.asm,XOR	A
5681,5681,5590,26a4,2602,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
5682,5682,5591,26a6,2604,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",exec.asm,"JR	Z,FNEND3"
5683,5683,5592,26a8,2606,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5684,5684,5593,26a9,2607,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
5685,5685,5594,26ac,260a,20 f1,20 f1,"jr nz,$-$0d","jr nz,$-$0d","jr nz,$-$00",exec.asm,"JR	NZ,FNEND2"
5686,5686,5595,26ae,260c,3e 07,3e 07,"ld a,$07","ld a,$07","ld a,$00",exec.asm,"LD	A,7"
5687,5687,5596,26b0,260e,18 bd,18 bd,jr $-$41,jr $-$41,jr $-$00,exec.asm,"JR	ERROR0ex		;""No FN"""
5688,5688,5597,26b2,2610,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,FNEND3:         POP	IY
5689,5689,5598,26b4,2612,fd 22 f4 55,fd 22 f4 54,"ld ($55f4),iy","ld ($54f4),iy","ld ($0000),iy",exec.asm,"LD	(CURLIN),IY	;IN CASE OF ERROR"
5690,5690,5599,26b8,2616,d9,d9,exx,exx,exx,exec.asm,EXX
5691,5691,5600,26b9,2617,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
5692,5692,5601,26ba,2618,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5693,5693,5602,26bb,2619,d9,d9,exx,exx,exx,exec.asm,EXX
5694,5694,5603,26bc,261a,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5695,5695,5604,26bd,261b,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
5696,5696,5605,26be,261c,5f,5f,"ld e,a","ld e,a","ld e,a",exec.asm,"LD	E,A"
5697,5697,5606,26bf,261d,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
5698,5698,5607,26c0,261e,1f,1f,rra,rra,rra,exec.asm,RRA
5699,5699,5608,26c1,261f,c9,c9,ret,ret,ret,exec.asm,RET
5700,5700,5609,26c2,2620,fd e5,fd e5,push iy,push iy,push iy,exec.asm,DIM:            PUSH	IY
5701,5701,5610,26c4,2622,fe 21,fe 21,cp $21,cp $21,cp $00,exec.asm,CP	'!'
5702,5702,5611,26c6,2624,ca 93 27,ca f1 26,"jp z,$2793","jp z,$26f1","jp z,$0000",exec.asm,"JP	Z,DIM4"
5703,5703,5612,26c9,2627,cd 34 43,cd 92 42,call $4334,call $4292,call $0000,exec.asm,CALL	LOCATE		;VARIABLE
5704,5704,5613,26cc,262a,da 7d 27,da db 26,"jp c,$277d","jp c,$26db","jp c,$0000",exec.asm,"JP	C,BADDIM"
5705,5705,5614,26cf,262d,c4 c0 43,c4 1e 43,"call nz,$43c0","call nz,$431e","call nz,$0000",exec.asm,"CALL	NZ,CREATE"
5706,5706,5615,26d2,2630,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
5707,5707,5616,26d5,2633,fe 28,fe 28,cp $28,cp $28,cp $00,exec.asm,CP	'('
5708,5708,5617,26d7,2635,c2 93 27,c2 f1 26,"jp nz,$2793","jp nz,$26f1","jp nz,$0000",exec.asm,"JP	NZ,DIM4"
5709,5709,5618,26da,2638,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5710,5710,5619,26db,2639,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
5711,5711,5620,26dd,263b,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
5712,5712,5621,26de,263c,e6 fe,e6 fe,and $fe,and $fe,and $00,exec.asm,AND	0FEH
5713,5713,5622,26e0,263e,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5714,5714,5623,26e1,263f,b6,b6,or (hl),or (hl),or (hl),exec.asm,OR	(HL)
5715,5715,5624,26e2,2640,c2 93 27,c2 f1 26,"jp nz,$2793","jp nz,$26f1","jp nz,$0000",exec.asm,"JP	NZ,DIM4"
5716,5716,5625,26e5,2643,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;LEVEL STACK
5717,5717,5626,26e6,2644,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"LD	A,D"
5718,5718,5627,26e7,2645,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",exec.asm,"LD	HL,(FREE)"
5719,5719,5628,26ea,2648,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5720,5720,5629,26eb,2649,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",exec.asm,"EX	(SP),IX"
5721,5721,5630,26ed,264b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5722,5722,5631,26ee,264c,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
5723,5723,5632,26ef,264d,11 01 00,11 01 00,"ld de,$0001","ld de,$0001","ld de,$0000",exec.asm,"LD	DE,1"
5724,5724,5633,26f2,2650,42,42,"ld b,d","ld b,d","ld b,d",exec.asm,"LD	B,D		;DIMENSION COUNTER"
5725,5725,5634,26f3,2651,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,DIM1:           INC	IY
5726,5726,5635,26f5,2653,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5727,5727,5636,26f6,2654,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5728,5728,5637,26f7,2655,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
5729,5729,5638,26f9,2657,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI		;DIMENSION SIZE
5730,5730,5639,26fc,265a,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",exec.asm,"BIT	7,H"
5731,5731,5640,26fe,265c,20 7d,20 7d,"jr nz,$+$7f","jr nz,$+$7f","jr nz,$+$00",exec.asm,"JR	NZ,BADDIM"
5732,5732,5641,2700,265e,d9,d9,exx,exx,exx,exec.asm,EXX
5733,5733,5642,2701,265f,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5734,5734,5643,2702,2660,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
5735,5735,5644,2704,2662,dd 23,dd 23,inc ix,inc ix,inc ix,exec.asm,INC	IX
5736,5736,5645,2706,2664,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"LD	(IX),L		;SAVE SIZE"
5737,5737,5646,2709,2667,dd 23,dd 23,inc ix,inc ix,inc ix,exec.asm,INC	IX
5738,5738,5647,270b,2669,dd 74 00,dd 74 00,"ld (ix),h","ld (ix),h","ld (ix),h",exec.asm,"LD	(IX),H"
5739,5739,5648,270e,266c,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5740,5740,5649,270f,266d,cd 41 37,cd 9f 36,call $3741,call $369f,call $0000,exec.asm,CALL	MUL16		;HL=HL*BC
5741,5741,5650,2712,2670,38 6c,38 6c,"jr c,$+$6e","jr c,$+$6e","jr c,$+$00",exec.asm,"JR	C,NOROOM	;TOO LARGE"
5742,5742,5651,2714,2672,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL		;DE=PRODUCT"
5743,5743,5652,2715,2673,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5744,5744,5653,2716,2674,04,04,inc b,inc b,inc b,exec.asm,INC	B		;DIMENSION COUNTER
5745,5745,5654,2717,2675,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
5746,5746,5655,271a,2678,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','		;ANOTHER"
5747,5747,5656,271c,267a,28 d5,28 d5,"jr z,$-$29","jr z,$-$29","jr z,$-$00",exec.asm,"JR	Z,DIM1"
5748,5748,5657,271e,267c,dd 23,dd 23,inc ix,inc ix,inc ix,exec.asm,INC	IX
5749,5749,5658,2720,267e,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,CALL	BRAKET		;CLOSING BRACKET
5750,5750,5659,2723,2681,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;RESTORE TYPE
5751,5751,5660,2724,2682,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,exec.asm,CALL	X14OR5		;DE=DE*n
5752,5752,5661,2727,2685,38 57,38 57,"jr c,$+$59","jr c,$+$59","jr c,$+$00",exec.asm,"JR	C,NOROOM"
5753,5753,5662,2729,2687,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5754,5754,5663,272a,2688,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",exec.asm,"LD	(HL),B		;NO. OF DIMENSIONS"
5755,5755,5664,272b,2689,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",exec.asm,"EX	(SP),IX"
5756,5756,5665,272d,268b,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5757,5757,5666,272e,268c,e6 80,e6 80,and $80,and $80,and $00,exec.asm,AND	80H
5758,5758,5667,2730,268e,dd b6 00,dd b6 00,or (ix),or (ix),or (ix),exec.asm,OR	(IX)		;FLAGS
5759,5759,5668,2733,2691,e5,e5,push hl,push hl,push hl,exec.asm,DIM3:           PUSH	HL
5760,5760,5669,2734,2692,24,24,inc h,inc h,inc h,exec.asm,INC	H		;Safety margin
5761,5761,5670,2735,2693,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE"
5762,5762,5671,2736,2694,38 48,38 48,"jr c,$+$4a","jr c,$+$4a","jr c,$+$00",exec.asm,"JR	C,NOROOM"
5763,5763,5672,2738,2696,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",exec.asm,"SBC	HL,SP"
5764,5764,5673,273a,2698,30 44,30 44,"jr nc,$+$46","jr nc,$+$46","jr nc,$+$00",exec.asm,"JR	NC,NOROOM"
5765,5765,5674,273c,269a,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5766,5766,5675,273d,269b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5767,5767,5676,273e,269c,ed 4b e0 55,ed 4b e0 54,"ld bc,($55e0)","ld bc,($54e0)","ld bc,($0000)",exec.asm,"LD	BC,(FREE)"
5768,5768,5677,2742,26a0,b7,b7,or a,or a,or a,exec.asm,OR	A
5769,5769,5678,2743,26a1,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
5770,5770,5679,2745,26a3,44,44,"ld b,h","ld b,h","ld b,h",exec.asm,"LD	B,H"
5771,5771,5680,2746,26a4,4d,4d,"ld c,l","ld c,l","ld c,l",exec.asm,"LD	C,L"
5772,5772,5681,2747,26a5,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
5773,5773,5682,2748,26a6,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
5774,5774,5683,274a,26a8,cb 47,cb 47,"bit 0,a","bit 0,a","bit 0,a",exec.asm,"BIT	0,A"
5775,5775,5684,274c,26aa,28 12,28 12,"jr z,$+$14","jr z,$+$14","jr z,$+$00",exec.asm,"JR	Z,ARRCHK	;NOT LOCAL"
5776,5776,5685,274e,26ac,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
5777,5777,5686,2751,26af,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
5778,5778,5687,2753,26b1,b7,b7,or a,or a,or a,exec.asm,OR	A
5779,5779,5688,2754,26b2,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
5780,5780,5689,2756,26b4,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
5781,5781,5690,2757,26b5,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,ARRCHK	;RESERVE NOTHING"
5782,5782,5691,2759,26b7,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
5783,5783,5692,275a,26b8,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5784,5784,5693,275b,26b9,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5785,5785,5694,275c,26ba,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
5786,5786,5695,275d,26bb,cd 60 27,cd be 26,call $2760,call $26be,call $0000,exec.asm,CALL	ARRCHK
5787,5787,5696,2760,26be,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"ARRCHK:         LD	(IX+0),L	;SAVE POINTER"
5788,5788,5697,2763,26c1,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",exec.asm,"LD	(IX+1),H"
5789,5789,5698,2766,26c4,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
5790,5790,5699,2767,26c5,b1,b1,or c,or c,or c,exec.asm,OR	C
5791,5791,5700,2768,26c6,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",exec.asm,"JR	Z,DIM2"
5792,5792,5701,276a,26c8,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5793,5793,5702,276b,26c9,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
5794,5794,5703,276c,26ca,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",exec.asm,"LD	HL,(FREE)"
5795,5795,5704,276f,26cd,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR			;COPY DESCRIPTOR
5796,5796,5705,2771,26cf,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
5797,5797,5706,2772,26d0,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
5798,5798,5707,2773,26d1,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"DIM2:           LD	A,D"
5799,5799,5708,2774,26d2,b3,b3,or e,or e,or e,exec.asm,OR	E
5800,5800,5709,2775,26d3,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",exec.asm,"JR	Z,DIM5"
5801,5801,5710,2777,26d5,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",exec.asm,"LD	(HL),0		;INITIALISE ARRAY"
5802,5802,5711,2779,26d7,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5803,5803,5712,277a,26d8,1b,1b,dec de,dec de,dec de,exec.asm,DEC	DE
5804,5804,5713,277b,26d9,18 f6,18 f6,jr $-$08,jr $-$08,jr $-$00,exec.asm,JR	DIM2
5805,5805,5714,277d,26db,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",exec.asm,"BADDIM:         LD	A,10		;""Bad DIM"""
5806,5806,5715,277f,26dd,21 3e 0b,21 3e 0b,"ld hl,$0b3e","ld hl,$0b3e","ld hl,$0000",exec.asm,DB	21H
5807,5807,5716,2782,26e0,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,ERROR1ex:         JP	ERROR_
5808,5808,5717,2785,26e3,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",exec.asm,"DIM5:           SBC	HL,SP"
5809,5809,5718,2787,26e5,30 04,30 04,"jr nc,$+$06","jr nc,$+$06","jr nc,$+$00",exec.asm,"JR	NC,DIM7		;LOCAL"
5810,5810,5719,2789,26e7,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
5811,5811,5720,278a,26e8,22 e0 55,22 e0 54,"ld ($55e0),hl","ld ($54e0),hl","ld ($0000),hl",exec.asm,"LD	(FREE),HL"
5812,5812,5721,278d,26eb,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,DIM7:           CALL	NLIST		;ANOTHER VARIABLE?
5813,5813,5722,2790,26ee,c3 c2 26,c3 20 26,jp $26c2,jp $2620,jp $0000,exec.asm,JP	DIM
5814,5814,5723,2793,26f1,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,DIM4:           POP	IY
5815,5815,5724,2795,26f3,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
5816,5816,5725,2798,26f6,b7,b7,or a,or a,or a,exec.asm,OR	A
5817,5817,5726,2799,26f7,28 e2,28 e2,"jr z,$-$1c","jr z,$-$1c","jr z,$-$00",exec.asm,"JR	Z,BADDIM"
5818,5818,5727,279b,26f9,fa 7d 27,fa db 26,"jp m,$277d","jp m,$26db","jp m,$0000",exec.asm,"JP	M,BADDIM"
5819,5819,5728,279e,26fc,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"BIT	6,A"
5820,5820,5729,27a0,26fe,20 db,20 db,"jr nz,$-$23","jr nz,$-$23","jr nz,$-$00",exec.asm,"JR	NZ,BADDIM"
5821,5821,5730,27a2,2700,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;TYPE"
5822,5822,5731,27a3,2701,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5823,5823,5732,27a6,2704,fe ea,fe ea,cp $ea,cp $ea,cp $00,exec.asm,CP	TLOCAL
5824,5824,5733,27a8,2706,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",exec.asm,"LD	A,0		;PRESET TO NOT LOCAL"
5825,5825,5734,27aa,2708,20 03,20 03,"jr nz,$+$05","jr nz,$+$05","jr nz,$+$00",exec.asm,"JR	NZ,DIM8"
5826,5826,5735,27ac,270a,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
5827,5827,5736,27ae,270c,3c,3c,inc a,inc a,inc a,exec.asm,INC	A		;FLAG LOCAL
5828,5828,5737,27af,270d,f5,f5,push af,push af,push af,exec.asm,DIM8:           PUSH	AF
5829,5829,5738,27b0,270e,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B		;TYPE"
5830,5830,5739,27b1,270f,d9,d9,exx,exx,exx,exec.asm,EXX
5831,5831,5740,27b2,2710,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
5832,5832,5741,27b5,2713,4c,4c,"ld c,h","ld c,h","ld c,h",exec.asm,"LD	C,H"
5833,5833,5742,27b6,2714,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN		;RESERVED AREA
5834,5834,5743,27b9,2717,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
5835,5835,5744,27bb,2719,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
5836,5836,5745,27be,271c,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
5837,5837,5746,27c0,271e,d9,d9,exx,exx,exx,exec.asm,EXX
5838,5838,5747,27c1,271f,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5839,5839,5748,27c2,2720,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
5840,5840,5749,27c3,2721,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",exec.asm,"LD	HL,(FREE)"
5841,5841,5750,27c6,2724,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;LOCAL FLAG
5842,5842,5751,27c7,2725,c3 33 27,c3 91 26,jp $2733,jp $2691,jp $0000,exec.asm,JP	DIM3
5843,5843,5752,27ca,2728,fe 23,fe 23,cp $23,cp $23,cp $00,exec.asm,PRINT:          CP	'#'
5844,5844,5753,27cc,272a,20 64,20 64,"jr nz,$+$66","jr nz,$+$66","jr nz,$+$00",exec.asm,"JR	NZ,PRINT0"
5845,5845,5754,27ce,272c,cd 5f 37,cd bd 36,call $375f,call $36bd,call $0000,exec.asm,CALL	CHNL		;CHANNEL NO. = E
5846,5846,5755,27d1,272f,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,PRNTN1:         CALL	NLIST
5847,5847,5756,27d4,2732,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5848,5848,5757,27d5,2733,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,CALL	EXPR		;ITEM TO PRINT
5849,5849,5758,27d8,2736,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
5850,5850,5759,27d9,2737,fa f9 27,fa 57 27,"jp m,$27f9","jp m,$2757","jp m,$0000",exec.asm,"JP	M,PRNTN2	;STRING"
5851,5851,5760,27dc,273a,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
5852,5852,5761,27dd,273b,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5853,5853,5762,27de,273c,d9,d9,exx,exx,exx,exec.asm,EXX
5854,5854,5763,27df,273d,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
5855,5855,5764,27e0,273e,d9,d9,exx,exx,exx,exec.asm,EXX
5856,5856,5765,27e1,273f,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5857,5857,5766,27e4,2742,d9,d9,exx,exx,exx,exec.asm,EXX
5858,5858,5767,27e5,2743,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
5859,5859,5768,27e6,2744,d9,d9,exx,exx,exx,exec.asm,EXX
5860,5860,5769,27e7,2745,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5861,5861,5770,27ea,2748,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
5862,5862,5771,27eb,2749,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5863,5863,5772,27ee,274c,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
5864,5864,5773,27ef,274d,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5865,5865,5774,27f2,2750,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5866,5866,5775,27f3,2751,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
5867,5867,5776,27f4,2752,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5868,5868,5777,27f7,2755,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	PRNTN1
5869,5869,5778,27f9,2757,4b,4b,"ld c,e","ld c,e","ld c,e",exec.asm,"PRNTN2:         LD	C,E"
5870,5870,5779,27fa,2758,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
5871,5871,5780,27fb,2759,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
5872,5872,5781,27fe,275c,0c,0c,inc c,inc c,inc c,exec.asm,INC	C
5873,5873,5782,27ff,275d,0d,0d,dec c,dec c,dec c,exec.asm,PRNTN3:         DEC	C
5874,5874,5783,2800,275e,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",exec.asm,"JR	Z,PRNTN4"
5875,5875,5784,2802,2760,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
5876,5876,5785,2803,2761,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
5877,5877,5786,2804,2762,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5878,5878,5787,2805,2763,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5879,5879,5788,2808,2766,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5880,5880,5789,2809,2767,18 f4,18 f4,jr $-$0a,jr $-$0a,jr $-$00,exec.asm,JR	PRNTN3
5881,5881,5790,280b,2769,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"PRNTN4:         LD	A,CR"
5882,5882,5791,280d,276b,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
5883,5883,5792,2810,276e,18 bf,18 bf,jr $-$3f,jr $-$3f,jr $-$00,exec.asm,JR	PRNTN1
5884,5884,5793,2812,2770,06 02,06 02,"ld b,$02","ld b,$02","ld b,$00",exec.asm,"PRINT6:         LD	B,2"
5885,5885,5794,2814,2772,18 22,18 22,jr $+$24,jr $+$24,jr $+$00,exec.asm,JR	PRINTC
5886,5886,5795,2816,2774,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",exec.asm,"PRINT8:         LD	BC,100H"
5887,5887,5796,2819,2777,18 1d,18 1d,jr $+$1f,jr $+$1f,jr $+$00,exec.asm,JR	PRINTC
5888,5888,5797,281b,2779,21 00 55,21 00 54,"ld hl,$5500","ld hl,$5400","ld hl,$0000",exec.asm,"PRINT9:         LD	HL,STAVAR"
5889,5889,5798,281e,277c,af,af,xor a,xor a,xor a,exec.asm,XOR	A
5890,5890,5799,281f,277d,be,be,cp (hl),cp (hl),cp (hl),exec.asm,CP	(HL)
5891,5891,5800,2820,277e,28 10,28 10,"jr z,$+$12","jr z,$+$12","jr z,$+$00",exec.asm,"JR	Z,PRINT0"
5892,5892,5801,2822,2780,3a fb 55,3a fb 54,"ld a,($55fb)","ld a,($54fb)","ld a,($0000)",exec.asm,"LD	A,(COUNT)"
5893,5893,5802,2825,2783,b7,b7,or a,or a,or a,exec.asm,OR	A
5894,5894,5803,2826,2784,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",exec.asm,"JR	Z,PRINT0"
5895,5895,5804,2828,2786,96,96,sub (hl),sub (hl),sub (hl),exec.asm,PRINTA:         SUB	(HL)
5896,5896,5805,2829,2787,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,PRINT0"
5897,5897,5806,282b,2789,30 fb,30 fb,"jr nc,$-$03","jr nc,$-$03","jr nc,$-$00",exec.asm,"JR	NC,PRINTA"
5898,5898,5807,282d,278b,ed 44,ed 44,neg,neg,neg,exec.asm,NEG
5899,5899,5808,282f,278d,cd 27 36,cd 85 35,call $3627,call $3585,call $0000,exec.asm,CALL	SPACES
5900,5900,5809,2832,2790,3a 00 55,3a 00 54,"ld a,($5500)","ld a,($5400)","ld a,($0000)",exec.asm,"PRINT0:         LD	A,(STAVAR)"
5901,5901,5810,2835,2793,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A		;PRINTS"
5902,5902,5811,2836,2794,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0		;PRINTF"
5903,5903,5812,2838,2796,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,PRINTC:         CALL	TERMQ
5904,5904,5813,283b,2799,28 38,28 38,"jr z,$+$3a","jr z,$+$3a","jr z,$+$00",exec.asm,"JR	Z,PRINT4"
5905,5905,5814,283d,279b,cb 80,cb 80,"res 0,b","res 0,b","res 0,b",exec.asm,"RES	0,B"
5906,5906,5815,283f,279d,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
5907,5907,5816,2841,279f,fe 7e,fe 7e,cp $7e,cp $7e,cp $00,exec.asm,CP	'~'
5908,5908,5817,2843,27a1,28 cd,28 cd,"jr z,$-$31","jr z,$-$31","jr z,$-$00",exec.asm,"JR	Z,PRINT6"
5909,5909,5818,2845,27a3,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
5910,5910,5819,2847,27a5,28 cd,28 cd,"jr z,$-$31","jr z,$-$31","jr z,$-$00",exec.asm,"JR	Z,PRINT8"
5911,5911,5820,2849,27a7,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
5912,5912,5821,284b,27a9,28 ce,28 ce,"jr z,$-$30","jr z,$-$30","jr z,$-$00",exec.asm,"JR	Z,PRINT9"
5913,5913,5822,284d,27ab,cd e0 35,cd 3e 35,call $35e0,call $353e,call $0000,exec.asm,"CALL	FORMAT		;SPC, TAB, '"
5914,5914,5823,2850,27ae,28 e6,28 e6,"jr z,$-$18","jr z,$-$18","jr z,$-$00",exec.asm,"JR	Z,PRINTC"
5915,5915,5824,2852,27b0,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
5916,5916,5825,2854,27b2,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5917,5917,5826,2855,27b3,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,CALL	EXPR		;VARIABLE TYPE
5918,5918,5827,2858,27b6,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
5919,5919,5828,2859,27b7,fa 6f 28,fa cd 27,"jp m,$286f","jp m,$27cd","jp m,$0000",exec.asm,"JP	M,PRINT3	;STRING"
5920,5920,5829,285c,27ba,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
5921,5921,5830,285d,27bb,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
5922,5922,5831,285e,27bc,cb 4a,cb 4a,"bit 1,d","bit 1,d","bit 1,d",exec.asm,"BIT	1,D"
5923,5923,5832,2860,27be,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
5924,5924,5833,2861,27bf,cc 54 20,cc b2 1f,"call z,$2054","call z,$1fb2","call z,$0000",exec.asm,"CALL	Z,STR		;DECIMAL"
5925,5925,5834,2864,27c2,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
5926,5926,5835,2865,27c3,c4 11 20,c4 6f 1f,"call nz,$2011","call nz,$1f6f","call nz,$0000",exec.asm,"CALL	NZ,HEXSTR	;HEX"
5927,5927,5836,2868,27c6,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
5928,5928,5837,2869,27c7,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
5929,5929,5838,286a,27c8,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
5930,5930,5839,286b,27c9,93,93,sub e,sub e,sub e,exec.asm,SUB	E
5931,5931,5840,286c,27ca,d4 27 36,d4 85 35,"call nc,$3627","call nc,$3585","call nc,$0000",exec.asm,"CALL	NC,SPACES		;RIGHT JUSTIFY"
5932,5932,5841,286f,27cd,c1,c1,pop bc,pop bc,pop bc,exec.asm,PRINT3:         POP	BC
5933,5933,5842,2870,27ce,cd 35 36,cd 93 35,call $3635,call $3593,call $0000,exec.asm,CALL	PTEXT		;PRINT
5934,5934,5843,2873,27d1,18 c3,18 c3,jr $-$3b,jr $-$3b,jr $-$00,exec.asm,JR	PRINTC
5935,5935,5844,2875,27d3,cb 40,cb 40,"bit 0,b","bit 0,b","bit 0,b",exec.asm,"PRINT4:         BIT	0,B"
5936,5936,5845,2877,27d5,cc 7f 41,cc dd 40,"call z,$417f","call z,$40dd","call z,$0000",exec.asm,"CALL	Z,CRLF"
5937,5937,5846,287a,27d8,18 3f,18 3f,jr $+$41,jr $+$41,jr $+$00,exec.asm,JR	XEQGO3
5938,5938,5847,287c,27da,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"ONERR:          INC	IY		;SKIP ""ERROR"""
5939,5939,5848,287e,27dc,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5940,5940,5849,2881,27df,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0		;FLAG NOT LOCAL"
5941,5941,5850,2884,27e2,fe ea,fe ea,cp $ea,cp $ea,cp $00,exec.asm,CP	TLOCAL
5942,5942,5851,2886,27e4,20 1d,20 1d,"jr nz,$+$1f","jr nz,$+$1f","jr nz,$+$00",exec.asm,"JR	NZ,ONERR1"
5943,5943,5852,2888,27e6,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"INC	IY		;SKIP ""LOCAL"""
5944,5944,5853,288a,27e8,2a ea 55,2a ea 54,"ld hl,($55ea)","ld hl,($54ea)","ld hl,($0000)",exec.asm,"LD	HL,(ERRTRP)"
5945,5945,5854,288d,27eb,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5946,5946,5855,288e,27ec,2a ec 55,2a ec 54,"ld hl,($55ec)","ld hl,($54ec)","ld hl,($0000)",exec.asm,"LD	HL,(ONERSP)"
5947,5947,5856,2891,27ef,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5948,5948,5857,2892,27f0,21 00 04,21 00 04,"ld hl,$0400","ld hl,$0400","ld hl,$0000",exec.asm,"LD	HL,400H		;TYPE = 4, 'EXPONENT' = 0"
5949,5949,5858,2895,27f3,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5950,5950,5859,2896,27f4,21 ea 55,21 ea 54,"ld hl,$55ea","ld hl,$54ea","ld hl,$0000",exec.asm,"LD	HL,ERRTRP"
5951,5951,5860,2899,27f7,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5952,5952,5861,289a,27f8,21 ae 35,21 0c 35,"ld hl,$35ae","ld hl,$350c","ld hl,$0000",exec.asm,"LD	HL,LOCCHK"
5953,5953,5862,289d,27fb,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5954,5954,5863,289e,27fc,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
5955,5955,5864,28a1,27ff,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
5956,5956,5865,28a2,2800,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
5957,5957,5866,28a5,2803,22 ec 55,22 ec 54,"ld ($55ec),hl","ld ($54ec),hl","ld ($0000),hl",exec.asm,"ONERR1:         LD	(ONERSP),HL"
5958,5958,5867,28a8,2806,fd 22 ea 55,fd 22 ea 54,"ld ($55ea),iy","ld ($54ea),iy","ld ($0000),iy",exec.asm,"LD	(ERRTRP),IY"
5959,5959,5868,28ac,280a,fe 87,fe 87,cp $87,cp $87,cp $00,exec.asm,CP	TOFF
5960,5960,5869,28ae,280c,c2 b5 25,c2 13 25,"jp nz,$25b5","jp nz,$2513","jp nz,$0000",exec.asm,"JP	NZ,REM"
5961,5961,5870,28b1,280f,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"INC	IY		;SKIP ""OFF"""
5962,5962,5871,28b3,2811,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",exec.asm,"SBC	HL,HL"
5963,5963,5872,28b5,2813,22 ec 55,22 ec 54,"ld ($55ec),hl","ld ($54ec),hl","ld ($0000),hl",exec.asm,"LD	(ONERSP),HL"
5964,5964,5873,28b8,2816,22 ea 55,22 ea 54,"ld ($55ea),hl","ld ($54ea),hl","ld ($0000),hl",exec.asm,"LD	(ERRTRP),HL"
5965,5965,5874,28bb,2819,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO3:         JP	XEQ
5966,5966,5875,28be,281c,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,ON:             CALL	TERMQ
5967,5967,5876,28c1,281f,ca 6e 0f,ca cc 0e,"jp z,$0f6e","jp z,$0ecc","jp z,$0000",exec.asm,"JP	Z,CSRON"
5968,5968,5877,28c4,2822,fe 85,fe 85,cp $85,cp $85,cp $00,exec.asm,CP	TERROR
5969,5969,5878,28c6,2824,28 b4,28 b4,"jr z,$-$4a","jr z,$-$4a","jr z,$-$00",exec.asm,"JR	Z,ONERR		;""ON ERROR"""
5970,5970,5879,28c8,2826,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
5971,5971,5880,28cb,2829,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
5972,5972,5881,28ce,282c,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
5973,5973,5882,28d0,282e,1e 2c,1e 2c,"ld e,$2c","ld e,$2c","ld e,$00",exec.asm,"LD	E,','		;SEPARATOR"
5974,5974,5883,28d2,2830,fe e5,fe e5,cp $e5,cp $e5,cp $00,exec.asm,CP	TGOTO
5975,5975,5884,28d4,2832,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",exec.asm,"JR	Z,ON1"
5976,5976,5885,28d6,2834,fe e4,fe e4,cp $e4,cp $e4,cp $00,exec.asm,CP	TGOSUB
5977,5977,5886,28d8,2836,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,ON1"
5978,5978,5887,28da,2838,1e f2,1e f2,"ld e,$f2","ld e,$f2","ld e,$00",exec.asm,"LD	E,TPROC"
5979,5979,5888,28dc,283a,bb,bb,cp e,cp e,cp e,exec.asm,CP	E
5980,5980,5889,28dd,283b,3e 27,3e 27,"ld a,$27","ld a,$27","ld a,$00",exec.asm,"LD	A,39"
5981,5981,5890,28df,283d,20 4f,20 4f,"jr nz,$+$51","jr nz,$+$51","jr nz,$+$00",exec.asm,"JR	NZ,ERROR2ex	;""ON syntax"""
5982,5982,5891,28e1,283f,57,57,"ld d,a","ld d,a","ld d,a",exec.asm,"ON1:            LD	D,A"
5983,5983,5892,28e2,2840,d9,d9,exx,exx,exx,exec.asm,EXX
5984,5984,5893,28e3,2841,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
5985,5985,5894,28e4,2842,d9,d9,exx,exx,exx,exec.asm,EXX
5986,5986,5895,28e5,2843,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;ON INDEX
5987,5987,5896,28e6,2844,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
5988,5988,5897,28e7,2845,b4,b4,or h,or h,or h,exec.asm,OR	H
5989,5989,5898,28e8,2846,b5,b5,or l,or l,or l,exec.asm,OR	L
5990,5990,5899,28e9,2847,20 32,20 32,"jr nz,$+$34","jr nz,$+$34","jr nz,$+$00",exec.asm,"JR	NZ,ON4		;OUT OF RANGE"
5991,5991,5900,28eb,2849,b1,b1,or c,or c,or c,exec.asm,OR	C
5992,5992,5901,28ec,284a,28 2f,28 2f,"jr z,$+$31","jr z,$+$31","jr z,$+$00",exec.asm,"JR	Z,ON4"
5993,5993,5902,28ee,284c,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
5994,5994,5903,28ef,284d,28 11,28 11,"jr z,$+$13","jr z,$+$13","jr z,$+$00",exec.asm,"JR	Z,ON3		;INDEX=1"
5995,5995,5904,28f1,284f,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,ON2:            CALL	TERMQ
5996,5996,5905,28f4,2852,28 27,28 27,"jr z,$+$29","jr z,$+$29","jr z,$+$00",exec.asm,"JR	Z,ON4		;OUT OF RANGE"
5997,5997,5906,28f6,2854,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY		;SKIP DELIMITER
5998,5998,5907,28f8,2856,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
5999,5999,5908,28fa,2858,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",exec.asm,"JR	Z,ON5"
6000,6000,5909,28fc,285a,bb,bb,cp e,cp e,cp e,exec.asm,CP	E
6001,6001,5910,28fd,285b,20 f2,20 f2,"jr nz,$-$0c","jr nz,$-$0c","jr nz,$-$00",exec.asm,"JR	NZ,ON2"
6002,6002,5911,28ff,285d,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
6003,6003,5912,2900,285e,20 ef,20 ef,"jr nz,$-$0f","jr nz,$-$0f","jr nz,$-$00",exec.asm,"JR	NZ,ON2"
6004,6004,5913,2902,2860,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"ON3:            LD	A,E"
6005,6005,5914,2903,2861,fe f2,fe f2,cp $f2,cp $f2,cp $00,exec.asm,CP	TPROC
6006,6006,5915,2905,2863,28 2c,28 2c,"jr z,$+$2e","jr z,$+$2e","jr z,$+$00",exec.asm,"JR	Z,ONPROC"
6007,6007,5916,2907,2865,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6008,6008,5917,2908,2866,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,CALL	ITEMI		;LINE NUMBER
6009,6009,5918,290b,2869,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6010,6010,5919,290c,286a,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"LD	A,D"
6011,6011,5920,290d,286b,fe e5,fe e5,cp $e5,cp $e5,cp $00,exec.asm,CP	TGOTO
6012,6012,5921,290f,286d,28 30,28 30,"jr z,$+$32","jr z,$+$32","jr z,$+$00",exec.asm,"JR	Z,GOTO2"
6013,6013,5922,2911,286f,cd c6 35,cd 24 35,call $35c6,call $3524,call $0000,exec.asm,CALL	SPAN		;SKIP REST OF LIST
6014,6014,5923,2914,2872,18 3c,18 3c,jr $+$3e,jr $+$3e,jr $+$00,exec.asm,JR	GOSUB1
6015,6015,5924,2916,2874,cd 1d 37,cd 7b 36,call $371d,call $367b,call $0000,exec.asm,ON5:            CALL	QUOTE
6016,6016,5925,2919,2877,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6017,6017,5926,291b,2879,18 d4,18 d4,jr $-$2a,jr $-$2a,jr $-$00,exec.asm,JR	ON2
6018,6018,5927,291d,287b,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"ON4:            LD	A,(IY)"
6019,6019,5928,2920,287e,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6020,6020,5929,2922,2880,fe 8b,fe 8b,cp $8b,cp $8b,cp $00,exec.asm,CP	TELSE
6021,6021,5930,2924,2882,ca 66 2d,ca c4 2c,"jp z,$2d66","jp z,$2cc4","jp z,$0000",exec.asm,"JP	Z,IF1		;ELSE CLAUSE"
6022,6022,5931,2927,2885,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6023,6023,5932,2929,2887,20 f2,20 f2,"jr nz,$-$0c","jr nz,$-$0c","jr nz,$-$00",exec.asm,"JR	NZ,ON4"
6024,6024,5933,292b,2889,3e 28,3e 28,"ld a,$28","ld a,$28","ld a,$00",exec.asm,"LD	A,40		;'ON range'"
6025,6025,5934,292d,288b,21 3e 22,21 3e 22,"ld hl,$223e","ld hl,$223e","ld hl,$0000",exec.asm,DB	21H
6026,6026,5935,2930,288e,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,ERROR2ex:         JP	ERROR_
6027,6027,5936,2933,2891,3e ee,3e ee,"ld a,$ee","ld a,$ee","ld a,$00",exec.asm,"ONPROC:         LD	A,TON"
6028,6028,5937,2935,2893,c3 6b 2a,c3 c9 29,jp $2a6b,jp $29c9,jp $0000,exec.asm,JP	PROC
6029,6029,5938,2938,2896,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,GOTO:           CALL	ITEMI		;LINE NUMBER
6030,6030,5939,293b,2899,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,GOTO1:          CALL	TERMQ
6031,6031,5940,293e,289c,c2 64 26,c2 c2 25,"jp nz,$2664","jp nz,$25c2","jp nz,$0000",exec.asm,"JP	NZ,SYNTAX"
6032,6032,5941,2941,289f,d9,d9,exx,exx,exx,exec.asm,GOTO2:          EXX
6033,6033,5942,2942,28a0,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,exec.asm,CALL	FINDL
6034,6034,5943,2945,28a3,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6035,6035,5944,2946,28a4,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6036,6036,5945,2948,28a6,ca 08 25,ca 66 24,"jp z,$2508","jp z,$2466","jp z,$0000",exec.asm,"JP	Z,XEQ0"
6037,6037,5946,294b,28a9,3e 29,3e 29,"ld a,$29","ld a,$29","ld a,$00",exec.asm,"LD	A,41"
6038,6038,5947,294d,28ab,18 e1,18 e1,jr $-$1d,jr $-$1d,jr $-$00,exec.asm,"JR	ERROR2ex		;""No such line"""
6039,6039,5948,294f,28ad,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,GOSUB:          CALL	ITEMI		;LINE NUMBER
6040,6040,5949,2952,28b0,fd e5,fd e5,push iy,push iy,push iy,exec.asm,GOSUB1:         PUSH	IY		;TEXT POINTER
6041,6041,5950,2954,28b2,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,CALL	CHECK		;CHECK ROOM
6042,6042,5951,2957,28b5,cd 3b 29,cd 99 28,call $293b,call $2899,call $0000,exec.asm,CALL	GOTO1		;SAVE MARKER
6043,6043,5952,295a,28b8,d1,d1,pop de,pop de,pop de,exec.asm,RETURN:         POP	DE		;MARKER
6044,6044,5953,295b,28b9,21 5a 29,21 b8 28,"ld hl,$295a","ld hl,$28b8","ld hl,$0000",exec.asm,"LD	HL,GOSCHK"
6045,6045,5954,295e,28bc,b7,b7,or a,or a,or a,exec.asm,OR	A
6046,6046,5955,295f,28bd,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
6047,6047,5956,2961,28bf,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6048,6048,5957,2963,28c1,28 30,28 30,"jr z,$+$32","jr z,$+$32","jr z,$+$00",exec.asm,"JR	Z,XEQGO2ex"
6049,6049,5958,2965,28c3,3e 26,3e 26,"ld a,$26","ld a,$26","ld a,$00",exec.asm,"LD	A,38"
6050,6050,5959,2967,28c5,18 c7,18 c7,jr $-$37,jr $-$37,jr $-$00,exec.asm,"JR	ERROR2ex		;""No GOSUB"""
6051,6051,5960,2969,28c7,fd e5,fd e5,push iy,push iy,push iy,exec.asm,REPEAT:         PUSH	IY
6052,6052,5961,296b,28c9,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,CALL	CHECK
6053,6053,5962,296e,28cc,cd 1d 25,cd 7b 24,call $251d,call $247b,call $0000,exec.asm,CALL	XEQ
6054,6054,5963,2971,28cf,c1,c1,pop bc,pop bc,pop bc,exec.asm,UNTIL:          POP	BC
6055,6055,5964,2972,28d0,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6056,6056,5965,2973,28d1,21 71 29,21 cf 28,"ld hl,$2971","ld hl,$28cf","ld hl,$0000",exec.asm,"LD	HL,REPCHK"
6057,6057,5966,2976,28d4,b7,b7,or a,or a,or a,exec.asm,OR	A
6058,6058,5967,2977,28d5,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6059,6059,5968,2979,28d7,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",exec.asm,"JR	Z,UNTIL1"
6060,6060,5969,297b,28d9,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",exec.asm,"LD	A,3"
6061,6061,5970,297d,28db,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6062,6062,5971,2980,28de,20 ef,20 ef,"jr nz,$-$0f","jr nz,$-$0f","jr nz,$-$00",exec.asm,"JR	NZ,UNTIL"
6063,6063,5972,2982,28e0,3e 2b,3e 2b,"ld a,$2b","ld a,$2b","ld a,$00",exec.asm,"LD	A,43"
6064,6064,5973,2984,28e2,18 aa,18 aa,jr $-$54,jr $-$54,jr $-$00,exec.asm,"JR	ERROR2ex		;""Not in a REPEAT loop"""
6065,6065,5974,2986,28e4,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,UNTIL1:         CALL	EXPRI
6066,6066,5975,2989,28e7,cd dd 1f,cd 3b 1f,call $1fdd,call $1f3b,call $0000,exec.asm,CALL	TEST
6067,6067,5976,298c,28ea,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6068,6068,5977,298d,28eb,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6069,6069,5978,298e,28ec,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",exec.asm,"JR	NZ,XEQGO2ex		;TRUE"
6070,6070,5979,2990,28ee,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6071,6071,5980,2991,28ef,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6072,6072,5981,2992,28f0,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6073,6073,5982,2993,28f1,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6074,6074,5983,2995,28f3,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO2ex:         JP	XEQ
6075,6075,5984,2998,28f6,cd 33 32,cd 91 31,call $3233,call $3191,call $0000,exec.asm,FORex:            CALL	ASSIGN
6076,6076,5985,299b,28f9,20 91,20 91,"jr nz,$-$6d","jr nz,$-$6d","jr nz,$-$00",exec.asm,"JR	NZ,FORVAR	;""FOR variable"""
6077,6077,5986,299d,28fb,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
6078,6078,5987,299e,28fc,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6079,6079,5988,29a1,28ff,fe b8,fe b8,cp $b8,cp $b8,cp $00,exec.asm,CP	TTO
6080,6080,5989,29a3,2901,3e 24,3e 24,"ld a,$24","ld a,$24","ld a,$00",exec.asm,"LD	A,36"
6081,6081,5990,29a5,2903,20 89,20 89,"jr nz,$-$75","jr nz,$-$75","jr nz,$-$00",exec.asm,"JR	NZ,ERROR2ex	;""No TO"""
6082,6082,5991,29a7,2905,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6083,6083,5992,29a9,2907,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6084,6084,5993,29ab,2909,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN		;LIMIT
6085,6085,5994,29ae,290c,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6086,6086,5995,29b0,290e,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6087,6087,5996,29b1,290f,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;TYPE"
6088,6088,5997,29b2,2910,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;SAVE ON STACK
6089,6089,5998,29b3,2911,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6090,6090,5999,29b4,2912,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
6091,6091,6000,29b7,2915,4c,4c,"ld c,h","ld c,h","ld c,h",exec.asm,"LD	C,H"
6092,6092,6001,29b8,2916,d9,d9,exx,exx,exx,exec.asm,EXX
6093,6093,6002,29b9,2917,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6094,6094,6003,29ba,2918,21 01 00,21 01 00,"ld hl,$0001","ld hl,$0001","ld hl,$0000",exec.asm,"LD	HL,1		;PRESET STEP"
6095,6095,6004,29bd,291b,d9,d9,exx,exx,exx,exec.asm,EXX
6096,6096,6005,29be,291c,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6097,6097,6006,29c1,291f,fe 88,fe 88,cp $88,cp $88,cp $00,exec.asm,CP	TSTEP
6098,6098,6007,29c3,2921,20 09,20 09,"jr nz,$+$0b","jr nz,$+$0b","jr nz,$+$00",exec.asm,"JR	NZ,FOR1"
6099,6099,6008,29c5,2923,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6100,6100,6009,29c7,2925,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6101,6101,6010,29c9,2927,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN		;STEP
6102,6102,6011,29cc,292a,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6103,6103,6012,29ce,292c,06 08,06 08,"ld b,$08","ld b,$08","ld b,$00",exec.asm,"FOR1:           LD	B,8		;FPP '>'"
6104,6104,6013,29d0,292e,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",exec.asm,"BIT	7,H"
6105,6105,6014,29d2,2930,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",exec.asm,"JR	NZ,FOR2		;STEP SIGN"
6106,6106,6015,29d4,2932,06 0c,06 0c,"ld b,$0c","ld b,$0c","ld b,$00",exec.asm,"LD	B,12		;FPP '<'"
6107,6107,6016,29d6,2934,c5,c5,push bc,push bc,push bc,exec.asm,FOR2:           PUSH	BC
6108,6108,6017,29d7,2935,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6109,6109,6018,29d8,2936,d9,d9,exx,exx,exx,exec.asm,EXX
6110,6110,6019,29d9,2937,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6111,6111,6020,29da,2938,d9,d9,exx,exx,exx,exec.asm,EXX
6112,6112,6021,29db,2939,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY		;SAVE TEXT POINTER
6113,6113,6022,29dd,293b,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX		;LOOP VARIABLE
6114,6114,6023,29df,293d,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,CALL	CHECK
6115,6115,6024,29e2,2940,cd 1d 25,cd 7b 24,call $251d,call $247b,call $0000,exec.asm,CALL	XEQ
6116,6116,6025,29e5,2943,c1,c1,pop bc,pop bc,pop bc,exec.asm,NEXT:           POP	BC		;MARKER
6117,6117,6026,29e6,2944,21 e5 29,21 43 29,"ld hl,$29e5","ld hl,$2943","ld hl,$0000",exec.asm,"LD	HL,FORCHK"
6118,6118,6027,29e9,2947,b7,b7,or a,or a,or a,exec.asm,OR	A
6119,6119,6028,29ea,2948,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6120,6120,6029,29ec,294a,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",exec.asm,"JR	Z,NEXT2"
6121,6121,6030,29ee,294c,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6122,6122,6031,29ef,294d,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",exec.asm,"LD	A,3"
6123,6123,6032,29f1,294f,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6124,6124,6033,29f4,2952,20 ef,20 ef,"jr nz,$-$0f","jr nz,$-$0f","jr nz,$-$00",exec.asm,"JR	NZ,NEXT"
6125,6125,6034,29f6,2954,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",exec.asm,"LD	A,32"
6126,6126,6035,29f8,2956,18 6a,18 6a,jr $+$6c,jr $+$6c,jr $+$00,exec.asm,"JR	ERROR3ex		;""Not in a FOR loop"""
6127,6127,6036,29fa,2958,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,NEXT2:          CALL	TERMQ
6128,6128,6037,29fd,295b,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6129,6129,6038,29fe,295c,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6130,6130,6039,29ff,295d,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6131,6131,6040,2a00,295e,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6132,6132,6041,2a01,295f,c4 67 42,c4 c5 41,"call nz,$4267","call nz,$41c5","call nz,$0000",exec.asm,"CALL	NZ,GETVAR	;VARIABLE"
6133,6133,6042,2a04,2962,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6134,6134,6043,2a05,2963,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6135,6135,6044,2a06,2964,b7,b7,or a,or a,or a,exec.asm,OR	A
6136,6136,6045,2a07,2965,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"NEXT0:          SBC	HL,DE"
6137,6137,6046,2a09,2967,20 47,20 47,"jr nz,$+$49","jr nz,$+$49","jr nz,$+$00",exec.asm,"JR	NZ,NEXT1"
6138,6138,6047,2a0b,2969,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6139,6139,6048,2a0c,296a,dd 21 08 00,dd 21 08 00,"ld ix,$0008","ld ix,$0008","ld ix,$0000",exec.asm,"LD	IX,6+2"
6140,6140,6049,2a10,296e,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",exec.asm,"ADD	IX,SP"
6141,6141,6050,2a12,2970,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,exec.asm,CALL	DLOAD5		;STEP
6142,6142,6051,2a15,2973,dd 7e 0b,dd 7e 0b,"ld a,(ix+$0b)","ld a,(ix+$0b)","ld a,(ix+$00)",exec.asm,"LD	A,(IX+11)	;TYPE"
6143,6143,6052,2a18,2976,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6144,6144,6053,2a1a,2978,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,exec.asm,CALL	LOADN		;LOOP VARIABLE
6145,6145,6054,2a1d,297b,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6146,6146,6055,2a1e,297c,3e 0b,3e 0b,"ld a,$0b","ld a,$0b","ld a,$00",exec.asm,"LD	A,'+' & 0FH"
6147,6147,6056,2a20,297e,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,exec.asm,CALL	FPP		;ADD STEP
6148,6148,6057,2a23,2981,38 3f,38 3f,"jr c,$+$41","jr c,$+$41","jr c,$+$00",exec.asm,"JR	C,ERROR3ex"
6149,6149,6058,2a25,2983,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;RESTORE TYPE
6150,6150,6059,2a26,2984,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN		;UPDATE VARIABLE
6151,6151,6060,2a29,2987,dd 21 0c 00,dd 21 0c 00,"ld ix,$000c","ld ix,$000c","ld ix,$0000",exec.asm,"LD	IX,12"
6152,6152,6061,2a2d,298b,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",exec.asm,"ADD	IX,SP"
6153,6153,6062,2a2f,298d,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,exec.asm,CALL	DLOAD5		;LIMIT
6154,6154,6063,2a32,2990,dd 7e ff,dd 7e ff,"ld a,(ix-$01)","ld a,(ix-$01)","ld a,(ix-$00)",exec.asm,"LD	A,(IX-1)"
6155,6155,6064,2a35,2993,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,exec.asm,CALL	FPP		;TEST AGAINST LIMIT
6156,6156,6065,2a38,2996,38 2a,38 2a,"jr c,$+$2c","jr c,$+$2c","jr c,$+$00",exec.asm,"JR	C,ERROR3ex"
6157,6157,6066,2a3a,2998,24,24,inc h,inc h,inc h,exec.asm,INC	H
6158,6158,6067,2a3b,2999,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",exec.asm,"JR	NZ,LOOP		;KEEP LOOPING"
6159,6159,6068,2a3d,299b,21 12 00,21 12 00,"ld hl,$0012","ld hl,$0012","ld hl,$0000",exec.asm,"LD	HL,18"
6160,6160,6069,2a40,299e,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6161,6161,6070,2a41,299f,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
6162,6162,6071,2a42,29a0,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,CALL	NLIST
6163,6163,6072,2a45,29a3,18 9e,18 9e,jr $-$60,jr $-$60,jr $-$00,exec.asm,JR	NEXT
6164,6164,6073,2a47,29a5,c1,c1,pop bc,pop bc,pop bc,exec.asm,LOOP:           POP	BC
6165,6165,6074,2a48,29a6,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6166,6166,6075,2a49,29a7,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6167,6167,6076,2a4b,29a9,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6168,6168,6077,2a4d,29ab,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6169,6169,6078,2a4e,29ac,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6170,6170,6079,2a4f,29ad,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,JP	XEQ
6171,6171,6080,2a52,29b0,21 12 00,21 12 00,"ld hl,$0012","ld hl,$0012","ld hl,$0000",exec.asm,"NEXT1:          LD	HL,18"
6172,6172,6081,2a55,29b3,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6173,6173,6082,2a56,29b4,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL		;""POP"" THE STACK"
6174,6174,6083,2a57,29b5,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6175,6175,6084,2a58,29b6,21 e5 29,21 43 29,"ld hl,$29e5","ld hl,$2943","ld hl,$0000",exec.asm,"LD	HL,FORCHK"
6176,6176,6085,2a5b,29b9,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6177,6177,6086,2a5d,29bb,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL		;VARIABLE POINTER
6178,6178,6087,2a5e,29bc,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6179,6179,6088,2a5f,29bd,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6180,6180,6089,2a60,29be,28 a5,28 a5,"jr z,$-$59","jr z,$-$59","jr z,$-$00",exec.asm,"JR	Z,NEXT0"
6181,6181,6090,2a62,29c0,3e 21,3e 21,"ld a,$21","ld a,$21","ld a,$00",exec.asm,"LD	A,33"
6182,6182,6091,2a64,29c2,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"ERROR3ex:         JP	ERROR_		;""Can't match FOR"""
6183,6183,6092,2a67,29c5,f5,f5,push af,push af,push af,exec.asm,FN:             PUSH	AF		;MAKE SPACE ON STACK
6184,6184,6093,2a68,29c6,cd 6f 2a,cd cd 29,call $2a6f,call $29cd,call $0000,exec.asm,CALL	PROC1
6185,6185,6094,2a6b,29c9,f5,f5,push af,push af,push af,exec.asm,PROC:           PUSH	AF		;MAKE SPACE ON STACK
6186,6186,6095,2a6c,29ca,cd 6f 2a,cd cd 29,call $2a6f,call $29cd,call $0000,exec.asm,CALL	PROC1
6187,6187,6096,2a6f,29cd,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,PROC1:          CALL	CHECK
6188,6188,6097,2a72,29d0,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
6189,6189,6098,2a74,29d2,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6190,6190,6099,2a76,29d4,cd 1a 43,cd 78 42,call $431a,call $4278,call $0000,exec.asm,CALL	GETDEF
6191,6191,6100,2a79,29d7,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6192,6192,6101,2a7a,29d8,28 39,28 39,"jr z,$+$3b","jr z,$+$3b","jr z,$+$00",exec.asm,"JR	Z,PROC4"
6193,6193,6102,2a7c,29da,3e 1e,3e 1e,"ld a,$1e","ld a,$1e","ld a,$00",exec.asm,"LD	A,30"
6194,6194,6103,2a7e,29dc,38 e4,38 e4,"jr c,$-$1a","jr c,$-$1a","jr c,$-$00",exec.asm,"JR	C,ERROR3ex	;""Bad call"""
6195,6195,6104,2a80,29de,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6196,6196,6105,2a81,29df,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",exec.asm,"LD	HL,(PAGE_)"
6197,6197,6106,2a84,29e2,3e dd,3e dd,"ld a,$dd","ld a,$dd","ld a,$00",exec.asm,"PROC2:          LD	A,TDEF"
6198,6198,6107,2a86,29e4,cd 7f 36,cd dd 35,call $367f,call $35dd,call $0000,exec.asm,"CALL	SEARCHex		;LOOK FOR ""DEF"""
6199,6199,6108,2a89,29e7,38 21,38 21,"jr c,$+$23","jr c,$+$23","jr c,$+$00",exec.asm,"JR	C,PROC3"
6200,6200,6109,2a8b,29e9,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6201,6201,6110,2a8c,29ea,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6202,6202,6111,2a8e,29ec,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY		;SKIP DEF
6203,6203,6112,2a90,29ee,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
6204,6204,6113,2a93,29f1,cd 1a 43,cd 78 42,call $431a,call $4278,call $0000,exec.asm,CALL	GETDEF
6205,6205,6114,2a96,29f4,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6206,6206,6115,2a98,29f6,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6207,6207,6116,2a99,29f7,38 09,38 09,"jr c,$+$0b","jr c,$+$0b","jr c,$+$00",exec.asm,"JR	C,PROC6"
6208,6208,6117,2a9b,29f9,c4 c0 43,c4 1e 43,"call nz,$43c0","call nz,$431e","call nz,$0000",exec.asm,"CALL	NZ,CREATE"
6209,6209,6118,2a9e,29fc,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6210,6210,6119,2aa0,29fe,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6211,6211,6120,2aa1,29ff,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",exec.asm,"LD	(HL),E"
6212,6212,6121,2aa2,2a00,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6213,6213,6122,2aa3,2a01,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",exec.asm,"LD	(HL),D		;SAVE ADDRESS"
6214,6214,6123,2aa4,2a02,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"PROC6:          EX	DE,HL"
6215,6215,6124,2aa5,2a03,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
6216,6216,6125,2aa7,2a05,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
6217,6217,6126,2aa8,2a06,ed b1,ed b1,cpir,cpir,cpir,exec.asm,CPIR			;SKIP TO END OF LINE
6218,6218,6127,2aaa,2a08,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	PROC2
6219,6219,6128,2aac,2a0a,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,PROC3:          POP	IY		;RESTORE TEXT POINTER
6220,6220,6129,2aae,2a0c,cd 1a 43,cd 78 42,call $431a,call $4278,call $0000,exec.asm,CALL	GETDEF
6221,6221,6130,2ab1,2a0f,3e 1d,3e 1d,"ld a,$1d","ld a,$1d","ld a,$00",exec.asm,"LD	A,29"
6222,6222,6131,2ab3,2a11,20 af,20 af,"jr nz,$-$4f","jr nz,$-$4f","jr nz,$-$00",exec.asm,"JR	NZ,ERROR3ex	;""No such FN/PROC"""
6223,6223,6132,2ab5,2a13,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",exec.asm,"PROC4:          LD	E,(HL)"
6224,6224,6133,2ab6,2a14,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6225,6225,6134,2ab7,2a15,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",exec.asm,"LD	D,(HL)		;GET ADDRESS"
6226,6226,6135,2ab8,2a16,21 02 00,21 02 00,"ld hl,$0002","ld hl,$0002","ld hl,$0000",exec.asm,"LD	HL,2"
6227,6227,6136,2abb,2a19,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6228,6228,6137,2abc,2a1a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT		;ALLOW SPACE BEFORE (
6229,6229,6138,2abf,2a1d,d5,d5,push de,push de,push de,exec.asm,"PUSH	DE		;EXCHANGE DE,IY"
6230,6230,6139,2ac0,2a1e,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
6231,6231,6140,2ac2,2a20,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6232,6232,6141,2ac3,2a21,fe 28,fe 28,cp $28,cp $28,cp $00,exec.asm,CP	'('		;ARGUMENTS?
6233,6233,6142,2ac5,2a23,c2 69 2b,c2 c7 2a,"jp nz,$2b69","jp nz,$2ac7","jp nz,$0000",exec.asm,"JP	NZ,PROC5"
6234,6234,6143,2ac8,2a26,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT		;ALLOW SPACE BEFORE (
6235,6235,6144,2acb,2a29,fe 28,fe 28,cp $28,cp $28,cp $00,exec.asm,CP	'('
6236,6236,6145,2acd,2a2b,c2 64 26,c2 c2 25,"jp nz,$2664","jp nz,$25c2","jp nz,$0000",exec.asm,"JP	NZ,SYNTAX	;""Syntax error"""
6237,6237,6146,2ad0,2a2e,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6238,6238,6147,2ad2,2a30,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;SAVE IY IN BC
6239,6239,6148,2ad3,2a31,d9,d9,exx,exx,exx,exec.asm,EXX
6240,6240,6149,2ad4,2a32,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6241,6241,6150,2ad5,2a33,af,af,xor a,xor a,xor a,exec.asm,XOR	A		;INITIALISE RETURN COUNT
6242,6242,6151,2ad6,2a34,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6243,6243,6152,2ad7,2a35,cd 42 35,cd a0 34,call $3542,call $34a0,call $0000,exec.asm,CALL	SAVLOC		;SAVE DUMMY VARIABLES
6244,6244,6153,2ada,2a38,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6245,6245,6154,2adb,2a39,b7,b7,or a,or a,or a,exec.asm,OR	A
6246,6246,6155,2adc,2a3a,28 16,28 16,"jr z,$+$18","jr z,$+$18","jr z,$+$00",exec.asm,"JR	Z,RETCHK	;NO RETURNS"
6247,6247,6156,2ade,2a3c,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6248,6248,6157,2adf,2a3d,ed 44,ed 44,neg,neg,neg,exec.asm,NEG
6249,6249,6158,2ae1,2a3f,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A"
6250,6250,6159,2ae2,2a40,ed 44,ed 44,neg,neg,neg,exec.asm,NEG
6251,6251,6160,2ae4,2a42,26 ff,26 ff,"ld h,$ff","ld h,$ff","ld h,$00",exec.asm,"LD	H,-1		;HL = -RETURNS"
6252,6252,6161,2ae6,2a44,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
6253,6253,6162,2ae7,2a45,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
6254,6254,6163,2ae8,2a46,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL		;-RETURNS * 8"
6255,6255,6164,2ae9,2a47,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
6256,6256,6165,2aea,2a48,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6257,6257,6166,2aec,2a4a,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",exec.asm,"ADD	IX,SP"
6258,6258,6167,2aee,2a4c,dd f9,dd f9,"ld sp,ix","ld sp,ix","ld sp,ix",exec.asm,"LD	SP,IX"
6259,6259,6168,2af0,2a4e,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;PUSH RETURN COUNT
6260,6260,6169,2af1,2a4f,cd f4 2a,cd 52 2a,call $2af4,call $2a52,call $0000,exec.asm,CALL	RETCHK		;PUSH MARKER
6261,6261,6170,2af4,2a52,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"RETCHK:         EX	AF,AF'"
6262,6262,6171,2af5,2a53,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,CALL	BRAKET		;CLOSING BRACKET
6263,6263,6172,2af8,2a56,d9,d9,exx,exx,exx,exec.asm,EXX
6264,6264,6173,2af9,2a57,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6265,6265,6174,2afa,2a58,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY		;RESTORE IY
6266,6266,6175,2afc,2a5a,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6267,6267,6176,2afd,2a5b,cd 51 33,cd af 32,call $3351,call $32af,call $0000,exec.asm,CALL	ARGUE		;TRANSFER ARGUMENTS
6268,6268,6177,2b00,2a5e,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6269,6269,6178,2b01,2a5f,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
6270,6270,6179,2b02,2a60,b7,b7,or a,or a,or a,exec.asm,OR	A
6271,6271,6180,2b03,2a61,01 f4 2a,01 52 2a,"ld bc,$2af4","ld bc,$2a52","ld bc,$0000",exec.asm,"LD	BC,RETCHK"
6272,6272,6181,2b06,2a64,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6273,6273,6182,2b08,2a66,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
6274,6274,6183,2b09,2a67,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
6275,6275,6184,2b0a,2a68,20 5d,20 5d,"jr nz,$+$5f","jr nz,$+$5f","jr nz,$+$00",exec.asm,"JR	NZ,PROC5	;No RETURNs"
6276,6276,6185,2b0c,2a6a,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6277,6277,6186,2b0d,2a6b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6278,6278,6187,2b0e,2a6c,21 07 00,21 07 00,"ld hl,$0007","ld hl,$0007","ld hl,$0000",exec.asm,"LD	HL,7		;Skip two PUSHes and RETCHK"
6279,6279,6188,2b11,2a6f,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6280,6280,6189,2b12,2a70,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)		;RETURN count"
6281,6281,6190,2b13,2a71,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6282,6282,6191,2b14,2a72,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6283,6283,6192,2b15,2a73,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX		;Address RETURNs table
6284,6284,6193,2b17,2a75,5f,5f,"ld e,a","ld e,a","ld e,a",exec.asm,"PROC0:          LD	E,A"
6285,6285,6194,2b18,2a76,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",exec.asm,"LD	D,0"
6286,6286,6195,2b1a,2a78,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6287,6287,6196,2b1b,2a79,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
6288,6288,6197,2b1c,2a7a,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
6289,6289,6198,2b1d,2a7b,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
6290,6290,6199,2b1e,2a7c,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE		;HL addresses SAVLOC stack"
6291,6291,6200,2b1f,2a7d,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6292,6292,6201,2b20,2a7e,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL		;Bump past LOCCHK
6293,6293,6202,2b21,2a7f,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",exec.asm,"PROC7:          LD	E,(HL)"
6294,6294,6203,2b22,2a80,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6295,6295,6204,2b23,2a81,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",exec.asm,"LD	D,(HL)		;DE = SAVLOC VARPTR"
6296,6296,6205,2b24,2a82,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6297,6297,6206,2b25,2a83,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"LD	C,(HL)		;Length (if string)"
6298,6298,6207,2b26,2a84,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6299,6299,6208,2b27,2a85,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",exec.asm,"LD	B,(HL)		;Variable type"
6300,6300,6209,2b28,2a86,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;Save type
6301,6301,6210,2b29,2a87,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6302,6302,6211,2b2a,2a88,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6303,6303,6212,2b2c,2a8a,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;B = RETURN count"
6304,6304,6213,2b2d,2a8b,dd 6e 04,dd 6e 04,"ld l,(ix+$04)","ld l,(ix+$04)","ld l,(ix+$00)",exec.asm,"PROC8:          LD	L,(IX+4)"
6305,6305,6214,2b30,2a8e,dd 66 05,dd 66 05,"ld h,(ix+$05)","ld h,(ix+$05)","ld h,(ix+$00)",exec.asm,"LD	H,(IX+5)	;HL = RETURNed VARPTR"
6306,6306,6215,2b33,2a91,b7,b7,or a,or a,or a,exec.asm,OR	A
6307,6307,6216,2b34,2a92,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
6308,6308,6217,2b36,2a94,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",exec.asm,"JR	Z,PROC9"
6309,6309,6218,2b38,2a96,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6310,6310,6219,2b39,2a97,11 08 00,11 08 00,"ld de,$0008","ld de,$0008","ld de,$0000",exec.asm,"LD	DE,8"
6311,6311,6220,2b3c,2a9a,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",exec.asm,"ADD	IX,DE"
6312,6312,6221,2b3e,2a9c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6313,6313,6222,2b3f,2a9d,10 ec,10 ec,djnz $-$12,djnz $-$12,djnz $-$00,exec.asm,DJNZ	PROC8
6314,6314,6223,2b41,2a9f,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,PROC9:          POP	IX
6315,6315,6224,2b43,2aa1,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6316,6316,6225,2b44,2aa2,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Restore type
6317,6317,6226,2b45,2aa3,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",exec.asm,"JR	NZ,PROCA"
6318,6318,6227,2b47,2aa5,cb e6,cb e6,"set 4,(hl)","set 4,(hl)","set 4,(hl)",exec.asm,"SET	4,(HL)		;Flag don't restore"
6319,6319,6228,2b49,2aa7,11 03 00,11 03 00,"ld de,$0003","ld de,$0003","ld de,$0000",exec.asm,"PROCA:          LD	DE,3"
6320,6320,6229,2b4c,2aaa,cb 70,cb 70,"bit 6,b","bit 6,b","bit 6,b",exec.asm,"BIT	6,B"
6321,6321,6230,2b4e,2aac,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",exec.asm,"JR	NZ,PROCB	;Whole array"
6322,6322,6231,2b50,2aae,1e 05,1e 05,"ld e,$05","ld e,$05","ld e,$00",exec.asm,"LD	E,5"
6323,6323,6232,2b52,2ab0,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",exec.asm,"BIT	7,B"
6324,6324,6233,2b54,2ab2,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",exec.asm,"JR	Z,PROCB		;Numeric"
6325,6325,6234,2b56,2ab4,59,59,"ld e,c","ld e,c","ld e,c",exec.asm,"LD	E,C"
6326,6326,6235,2b57,2ab5,13,13,inc de,inc de,inc de,exec.asm,INC	DE
6327,6327,6236,2b58,2ab6,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"PROCB:          ADD	HL,DE"
6328,6328,6237,2b59,2ab7,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"LD	C,(HL)"
6329,6329,6238,2b5a,2ab8,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6330,6330,6239,2b5b,2ab9,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",exec.asm,"LD	B,(HL)"
6331,6331,6240,2b5c,2aba,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL		; BC = marker ?
6332,6332,6241,2b5d,2abb,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6333,6333,6242,2b5e,2abc,21 ae 35,21 0c 35,"ld hl,$35ae","ld hl,$350c","ld hl,$0000",exec.asm,"LD	HL,LOCCHK"
6334,6334,6243,2b61,2abf,b7,b7,or a,or a,or a,exec.asm,OR	A
6335,6335,6244,2b62,2ac0,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6336,6336,6245,2b64,2ac2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6337,6337,6246,2b65,2ac3,28 ba,28 ba,"jr z,$-$44","jr z,$-$44","jr z,$-$00",exec.asm,"JR	Z,PROC7		;Another"
6338,6338,6247,2b67,2ac5,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6339,6339,6248,2b68,2ac6,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6340,6340,6249,2b69,2ac7,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",exec.asm,"PROC5:          LD	(HL),E		;SAVE ""RETURN ADDRESS"""
6341,6341,6250,2b6a,2ac8,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6342,6342,6251,2b6b,2ac9,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
6343,6343,6252,2b6c,2aca,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",exec.asm,"LD	(HL),D"
6344,6344,6253,2b6d,2acb,fe ee,fe ee,cp $ee,cp $ee,cp $00,exec.asm,"CP	TON		;WAS IT ""ON PROC"" ?"
6345,6345,6254,2b6f,2acd,20 0c,20 0c,"jr nz,$+$0e","jr nz,$+$0e","jr nz,$+$00",exec.asm,"JR	NZ,XEQGO"
6346,6346,6255,2b71,2acf,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6347,6347,6256,2b72,2ad0,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
6348,6348,6257,2b74,2ad2,cd c6 35,cd 24 35,call $35c6,call $3524,call $0000,exec.asm,CALL	SPAN		;SKIP REST OF ON LIST
6349,6349,6258,2b77,2ad5,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
6350,6350,6259,2b79,2ad7,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6351,6351,6260,2b7a,2ad8,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",exec.asm,"LD	(HL),D"
6352,6352,6261,2b7b,2ad9,2b,2b,dec hl,dec hl,dec hl,exec.asm,DEC	HL
6353,6353,6262,2b7c,2ada,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",exec.asm,"LD	(HL),E"
6354,6354,6263,2b7d,2adb,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO:          JP	XEQ
6355,6355,6264,2b80,2ade,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,LOCERR:         INC	IY
6356,6356,6265,2b82,2ae0,18 f9,18 f9,jr $-$05,jr $-$05,jr $-$00,exec.asm,JR	XEQGO
6357,6357,6266,2b84,2ae2,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,LOCDAT:         INC	IY
6358,6358,6267,2b86,2ae4,2a f0 55,2a f0 54,"ld hl,($55f0)","ld hl,($54f0)","ld hl,($0000)",exec.asm,"LD	HL,(DATPTR)"
6359,6359,6268,2b89,2ae7,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6360,6360,6269,2b8a,2ae8,3e 40,3e 40,"ld a,$40","ld a,$40","ld a,$00",exec.asm,"LD	A,40H"
6361,6361,6270,2b8c,2aea,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6362,6362,6271,2b8d,2aeb,21 f0 55,21 f0 54,"ld hl,$55f0","ld hl,$54f0","ld hl,$0000",exec.asm,"LD	HL,DATPTR"
6363,6363,6272,2b90,2aee,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6364,6364,6273,2b91,2aef,21 ae 35,21 0c 35,"ld hl,$35ae","ld hl,$350c","ld hl,$0000",exec.asm,"LD	HL,LOCCHK"
6365,6365,6274,2b94,2af2,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6366,6366,6275,2b95,2af3,18 e6,18 e6,jr $-$18,jr $-$18,jr $-$00,exec.asm,JR	XEQGO
6367,6367,6276,2b97,2af5,fe 85,fe 85,cp $85,cp $85,cp $00,exec.asm,LOCAL:          CP	TERROR
6368,6368,6277,2b99,2af7,28 e5,28 e5,"jr z,$-$19","jr z,$-$19","jr z,$-$00",exec.asm,"JR	Z,LOCERR"
6369,6369,6278,2b9b,2af9,fe dc,fe dc,cp $dc,cp $dc,cp $00,exec.asm,CP	TDATA
6370,6370,6279,2b9d,2afb,28 e5,28 e5,"jr z,$-$19","jr z,$-$19","jr z,$-$00",exec.asm,"JR	Z,LOCDAT"
6371,6371,6280,2b9f,2afd,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6372,6372,6281,2ba0,2afe,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6373,6373,6282,2ba1,2aff,21 6b 2a,21 c9 29,"ld hl,$2a6b","ld hl,$29c9","ld hl,$0000",exec.asm,"LD	HL,FNCHK"
6374,6374,6283,2ba4,2b02,b7,b7,or a,or a,or a,exec.asm,OR	A
6375,6375,6284,2ba5,2b03,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6376,6376,6285,2ba7,2b05,28 23,28 23,"jr z,$+$25","jr z,$+$25","jr z,$+$00",exec.asm,"JR	Z,LOCAL1"
6377,6377,6286,2ba9,2b07,21 6f 2a,21 cd 29,"ld hl,$2a6f","ld hl,$29cd","ld hl,$0000",exec.asm,"LD	HL,PROCHK"
6378,6378,6287,2bac,2b0a,b7,b7,or a,or a,or a,exec.asm,OR	A
6379,6379,6288,2bad,2b0b,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6380,6380,6289,2baf,2b0d,28 1b,28 1b,"jr z,$+$1d","jr z,$+$1d","jr z,$+$00",exec.asm,"JR	Z,LOCAL1"
6381,6381,6290,2bb1,2b0f,21 ae 35,21 0c 35,"ld hl,$35ae","ld hl,$350c","ld hl,$0000",exec.asm,"LD	HL,LOCCHK"
6382,6382,6291,2bb4,2b12,b7,b7,or a,or a,or a,exec.asm,OR	A
6383,6383,6292,2bb5,2b13,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6384,6384,6293,2bb7,2b15,28 13,28 13,"jr z,$+$15","jr z,$+$15","jr z,$+$00",exec.asm,"JR	Z,LOCAL1"
6385,6385,6294,2bb9,2b17,21 60 27,21 be 26,"ld hl,$2760","ld hl,$26be","ld hl,$0000",exec.asm,"LD	HL,ARRCHK"
6386,6386,6295,2bbc,2b1a,b7,b7,or a,or a,or a,exec.asm,OR	A
6387,6387,6296,2bbd,2b1b,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6388,6388,6297,2bbf,2b1d,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",exec.asm,"JR	Z,LOCAL1"
6389,6389,6298,2bc1,2b1f,21 f4 2a,21 52 2a,"ld hl,$2af4","ld hl,$2a52","ld hl,$0000",exec.asm,"LD	HL,RETCHK"
6390,6390,6299,2bc4,2b22,b7,b7,or a,or a,or a,exec.asm,OR	A
6391,6391,6300,2bc5,2b23,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6392,6392,6301,2bc7,2b25,3e 0c,3e 0c,"ld a,$0c","ld a,$0c","ld a,$00",exec.asm,"LD	A,12"
6393,6393,6302,2bc9,2b27,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",exec.asm,"JP	NZ,ERROR_	;""Not LOCAL"""
6394,6394,6303,2bcc,2b2a,fd e5,fd e5,push iy,push iy,push iy,exec.asm,LOCAL1:         PUSH	IY
6395,6395,6304,2bce,2b2c,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6396,6396,6305,2bcf,2b2d,d9,d9,exx,exx,exx,exec.asm,EXX
6397,6397,6306,2bd0,2b2e,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
6398,6398,6307,2bd2,2b30,cd 42 35,cd a0 34,call $3542,call $34a0,call $0000,exec.asm,CALL	SAVLOC
6399,6399,6308,2bd5,2b33,d9,d9,exx,exx,exx,exec.asm,EXX
6400,6400,6309,2bd6,2b34,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6401,6401,6310,2bd7,2b35,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6402,6402,6311,2bd9,2b37,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,LOCAL2:         CALL	GETVAR
6403,6403,6312,2bdc,2b3a,c2 64 26,c2 c2 25,"jp nz,$2664","jp nz,$25c2","jp nz,$0000",exec.asm,"JP	NZ,SYNTAX"
6404,6404,6313,2bdf,2b3d,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"BIT	6,A		;ARRAY?"
6405,6405,6314,2be1,2b3f,20 14,20 14,"jr nz,$+$16","jr nz,$+$16","jr nz,$+$00",exec.asm,"JR	NZ,LOCAL4"
6406,6406,6315,2be3,2b41,b7,b7,or a,or a,or a,exec.asm,OR	A		;TYPE
6407,6407,6316,2be4,2b42,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6408,6408,6317,2be5,2b43,cd 7c 20,cd da 1f,call $207c,call $1fda,call $0000,exec.asm,CALL	ZERO
6409,6409,6318,2be8,2b46,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6410,6410,6319,2be9,2b47,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6411,6411,6320,2bea,2b48,f4 74 32,f4 d2 31,"call p,$3274","call p,$31d2","call p,$0000",exec.asm,"CALL	P,STOREN	;ZERO"
6412,6412,6321,2bed,2b4b,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6413,6413,6322,2bee,2b4c,59,59,"ld e,c","ld e,c","ld e,c",exec.asm,"LD	E,C"
6414,6414,6323,2bef,2b4d,fc c5 32,fc 23 32,"call m,$32c5","call m,$3223","call m,$0000",exec.asm,"CALL	M,STORES"
6415,6415,6324,2bf2,2b50,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,LOCAL3:         CALL	NLIST
6416,6416,6325,2bf5,2b53,18 e2,18 e2,jr $-$1c,jr $-$1c,jr $-$00,exec.asm,JR	LOCAL2
6417,6417,6326,2bf7,2b55,dd 36 00 01,dd 36 00 01,"ld (ix),$01","ld (ix),$01","ld (ix),$00",exec.asm,"LOCAL4:         LD	(IX+0),1	;FLAG LOCAL ARRAY"
6418,6418,6327,2bfb,2b59,dd 36 01 00,dd 36 01 00,"ld (ix+$01),$00","ld (ix+$01),$00","ld (ix+$00),$00",exec.asm,"LD	(IX+1),0"
6419,6419,6328,2bff,2b5d,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,exec.asm,JR	LOCAL3
6420,6420,6329,2c01,2b5f,c1,c1,pop bc,pop bc,pop bc,exec.asm,ENDPRO:         POP	BC
6421,6421,6330,2c02,2b60,21 6f 2a,21 cd 29,"ld hl,$2a6f","ld hl,$29cd","ld hl,$0000",exec.asm,"LD	HL,PROCHK	;PROC MARKER"
6422,6422,6331,2c05,2b63,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6423,6423,6332,2c06,2b64,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6424,6424,6333,2c08,2b66,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",exec.asm,"JR	Z,ENDPR1"
6425,6425,6334,2c0a,2b68,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;PUT BACK
6426,6426,6335,2c0b,2b69,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6427,6427,6336,2c0e,2b6c,20 f1,20 f1,"jr nz,$-$0d","jr nz,$-$0d","jr nz,$-$00",exec.asm,"JR	NZ,ENDPRO"
6428,6428,6337,2c10,2b6e,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,13"
6429,6429,6338,2c12,2b70,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"JP	ERROR_		;""No PROC"""
6430,6430,6339,2c15,2b73,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,ENDPR1:         POP	IY
6431,6431,6340,2c17,2b75,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO6:         JP	XEQ
6432,6432,6341,2c1a,2b78,cd 5f 37,cd bd 36,call $375f,call $36bd,call $0000,exec.asm,INPUTN:         CALL	CHNL		;E = CHANNEL NUMBER
6433,6433,6342,2c1d,2b7b,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,INPN1:          CALL	NLIST
6434,6434,6343,2c20,2b7e,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6435,6435,6344,2c21,2b7f,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
6436,6436,6345,2c24,2b82,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6437,6437,6346,2c25,2b83,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
6438,6438,6347,2c26,2b84,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;VARPTR
6439,6439,6348,2c27,2b85,b7,b7,or a,or a,or a,exec.asm,OR	A
6440,6440,6349,2c28,2b86,fa 4d 2c,fa ab 2b,"jp m,$2c4d","jp m,$2bab","jp m,$0000",exec.asm,"JP	M,INPN2		;STRING"
6441,6441,6350,2c2b,2b89,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,CALL	OSBGET
6442,6442,6351,2c2e,2b8c,d9,d9,exx,exx,exx,exec.asm,EXX
6443,6443,6352,2c2f,2b8d,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A"
6444,6444,6353,2c30,2b8e,d9,d9,exx,exx,exx,exec.asm,EXX
6445,6445,6354,2c31,2b8f,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,CALL	OSBGET
6446,6446,6355,2c34,2b92,d9,d9,exx,exx,exx,exec.asm,EXX
6447,6447,6356,2c35,2b93,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
6448,6448,6357,2c36,2b94,d9,d9,exx,exx,exx,exec.asm,EXX
6449,6449,6358,2c37,2b95,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,CALL	OSBGET
6450,6450,6359,2c3a,2b98,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A"
6451,6451,6360,2c3b,2b99,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,CALL	OSBGET
6452,6452,6361,2c3e,2b9c,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
6453,6453,6362,2c3f,2b9d,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,CALL	OSBGET
6454,6454,6363,2c42,2ba0,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
6455,6455,6364,2c43,2ba1,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6456,6456,6365,2c45,2ba3,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;RESTORE TYPE
6457,6457,6366,2c46,2ba4,d5,d5,push de,push de,push de,exec.asm,PUSH	DE		;SAVE CHANNEL
6458,6458,6367,2c47,2ba5,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN
6459,6459,6368,2c4a,2ba8,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6460,6460,6369,2c4b,2ba9,18 d0,18 d0,jr $-$2e,jr $-$2e,jr $-$00,exec.asm,JR	INPN1
6461,6461,6370,2c4d,2bab,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"INPN2:          LD	HL,ACCS"
6462,6462,6371,2c50,2bae,cd 5d 06,cd 3d 06,call $065d,call $063d,call $0000,exec.asm,INPN3:          CALL	OSBGET
6463,6463,6372,2c53,2bb1,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6464,6464,6373,2c55,2bb3,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",exec.asm,"JR	Z,INPN4"
6465,6465,6374,2c57,2bb5,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",exec.asm,"LD	(HL),A"
6466,6466,6375,2c58,2bb6,2c,2c,inc l,inc l,inc l,exec.asm,INC	L
6467,6467,6376,2c59,2bb7,20 f5,20 f5,"jr nz,$-$09","jr nz,$-$09","jr nz,$-$00",exec.asm,"JR	NZ,INPN3"
6468,6468,6377,2c5b,2bb9,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,INPN4:          POP	IX
6469,6469,6378,2c5d,2bbb,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6470,6470,6379,2c5e,2bbc,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6471,6471,6380,2c5f,2bbd,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6472,6472,6381,2c60,2bbe,cd c2 32,cd 20 32,call $32c2,call $3220,call $0000,exec.asm,CALL	STACCS
6473,6473,6382,2c63,2bc1,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6474,6474,6383,2c64,2bc2,18 b7,18 b7,jr $-$47,jr $-$47,jr $-$00,exec.asm,JR	INPN1
6475,6475,6384,2c66,2bc4,fe 23,fe 23,cp $23,cp $23,cp $00,exec.asm,INPUT:          CP	'#'
6476,6476,6385,2c68,2bc6,28 b0,28 b0,"jr z,$-$4e","jr z,$-$4e","jr z,$-$00",exec.asm,"JR	Z,INPUTN"
6477,6477,6386,2c6a,2bc8,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",exec.asm,"LD	C,0		;FLAG PROMPT"
6478,6478,6387,2c6c,2bca,fe 86,fe 86,cp $86,cp $86,cp $00,exec.asm,CP	TLINE
6479,6479,6388,2c6e,2bcc,20 04,20 04,"jr nz,$+$06","jr nz,$+$06","jr nz,$+$00",exec.asm,"JR	NZ,INPUT0"
6480,6480,6389,2c70,2bce,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"INC	IY		;SKIP ""LINE"""
6481,6481,6390,2c72,2bd0,0e 80,0e 80,"ld c,$80","ld c,$80","ld c,$00",exec.asm,"LD	C,80H"
6482,6482,6391,2c74,2bd2,21 00 54,21 00 53,"ld hl,$5400","ld hl,$5300","ld hl,$0000",exec.asm,"INPUT0:         LD	HL,BUFFER"
6483,6483,6392,2c77,2bd5,36 0d,36 0d,"ld (hl),$0d","ld (hl),$0d","ld (hl),$00",exec.asm,"LD	(HL),CR		;INITIALISE EMPTY"
6484,6484,6393,2c79,2bd7,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,INPUT1:         CALL	TERMQ
6485,6485,6394,2c7c,2bda,28 99,28 99,"jr z,$-$65","jr z,$-$65","jr z,$-$00",exec.asm,"JR	Z,XEQGO6	;DONE"
6486,6486,6395,2c7e,2bdc,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6487,6487,6396,2c80,2bde,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
6488,6488,6397,2c82,2be0,28 51,28 51,"jr z,$+$53","jr z,$+$53","jr z,$+$00",exec.asm,"JR	Z,INPUT3	;SKIP COMMA"
6489,6489,6398,2c84,2be2,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
6490,6490,6399,2c86,2be4,28 4d,28 4d,"jr z,$+$4f","jr z,$+$4f","jr z,$+$00",exec.asm,"JR	Z,INPUT3"
6491,6491,6400,2c88,2be6,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;SAVE BUFFER POINTER
6492,6492,6401,2c89,2be7,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
6493,6493,6402,2c8b,2be9,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",exec.asm,"JR	NZ,INPUT6"
6494,6494,6403,2c8d,2beb,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6495,6495,6404,2c8e,2bec,cd fe 19,cd 5c 19,call $19fe,call $195c,call $0000,exec.asm,CALL	CONS
6496,6496,6405,2c91,2bef,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6497,6497,6406,2c92,2bf0,cd 35 36,cd 93 35,call $3635,call $3593,call $0000,exec.asm,CALL	PTEXT		;PRINT PROMPT
6498,6498,6407,2c95,2bf3,18 05,18 05,jr $+$07,jr $+$07,jr $+$00,exec.asm,JR	INPUT9
6499,6499,6408,2c97,2bf5,cd e0 35,cd 3e 35,call $35e0,call $353e,call $0000,exec.asm,"INPUT6:         CALL	FORMAT		;SPC, TAB, '"
6500,6500,6409,2c9a,2bf8,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",exec.asm,"JR	NZ,INPUT2"
6501,6501,6410,2c9c,2bfa,e1,e1,pop hl,pop hl,pop hl,exec.asm,INPUT9:         POP	HL
6502,6502,6411,2c9d,2bfb,cb c1,cb c1,"set 0,c","set 0,c","set 0,c",exec.asm,"SET	0,C		;FLAG NO PROMPT"
6503,6503,6412,2c9f,2bfd,18 d3,18 d3,jr $-$2b,jr $-$2b,jr $-$00,exec.asm,JR	INPUT0
6504,6504,6413,2ca1,2bff,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,INPUT2:         DEC	IY
6505,6505,6414,2ca3,2c01,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6506,6506,6415,2ca4,2c02,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
6507,6507,6416,2ca7,2c05,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6508,6508,6417,2ca8,2c06,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6509,6509,6418,2ca9,2c07,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
6510,6510,6419,2caa,2c08,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
6511,6511,6420,2cab,2c09,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6512,6512,6421,2cac,2c0a,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR		;BUFFER EMPTY?
6513,6513,6422,2cae,2c0c,cc d9 2c,cc 37 2c,"call z,$2cd9","call z,$2c37","call z,$0000",exec.asm,"CALL	Z,REFILL"
6514,6514,6423,2cb1,2c0f,cb 79,cb 79,"bit 7,c","bit 7,c","bit 7,c",exec.asm,"BIT	7,C"
6515,6515,6424,2cb3,2c11,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6516,6516,6425,2cb4,2c12,c4 53 36,c4 b1 35,"call nz,$3653","call nz,$35b1","call nz,$0000",exec.asm,"CALL	NZ,LINES"
6517,6517,6426,2cb7,2c15,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6518,6518,6427,2cb8,2c16,cc 42 36,cc a0 35,"call z,$3642","call z,$35a0","call z,$0000",exec.asm,"CALL	Z,FETCHS"
6519,6519,6428,2cbb,2c19,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;RESTORE TYPE
6520,6520,6429,2cbc,2c1a,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6521,6521,6430,2cbd,2c1b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6522,6522,6431,2cbe,2c1c,b7,b7,or a,or a,or a,exec.asm,OR	A
6523,6523,6432,2cbf,2c1d,fa d0 2c,fa 2e 2c,"jp m,$2cd0","jp m,$2c2e","jp m,$0000",exec.asm,"JP	M,INPUT4	;STRING"
6524,6524,6433,2cc2,2c20,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6525,6525,6434,2cc3,2c21,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6526,6526,6435,2cc5,2c23,cd a6 1c,cd 04 1c,call $1ca6,call $1c04,call $0000,exec.asm,CALL	VAL0
6527,6527,6436,2cc8,2c26,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6528,6528,6437,2cca,2c28,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6529,6529,6438,2ccb,2c29,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN
6530,6530,6439,2cce,2c2c,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,exec.asm,JR	INPUT5
6531,6531,6440,2cd0,2c2e,cd c2 32,cd 20 32,call $32c2,call $3220,call $0000,exec.asm,INPUT4:         CALL	STACCS
6532,6532,6441,2cd3,2c31,e1,e1,pop hl,pop hl,pop hl,exec.asm,INPUT5:         POP	HL
6533,6533,6442,2cd4,2c32,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6534,6534,6443,2cd5,2c33,cb 81,cb 81,"res 0,c","res 0,c","res 0,c",exec.asm,"INPUT3:         RES	0,C"
6535,6535,6444,2cd7,2c35,18 a0,18 a0,jr $-$5e,jr $-$5e,jr $-$00,exec.asm,JR	INPUT1
6536,6536,6445,2cd9,2c37,cb 41,cb 41,"bit 0,c","bit 0,c","bit 0,c",exec.asm,"REFILL:         BIT	0,C"
6537,6537,6446,2cdb,2c39,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",exec.asm,"JR	NZ,REFIL0	;NO PROMPT"
6538,6538,6447,2cdd,2c3b,3e 3f,3e 3f,"ld a,$3f","ld a,$3f","ld a,$00",exec.asm,"LD	A,'?'"
6539,6539,6448,2cdf,2c3d,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR		;PROMPT
6540,6540,6449,2ce2,2c40,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",exec.asm,"LD	A,' '"
6541,6541,6450,2ce4,2c42,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR
6542,6542,6451,2ce7,2c45,21 00 54,21 00 53,"ld hl,$5400","ld hl,$5300","ld hl,$0000",exec.asm,"REFIL0:         LD	HL,BUFFER"
6543,6543,6452,2cea,2c48,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6544,6544,6453,2ceb,2c49,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6545,6545,6454,2cec,2c4a,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6546,6546,6455,2cee,2c4c,cd e9 05,cd c9 05,call $05e9,call $05c9,call $0000,exec.asm,CALL	OSLINE
6547,6547,6456,2cf1,2c4f,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6548,6548,6457,2cf3,2c51,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6549,6549,6458,2cf4,2c52,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6550,6550,6459,2cf5,2c53,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;POS AT ENTRY"
6551,6551,6460,2cf6,2c54,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6552,6552,6461,2cf7,2c55,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",exec.asm,"LD	(COUNT),A"
6553,6553,6462,2cfa,2c58,b8,b8,cp b,cp b,cp b,exec.asm,CP	B
6554,6554,6463,2cfb,2c59,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
6555,6555,6464,2cfc,2c5a,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"REFIL1:         LD	A,(HL)"
6556,6556,6465,2cfd,2c5b,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6557,6557,6466,2cff,2c5d,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
6558,6558,6467,2d00,2c5e,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6559,6559,6468,2d01,2c5f,10 f9,10 f9,djnz $-$05,djnz $-$05,djnz $-$00,exec.asm,DJNZ	REFIL1
6560,6560,6469,2d03,2c61,c9,c9,ret,ret,ret,exec.asm,RET
6561,6561,6470,2d04,2c62,fe 23,fe 23,cp $23,cp $23,cp $00,exec.asm,READ:           CP	'#'
6562,6562,6471,2d06,2c64,ca 1a 2c,ca 78 2b,"jp z,$2c1a","jp z,$2b78","jp z,$0000",exec.asm,"JP	Z,INPUTN"
6563,6563,6472,2d09,2c67,2a f0 55,2a f0 54,"ld hl,($55f0)","ld hl,($54f0)","ld hl,($0000)",exec.asm,"LD	HL,(DATPTR)"
6564,6564,6473,2d0c,2c6a,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"READ0:          LD	A,(HL)"
6565,6565,6474,2d0d,2c6b,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,exec.asm,CP	':'
6566,6566,6475,2d0f,2c6d,cc fc 2c,cc 5a 2c,"call z,$2cfc","call z,$2c5a","call z,$0000",exec.asm,"CALL	Z,REFIL1"
6567,6567,6476,2d12,2c70,23,23,inc hl,inc hl,inc hl,exec.asm,"INC	HL		;SKIP COMMA | ""DATA"""
6568,6568,6477,2d13,2c71,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR		;END OF DATA STMT?
6569,6569,6478,2d15,2c73,cc 44 2d,cc a2 2c,"call z,$2d44","call z,$2ca2","call z,$0000",exec.asm,"CALL	Z,GETDAT"
6570,6570,6479,2d18,2c76,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6571,6571,6480,2d19,2c77,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
6572,6572,6481,2d1c,2c7a,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6573,6573,6482,2d1d,2c7b,b7,b7,or a,or a,or a,exec.asm,OR	A
6574,6574,6483,2d1e,2c7c,fa 34 2d,fa 92 2c,"jp m,$2d34","jp m,$2c92","jp m,$0000",exec.asm,"JP	M,READ1		;STRING"
6575,6575,6484,2d21,2c7f,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6576,6576,6485,2d22,2c80,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
6577,6577,6486,2d24,2c82,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
6578,6578,6487,2d25,2c83,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
6579,6579,6488,2d27,2c85,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN
6580,6580,6489,2d2a,2c88,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
6581,6581,6490,2d2c,2c8a,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6582,6582,6491,2d2d,2c8b,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN
6583,6583,6492,2d30,2c8e,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
6584,6584,6493,2d32,2c90,18 07,18 07,jr $+$09,jr $+$09,jr $+$00,exec.asm,JR	READ2
6585,6585,6494,2d34,2c92,cd 42 36,cd a0 35,call $3642,call $35a0,call $0000,exec.asm,READ1:          CALL	FETCHS
6586,6586,6495,2d37,2c95,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6587,6587,6496,2d38,2c96,cd c2 32,cd 20 32,call $32c2,call $3220,call $0000,exec.asm,CALL	STACCS
6588,6588,6497,2d3b,2c99,e1,e1,pop hl,pop hl,pop hl,exec.asm,READ2:          POP	HL
6589,6589,6498,2d3c,2c9a,22 f0 55,22 f0 54,"ld ($55f0),hl","ld ($54f0),hl","ld ($0000),hl",exec.asm,"LD	(DATPTR),HL"
6590,6590,6499,2d3f,2c9d,cd 84 45,cd e2 44,call $4584,call $44e2,call $0000,exec.asm,CALL	NLIST
6591,6591,6500,2d42,2ca0,18 c8,18 c8,jr $-$36,jr $-$36,jr $-$00,exec.asm,JR	READ0
6592,6592,6501,2d44,2ca2,cd 7d 36,cd db 35,call $367d,call $35db,call $0000,exec.asm,GETDAT:         CALL	DSRCH
6593,6593,6502,2d47,2ca5,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6594,6594,6503,2d48,2ca6,d0,d0,ret nc,ret nc,ret nc,exec.asm,RET	NC
6595,6595,6504,2d49,2ca7,3e 2a,3e 2a,"ld a,$2a","ld a,$2a","ld a,$00",exec.asm,"LD	A,42"
6596,6596,6505,2d4b,2ca9,18 64,18 64,jr $+$66,jr $+$66,jr $+$00,exec.asm,"JR	ERROR4ex		;""Out of DATA"""
6597,6597,6506,2d4d,2cab,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,IF_:            CALL	EXPRI
6598,6598,6507,2d50,2cae,cd dd 1f,cd 3b 1f,call $1fdd,call $1f3b,call $0000,exec.asm,CALL	TEST
6599,6599,6508,2d53,2cb1,28 2a,28 2a,"jr z,$+$2c","jr z,$+$2c","jr z,$+$00",exec.asm,"JR	Z,IFNOT		;FALSE"
6600,6600,6509,2d55,2cb3,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6601,6601,6510,2d58,2cb6,fe 8c,fe 8c,cp $8c,cp $8c,cp $00,exec.asm,CP	TTHEN
6602,6602,6511,2d5a,2cb8,c2 1d 25,c2 7b 24,"jp nz,$251d","jp nz,$247b","jp nz,$0000",exec.asm,"JP	NZ,XEQ"
6603,6603,6512,2d5d,2cbb,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"IF0:            INC	IY		;SKIP ""THEN"""
6604,6604,6513,2d5f,2cbd,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6605,6605,6514,2d62,2cc0,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
6606,6606,6515,2d64,2cc2,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",exec.asm,"JR	Z,IF0"
6607,6607,6516,2d66,2cc4,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,IF1:            CALL	NXT
6608,6608,6517,2d69,2cc7,fe 8d,fe 8d,cp $8d,cp $8d,cp $00,exec.asm,CP	TLINO
6609,6609,6518,2d6b,2cc9,c2 1d 25,c2 7b 24,"jp nz,$251d","jp nz,$247b","jp nz,$0000",exec.asm,"JP	NZ,XEQ		;STATEMENT FOLLOWS"
6610,6610,6519,2d6e,2ccc,c3 38 29,c3 96 28,jp $2938,jp $2896,jp $0000,exec.asm,JP	GOTO		;LINE NO. FOLLOWS
6611,6611,6520,2d71,2ccf,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"IFELSE:         LD	A,(IY)"
6612,6612,6521,2d74,2cd2,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6613,6613,6522,2d76,2cd4,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
6614,6614,6523,2d78,2cd6,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",exec.asm,"JR	NZ,IFNEXT"
6615,6615,6524,2d7a,2cd8,18 1e,18 1e,jr $+$20,jr $+$20,jr $+$00,exec.asm,JR	IFTHEN
6616,6616,6525,2d7c,2cda,cd 1d 37,cd 7b 36,call $371d,call $367b,call $0000,exec.asm,IF2:            CALL	QUOTE		;SKIP STRING
6617,6617,6526,2d7f,2cdd,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"IFNOT:          LD	A,(IY)"
6618,6618,6527,2d82,2ce0,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6619,6619,6528,2d84,2ce2,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"IFNEXT:         CP	'""'"
6620,6620,6529,2d86,2ce4,28 f4,28 f4,"jr z,$-$0a","jr z,$-$0a","jr z,$-$00",exec.asm,"JR	Z,IF2		;QUOTED STRING"
6621,6621,6530,2d88,2ce6,fe f4,fe f4,cp $f4,cp $f4,cp $00,exec.asm,CP	TREM
6622,6622,6531,2d8a,2ce8,ca b5 25,ca 13 25,"jp z,$25b5","jp z,$2513","jp z,$0000",exec.asm,"JP	Z,REM		;REM"
6623,6623,6532,2d8d,2ceb,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6624,6624,6533,2d8f,2ced,ca 08 25,ca 66 24,"jp z,$2508","jp z,$2466","jp z,$0000",exec.asm,"JP	Z,XEQ0		;END OF LINE"
6625,6625,6534,2d92,2cf0,fe 8b,fe 8b,cp $8b,cp $8b,cp $00,exec.asm,CP	TELSE
6626,6626,6535,2d94,2cf2,28 d0,28 d0,"jr z,$-$2e","jr z,$-$2e","jr z,$-$00",exec.asm,"JR	Z,IF1		;ELSE CLAUSE"
6627,6627,6536,2d96,2cf4,fe 8c,fe 8c,cp $8c,cp $8c,cp $00,exec.asm,CP	TTHEN
6628,6628,6537,2d98,2cf6,20 e5,20 e5,"jr nz,$-$19","jr nz,$-$19","jr nz,$-$00",exec.asm,"JR	NZ,IFNOT	;TRY FOR END AGAIN"
6629,6629,6538,2d9a,2cf8,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"IFTHEN:         LD	A,(IY)"
6630,6630,6539,2d9d,2cfb,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6631,6631,6540,2d9f,2cfd,20 d0,20 d0,"jr nz,$-$2e","jr nz,$-$2e","jr nz,$-$00",exec.asm,"JR	NZ,IFELSE"
6632,6632,6541,2da1,2cff,01 8b 00,01 8b 00,"ld bc,$008b","ld bc,$008b","ld bc,$0000",exec.asm,"LD	BC,TELSE"
6633,6633,6542,2da4,2d02,11 8c cd,11 8c cd,"ld de,$cd8c","ld de,$cd8c","ld de,$0000",exec.asm,"LD	DE,TENDIF*256+TTHEN"
6634,6634,6543,2da7,2d05,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6635,6635,6544,2da9,2d07,cd 95 36,cd f3 35,call $3695,call $35f3,call $0000,exec.asm,CALL	NSCAN
6636,6636,6545,2dac,2d0a,ca 24 25,ca 82 24,"jp z,$2524","jp z,$2482","jp z,$0000",exec.asm,"JP	Z,XEQ1"
6637,6637,6546,2daf,2d0d,3e 31,3e 31,"ld a,$31","ld a,$31","ld a,$00",exec.asm,"NENDIF:         LD	A,49"
6638,6638,6547,2db1,2d0f,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"ERROR4ex:         JP	ERROR_		;""Missing ENDIF"""
6639,6639,6548,2db4,2d12,01 fd ff,01 fd ff,"ld bc,$fffd","ld bc,$fffd","ld bc,$0000",exec.asm,"MELSE:          LD	BC,-3"
6640,6640,6549,2db7,2d15,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",exec.asm,"ADD	IY,BC"
6641,6641,6550,2db9,2d17,01 cd 00,01 cd 00,"ld bc,$00cd","ld bc,$00cd","ld bc,$0000",exec.asm,"LD	BC,TENDIF"
6642,6642,6551,2dbc,2d1a,11 8c cd,11 8c cd,"ld de,$cd8c","ld de,$cd8c","ld de,$0000",exec.asm,"LD	DE,TENDIF*256+TTHEN"
6643,6643,6552,2dbf,2d1d,cd 95 36,cd f3 35,call $3695,call $35f3,call $0000,exec.asm,CALL	NSCAN
6644,6644,6553,2dc2,2d20,20 eb,20 eb,"jr nz,$-$13","jr nz,$-$13","jr nz,$-$00",exec.asm,"JR	NZ,NENDIF"
6645,6645,6554,2dc4,2d22,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO7:         JP	XEQ
6646,6646,6555,2dc7,2d25,01 fd ff,01 fd ff,"ld bc,$fffd","ld bc,$fffd","ld bc,$0000",exec.asm,"WHEN:           LD	BC,-3"
6647,6647,6556,2dca,2d28,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",exec.asm,"ADD	IY,BC"
6648,6648,6557,2dcc,2d2a,01 cb 00,01 cb 00,"ld bc,$00cb","ld bc,$00cb","ld bc,$0000",exec.asm,"LD	BC,TENDCASE"
6649,6649,6558,2dcf,2d2d,11 ca cb,11 ca cb,"ld de,$cbca","ld de,$cbca","ld de,$0000",exec.asm,"LD	DE,TENDCASE*256+TOF"
6650,6650,6559,2dd2,2d30,cd 95 36,cd f3 35,call $3695,call $35f3,call $0000,exec.asm,CALL	NSCAN
6651,6651,6560,2dd5,2d33,28 ed,28 ed,"jr z,$-$11","jr z,$-$11","jr z,$-$00",exec.asm,"JR	Z,XEQGO7"
6652,6652,6561,2dd7,2d35,3e 2f,3e 2f,"ld a,$2f","ld a,$2f","ld a,$00",exec.asm,"LD	A,47"
6653,6653,6562,2dd9,2d37,18 d6,18 d6,jr $-$28,jr $-$28,jr $-$00,exec.asm,"JR	ERROR4ex		;""Missing ENDCASE"""
6654,6654,6563,2ddb,2d39,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,CASE:           CALL	EXPR		;String or numeric
6655,6655,6564,2dde,2d3c,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6656,6656,6565,2ddf,2d3d,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0		;Flag numeric"
6657,6657,6566,2de1,2d3f,f2 ea 2d,f2 48 2d,"jp p,$2dea","jp p,$2d48","jp p,$0000",exec.asm,"JP	P,CASE6		;numeric"
6658,6658,6567,2de4,2d42,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,exec.asm,CALL	PUSHS		;put string on stack
6659,6659,6568,2de7,2d45,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;C = length
6660,6660,6569,2de8,2d46,06 01,06 01,"ld b,$01","ld b,$01","ld b,$00",exec.asm,"LD	B,1		;Flag string"
6661,6661,6570,2dea,2d48,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"CASE6:          LD	A,(IY)"
6662,6662,6571,2ded,2d4b,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6663,6663,6572,2def,2d4d,fe ca,fe ca,cp $ca,cp $ca,cp $00,exec.asm,CP	TOF
6664,6664,6573,2df1,2d4f,3e 25,3e 25,"ld a,$25","ld a,$25","ld a,$00",exec.asm,"LD	A,37"
6665,6665,6574,2df3,2d51,20 bc,20 bc,"jr nz,$-$42","jr nz,$-$42","jr nz,$-$00",exec.asm,"JR	NZ,ERROR4ex	;""Missing OF"""
6666,6666,6575,2df5,2d53,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6667,6667,6576,2df8,2d56,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY		;Address line-length byte
6668,6668,6577,2dfa,2d58,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
6669,6669,6578,2dfc,2d5a,3e 30,3e 30,"ld a,$30","ld a,$30","ld a,$00",exec.asm,"LD	A,48"
6670,6670,6579,2dfe,2d5c,20 b1,20 b1,"jr nz,$-$4d","jr nz,$-$4d","jr nz,$-$00",exec.asm,"JR	NZ,ERROR4ex	;""OF not last"""
6671,6671,6580,2e00,2d5e,af,af,xor a,xor a,xor a,exec.asm,CASE1:          XOR	A		;Level
6672,6672,6581,2e01,2d5f,d9,d9,exx,exx,exx,exec.asm,CASE0:          EXX
6673,6673,6582,2e02,2d60,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;Push to stack
6674,6674,6583,2e03,2d61,d9,d9,exx,exx,exx,exec.asm,EXX
6675,6675,6584,2e04,2d62,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6676,6676,6585,2e05,2d63,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6677,6677,6586,2e06,2d64,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A		;Level"
6678,6678,6587,2e07,2d65,01 c9 cc,01 c9 cc,"ld bc,$ccc9","ld bc,$ccc9","ld bc,$0000",exec.asm,"LD	BC,TOTHERWISE*256+TWHEN"
6679,6679,6588,2e0a,2d68,11 ca cb,11 ca cb,"ld de,$cbca","ld de,$cbca","ld de,$0000",exec.asm,"LD	DE,TENDCASE*256+TOF"
6680,6680,6589,2e0d,2d6b,cd 97 36,cd f5 35,call $3697,call $35f5,call $0000,exec.asm,CALL	NSCAN1
6681,6681,6590,2e10,2d6e,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Restore from stack
6682,6682,6591,2e11,2d6f,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6683,6683,6592,2e12,2d70,d9,d9,exx,exx,exx,exec.asm,EXX
6684,6684,6593,2e13,2d71,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6685,6685,6594,2e14,2d72,d9,d9,exx,exx,exx,exec.asm,EXX
6686,6686,6595,2e15,2d73,3e 2f,3e 2f,"ld a,$2f","ld a,$2f","ld a,$00",exec.asm,"LD	A,47"
6687,6687,6596,2e17,2d75,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",exec.asm,"JP	NZ,ERROR_	;Missing ENDCASE"
6688,6688,6597,2e1a,2d78,fd 7e ff,fd 7e ff,"ld a,(iy-$01)","ld a,(iy-$01)","ld a,(iy-$00)",exec.asm,"LD	A,(IY-1)"
6689,6689,6598,2e1d,2d7b,fe cb,fe cb,cp $cb,cp $cb,cp $00,exec.asm,CP	TENDCASE
6690,6690,6599,2e1f,2d7d,28 56,28 56,"jr z,$+$58","jr z,$+$58","jr z,$+$00",exec.asm,"JR	Z,CASE9"
6691,6691,6600,2e21,2d7f,fe cc,fe cc,cp $cc,cp $cc,cp $00,exec.asm,CP	TOTHERWISE
6692,6692,6601,2e23,2d81,28 52,28 52,"jr z,$+$54","jr z,$+$54","jr z,$+$00",exec.asm,"JR	Z,CASE9"
6693,6693,6602,2e25,2d83,cb 40,cb 40,"bit 0,b","bit 0,b","bit 0,b",exec.asm,"CASE4:          BIT	0,B		;Numeric or string?"
6694,6694,6603,2e27,2d85,20 69,20 69,"jr nz,$+$6b","jr nz,$+$6b","jr nz,$+$00",exec.asm,"JR	NZ,CASE3"
6695,6695,6604,2e29,2d87,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;Type/exponent/length
6696,6696,6605,2e2a,2d88,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;MS 32 bits
6697,6697,6606,2e2b,2d89,d9,d9,exx,exx,exx,exec.asm,EXX
6698,6698,6607,2e2c,2d8a,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;LS 32 bits
6699,6699,6608,2e2d,2d8b,d9,d9,exx,exx,exx,exec.asm,EXX
6700,6700,6609,2e2e,2d8c,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN
6701,6701,6610,2e31,2d8f,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",exec.asm,"LD	IX,0"
6702,6702,6611,2e35,2d93,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",exec.asm,"ADD	IX,SP		;Address stack"
6703,6703,6612,2e37,2d95,d9,d9,exx,exx,exx,exec.asm,EXX
6704,6704,6613,2e38,2d96,dd 5e 00,dd 5e 00,"ld e,(ix)","ld e,(ix)","ld e,(ix)",exec.asm,"LD	E,(IX+0)	;Get LS 32-bits"
6705,6705,6614,2e3b,2d99,dd 56 01,dd 56 01,"ld d,(ix+$01)","ld d,(ix+$01)","ld d,(ix+$00)",exec.asm,"LD	D,(IX+1)"
6706,6706,6615,2e3e,2d9c,d9,d9,exx,exx,exx,exec.asm,EXX
6707,6707,6616,2e3f,2d9d,dd 5e 02,dd 5e 02,"ld e,(ix+$02)","ld e,(ix+$02)","ld e,(ix+$00)",exec.asm,"LD	E,(IX+2)"
6708,6708,6617,2e42,2da0,dd 56 03,dd 56 03,"ld d,(ix+$03)","ld d,(ix+$03)","ld d,(ix+$00)",exec.asm,"LD	D,(IX+3)	;Get MS 32-bits"
6709,6709,6618,2e45,2da3,dd 46 04,dd 46 04,"ld b,(ix+$04)","ld b,(ix+$04)","ld b,(ix+$00)",exec.asm,"LD	B,(IX+4)	;Get exponent"
6710,6710,6619,2e48,2da6,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",exec.asm,"LD	A,9"
6711,6711,6620,2e4a,2da8,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,exec.asm,CALL	FPP		;In case integer vs float
6712,6712,6621,2e4d,2dab,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
6713,6713,6622,2e4e,2dac,b7,b7,or a,or a,or a,exec.asm,OR	A		;NZ if equal
6714,6714,6623,2e4f,2dad,d9,d9,exx,exx,exx,exec.asm,EXX
6715,6715,6624,2e50,2dae,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6716,6716,6625,2e51,2daf,d9,d9,exx,exx,exx,exec.asm,EXX
6717,6717,6626,2e52,2db0,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6718,6718,6627,2e53,2db1,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6719,6719,6628,2e54,2db2,20 2c,20 2c,"jr nz,$+$2e","jr nz,$+$2e","jr nz,$+$00",exec.asm,"JR	NZ,CASE5	;Match found"
6720,6720,6629,2e56,2db4,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"CASE2:          LD	A,(IY)"
6721,6721,6630,2e59,2db7,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6722,6722,6631,2e5b,2db9,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
6723,6723,6632,2e5d,2dbb,28 c6,28 c6,"jr z,$-$38","jr z,$-$38","jr z,$-$00",exec.asm,"JR	Z,CASE4		;Not found, try another"
6724,6724,6633,2e5f,2dbd,d9,d9,exx,exx,exx,exec.asm,EXX
6725,6725,6634,2e60,2dbe,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6726,6726,6635,2e62,2dc0,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
6727,6727,6636,2e63,2dc1,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
6728,6728,6637,2e65,2dc3,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
6729,6729,6638,2e66,2dc4,ed b1,ed b1,cpir,cpir,cpir,exec.asm,CPIR			;Find CR
6730,6730,6639,2e68,2dc6,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
6731,6731,6640,2e69,2dc7,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
6732,6732,6641,2e6b,2dc9,d9,d9,exx,exx,exx,exec.asm,EXX
6733,6733,6642,2e6c,2dca,fd 7e fe,fd 7e fe,"ld a,(iy-$02)","ld a,(iy-$02)","ld a,(iy-$00)",exec.asm,"LD	A,(IY-2)	;Last token in previous line"
6734,6734,6643,2e6f,2dcd,fe ca,fe ca,cp $ca,cp $ca,cp $00,exec.asm,CP	TOF		;CASE statement in WHEN line
6735,6735,6644,2e71,2dcf,20 8d,20 8d,"jr nz,$-$71","jr nz,$-$71","jr nz,$-$00",exec.asm,"JR	NZ,CASE1"
6736,6736,6645,2e73,2dd1,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",exec.asm,"LD	A,1"
6737,6737,6646,2e75,2dd3,18 8a,18 8a,jr $-$74,jr $-$74,jr $-$00,exec.asm,JR	CASE0
6738,6738,6647,2e77,2dd5,cb 40,cb 40,"bit 0,b","bit 0,b","bit 0,b",exec.asm,"CASE9:          BIT	0,B"
6739,6739,6648,2e79,2dd7,28 49,28 49,"jr z,$+$4b","jr z,$+$4b","jr z,$+$00",exec.asm,"JR	Z,XEQGO5"
6740,6740,6649,2e7b,2dd9,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",exec.asm,"LD	H,0"
6741,6741,6650,2e7d,2ddb,69,69,"ld l,c","ld l,c","ld l,c",exec.asm,"LD	L,C"
6742,6742,6651,2e7e,2ddc,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6743,6743,6652,2e7f,2ddd,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
6744,6744,6653,2e80,2dde,18 42,18 42,jr $+$44,jr $+$44,jr $+$00,exec.asm,JR	XEQGO5
6745,6745,6654,2e82,2de0,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CASE5:          CALL	NXT
6746,6746,6655,2e85,2de3,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
6747,6747,6656,2e87,2de5,20 ee,20 ee,"jr nz,$-$10","jr nz,$-$10","jr nz,$-$00",exec.asm,"JR	NZ,CASE9	;End of list"
6748,6748,6657,2e89,2de7,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6749,6749,6658,2e8b,2de9,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;Save type and string length
6750,6750,6659,2e8c,2dea,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,CALL	EXPR		;Evaluate but discard
6751,6751,6660,2e8f,2ded,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6752,6752,6661,2e90,2dee,18 f0,18 f0,jr $-$0e,jr $-$0e,jr $-$00,exec.asm,JR	CASE5
6753,6753,6662,2e92,2df0,c5,c5,push bc,push bc,push bc,exec.asm,CASE3:          PUSH	BC
6754,6754,6663,2e93,2df1,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
6755,6755,6664,2e96,2df4,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6756,6756,6665,2e97,2df5,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
6757,6757,6666,2e9a,2df8,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
6758,6758,6667,2e9b,2df9,43,43,"ld b,e","ld b,e","ld b,e",exec.asm,"LD	B,E"
6759,6759,6668,2e9c,2dfa,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",exec.asm,"LD	DE,ACCS"
6760,6760,6669,2e9f,2dfd,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6761,6761,6670,2ea0,2dfe,cd 79 20,cd d7 1f,call $2079,call $1fd7,call $0000,exec.asm,CALL	SCP		;String compare
6762,6762,6671,2ea3,2e01,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
6763,6763,6672,2ea4,2e02,06 01,06 01,"ld b,$01","ld b,$01","ld b,$00",exec.asm,"LD	B,1"
6764,6764,6673,2ea6,2e04,20 ae,20 ae,"jr nz,$-$50","jr nz,$-$50","jr nz,$-$00",exec.asm,"JR	NZ,CASE2"
6765,6765,6674,2ea8,2e06,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	CASE5
6766,6766,6675,2eaa,2e08,fd e5,fd e5,push iy,push iy,push iy,exec.asm,WHILE:          PUSH	IY		;Save current position
6767,6767,6676,2eac,2e0a,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,CALL	CHECK
6768,6768,6677,2eaf,2e0d,cd b2 2e,cd 10 2e,call $2eb2,call $2e10,call $0000,exec.asm,CALL	WHICHK		;Push marker
6769,6769,6678,2eb2,2e10,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,WHICHK:         CALL	EXPRI
6770,6770,6679,2eb5,2e13,cd dd 1f,cd 3b 1f,call $1fdd,call $1f3b,call $0000,exec.asm,CALL	TEST
6771,6771,6680,2eb8,2e16,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",exec.asm,"JR	NZ,XEQGO5"
6772,6772,6681,2eba,2e18,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Pop marker
6773,6773,6682,2ebb,2e19,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Level stack
6774,6774,6683,2ebc,2e1a,01 c7 ce,01 00 95,"ld bc,$cec7","ld bc,$9500","ld bc,$0000",exec.asm,"LD	BC,TWHILE+TENDWHILE*256"
6775,6775,6684,2ebf,2e1d,16 01,16 01,"ld d,$01","ld d,$01","ld d,$00",exec.asm,"LD	D,1"
6776,6776,6685,2ec1,2e1f,cd d4 36,cd 32 36,call $36d4,call $3632,call $0000,exec.asm,CALL	WSRCH
6777,6777,6686,2ec4,2e22,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO5:         JP	XEQ
6778,6778,6687,2ec7,2e25,c1,c1,pop bc,pop bc,pop bc,exec.asm,ENDWHI:         POP	BC		;Marker
6779,6779,6688,2ec8,2e26,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE		;Saved text pointer
6780,6780,6689,2ec9,2e27,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6781,6781,6690,2eca,2e28,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
6782,6782,6691,2ecb,2e29,b7,b7,or a,or a,or a,exec.asm,OR	A
6783,6783,6692,2ecc,2e2a,21 b2 2e,21 10 2e,"ld hl,$2eb2","ld hl,$2e10","ld hl,$0000",exec.asm,"LD	HL,WHICHK"
6784,6784,6693,2ecf,2e2d,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
6785,6785,6694,2ed1,2e2f,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",exec.asm,"JR	Z,ENDWH1"
6786,6786,6695,2ed3,2e31,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",exec.asm,"LD	A,3"
6787,6787,6696,2ed5,2e33,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6788,6788,6697,2ed8,2e36,20 ed,20 ed,"jr nz,$-$11","jr nz,$-$11","jr nz,$-$00",exec.asm,"JR	NZ,ENDWHI"
6789,6789,6698,2eda,2e38,3e 2e,3e 2e,"ld a,$2e","ld a,$2e","ld a,$00",exec.asm,"LD	A,46"
6790,6790,6699,2edc,2e3a,18 4f,18 4f,jr $+$51,jr $+$51,jr $+$00,exec.asm,"JR	ERROR5		;""Not in a WHILE loop"""
6791,6791,6700,2ede,2e3c,fd e5,fd e5,push iy,push iy,push iy,exec.asm,ENDWH1:         PUSH	IY
6792,6792,6701,2ee0,2e3e,fd 21 00 00,fd 21 00 00,"ld iy,$0000","ld iy,$0000","ld iy,$0000",exec.asm,"LD	IY,0"
6793,6793,6702,2ee4,2e42,fd 19,fd 19,"add iy,de","add iy,de","add iy,de",exec.asm,"ADD	IY,DE"
6794,6794,6703,2ee6,2e44,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6795,6795,6704,2ee9,2e47,cd dd 1f,cd 3b 1f,call $1fdd,call $1f3b,call $0000,exec.asm,CALL	TEST
6796,6796,6705,2eec,2e4a,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE		;Text pointer
6797,6797,6706,2eed,2e4b,20 d5,20 d5,"jr nz,$-$29","jr nz,$-$29","jr nz,$-$00",exec.asm,"JR	NZ,XEQGO5"
6798,6798,6707,2eef,2e4d,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Junk marker
6799,6799,6708,2ef0,2e4e,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Junk pointer
6800,6800,6709,2ef1,2e4f,fd 21 00 00,fd 21 00 00,"ld iy,$0000","ld iy,$0000","ld iy,$0000",exec.asm,"LD	IY,0"
6801,6801,6710,2ef5,2e53,fd 19,fd 19,"add iy,de","add iy,de","add iy,de",exec.asm,"ADD	IY,DE"
6802,6802,6711,2ef7,2e55,18 cb,18 cb,jr $-$33,jr $-$33,jr $-$00,exec.asm,JR	XEQGO5
6803,6803,6712,2ef9,2e57,cd 10 0e,cd 6e 0d,call $0e10,call $0d6e,call $0000,exec.asm,CLS:            CALL	CLRSCN
6804,6804,6713,2efc,2e5a,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6805,6805,6714,2efd,2e5b,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",exec.asm,"LD	(COUNT),A"
6806,6806,6715,2f00,2e5e,18 c2,18 c2,jr $-$3c,jr $-$3c,jr $-$00,exec.asm,JR	XEQGO5
6807,6807,6716,2f02,2e60,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,exec.asm,STOP:           CALL	TELL
6808,6808,6717,2f05,2e63,0d,0d,dec c,dec c,dec c,exec.asm,DB	CR
6809,6809,6718,2f06,2e64,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",exec.asm,DB	LF
6810,6810,6719,2f07,2e65,fa 00 cd,fa 00 cd,"jp m,$cd00","jp m,$cd00","jp m,$0000",exec.asm,DB	TSTOP
6811,6811,,2f0a,,df,,rst $18,,rst $00,,
6812,6812,6721,2f0b,2e69,41,41,"ld b,c","ld b,c","ld b,c",exec.asm,
6813,6813,6722,2f0c,2e6a,cd 06 42,cd 64 41,call $4206,call $4164,call $0000,exec.asm,CALL	SAYLN
6814,6814,6723,2f0f,2e6d,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,exec.asm,CALL	CRLF
6815,6815,6724,2f12,2e70,c3 34 38,c3 92 37,jp $3834,jp $3792,jp $0000,exec.asm,JP	CLOOP
6816,6816,6725,2f15,2e73,cd 69 45,cd c7 44,call $4569,call $44c7,call $0000,exec.asm,REPOR:          CALL	REPORT
6817,6817,6726,2f18,2e76,18 aa,18 aa,jr $-$54,jr $-$54,jr $-$00,exec.asm,JR	XEQGO5
6818,6818,6727,2f1a,2e78,cd c7 40,cd 25 40,call $40c7,call $4025,call $0000,exec.asm,CLR:            CALL	CLEAR
6819,6819,6728,2f1d,2e7b,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",exec.asm,"LD	HL,(PAGE_)"
6820,6820,6729,2f20,2e7e,18 3b,18 3b,jr $+$3d,jr $+$3d,jr $+$00,exec.asm,JR	RESTR1
6821,6821,6730,2f22,2e80,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,RESERR:         INC	IY
6822,6822,6731,2f24,2e82,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",exec.asm,"LD	A,2"
6823,6823,6732,2f26,2e84,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6824,6824,6733,2f29,2e87,20 99,20 99,"jr nz,$-$65","jr nz,$-$65","jr nz,$-$00",exec.asm,"JR	NZ,XEQGO5"
6825,6825,6734,2f2b,2e89,3e 35,3e 35,"ld a,$35","ld a,$35","ld a,$00",exec.asm,"LD	A,53		;ON ERROR not LOCAL"
6826,6826,6735,2f2d,2e8b,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,ERROR5:         JP	ERROR_
6827,6827,6736,2f30,2e8e,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,RESDAT:         INC	IY
6828,6828,6737,2f32,2e90,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",exec.asm,"LD	A,1"
6829,6829,6738,2f34,2e92,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
6830,6830,6739,2f37,2e95,20 8b,20 8b,"jr nz,$-$73","jr nz,$-$73","jr nz,$-$00",exec.asm,"JR	NZ,XEQGO5"
6831,6831,6740,2f39,2e97,3e 36,3e 36,"ld a,$36","ld a,$36","ld a,$00",exec.asm,"LD	A,54		;'DATA not LOCAL'"
6832,6832,6741,2f3b,2e99,21 3e 29,21 3e 29,"ld hl,$293e","ld hl,$293e","ld hl,$0000",exec.asm,DB	21H
6833,6833,6742,2f3e,2e9c,18 ed,18 ed,jr $-$11,jr $-$11,jr $-$00,exec.asm,JR	ERROR5
6834,6834,6743,2f40,2e9e,fe 85,fe 85,cp $85,cp $85,cp $00,exec.asm,RESTOR:         CP	TERROR
6835,6835,6744,2f42,2ea0,28 de,28 de,"jr z,$-$20","jr z,$-$20","jr z,$-$00",exec.asm,"JR	Z,RESERR"
6836,6836,6745,2f44,2ea2,fe dc,fe dc,cp $dc,cp $dc,cp $00,exec.asm,CP	TDATA
6837,6837,6746,2f46,2ea4,28 e8,28 e8,"jr z,$-$16","jr z,$-$16","jr z,$-$00",exec.asm,"JR	Z,RESDAT"
6838,6838,6747,2f48,2ea6,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,exec.asm,CP	'+'
6839,6839,6748,2f4a,2ea8,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",exec.asm,"JR	Z,RESREL"
6840,6840,6749,2f4c,2eaa,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",exec.asm,"LD	HL,(PAGE_)"
6841,6841,6750,2f4f,2ead,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,CALL	TERMQ
6842,6842,6751,2f52,2eb0,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",exec.asm,"JR	Z,RESTR1"
6843,6843,6752,2f54,2eb2,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,CALL	ITEMI
6844,6844,6753,2f57,2eb5,d9,d9,exx,exx,exx,exec.asm,EXX
6845,6845,6754,2f58,2eb6,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,exec.asm,CALL	FINDL		;SEARCH FOR LINE
6846,6846,6755,2f5b,2eb9,20 df,20 df,"jr nz,$-$1f","jr nz,$-$1f","jr nz,$-$00",exec.asm,"JR	NZ,NOLINE"
6847,6847,6756,2f5d,2ebb,cd 7d 36,cd db 35,call $367d,call $35db,call $0000,exec.asm,RESTR1:         CALL	DSRCH
6848,6848,6757,2f60,2ebe,22 f0 55,22 f0 54,"ld ($55f0),hl","ld ($54f0),hl","ld ($0000),hl",exec.asm,"LD	(DATPTR),HL"
6849,6849,6758,2f63,2ec1,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,JP	XEQ
6850,6850,6759,2f66,2ec4,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,RESREL:         CALL	EXPRI
6851,6851,6760,2f69,2ec7,d9,d9,exx,exx,exx,exec.asm,EXX
6852,6852,6761,2f6a,2ec8,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6853,6853,6762,2f6b,2ec9,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
6854,6854,6763,2f6d,2ecb,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
6855,6855,6764,2f6e,2ecc,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"LD	A,CR"
6856,6856,6765,2f70,2ece,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
6857,6857,6766,2f71,2ecf,ed b1,ed b1,cpir,cpir,cpir,exec.asm,CPIR			;FIND LINE END
6858,6858,6767,2f73,2ed1,1d,1d,dec e,dec e,dec e,exec.asm,DEC	E
6859,6859,6768,2f74,2ed2,28 e7,28 e7,"jr z,$-$17","jr z,$-$17","jr z,$-$00",exec.asm,"JR	Z,RESTR1"
6860,6860,6769,2f76,2ed4,fa 5d 2f,fa bb 2e,"jp m,$2f5d","jp m,$2ebb","jp m,$0000",exec.asm,"JP	M,RESTR1"
6861,6861,6770,2f79,2ed7,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6862,6862,6771,2f7a,2ed8,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
6863,6863,6772,2f7b,2ed9,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"RESTR2:         LD	C,(HL)"
6864,6864,6773,2f7c,2eda,b9,b9,cp c,cp c,cp c,exec.asm,CP	C
6865,6865,6774,2f7d,2edb,28 bd,28 bd,"jr z,$-$41","jr z,$-$41","jr z,$-$00",exec.asm,"JR	Z,NOLINE"
6866,6866,6775,2f7f,2edd,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
6867,6867,6776,2f80,2ede,1d,1d,dec e,dec e,dec e,exec.asm,DEC	E
6868,6868,6777,2f81,2edf,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",exec.asm,"JR	NZ,RESTR2"
6869,6869,6778,2f83,2ee1,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	RESTR1
6870,6870,6779,2f85,2ee3,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,exec.asm,PTR:            CALL	CHANEL
6871,6871,6780,2f88,2ee6,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,CALL	EQUALS
6872,6872,6781,2f8b,2ee9,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"LD	A,E"
6873,6873,6782,2f8c,2eea,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
6874,6874,6783,2f8d,2eeb,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6875,6875,6784,2f90,2eee,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6876,6876,6785,2f91,2eef,d9,d9,exx,exx,exx,exec.asm,EXX
6877,6877,6786,2f92,2ef0,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6878,6878,6787,2f93,2ef1,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
6879,6879,6788,2f94,2ef2,cd 97 06,cd 77 06,call $0697,call $0677,call $0000,exec.asm,CALL	PUTPTR
6880,6880,6789,2f97,2ef5,18 61,18 61,jr $+$63,jr $+$63,jr $+$00,exec.asm,JR	XEQGO1ex
6881,6881,6790,2f99,2ef7,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,PAGEV:          CALL	EQUALS
6882,6882,6791,2f9c,2efa,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6883,6883,6792,2f9f,2efd,d9,d9,exx,exx,exx,exec.asm,EXX
6884,6884,6793,2fa0,2efe,2e 00,2e 00,"ld l,$00","ld l,$00","ld l,$00",exec.asm,"LD	L,0"
6885,6885,6794,2fa2,2f00,22 dc 55,22 dc 54,"ld ($55dc),hl","ld ($54dc),hl","ld ($0000),hl",exec.asm,"LD	(PAGE_),HL"
6886,6886,6795,2fa5,2f03,18 53,18 53,jr $+$55,jr $+$55,jr $+$00,exec.asm,JR	XEQGO1ex
6887,6887,6796,2fa7,2f05,fe 24,fe 24,cp $24,cp $24,cp $00,exec.asm,TIMEV:          CP	'$'
6888,6888,6797,2fa9,2f07,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",exec.asm,"JR	Z,TIMEVS"
6889,6889,6798,2fab,2f09,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,CALL	EQUALS
6890,6890,6799,2fae,2f0c,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6891,6891,6800,2fb1,2f0f,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
6892,6892,6801,2fb2,2f10,d9,d9,exx,exx,exx,exec.asm,EXX
6893,6893,6802,2fb3,2f11,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6894,6894,6803,2fb4,2f12,cd db 0d,cd 39 0d,call $0ddb,call $0d39,call $0000,exec.asm,CALL	PUTIME
6895,6895,6804,2fb7,2f15,18 41,18 41,jr $+$43,jr $+$43,jr $+$00,exec.asm,JR	XEQGO1ex
6896,6896,6805,2fb9,2f17,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,TIMEVS:         INC	IY		;SKIP '$'
6897,6897,6806,2fbb,2f19,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,CALL	EQUALS
6898,6898,6807,2fbe,2f1c,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
6899,6899,6808,2fc1,2f1f,cd f8 0d,cd 56 0d,call $0df8,call $0d56,call $0000,exec.asm,CALL	PUTIMS
6900,6900,6809,2fc4,2f22,18 34,18 34,jr $+$36,jr $+$36,jr $+$00,exec.asm,JR	XEQGO1ex
6901,6901,6810,2fc6,2f24,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,LOMEMV:         CALL	EQUALS
6902,6902,6811,2fc9,2f27,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6903,6903,6812,2fcc,2f2a,cd c7 40,cd 25 40,call $40c7,call $4025,call $0000,exec.asm,CALL	CLEAR
6904,6904,6813,2fcf,2f2d,d9,d9,exx,exx,exx,exec.asm,EXX
6905,6905,6814,2fd0,2f2e,22 de 55,22 de 54,"ld ($55de),hl","ld ($54de),hl","ld ($0000),hl",exec.asm,"LD	(LOMEM),HL"
6906,6906,6815,2fd3,2f31,22 e0 55,22 e0 54,"ld ($55e0),hl","ld ($54e0),hl","ld ($0000),hl",exec.asm,"LD	(FREE),HL"
6907,6907,6816,2fd6,2f34,18 22,18 22,jr $+$24,jr $+$24,jr $+$00,exec.asm,JR	XEQGO1ex
6908,6908,6817,2fd8,2f36,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,HIMEMV:         CALL	EQUALS
6909,6909,6818,2fdb,2f39,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6910,6910,6819,2fde,2f3c,d9,d9,exx,exx,exx,exec.asm,EXX
6911,6911,6820,2fdf,2f3d,ed 5b e0 55,ed 5b e0 54,"ld de,($55e0)","ld de,($54e0)","ld de,($0000)",exec.asm,"LD	DE,(FREE)"
6912,6912,6821,2fe3,2f41,14,14,inc d,inc d,inc d,exec.asm,INC	D
6913,6913,6822,2fe4,2f42,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6914,6914,6823,2fe5,2f43,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
6915,6915,6824,2fe7,2f45,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE"
6916,6916,6825,2fe8,2f46,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",exec.asm,"JP	C,ERROR_		;""No room"""
6917,6917,6826,2feb,2f49,ed 5b e2 55,ed 5b e2 54,"ld de,($55e2)","ld de,($54e2)","ld de,($0000)",exec.asm,"LD	DE,(HIMEM)"
6918,6918,6827,2fef,2f4d,22 e2 55,22 e2 54,"ld ($55e2),hl","ld ($54e2),hl","ld ($0000),hl",exec.asm,"LD	(HIMEM),HL"
6919,6919,6828,2ff2,2f50,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6920,6920,6829,2ff3,2f51,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",exec.asm,"SBC	HL,SP"
6921,6921,6830,2ff5,2f53,c2 1d 25,c2 7b 24,"jp nz,$251d","jp nz,$247b","jp nz,$0000",exec.asm,"JP	NZ,XEQ"
6922,6922,6831,2ff8,2f56,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
6923,6923,6832,2ff9,2f57,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL		;LOAD STACK POINTER"
6924,6924,6833,2ffa,2f58,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,XEQGO1ex:         JP	XEQ
6925,6925,6834,2ffd,2f5b,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,WIDTHV:         CALL	EXPRI
6926,6926,6835,3000,2f5e,d9,d9,exx,exx,exx,exec.asm,EXX
6927,6927,6836,3001,2f5f,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
6928,6928,6837,3002,2f60,32 fc 55,32 fc 54,"ld ($55fc),a","ld ($54fc),a","ld ($0000),a",exec.asm,"LD	(WIDTH),A"
6929,6929,6838,3005,2f63,18 f3,18 f3,jr $-$0b,jr $-$0b,jr $-$00,exec.asm,JR	XEQGO1ex
6930,6930,6839,3007,2f65,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,TRACE:          INC	IY
6931,6931,6840,3009,2f67,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
6932,6932,6841,300c,2f6a,fe ee,fe ee,cp $ee,cp $ee,cp $00,exec.asm,CP	TON
6933,6933,6842,300e,2f6c,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",exec.asm,"JR	Z,TRACE0"
6934,6934,6843,3010,2f6e,fe 87,fe 87,cp $87,cp $87,cp $00,exec.asm,CP	TOFF
6935,6935,6844,3012,2f70,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,TRACE1"
6936,6936,6845,3014,2f72,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
6937,6937,6846,3016,2f74,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
6938,6938,6847,3019,2f77,d9,d9,exx,exx,exx,exec.asm,EXX
6939,6939,6848,301a,2f78,2b,2b,dec hl,dec hl,dec hl,exec.asm,TRACE0:         DEC	HL
6940,6940,6849,301b,2f79,22 e6 55,22 e6 54,"ld ($55e6),hl","ld ($54e6),hl","ld ($0000),hl",exec.asm,"TRACE1:         LD	(TRACEN),HL"
6941,6941,6850,301e,2f7c,18 da,18 da,jr $-$24,jr $-$24,jr $-$00,exec.asm,JR	XEQGO1ex
6942,6942,6851,3020,2f7e,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,VDU:            CALL	EXPRI
6943,6943,6852,3023,2f81,d9,d9,exx,exx,exx,exec.asm,EXX
6944,6944,6853,3024,2f82,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
6945,6945,6854,3025,2f83,06 01,06 01,"ld b,$01","ld b,$01","ld b,$00",exec.asm,"LD	B,1"
6946,6946,6855,3027,2f85,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,exec.asm,VDU1:           CALL	OSWRCH
6947,6947,6856,302a,2f88,10 fb,10 fb,djnz $-$03,djnz $-$03,djnz $-$00,exec.asm,DJNZ	VDU1
6948,6948,6857,302c,2f8a,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
6949,6949,6858,302f,2f8d,fe 7c,fe 7c,cp $7c,cp $7c,cp $00,exec.asm,CP	'|'
6950,6950,6859,3031,2f8f,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",exec.asm,"JR	Z,VDU4"
6951,6951,6860,3033,2f91,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
6952,6952,6861,3035,2f93,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",exec.asm,"JR	Z,VDU2"
6953,6953,6862,3037,2f95,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
6954,6954,6863,3039,2f97,20 06,20 06,"jr nz,$+$08","jr nz,$+$08","jr nz,$+$00",exec.asm,"JR	NZ,VDU3"
6955,6955,6864,303b,2f99,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
6956,6956,6865,303c,2f9a,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,exec.asm,CALL	OSWRCH
6957,6957,6866,303f,2f9d,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,VDU2:           INC	IY
6958,6958,6867,3041,2f9f,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,VDU3:           CALL	TERMQ
6959,6959,6868,3044,2fa2,20 da,20 da,"jr nz,$-$24","jr nz,$-$24","jr nz,$-$00",exec.asm,"JR	NZ,VDU"
6960,6960,6869,3046,2fa4,18 b2,18 b2,jr $-$4c,jr $-$4c,jr $-$00,exec.asm,JR	XEQGO1ex
6961,6961,6870,3048,2fa6,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,VDU4:           INC	IY
6962,6962,6871,304a,2fa8,af,af,xor a,xor a,xor a,exec.asm,XOR	A
6963,6963,6872,304b,2fa9,06 09,06 09,"ld b,$09","ld b,$09","ld b,$00",exec.asm,"LD	B,9"
6964,6964,6873,304d,2fab,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	VDU1
6965,6965,6874,304f,2fad,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,exec.asm,CLOSE:          CALL	CHANEL
6966,6966,6875,3052,2fb0,cd 55 06,cd 35 06,call $0655,call $0635,call $0000,exec.asm,CALL	OSSHUT
6967,6967,6876,3055,2fb3,18 a3,18 a3,jr $-$5b,jr $-$5b,jr $-$00,exec.asm,JR	XEQGO1ex
6968,6968,6877,3057,2fb5,cd 55 37,cd b3 36,call $3755,call $36b3,call $0000,exec.asm,BPUT:           CALL	CHANEL		;CHANNEL NUMBER
6969,6969,6878,305a,2fb8,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
6970,6970,6879,305b,2fb9,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,exec.asm,CALL	COMMA
6971,6971,6880,305e,2fbc,cd 86 17,cd e4 16,call $1786,call $16e4,call $0000,exec.asm,CALL	EXPR
6972,6972,6881,3061,2fbf,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
6973,6973,6882,3062,2fc0,fa 70 30,fa ce 2f,"jp m,$3070","jp m,$2fce","jp m,$0000",exec.asm,"JP	M,BPUTS"
6974,6974,6883,3065,2fc3,cd 9b 1c,cd f9 1b,call $1c9b,call $1bf9,call $0000,exec.asm,CALL	SFIX
6975,6975,6884,3068,2fc6,d9,d9,exx,exx,exx,exec.asm,EXX
6976,6976,6885,3069,2fc7,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
6977,6977,6886,306a,2fc8,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6978,6978,6887,306b,2fc9,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
6979,6979,6888,306e,2fcc,18 8a,18 8a,jr $-$74,jr $-$74,jr $-$00,exec.asm,BPUTX:          JR	XEQGO1ex
6980,6980,6889,3070,2fce,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"BPUTS:          LD	A,E"
6981,6981,6890,3071,2fcf,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
6982,6982,6891,3072,2fd0,57,57,"ld d,a","ld d,a","ld d,a",exec.asm,"LD	D,A"
6983,6983,6892,3073,2fd1,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
6984,6984,6893,3076,2fd4,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"BPUTS1:         LD	A,(HL)"
6985,6985,6894,3077,2fd5,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
6986,6986,6895,3078,2fd6,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
6987,6987,6896,307b,2fd9,15,15,dec d,dec d,dec d,exec.asm,DEC	D
6988,6988,6897,307c,2fda,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",exec.asm,"JR	NZ,BPUTS1"
6989,6989,6898,307e,2fdc,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
6990,6990,6899,3081,2fdf,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,exec.asm,CP	';'
6991,6991,6900,3083,2fe1,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
6992,6992,6901,3085,2fe3,28 e7,28 e7,"jr z,$-$17","jr z,$-$17","jr z,$-$00",exec.asm,"JR	Z,BPUTX"
6993,6993,6902,3087,2fe5,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",exec.asm,"LD	A,LF"
6994,6994,6903,3089,2fe7,cd 65 06,cd 45 06,call $0665,call $0645,call $0000,exec.asm,CALL	OSBPUT
6995,6995,6904,308c,2fea,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
6996,6996,6905,308e,2fec,18 de,18 de,jr $-$20,jr $-$20,jr $-$00,exec.asm,JR	BPUTX
6997,6997,6906,3090,2fee,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL:           CALL	EXPRI		;ADDRESS
6998,6998,6907,3093,2ff1,d9,d9,exx,exx,exx,exec.asm,EXX
6999,6999,6908,3094,2ff2,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;SAVE IT
7000,7000,6909,3095,2ff3,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0		;PARAMETER COUNTER"
7001,7001,6910,3097,2ff5,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",exec.asm,"LD	DE,BUFFER	;VECTOR"
7002,7002,6911,309a,2ff8,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL1:          CALL	NXT
7003,7003,6912,309d,2ffb,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7004,7004,6913,309f,2ffd,20 17,20 17,"jr nz,$+$19","jr nz,$+$19","jr nz,$+$00",exec.asm,"JR	NZ,CALL2"
7005,7005,6914,30a1,2fff,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7006,7006,6915,30a3,3001,04,04,inc b,inc b,inc b,exec.asm,INC	B
7007,7007,6916,30a4,3002,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7008,7008,6917,30a7,3005,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7009,7009,6918,30a8,3006,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7010,7010,6919,30a9,3007,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
7011,7011,6920,30ac,300a,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7012,7012,6921,30ad,300b,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7013,7013,6922,30ae,300c,13,13,inc de,inc de,inc de,exec.asm,INC	DE
7014,7014,6923,30af,300d,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A		;PARAMETER TYPE"
7015,7015,6924,30b0,300e,13,13,inc de,inc de,inc de,exec.asm,INC	DE
7016,7016,6925,30b1,300f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7017,7017,6926,30b2,3010,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",exec.asm,"LD	(HL),E		;PARAMETER ADDRESS"
7018,7018,6927,30b3,3011,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7019,7019,6928,30b4,3012,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",exec.asm,"LD	(HL),D"
7020,7020,6929,30b5,3013,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7021,7021,6930,30b6,3014,18 e2,18 e2,jr $-$1c,jr $-$1c,jr $-$00,exec.asm,JR	CALL1
7022,7022,6931,30b8,3016,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"CALL2:          LD	A,B"
7023,7023,6932,30b9,3017,32 00 54,32 00 53,"ld ($5400),a","ld ($5300),a","ld ($0000),a",exec.asm,"LD	(BUFFER),A	;PARAMETER COUNT"
7024,7024,6933,30bc,301a,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL		;RESTORE ADDRESS
7025,7025,6934,30bd,301b,cd c7 30,cd 25 30,call $30c7,call $3025,call $0000,exec.asm,CALL	USR1
7026,7026,6935,30c0,301e,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,JP	XEQ
7027,7027,6936,30c3,3021,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,USR:            CALL	ITEMI
7028,7028,6937,30c6,3024,d9,d9,exx,exx,exx,exec.asm,EXX
7029,7029,6938,30c7,3025,e5,e5,push hl,push hl,push hl,exec.asm,USR1:           PUSH	HL		;ADDRESS ON STACK
7030,7030,6939,30c8,3026,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7031,7031,6940,30ca,3028,24,24,inc h,inc h,inc h,exec.asm,INC	H		;PAGE &FF?
7032,7032,6941,30cb,3029,21 f6 30,21 54 30,"ld hl,$30f6","ld hl,$3054","ld hl,$0000",exec.asm,"LD	HL,USR2		;RETURN ADDRESS"
7033,7033,6942,30ce,302c,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7034,7034,6943,30cf,302d,dd 21 00 55,dd 21 00 54,"ld ix,$5500","ld ix,$5400","ld ix,$0000",exec.asm,"LD	IX,STAVAR"
7035,7035,6944,30d3,3031,cc 2c 11,cc 8a 10,"call z,$112c","call z,$108a","call z,$0000",exec.asm,"CALL	Z,OSCALL	;INTERCEPT PAGE &FF"
7036,7036,6945,30d6,3034,dd 4e 18,dd 4e 18,"ld c,(ix+$18)","ld c,(ix+$18)","ld c,(ix+$00)",exec.asm,"LD	C,(IX+24)"
7037,7037,6946,30d9,3037,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7038,7038,6947,30da,3038,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;LOAD FLAGS
7039,7039,6948,30db,3039,dd 7e 04,dd 7e 04,"ld a,(ix+$04)","ld a,(ix+$04)","ld a,(ix+$00)",exec.asm,"LD	A,(IX+4)	;LOAD Z80 REGISTERS"
7040,7040,6949,30de,303c,dd 46 08,dd 46 08,"ld b,(ix+$08)","ld b,(ix+$08)","ld b,(ix+$00)",exec.asm,"LD	B,(IX+8)"
7041,7041,6950,30e1,303f,dd 4e 0c,dd 4e 0c,"ld c,(ix+$0c)","ld c,(ix+$0c)","ld c,(ix+$00)",exec.asm,"LD	C,(IX+12)"
7042,7042,6951,30e4,3042,dd 56 10,dd 56 10,"ld d,(ix+$10)","ld d,(ix+$10)","ld d,(ix+$00)",exec.asm,"LD	D,(IX+16)"
7043,7043,6952,30e7,3045,dd 5e 14,dd 5e 14,"ld e,(ix+$14)","ld e,(ix+$14)","ld e,(ix+$00)",exec.asm,"LD	E,(IX+20)"
7044,7044,6953,30ea,3048,dd 66 20,dd 66 20,"ld h,(ix+$20)","ld h,(ix+$20)","ld h,(ix+$00)",exec.asm,"LD	H,(IX+32)"
7045,7045,6954,30ed,304b,dd 6e 30,dd 6e 30,"ld l,(ix+$30)","ld l,(ix+$30)","ld l,(ix+$00)",exec.asm,"LD	L,(IX+48)"
7046,7046,6955,30f0,304e,dd 21 00 54,dd 21 00 53,"ld ix,$5400","ld ix,$5300","ld ix,$0000",exec.asm,"LD	IX,BUFFER"
7047,7047,6956,30f4,3052,fd e9,fd e9,jp (iy),jp (iy),jp (iy),exec.asm,JP	(IY)		;OFF TO USER ROUTINE
7048,7048,6957,30f6,3054,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,USR2:           POP	IY
7049,7049,6958,30f8,3056,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7050,7050,6959,30f9,3057,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
7051,7051,6960,30fa,3058,c9,c9,ret,ret,ret,exec.asm,RET
7052,7052,6961,30fb,3059,cd 42 26,cd a0 25,call $2642,call $25a0,call $0000,exec.asm,LEFTSL:         CALL    GETSTR
7053,7053,6962,30fe,305c,21 00 ff,21 00 ff,"ld hl,$ff00","ld hl,$ff00","ld hl,$0000",exec.asm,"LD	HL,0FF00H	;Default all but last"
7054,7054,6963,3101,305f,20 48,20 48,"jr nz,$+$4a","jr nz,$+$4a","jr nz,$+$00",exec.asm,"JR	NZ,MIDSL1"
7055,7055,6964,3103,3061,18 26,18 26,jr $+$28,jr $+$28,jr $+$00,exec.asm,JR	MIDSL0
7056,7056,6965,3105,3063,cd 42 26,cd a0 25,call $2642,call $25a0,call $0000,exec.asm,RITESL:         CALL	GETSTR
7057,7057,6966,3108,3066,21 ff ff,21 ff ff,"ld hl,$ffff","ld hl,$ffff","ld hl,$0000",exec.asm,"LD	HL,0FFFFH	;Default last char only"
7058,7058,6967,310b,3069,20 3e,20 3e,"jr nz,$+$40","jr nz,$+$40","jr nz,$+$00",exec.asm,"JR	NZ,MIDSL1"
7059,7059,6968,310d,306b,18 1c,18 1c,jr $+$1e,jr $+$1e,jr $+$00,exec.asm,JR	MIDSL0
7060,7060,6969,310f,306d,cd 42 26,cd a0 25,call $2642,call $25a0,call $0000,exec.asm,MIDSL:          CALL	GETSTR
7061,7061,6970,3112,3070,3e 05,3e 05,"ld a,$05","ld a,$05","ld a,$00",exec.asm,"LD	A,5"
7062,7062,6971,3114,3072,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",exec.asm,"JP	NZ,ERROR_	;'Missing comma'"
7063,7063,6972,3117,3075,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7064,7064,6973,3119,3077,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7065,7065,6974,311b,3079,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
7066,7066,6975,311e,307c,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7067,7067,6976,3120,307e,d9,d9,exx,exx,exx,exec.asm,EXX
7068,7068,6977,3121,307f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7069,7069,6978,3124,3082,2d,2d,dec l,dec l,dec l,exec.asm,DEC	L
7070,7070,6979,3125,3083,26 fe,26 fe,"ld h,$fe","ld h,$fe","ld h,$00",exec.asm,"LD	H,254		;Default rest of string"
7071,7071,6980,3127,3085,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7072,7072,6981,3129,3087,20 20,20 20,"jr nz,$+$22","jr nz,$+$22","jr nz,$+$00",exec.asm,"JR	NZ,MIDSL1"
7073,7073,6982,312b,3089,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,MIDSL0:         INC	IY
7074,7074,6983,312d,308b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7075,7075,6984,312e,308c,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7076,7076,6985,3130,308e,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
7077,7077,6986,3133,3091,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7078,7078,6987,3135,3093,d9,d9,exx,exx,exx,exec.asm,EXX
7079,7079,6988,3136,3094,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7080,7080,6989,3137,3095,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7081,7081,6990,3138,3096,b7,b7,or a,or a,or a,exec.asm,OR	A
7082,7082,6991,3139,3097,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",exec.asm,"JR	Z,MIDSL2	;Zero length"
7083,7083,6992,313b,3099,3d,3d,dec a,dec a,dec a,exec.asm,DEC	A
7084,7084,6993,313c,309a,85,85,"add a,l","add a,l","add a,l",exec.asm,"ADD	A,L"
7085,7085,6994,313d,309b,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
7086,7086,6995,313e,309c,30 0b,30 0b,"jr nc,$+$0d","jr nc,$+$0d","jr nc,$+$00",exec.asm,"JR	NC,MIDSL1"
7087,7087,6996,3140,309e,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7088,7088,6997,3141,309f,3c,3c,inc a,inc a,inc a,exec.asm,INC	A
7089,7089,6998,3142,30a0,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,MIDSL1"
7090,7090,6999,3144,30a2,26 fe,26 fe,"ld h,$fe","ld h,$fe","ld h,$00",exec.asm,"LD	H,254"
7091,7091,7000,3146,30a4,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,exec.asm,JR	MIDSL1
7092,7092,7001,3148,30a6,21 01 00,21 01 00,"ld hl,$0001","ld hl,$0001","ld hl,$0000",exec.asm,"MIDSL2:         LD	HL,1"
7093,7093,7002,314b,30a9,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,MIDSL1:         CALL	BRAKET
7094,7094,7003,314e,30ac,cd d3 35,cd 31 35,call $35d3,call $3531,call $0000,exec.asm,CALL	EQUALS
7095,7095,7004,3151,30af,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7096,7096,7005,3152,30b0,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7097,7097,7006,3154,30b2,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
7098,7098,7007,3157,30b5,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7099,7099,7008,3159,30b7,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7100,7100,7009,315a,30b8,4b,4b,"ld c,e","ld c,e","ld c,e",exec.asm,"LD	C,E"
7101,7101,7010,315b,30b9,dd 46 00,dd 46 00,"ld b,(ix)","ld b,(ix)","ld b,(ix)",exec.asm,"LD	B,(IX+0)"
7102,7102,7011,315e,30bc,dd 5e 02,dd 5e 02,"ld e,(ix+$02)","ld e,(ix+$02)","ld e,(ix+$00)",exec.asm,"LD	E,(IX+2)"
7103,7103,7012,3161,30bf,dd 56 03,dd 56 03,"ld d,(ix+$03)","ld d,(ix+$03)","ld d,(ix+$00)",exec.asm,"LD	D,(IX+3)"
7104,7104,7013,3164,30c2,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7105,7105,7014,3165,30c3,3c,3c,inc a,inc a,inc a,exec.asm,INC	A
7106,7106,7015,3166,30c4,20 0f,20 0f,"jr nz,$+$11","jr nz,$+$11","jr nz,$+$00",exec.asm,"JR	NZ,SUBSL1"
7107,7107,7016,3168,30c6,24,24,inc h,inc h,inc h,exec.asm,INC	H
7108,7108,7017,3169,30c7,24,24,inc h,inc h,inc h,exec.asm,INC	H
7109,7109,7018,316a,30c8,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
7110,7110,7019,316b,30c9,bc,bc,cp h,cp h,cp h,exec.asm,CP	H
7111,7111,7020,316c,30ca,30 01,30 01,"jr nc,$+$03","jr nc,$+$03","jr nc,$+$00",exec.asm,"JR	NC,SUBSL0"
7112,7112,7021,316e,30cc,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
7113,7113,7022,316f,30cd,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"SUBSL0:         LD	A,B"
7114,7114,7023,3170,30ce,94,94,sub h,sub h,sub h,exec.asm,SUB	H
7115,7115,7024,3171,30cf,30 01,30 01,"jr nc,$+$03","jr nc,$+$03","jr nc,$+$00",exec.asm,"JR	NC,SUBSL6"
7116,7116,7025,3173,30d1,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7117,7117,7026,3174,30d2,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"SUBSL6:         LD	L,A"
7118,7118,7027,3175,30d3,18 12,18 12,jr $+$14,jr $+$14,jr $+$00,exec.asm,JR	SUBSL5
7119,7119,7028,3177,30d5,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"SUBSL1:         LD	A,H"
7120,7120,7029,3178,30d6,3c,3c,inc a,inc a,inc a,exec.asm,INC	A
7121,7121,7030,3179,30d7,20 06,20 06,"jr nz,$+$08","jr nz,$+$08","jr nz,$+$00",exec.asm,"JR	NZ,SUBSL2"
7122,7122,7031,317b,30d9,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
7123,7123,7032,317c,30da,d6 02,d6 02,sub $02,sub $02,sub $00,exec.asm,SUB	2
7124,7124,7033,317e,30dc,38 24,38 24,"jr c,$+$26","jr c,$+$26","jr c,$+$00",exec.asm,"JR	C,SUBSL9"
7125,7125,7034,3180,30de,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
7126,7126,7035,3181,30df,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"SUBSL2:         LD	A,L"
7127,7127,7036,3182,30e0,b8,b8,cp b,cp b,cp b,exec.asm,CP	B
7128,7128,7037,3183,30e1,30 1f,30 1f,"jr nc,$+$21","jr nc,$+$21","jr nc,$+$00",exec.asm,"JR	NC,SUBSL9"
7129,7129,7038,3185,30e3,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
7130,7130,7039,3186,30e4,b8,b8,cp b,cp b,cp b,exec.asm,CP	B
7131,7131,7040,3187,30e5,38 03,38 03,"jr c,$+$05","jr c,$+$05","jr c,$+$00",exec.asm,"JR	C,SUBSL3"
7132,7132,7041,3189,30e7,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"SUBSL5:         LD	A,B"
7133,7133,7042,318a,30e8,3d,3d,dec a,dec a,dec a,exec.asm,DEC	A
7134,7134,7043,318b,30e9,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
7135,7135,7044,318c,30ea,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"SUBSL3:         LD	A,H"
7136,7136,7045,318d,30eb,95,95,sub l,sub l,sub l,exec.asm,SUB	L
7137,7137,7046,318e,30ec,38 14,38 14,"jr c,$+$16","jr c,$+$16","jr c,$+$00",exec.asm,"JR	C,SUBSL9"
7138,7138,7047,3190,30ee,3c,3c,inc a,inc a,inc a,exec.asm,INC	A
7139,7139,7048,3191,30ef,b9,b9,cp c,cp c,cp c,exec.asm,CP	C
7140,7140,7049,3192,30f0,38 01,38 01,"jr c,$+$03","jr c,$+$03","jr c,$+$00",exec.asm,"JR	C,SUBSL4"
7141,7141,7050,3194,30f2,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
7142,7142,7051,3195,30f3,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"SUBSL4:         LD	B,0"
7143,7143,7052,3197,30f5,60,60,"ld h,b","ld h,b","ld h,b",exec.asm,"LD	H,B"
7144,7144,7053,3198,30f6,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
7145,7145,7054,3199,30f7,b7,b7,or a,or a,or a,exec.asm,OR	A
7146,7146,7055,319a,30f8,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",exec.asm,"JR	Z,SUBSL9"
7147,7147,7056,319c,30fa,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7148,7148,7057,319d,30fb,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE"
7149,7149,7058,319e,30fc,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7150,7150,7059,319f,30fd,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
7151,7151,7060,31a2,3100,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7152,7152,7061,31a4,3102,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,SUBSL9:         JP	XEQ
7153,7153,7062,31a7,3105,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,EXITex:           INC	IY		;Skip FOR/REPEAT/WHILE
7154,7154,7063,31a9,3107,fe e3,fe e3,cp $e3,cp $e3,cp $00,exec.asm,CP	TFOR
7155,7155,7064,31ab,3109,20 0c,20 0c,"jr nz,$+$0e","jr nz,$+$0e","jr nz,$+$00",exec.asm,"JR	NZ,EXIT0"
7156,7156,7065,31ad,310b,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",exec.asm,"LD	IX,0		;For EXITex FOR <var>"
7157,7157,7066,31b1,310f,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,CALL	TERMQ
7158,7158,7067,31b4,3112,c4 67 42,c4 c5 41,"call nz,$4267","call nz,$41c5","call nz,$0000",exec.asm,"CALL	NZ,GETVAR"
7159,7159,7068,31b7,3115,3e e3,3e e3,"ld a,$e3","ld a,$e3","ld a,$00",exec.asm,"LD	A,TFOR"
7160,7160,7069,31b9,3117,16 01,16 01,"ld d,$01","ld d,$01","ld d,$00",exec.asm,"EXIT0:          LD	D,1		;Level for WSRCH"
7161,7161,7070,31bb,3119,5f,5f,"ld e,a","ld e,a","ld e,a",exec.asm,"LD	E,A"
7162,7162,7071,31bc,311a,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"EXIT1:          LD	A,E"
7163,7163,7072,31bd,311b,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC		;Marker
7164,7164,7073,31be,311c,21 e5 29,21 43 29,"ld hl,$29e5","ld hl,$2943","ld hl,$0000",exec.asm,"LD	HL,FORCHK"
7165,7165,7074,31c1,311f,b7,b7,or a,or a,or a,exec.asm,OR	A
7166,7166,7075,31c2,3120,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7167,7167,7076,31c4,3122,28 25,28 25,"jr z,$+$27","jr z,$+$27","jr z,$+$00",exec.asm,"JR	Z,EXIT4"
7168,7168,7077,31c6,3124,21 71 29,21 cf 28,"ld hl,$2971","ld hl,$28cf","ld hl,$0000",exec.asm,"LD	HL,REPCHK"
7169,7169,7078,31c9,3127,b7,b7,or a,or a,or a,exec.asm,OR	A
7170,7170,7079,31ca,3128,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7171,7171,7080,31cc,312a,28 38,28 38,"jr z,$+$3a","jr z,$+$3a","jr z,$+$00",exec.asm,"JR	Z,EXIT6"
7172,7172,7081,31ce,312c,21 b2 2e,21 10 2e,"ld hl,$2eb2","ld hl,$2e10","ld hl,$0000",exec.asm,"LD	HL,WHICHK"
7173,7173,7082,31d1,312f,b7,b7,or a,or a,or a,exec.asm,OR	A
7174,7174,7083,31d2,3130,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7175,7175,7084,31d4,3132,28 3a,28 3a,"jr z,$+$3c","jr z,$+$3c","jr z,$+$00",exec.asm,"JR	Z,EXIT7"
7176,7176,7085,31d6,3134,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;Put back marker
7177,7177,7086,31d7,3135,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7178,7178,7087,31d9,3137,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7179,7179,7088,31da,3138,d9,d9,exx,exx,exx,exec.asm,EXX
7180,7180,7089,31db,3139,3e 03,3e 03,"ld a,$03","ld a,$03","ld a,$00",exec.asm,"LD	A,3"
7181,7181,7090,31dd,313b,cd b5 34,cd 13 34,call $34b5,call $3413,call $0000,exec.asm,CALL	RESLOC
7182,7182,7091,31e0,313e,d9,d9,exx,exx,exx,exec.asm,EXX
7183,7183,7092,31e1,313f,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7184,7184,7093,31e2,3140,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7185,7185,7094,31e4,3142,20 d6,20 d6,"jr nz,$-$28","jr nz,$-$28","jr nz,$-$00",exec.asm,"JR	NZ,EXIT1"
7186,7186,7095,31e6,3144,3e 2c,3e 2c,"ld a,$2c","ld a,$2c","ld a,$00",exec.asm,"LD	A,44"
7187,7187,7096,31e8,3146,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,JP	ERROR_		;'Bad EXITex'
7188,7188,7097,31eb,3149,c1,c1,pop bc,pop bc,pop bc,exec.asm,EXIT4:          POP	BC		;VARPTR
7189,7189,7098,31ec,314a,21 0e 00,21 0e 00,"ld hl,$000e","ld hl,$000e","ld hl,$0000",exec.asm,"LD	HL,14		;Skip text pointer, limit & step"
7190,7190,7099,31ef,314d,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7191,7191,7100,31f0,314e,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL		;Pop FOR record"
7192,7192,7101,31f1,314f,fe e3,fe e3,cp $e3,cp $e3,cp $00,exec.asm,CP	TFOR
7193,7193,7102,31f3,3151,20 c7,20 c7,"jr nz,$-$37","jr nz,$-$37","jr nz,$-$00",exec.asm,"JR	NZ,EXIT1"
7194,7194,7103,31f5,3153,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7195,7195,7104,31f7,3155,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7196,7196,7105,31f8,3156,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
7197,7197,7106,31f9,3157,b5,b5,or l,or l,or l,exec.asm,OR	L
7198,7198,7107,31fa,3158,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",exec.asm,"JR	Z,EXIT5"
7199,7199,7108,31fc,315a,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7200,7200,7109,31fe,315c,01 e3 ed,01 00 d0,"ld bc,$ede3","ld bc,$d000","ld bc,$0000",exec.asm,"EXIT5:          LD	BC,TFOR+TNEXT*256"
7201,7201,7110,3201,315f,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",exec.asm,"JR	Z,EXIT8"
7202,7202,7111,3203,3161,14,14,inc d,inc d,inc d,exec.asm,INC	D		;Count nested FOR loops
7203,7203,7112,3204,3162,18 b6,18 b6,jr $-$48,jr $-$48,jr $-$00,exec.asm,JR	EXIT1
7204,7204,7113,3206,3164,c1,c1,pop bc,pop bc,pop bc,exec.asm,EXIT6:          POP	BC		;Text pointer
7205,7205,7114,3207,3165,fe f5,fe f5,cp $f5,cp $f5,cp $00,exec.asm,CP	TREPEAT
7206,7206,7115,3209,3167,20 b1,20 b1,"jr nz,$-$4d","jr nz,$-$4d","jr nz,$-$00",exec.asm,"JR	NZ,EXIT1"
7207,7207,7116,320b,3169,01 f5 fd,01 00 f2,"ld bc,$fdf5","ld bc,$f200","ld bc,$0000",exec.asm,"LD	BC,TREPEAT+TUNTIL*256"
7208,7208,7117,320e,316c,18 08,18 08,jr $+$0a,jr $+$0a,jr $+$00,exec.asm,JR	EXIT8
7209,7209,7118,3210,316e,c1,c1,pop bc,pop bc,pop bc,exec.asm,EXIT7:          POP	BC		;Text pointer
7210,7210,7119,3211,316f,fe c7,fe c7,cp $c7,cp $c7,cp $00,exec.asm,CP	TWHILE
7211,7211,7120,3213,3171,20 a7,20 a7,"jr nz,$-$57","jr nz,$-$57","jr nz,$-$00",exec.asm,"JR	NZ,EXIT1"
7212,7212,7121,3215,3173,01 c7 ce,01 00 95,"ld bc,$cec7","ld bc,$9500","ld bc,$0000",exec.asm,"LD	BC,TWHILE+TENDWHILE*256"
7213,7213,7122,3218,3176,cd d4 36,cd 32 36,call $36d4,call $3632,call $0000,exec.asm,EXIT8:          CALL	WSRCH
7214,7214,7123,321b,3179,cd c6 35,cd 24 35,call $35c6,call $3524,call $0000,exec.asm,CALL	SPAN		;Skip UNTIL expression
7215,7215,7124,321e,317c,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,JP	XEQ
7216,7216,7125,3221,317f,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,PUT:            CALL	EXPRI		;PORT ADDRESS
7217,7217,7126,3224,3182,d9,d9,exx,exx,exx,exec.asm,EXX
7218,7218,7127,3225,3183,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7219,7219,7128,3226,3184,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,exec.asm,CALL	COMMA
7220,7220,7129,3229,3187,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI		;DATA
7221,7221,7130,322c,318a,d9,d9,exx,exx,exx,exec.asm,EXX
7222,7222,7131,322d,318b,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7223,7223,7132,322e,318c,ed 69,ed 69,"out (bc),l","out (bc),l","out (bc),l",exec.asm,"OUT	(C),L		;OUTPUT TO PORT BC"
7224,7224,7133,3230,318e,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,exec.asm,JP	XEQ
7225,7225,7134,3233,3191,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,ASSIGN:         CALL	GETVAR		;VARIABLE
7226,7226,7135,3236,3194,d8,d8,ret c,ret c,ret c,exec.asm,RET	C		;ILLEGAL VARIABLE
7227,7227,7136,3237,3195,c4 51 42,c4 af 41,"call nz,$4251","call nz,$41af","call nz,$0000",exec.asm,"CALL	NZ,PUTVAR"
7228,7228,7137,323a,3198,57,57,"ld d,a","ld d,a","ld d,a",exec.asm,"LD	D,A		;Type"
7229,7229,7138,323b,3199,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7230,7230,7139,323e,319c,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7231,7231,7140,3240,319e,5f,5f,"ld e,a","ld e,a","ld e,a",exec.asm,"LD	E,A		;Operator (or =)"
7232,7232,7141,3241,319f,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,exec.asm,CP	'='
7233,7233,7142,3243,31a1,c4 d3 35,c4 31 35,"call nz,$35d3","call nz,$3531","call nz,$0000",exec.asm,"CALL	NZ,EQUALS"
7234,7234,7143,3246,31a4,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"LD	A,D"
7235,7235,7144,3247,31a5,e6 c0,e6 c0,and $c0,and $c0,and $00,exec.asm,AND	11000000B
7236,7236,7145,3249,31a7,c0,c0,ret nz,ret nz,ret nz,exec.asm,RET	NZ		;String or array
7237,7237,7146,324a,31a8,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7238,7238,7147,324b,31a9,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7239,7239,7148,324c,31aa,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN
7240,7240,7149,324f,31ad,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7241,7241,7150,3251,31af,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7242,7242,7151,3252,31b0,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"MODIFY:         LD	A,E"
7243,7243,7152,3253,31b1,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,exec.asm,CP	'='
7244,7244,7153,3255,31b3,28 1c,28 1c,"jr z,$+$1e","jr z,$+$1e","jr z,$+$00",exec.asm,"JR	Z,STORE0	;Simple assignment"
7245,7245,7154,3257,31b5,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7246,7246,7155,3258,31b6,d9,d9,exx,exx,exx,exec.asm,EXX
7247,7247,7156,3259,31b7,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7248,7248,7157,325a,31b8,d9,d9,exx,exx,exx,exec.asm,EXX
7249,7249,7158,325b,31b9,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7250,7250,7159,325c,31ba,41,41,"ld b,c","ld b,c","ld b,c",exec.asm,"LD	B,C"
7251,7251,7160,325d,31bb,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
7252,7252,7161,325e,31bc,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
7253,7253,7162,325f,31bd,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
7254,7254,7163,3260,31be,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,exec.asm,CALL	LOADN
7255,7255,7164,3263,31c1,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
7256,7256,7165,3264,31c2,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7257,7257,7166,3265,31c3,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
7258,7258,7167,3266,31c4,e6 0f,e6 0f,and $0f,and $0f,and $00,exec.asm,AND	15
7259,7259,7168,3268,31c6,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7260,7260,7169,326a,31c8,cd 99 45,cd f7 44,call $4599,call $44f7,call $0000,exec.asm,CALL	FPP
7261,7261,7170,326d,31cb,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7262,7262,7171,326f,31cd,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7263,7263,7172,3270,31ce,da c8 3f,da 26 3f,"jp c,$3fc8","jp c,$3f26","jp c,$0000",exec.asm,"JP	C,ERROR_"
7264,7264,7173,3273,31d1,7a,7a,"ld a,d","ld a,d","ld a,d",exec.asm,"STORE0:         LD	A,D		;Type"
7265,7265,7174,3274,31d2,fe 05,fe 05,cp $05,cp $05,cp $00,exec.asm,STOREN:         CP	5
7266,7266,7175,3276,31d4,28 12,28 12,"jr z,$+$14","jr z,$+$14","jr z,$+$00",exec.asm,"JR	Z,STORE5"
7267,7267,7176,3278,31d6,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7268,7268,7177,3279,31d7,0c,0c,inc c,inc c,inc c,exec.asm,INC	C		;SPEED - & PRESERVE F'
7269,7269,7178,327a,31d8,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C		; WHEN CALLED BY FNEND0
7270,7270,7179,327b,31d9,c4 9b 1c,c4 f9 1b,"call nz,$1c9b","call nz,$1bf9","call nz,$0000",exec.asm,"CALL	NZ,SFIX		;CONVERT TO INTEGER"
7271,7271,7180,327e,31dc,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7272,7272,7181,327f,31dd,fe 04,fe 04,cp $04,cp $04,cp $00,exec.asm,CP	4
7273,7273,7182,3281,31df,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",exec.asm,"JR	Z,STORE4"
7274,7274,7183,3283,31e1,bf,bf,cp a,cp a,cp a,exec.asm,CP	A		;SET ZERO
7275,7275,7184,3284,31e2,d9,d9,exx,exx,exx,exec.asm,STORE1:         EXX
7276,7276,7185,3285,31e3,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"LD	(IX+0),L"
7277,7277,7186,3288,31e6,d9,d9,exx,exx,exx,exec.asm,EXX
7278,7278,7187,3289,31e7,c9,c9,ret,ret,ret,exec.asm,RET
7279,7279,7188,328a,31e8,dd 71 04,dd 71 04,"ld (ix+$04),c","ld (ix+$04),c","ld (ix+$00),c",exec.asm,"STORE5:         LD	(IX+4),C"
7280,7280,7189,328d,31eb,d9,d9,exx,exx,exx,exec.asm,STORE4:         EXX
7281,7281,7190,328e,31ec,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"LD	(IX+0),L"
7282,7282,7191,3291,31ef,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",exec.asm,"LD	(IX+1),H"
7283,7283,7192,3294,31f2,d9,d9,exx,exx,exx,exec.asm,EXX
7284,7284,7193,3295,31f3,dd 75 02,dd 75 02,"ld (ix+$02),l","ld (ix+$02),l","ld (ix+$00),l",exec.asm,"LD	(IX+2),L"
7285,7285,7194,3298,31f6,dd 74 03,dd 74 03,"ld (ix+$03),h","ld (ix+$03),h","ld (ix+$00),h",exec.asm,"LD	(IX+3),H"
7286,7286,7195,329b,31f9,c9,c9,ret,ret,ret,exec.asm,RET
7287,7287,7196,329c,31fa,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"MODIFS:         LD	A,L		;Operator"
7288,7288,7197,329d,31fb,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,exec.asm,CP	'+'
7289,7289,7198,329f,31fd,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H		;Type"
7290,7290,7199,32a0,31fe,20 20,20 20,"jr nz,$+$22","jr nz,$+$22","jr nz,$+$00",exec.asm,"JR	NZ,STACCS"
7291,7291,7200,32a2,3200,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
7292,7292,7201,32a4,3202,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7293,7293,7202,32a6,3204,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
7294,7294,7203,32a8,3206,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,exec.asm,CALL	PUSHS
7295,7295,7204,32ab,3209,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
7296,7296,7205,32ad,320b,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7297,7297,7206,32af,320d,cd 92 1a,cd f0 19,call $1a92,call $19f0,call $0000,exec.asm,CALL	LOADS
7298,7298,7207,32b2,3210,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7299,7299,7208,32b3,3211,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B		;Type"
7300,7300,7209,32b4,3212,0c,0c,inc c,inc c,inc c,exec.asm,INC	C
7301,7301,7210,32b5,3213,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7302,7302,7211,32b6,3214,28 08,28 08,"jr z,$+$0a","jr z,$+$0a","jr z,$+$00",exec.asm,"JR	Z,MODFS1	;Zero length"
7303,7303,7212,32b8,3216,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
7304,7304,7213,32bb,3219,44,44,"ld b,h","ld b,h","ld b,h",exec.asm,"LD	B,H"
7305,7305,7214,32bc,321a,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7306,7306,7215,32bd,321b,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7307,7307,7216,32bf,321d,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
7308,7308,7217,32c0,321e,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,MODFS1:         POP	IY
7309,7309,7218,32c2,3220,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"STACCS:         LD	HL,ACCS"
7310,7310,7219,32c5,3223,1f,1f,rra,rra,rra,exec.asm,STORES:         RRA
7311,7311,7220,32c6,3224,30 4f,30 4f,"jr nc,$+$51","jr nc,$+$51","jr nc,$+$00",exec.asm,"JR	NC,STORS3	;FIXED STRING"
7312,7312,7221,32c8,3226,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7313,7313,7222,32c9,3227,cd b6 19,cd 14 19,call $19b6,call $1914,call $0000,exec.asm,CALL	LOAD4
7314,7314,7223,32cc,322a,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"LD	A,E		;LENGTH OF STRING"
7315,7315,7224,32cd,322b,d9,d9,exx,exx,exx,exec.asm,EXX
7316,7316,7225,32ce,322c,6f,6f,"ld l,a","ld l,a","ld l,a",exec.asm,"LD	L,A"
7317,7317,7226,32cf,322d,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H		;LENGTH ALLOCATED"
7318,7318,7227,32d0,322e,d9,d9,exx,exx,exx,exec.asm,EXX
7319,7319,7228,32d1,322f,bb,bb,cp e,cp e,cp e,exec.asm,CP	E
7320,7320,7229,32d2,3230,30 24,30 24,"jr nc,$+$26","jr nc,$+$26","jr nc,$+$00",exec.asm,"JR	NC,STORS1	;ENOUGH ROOM"
7321,7321,7230,32d4,3232,d9,d9,exx,exx,exx,exec.asm,EXX
7322,7322,7231,32d5,3233,65,65,"ld h,l","ld h,l","ld h,l",exec.asm,"LD	H,L"
7323,7323,7232,32d6,3234,d9,d9,exx,exx,exx,exec.asm,EXX
7324,7324,7233,32d7,3235,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7325,7325,7234,32d8,3236,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0"
7326,7326,7235,32da,3238,4f,4f,"ld c,a","ld c,a","ld c,a",exec.asm,"LD	C,A"
7327,7327,7236,32db,3239,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
7328,7328,7237,32dc,323a,ed 4b e0 55,ed 4b e0 54,"ld bc,($55e0)","ld bc,($54e0)","ld bc,($0000)",exec.asm,"LD	BC,(FREE)"
7329,7329,7238,32e0,323e,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC		;IS STRING LAST?"
7330,7330,7239,32e2,3240,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7331,7331,7240,32e3,3241,28 12,28 12,"jr z,$+$14","jr z,$+$14","jr z,$+$00",exec.asm,"JR	Z,STORS0"
7332,7332,7241,32e5,3243,60,60,"ld h,b","ld h,b","ld h,b",exec.asm,"LD	H,B"
7333,7333,7242,32e6,3244,69,69,"ld l,c","ld l,c","ld l,c",exec.asm,"LD	L,C		;DESTINATION"
7334,7334,7243,32e7,3245,b7,b7,or a,or a,or a,exec.asm,OR	A		;V5 optimisation
7335,7335,7244,32e8,3246,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",exec.asm,"JR	Z,STORS0"
7336,7336,7245,32ea,3248,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"LD	A,E"
7337,7337,7246,32eb,3249,5f,5f,"ld e,a","ld e,a","ld e,a",exec.asm,"STORS2:         LD	E,A"
7338,7338,7247,32ec,324a,1d,1d,dec e,dec e,dec e,exec.asm,DEC	E
7339,7339,7248,32ed,324b,a3,a3,and e,and e,and e,exec.asm,AND	E
7340,7340,7249,32ee,324c,20 fb,20 fb,"jr nz,$-$03","jr nz,$-$03","jr nz,$-$00",exec.asm,"JR	NZ,STORS2"
7341,7341,7250,32f0,324e,37,37,scf,scf,scf,exec.asm,SCF
7342,7342,7251,32f1,324f,cb 13,cb 13,rl e,rl e,rl e,exec.asm,RL	E
7343,7343,7252,32f3,3251,7b,7b,"ld a,e","ld a,e","ld a,e",exec.asm,"LD	A,E"
7344,7344,7253,32f4,3252,d9,d9,exx,exx,exx,exec.asm,EXX
7345,7345,7254,32f5,3253,67,67,"ld h,a","ld h,a","ld h,a",exec.asm,"LD	H,A"
7346,7346,7255,32f6,3254,d9,d9,exx,exx,exx,exec.asm,EXX
7347,7347,7256,32f7,3255,37,37,scf,scf,scf,exec.asm,STORS0:         SCF
7348,7348,7257,32f8,3256,cd 8d 32,cd eb 31,call $328d,call $31eb,call $0000,exec.asm,STORS1:         CALL	STORE4		;PRESERVES CARRY!
7349,7349,7258,32fb,3259,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0"
7350,7350,7259,32fd,325b,4b,4b,"ld c,e","ld c,e","ld c,e",exec.asm,"LD	C,E"
7351,7351,7260,32fe,325c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7352,7352,7261,32ff,325d,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7353,7353,7262,3300,325e,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7354,7354,7263,3301,325f,0c,0c,inc c,inc c,inc c,exec.asm,INC	C
7355,7355,7264,3302,3260,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z		;NULL STRING
7356,7356,7265,3303,3261,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7357,7357,7266,3305,3263,d0,d0,ret nc,ret nc,ret nc,exec.asm,RET	NC		;STRING REPLACED
7358,7358,7267,3306,3264,ed 53 e0 55,ed 53 e0 54,"ld ($55e0),de","ld ($54e0),de","ld ($0000),de",exec.asm,"LD	(FREE),DE"
7359,7359,7268,330a,3268,e5,e5,push hl,push hl,push hl,exec.asm,CHECK:          PUSH	HL
7360,7360,7269,330b,3269,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",exec.asm,"LD	HL,(FREE)"
7361,7361,7270,330e,326c,24,24,inc h,inc h,inc h,exec.asm,INC	H
7362,7362,7271,330f,326d,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",exec.asm,"SBC	HL,SP"
7363,7363,7272,3311,326f,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7364,7364,7273,3312,3270,d8,d8,ret c,ret c,ret c,exec.asm,RET	C
7365,7365,7274,3313,3271,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7366,7366,7275,3314,3272,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"JP	ERROR_		;""No room"""
7367,7367,7276,3317,3275,4b,4b,"ld c,e","ld c,e","ld c,e",exec.asm,"STORS3:         LD	C,E"
7368,7368,7277,3318,3276,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7369,7369,7278,331a,3278,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7370,7370,7279,331b,3279,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7371,7371,7280,331c,327a,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
7372,7372,7281,331d,327b,b9,b9,cp c,cp c,cp c,exec.asm,CP	C
7373,7373,7282,331e,327c,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",exec.asm,"JR	Z,STORS5"
7374,7374,7283,3320,327e,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7375,7375,7284,3322,3280,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",exec.asm,"STORS5:         LD	A,CR"
7376,7376,7285,3324,3282,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
7377,7377,7286,3325,3283,c9,c9,ret,ret,ret,exec.asm,RET
7378,7378,7287,3326,3284,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"SAVRET:         LD	(IX+0),L		;Formal VARPTR"
7379,7379,7288,3329,3287,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",exec.asm,"LD	(IX+1),H"
7380,7380,7289,332c,328a,dd 77 02,dd 77 02,"ld (ix+$02),a","ld (ix+$02),a","ld (ix+$00),a",exec.asm,"LD	(IX+2),A"
7381,7381,7290,332f,328d,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7382,7382,7291,3331,328f,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7383,7383,7292,3332,3290,fd e5,fd e5,push iy,push iy,push iy,exec.asm,PUSH	IY
7384,7384,7293,3334,3292,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7385,7385,7294,3336,3294,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7386,7386,7295,3339,3297,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_
7387,7387,7296,333c,329a,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7388,7388,7297,333e,329c,dd 75 04,dd 75 04,"ld (ix+$04),l","ld (ix+$04),l","ld (ix+$00),l",exec.asm,"LD	(IX+4),L		;Actual VARPTR"
7389,7389,7298,3341,329f,dd 74 05,dd 74 05,"ld (ix+$05),h","ld (ix+$05),h","ld (ix+$00),h",exec.asm,"LD	(IX+5),H"
7390,7390,7299,3344,32a2,dd 77 06,dd 77 06,"ld (ix+$06),a","ld (ix+$06),a","ld (ix+$00),a",exec.asm,"LD	(IX+6),A"
7391,7391,7300,3347,32a5,fd e1,fd e1,pop iy,pop iy,pop iy,exec.asm,POP	IY
7392,7392,7301,3349,32a7,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7393,7393,7302,334a,32a8,01 08 00,01 08 00,"ld bc,$0008","ld bc,$0008","ld bc,$0000",exec.asm,"LD	BC,8"
7394,7394,7303,334d,32ab,dd 09,dd 09,"add ix,bc","add ix,bc","add ix,bc",exec.asm,"ADD	IX,BC"
7395,7395,7304,334f,32ad,18 2d,18 2d,jr $+$2f,jr $+$2f,jr $+$00,exec.asm,JR	ARGUE0
7396,7396,7305,3351,32af,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",exec.asm,"ARGUE:          LD	A,-1"
7397,7397,7306,3353,32b1,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;PUT MARKER ON STACK
7398,7398,7307,3354,32b2,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"ARGUE1:         INC	IY		;BUMP PAST ( | ,"
7399,7399,7308,3356,32b4,13,13,inc de,inc de,inc de,exec.asm,INC	DE
7400,7400,7309,3357,32b5,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7401,7401,7310,3358,32b6,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0"
7402,7402,7311,335a,32b8,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7403,7403,7312,335d,32bb,fe f8,fe f8,cp $f8,cp $f8,cp $00,exec.asm,CP	TRETURN
7404,7404,7313,335f,32bd,20 06,20 06,"jr nz,$+$08","jr nz,$+$08","jr nz,$+$00",exec.asm,"JR	NZ,ARGUE9"
7405,7405,7314,3361,32bf,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY		;SKIP 'RETURN'
7406,7406,7315,3363,32c1,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7407,7407,7316,3366,32c4,04,04,inc b,inc b,inc b,exec.asm,INC	B		;FLAG 'RETURN'
7408,7408,7317,3367,32c5,c5,c5,push bc,push bc,push bc,exec.asm,ARGUE9:         PUSH	BC
7409,7409,7318,3368,32c6,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7410,7410,7319,336a,32c8,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,CALL	GETVAR		;FORMAL PARAMETER
7411,7411,7320,336d,32cb,38 49,38 49,"jr c,$+$4b","jr c,$+$4b","jr c,$+$00",exec.asm,"JR	C,ARGERR"
7412,7412,7321,336f,32cd,c4 51 42,c4 af 41,"call nz,$4251","call nz,$41af","call nz,$0000",exec.asm,"CALL	NZ,PUTVAR"
7413,7413,7322,3372,32d0,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7414,7414,7323,3374,32d2,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7415,7415,7324,3375,32d3,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7416,7416,7325,3376,32d4,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;VARPTR
7417,7417,7326,3377,32d5,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7418,7418,7327,3378,32d6,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7419,7419,7328,3379,32d7,05,05,dec b,dec b,dec b,exec.asm,DEC	B
7420,7420,7329,337a,32d8,28 aa,28 aa,"jr z,$-$54","jr z,$-$54","jr z,$-$00",exec.asm,"JR	Z,SAVRET"
7421,7421,7330,337c,32da,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7422,7422,7331,337e,32dc,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"ARGUE0:         BIT	6,A		;ARRAY?"
7423,7423,7332,3380,32de,20 3b,20 3b,"jr nz,$+$3d","jr nz,$+$3d","jr nz,$+$00",exec.asm,"JR	NZ,ARGUE3"
7424,7424,7333,3382,32e0,b7,b7,or a,or a,or a,exec.asm,OR	A		;TYPE
7425,7425,7334,3383,32e1,fa 99 33,fa f7 32,"jp m,$3399","jp m,$32f7","jp m,$0000",exec.asm,"JP	M,ARGUE2	;STRING"
7426,7426,7335,3386,32e4,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7427,7427,7336,3388,32e6,cd b0 18,cd 0e 18,call $18b0,call $180e,call $0000,exec.asm,CALL	EXPRN		;ACTUAL PARAMETER
7428,7428,7337,338b,32e9,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7429,7429,7338,338d,32eb,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7430,7430,7339,338f,32ed,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7431,7431,7340,3390,32ee,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7432,7432,7341,3391,32ef,d9,d9,exx,exx,exx,exec.asm,EXX
7433,7433,7342,3392,32f0,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7434,7434,7343,3393,32f1,d9,d9,exx,exx,exx,exec.asm,EXX
7435,7435,7344,3394,32f2,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7436,7436,7345,3395,32f3,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
7437,7437,7346,3396,32f4,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7438,7438,7347,3397,32f5,18 13,18 13,jr $+$15,jr $+$15,jr $+$00,exec.asm,JR	ARGUE4
7439,7439,7348,3399,32f7,dd e5,dd e5,push ix,push ix,push ix,exec.asm,ARGUE2:         PUSH	IX
7440,7440,7349,339b,32f9,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,exec.asm,CALL	EXPRS
7441,7441,7350,339e,32fc,d9,d9,exx,exx,exx,exec.asm,EXX
7442,7442,7351,339f,32fd,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7443,7443,7352,33a0,32fe,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7444,7444,7353,33a2,3300,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7445,7445,7354,33a3,3301,d9,d9,exx,exx,exx,exec.asm,EXX
7446,7446,7355,33a4,3302,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7447,7447,7356,33a5,3303,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,exec.asm,CALL	PUSHS
7448,7448,7357,33a8,3306,d9,d9,exx,exx,exx,exec.asm,EXX
7449,7449,7358,33a9,3307,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7450,7450,7359,33aa,3308,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7451,7451,7360,33ac,330a,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,ARGUE4:         CALL	NXT
7452,7452,7361,33af,330d,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7453,7453,7362,33b1,330f,20 27,20 27,"jr nz,$+$29","jr nz,$+$29","jr nz,$+$00",exec.asm,"JR	NZ,ARGUE5"
7454,7454,7363,33b3,3311,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",exec.asm,"LD	A,(DE)"
7455,7455,7364,33b4,3312,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7456,7456,7365,33b6,3314,28 9c,28 9c,"jr z,$-$62","jr z,$-$62","jr z,$-$00",exec.asm,"JR	Z,ARGUE1	;ANOTHER"
7457,7457,7366,33b8,3316,3e 1f,3e 1f,"ld a,$1f","ld a,$1f","ld a,$00",exec.asm,"ARGERR:         LD	A,31"
7458,7458,7367,33ba,3318,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"JP	ERROR_		;""Bad arguments"""
7459,7459,7368,33bd,331b,dd e5,dd e5,push ix,push ix,push ix,exec.asm,ARGUE3:         PUSH	IX
7460,7460,7369,33bf,331d,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7461,7461,7370,33c2,3320,cd 67 42,cd c5 41,call $4267,call $41c5,call $0000,exec.asm,CALL	GETVAR
7462,7462,7371,33c5,3323,38 f1,38 f1,"jr c,$-$0d","jr c,$-$0d","jr c,$-$00",exec.asm,"JR	C,ARGERR"
7463,7463,7372,33c7,3325,dd 4e 00,dd 4e 00,"ld c,(ix)","ld c,(ix)","ld c,(ix)",exec.asm,"LD	C,(IX+0)"
7464,7464,7373,33ca,3328,dd 46 01,dd 46 01,"ld b,(ix+$01)","ld b,(ix+$01)","ld b,(ix+$00)",exec.asm,"LD	B,(IX+1)"
7465,7465,7374,33cd,332b,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7466,7466,7375,33cf,332d,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7467,7467,7376,33d2,3330,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7468,7468,7377,33d4,3332,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7469,7469,7378,33d5,3333,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7470,7470,7379,33d6,3334,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;STACK ARRAY POINTER
7471,7471,7380,33d7,3335,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;STACK TYPE
7472,7472,7381,33d8,3336,18 d2,18 d2,jr $-$2c,jr $-$2c,jr $-$00,exec.asm,JR	ARGUE4
7473,7473,7382,33da,3338,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,ARGUE5:         CALL	BRAKET
7474,7474,7383,33dd,333b,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",exec.asm,"LD	A,(DE)"
7475,7475,7384,33de,333c,fe 29,fe 29,cp $29,cp $29,cp $00,exec.asm,CP	')'
7476,7476,7385,33e0,333e,20 d6,20 d6,"jr nz,$-$28","jr nz,$-$28","jr nz,$-$00",exec.asm,"JR	NZ,ARGERR"
7477,7477,7386,33e2,3340,13,13,inc de,inc de,inc de,exec.asm,INC	DE
7478,7478,7387,33e3,3341,d9,d9,exx,exx,exx,exec.asm,UNSTAK:         EXX
7479,7479,7388,33e4,3342,c1,c1,pop bc,pop bc,pop bc,exec.asm,ARGUE6:         POP	BC
7480,7480,7389,33e5,3343,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
7481,7481,7390,33e6,3344,3c,3c,inc a,inc a,inc a,exec.asm,INC	A
7482,7482,7391,33e7,3345,d9,d9,exx,exx,exx,exec.asm,EXX
7483,7483,7392,33e8,3346,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z		;MARKER POPPED
7484,7484,7393,33e9,3347,d9,d9,exx,exx,exx,exec.asm,EXX
7485,7485,7394,33ea,3348,3d,3d,dec a,dec a,dec a,exec.asm,DEC	A
7486,7486,7395,33eb,3349,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"BIT	6,A		;ARRAY"
7487,7487,7396,33ed,334b,20 19,20 19,"jr nz,$+$1b","jr nz,$+$1b","jr nz,$+$00",exec.asm,"JR	NZ,ARGUE8"
7488,7488,7397,33ef,334d,b7,b7,or a,or a,or a,exec.asm,OR	A
7489,7489,7398,33f0,334e,fa fe 33,fa 5c 33,"jp m,$33fe","jp m,$335c","jp m,$0000",exec.asm,"JP	M,ARGUE7	;STRING"
7490,7490,7399,33f3,3351,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7491,7491,7400,33f4,3352,d9,d9,exx,exx,exx,exec.asm,EXX
7492,7492,7401,33f5,3353,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7493,7493,7402,33f6,3354,d9,d9,exx,exx,exx,exec.asm,EXX
7494,7494,7403,33f7,3355,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7495,7495,7404,33f9,3357,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN		;WRITE TO DUMMY
7496,7496,7405,33fc,335a,18 e6,18 e6,jr $-$18,jr $-$18,jr $-$00,exec.asm,JR	ARGUE6
7497,7497,7406,33fe,335c,cd bb 20,cd 19 20,call $20bb,call $2019,call $0000,exec.asm,ARGUE7:         CALL	POPS
7498,7498,7407,3401,335f,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7499,7499,7408,3403,3361,cd c2 32,cd 20 32,call $32c2,call $3220,call $0000,exec.asm,CALL	STACCS
7500,7500,7409,3406,3364,18 dc,18 dc,jr $-$22,jr $-$22,jr $-$00,exec.asm,JR	ARGUE6
7501,7501,7410,3408,3366,c1,c1,pop bc,pop bc,pop bc,exec.asm,ARGUE8:         POP	BC		;ARRAY POINTER
7502,7502,7411,3409,3367,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7503,7503,7412,340b,3369,dd 71 00,dd 71 00,"ld (ix),c","ld (ix),c","ld (ix),c",exec.asm,"LD	(IX+0),C"
7504,7504,7413,340e,336c,dd 70 01,dd 70 01,"ld (ix+$01),b","ld (ix+$01),b","ld (ix+$00),b",exec.asm,"LD	(IX+1),B"
7505,7505,7414,3411,336f,18 d1,18 d1,jr $-$2d,jr $-$2d,jr $-$00,exec.asm,JR	ARGUE6
7506,7506,7415,3413,3371,3e ff,3e ff,"ld a,$ff","ld a,$ff","ld a,$00",exec.asm,"RETXFR:         LD	A,-1"
7507,7507,7416,3415,3373,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;PUT MARKER ON STACK
7508,7508,7417,3416,3374,d9,d9,exx,exx,exx,exec.asm,RETXF1:         EXX
7509,7509,7418,3417,3375,dd 6e 04,dd 6e 04,"ld l,(ix+$04)","ld l,(ix+$04)","ld l,(ix+$00)",exec.asm,"LD	L,(IX+4)	;Actual parameter (destination)"
7510,7510,7419,341a,3378,dd 66 05,dd 66 05,"ld h,(ix+$05)","ld h,(ix+$05)","ld h,(ix+$00)",exec.asm,"LD	H,(IX+5)"
7511,7511,7420,341d,337b,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;STACK VARPTR
7512,7512,7421,341e,337c,dd 6e 00,dd 6e 00,"ld l,(ix)","ld l,(ix)","ld l,(ix)",exec.asm,"LD	L,(IX+0)	;Formal parameter (source)"
7513,7513,7422,3421,337f,dd 66 01,dd 66 01,"ld h,(ix+$01)","ld h,(ix+$01)","ld h,(ix+$00)",exec.asm,"LD	H,(IX+1)"
7514,7514,7423,3424,3382,dd 7e 02,dd 7e 02,"ld a,(ix+$02)","ld a,(ix+$02)","ld a,(ix+$00)",exec.asm,"LD	A,(IX+2)"
7515,7515,7424,3427,3385,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"BIT	6,A		;ARRAY?"
7516,7516,7425,3429,3387,20 19,20 19,"jr nz,$+$1b","jr nz,$+$1b","jr nz,$+$00",exec.asm,"JR	NZ,RETXF3"
7517,7517,7426,342b,3389,b7,b7,or a,or a,or a,exec.asm,OR	A		;TYPE
7518,7518,7427,342c,338a,fa 4a 34,fa a8 33,"jp m,$344a","jp m,$33a8","jp m,$0000",exec.asm,"JP	M,RETXF2	;STRING"
7519,7519,7428,342f,338d,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7520,7520,7429,3430,338e,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",exec.asm,"EX	(SP),IX"
7521,7521,7430,3432,3390,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,exec.asm,CALL	LOADN
7522,7522,7431,3435,3393,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7523,7523,7432,3437,3395,d9,d9,exx,exx,exx,exec.asm,EXX			;STACK VALUE
7524,7524,7433,3438,3396,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7525,7525,7434,3439,3397,d9,d9,exx,exx,exx,exec.asm,EXX
7526,7526,7435,343a,3398,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7527,7527,7436,343b,3399,dd 46 06,dd 46 06,"ld b,(ix+$06)","ld b,(ix+$06)","ld b,(ix+$00)",exec.asm,"RETXF6:         LD	B,(IX+6)"
7528,7528,7437,343e,339c,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;TYPE & EXPONENT
7529,7529,7438,343f,339d,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,RETXF5:         CALL	CHECK		;CHECK ROOM
7530,7530,7439,3442,33a0,18 1e,18 1e,jr $+$20,jr $+$20,jr $+$00,exec.asm,JR	RETXF4
7531,7531,7440,3444,33a2,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",exec.asm,"RETXF3:         LD	E,(HL)"
7532,7532,7441,3445,33a3,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7533,7533,7442,3446,33a4,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",exec.asm,"LD	D,(HL)"
7534,7534,7443,3447,33a5,d5,d5,push de,push de,push de,exec.asm,PUSH	DE		;STACK ARRAY POINTER
7535,7535,7444,3448,33a6,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,exec.asm,JR	RETXF6
7536,7536,7445,344a,33a8,e5,e5,push hl,push hl,push hl,exec.asm,RETXF2:         PUSH	HL
7537,7537,7446,344b,33a9,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",exec.asm,"EX	(SP),IX"
7538,7538,7447,344d,33ab,cd 92 1a,cd f0 19,call $1a92,call $19f0,call $0000,exec.asm,CALL	LOADS
7539,7539,7448,3450,33ae,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7540,7540,7449,3452,33b0,dd 7e 06,dd 7e 06,"ld a,(ix+$06)","ld a,(ix+$06)","ld a,(ix+$00)",exec.asm,"LD	A,(IX+6)"
7541,7541,7450,3455,33b3,d9,d9,exx,exx,exx,exec.asm,EXX
7542,7542,7451,3456,33b4,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7543,7543,7452,3458,33b6,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7544,7544,7453,3459,33b7,d9,d9,exx,exx,exx,exec.asm,EXX
7545,7545,7454,345a,33b8,cd 9d 20,cd fb 1f,call $209d,call $1ffb,call $0000,exec.asm,CALL	PUSHS
7546,7546,7455,345d,33bb,d9,d9,exx,exx,exx,exec.asm,EXX
7547,7547,7456,345e,33bc,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7548,7548,7457,345f,33bd,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,POP	IX
7549,7549,7458,3461,33bf,d9,d9,exx,exx,exx,exec.asm,EXX
7550,7550,7459,3462,33c0,11 08 00,11 08 00,"ld de,$0008","ld de,$0008","ld de,$0000",exec.asm,"RETXF4:         LD	DE,8"
7551,7551,7460,3465,33c3,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",exec.asm,"ADD	IX,DE"
7552,7552,7461,3467,33c5,d9,d9,exx,exx,exx,exec.asm,EXX
7553,7553,7462,3468,33c6,10 ac,10 ac,djnz $-$52,djnz $-$52,djnz $-$00,exec.asm,DJNZ	RETXF1
7554,7554,7463,346a,33c8,c3 e3 33,c3 41 33,jp $33e3,jp $3341,jp $0000,exec.asm,JP	UNSTAK
7555,7555,7464,346d,33cb,c1,c1,pop bc,pop bc,pop bc,exec.asm,RESRET:         POP	BC		;B = 'RETURN' COUNT
7556,7556,7465,346e,33cc,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",exec.asm,"LD	H,0"
7557,7557,7466,3470,33ce,68,68,"ld l,b","ld l,b","ld l,b",exec.asm,"LD	L,B"
7558,7558,7467,3471,33cf,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
7559,7559,7468,3472,33d0,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
7560,7560,7469,3473,33d1,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL		;RETURN COUNT * 8"
7561,7561,7470,3474,33d2,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7562,7562,7471,3475,33d3,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",exec.asm,"LD	IX,0"
7563,7563,7472,3479,33d7,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",exec.asm,"ADD	IX,SP		;ADDRESS PARAMETER LIST"
7564,7564,7473,347b,33d9,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7565,7565,7474,347c,33da,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7566,7566,7475,347d,33db,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7567,7567,7476,347e,33dc,d9,d9,exx,exx,exx,exec.asm,EXX
7568,7568,7477,347f,33dd,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7569,7569,7478,3480,33de,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7570,7570,7479,3481,33df,d9,d9,exx,exx,exx,exec.asm,EXX
7571,7571,7480,3482,33e0,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
7572,7572,7481,3483,33e1,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"LD	HL,ACCS"
7573,7573,7482,3486,33e4,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",exec.asm,"LD	DE,BUFFER"
7574,7574,7483,3489,33e7,01 ff 00,01 ff 00,"ld bc,$00ff","ld bc,$00ff","ld bc,$0000",exec.asm,"LD	BC,255"
7575,7575,7484,348c,33ea,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7576,7576,7485,348e,33ec,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
7577,7577,7486,348f,33ed,cd 13 34,cd 71 33,call $3413,call $3371,call $0000,exec.asm,CALL	RETXFR		;TRANSFER VIA STACK
7578,7578,7487,3492,33f0,21 00 54,21 00 53,"ld hl,$5400","ld hl,$5300","ld hl,$0000",exec.asm,"LD	HL,BUFFER"
7579,7579,7488,3495,33f3,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",exec.asm,"LD	DE,ACCS"
7580,7580,7489,3498,33f6,01 ff 00,01 ff 00,"ld bc,$00ff","ld bc,$00ff","ld bc,$0000",exec.asm,"LD	BC,255"
7581,7581,7490,349b,33f9,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR
7582,7582,7491,349d,33fb,d9,d9,exx,exx,exx,exec.asm,EXX
7583,7583,7492,349e,33fc,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7584,7584,7493,349f,33fd,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7585,7585,7494,34a0,33fe,d9,d9,exx,exx,exx,exec.asm,EXX
7586,7586,7495,34a1,33ff,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7587,7587,7496,34a2,3400,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7588,7588,7497,34a3,3401,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7589,7589,7498,34a4,3402,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,exec.asm,JR	RESAR1
7590,7590,7499,34a6,3404,c1,c1,pop bc,pop bc,pop bc,exec.asm,RESARR:         POP	BC
7591,7591,7500,34a7,3405,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",exec.asm,"BIT	7,B		;String array?"
7592,7592,7501,34a9,3407,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7593,7593,7502,34aa,3408,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7594,7594,7503,34ab,3409,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
7595,7595,7504,34ac,340a,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7596,7596,7505,34ad,340b,c4 67 37,c4 c5 36,"call nz,$3767","call nz,$36c5","call nz,$0000",exec.asm,"CALL	NZ,FREESA	;Free string array"
7597,7597,7506,34b0,340e,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"RESAR1:         LD	SP,HL"
7598,7598,7507,34b1,340f,dd 23,dd 23,inc ix,inc ix,inc ix,exec.asm,INC	IX		;Flag something restored
7599,7599,7508,34b3,3411,18 05,18 05,jr $+$07,jr $+$07,jr $+$00,exec.asm,JR	RESLO1
7600,7600,7509,34b5,3413,d1,d1,pop de,pop de,pop de,exec.asm,RESLOC:         POP	DE		;Return address
7601,7601,7510,34b6,3414,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",exec.asm,"LD	IX,0		;To flag nothing was restored"
7602,7602,7511,34ba,3418,c1,c1,pop bc,pop bc,pop bc,exec.asm,RESLO1:         POP	BC		;Marker ?
7603,7603,7512,34bb,3419,21 ae 35,21 0c 35,"ld hl,$35ae","ld hl,$350c","ld hl,$0000",exec.asm,"LD	HL,LOCCHK"
7604,7604,7513,34be,341c,b7,b7,or a,or a,or a,exec.asm,OR	A
7605,7605,7514,34bf,341d,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7606,7606,7515,34c1,341f,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",exec.asm,"JR	Z,RESLO2	;Something to restore"
7607,7607,7516,34c3,3421,b7,b7,or a,or a,or a,exec.asm,OR	A
7608,7608,7517,34c4,3422,20 0f,20 0f,"jr nz,$+$11","jr nz,$+$11","jr nz,$+$00",exec.asm,"JR	NZ,RESLO8"
7609,7609,7518,34c6,3424,21 f4 2a,21 52 2a,"ld hl,$2af4","ld hl,$2a52","ld hl,$0000",exec.asm,"LD	HL,RETCHK"
7610,7610,7519,34c9,3427,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7611,7611,7520,34cb,3429,28 a0,28 a0,"jr z,$-$5e","jr z,$-$5e","jr z,$-$00",exec.asm,"JR	Z,RESRET"
7612,7612,7521,34cd,342b,21 60 27,21 be 26,"ld hl,$2760","ld hl,$26be","ld hl,$0000",exec.asm,"LD	HL,ARRCHK"
7613,7613,7522,34d0,342e,b7,b7,or a,or a,or a,exec.asm,OR	A
7614,7614,7523,34d1,342f,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7615,7615,7524,34d3,3431,28 d1,28 d1,"jr z,$-$2d","jr z,$-$2d","jr z,$-$00",exec.asm,"JR	Z,RESARR"
7616,7616,7525,34d5,3433,dd e5,dd e5,push ix,push ix,push ix,exec.asm,RESLO8:         PUSH	IX
7617,7617,7526,34d7,3435,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7618,7618,7527,34d8,3436,7c,7c,"ld a,h","ld a,h","ld a,h",exec.asm,"LD	A,H"
7619,7619,7528,34d9,3437,b5,b5,or l,or l,or l,exec.asm,OR	L
7620,7620,7529,34da,3438,c5,c5,push bc,push bc,push bc,exec.asm,RESLO0:         PUSH	BC		;Put back marker
7621,7621,7530,34db,3439,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7622,7622,7531,34dc,343a,e9,e9,jp (hl),jp (hl),jp (hl),exec.asm,JP	(HL)		;Return
7623,7623,7532,34dd,343b,dd e1,dd e1,pop ix,pop ix,pop ix,exec.asm,RESLO2:         POP	IX		;Variable pointer
7624,7624,7533,34df,343d,b7,b7,or a,or a,or a,exec.asm,OR	A
7625,7625,7534,34e0,343e,28 20,28 20,"jr z,$+$22","jr z,$+$22","jr z,$+$00",exec.asm,"JR	Z,RESLO3	;Everything allowed"
7626,7626,7535,34e2,3440,dd e5,dd e5,push ix,push ix,push ix,exec.asm,PUSH	IX
7627,7627,7536,34e4,3442,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7628,7628,7537,34e5,3443,cb 47,cb 47,"bit 0,a","bit 0,a","bit 0,a",exec.asm,"BIT	0,A"
7629,7629,7538,34e7,3445,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,RESLO6	;Bit 0 set, so"
7630,7630,7539,34e9,3447,21 f0 55,21 f0 54,"ld hl,$55f0","ld hl,$54f0","ld hl,$0000",exec.asm,"LD	HL,DATPTR	;test for DATPTR"
7631,7631,7540,34ec,344a,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7632,7632,7541,34ee,344c,28 12,28 12,"jr z,$+$14","jr z,$+$14","jr z,$+$00",exec.asm,"JR	Z,RESLO3"
7633,7633,7542,34f0,344e,b7,b7,or a,or a,or a,exec.asm,RESLO6:         OR	A
7634,7634,7543,34f1,344f,cb 4f,cb 4f,"bit 1,a","bit 1,a","bit 1,a",exec.asm,"BIT	1,A"
7635,7635,7544,34f3,3451,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",exec.asm,"JR	Z,RESLO7	;Bit 1 set, so"
7636,7636,7545,34f5,3453,21 ea 55,21 ea 54,"ld hl,$55ea","ld hl,$54ea","ld hl,$0000",exec.asm,"LD	HL,ERRTRP	;test for ERRPTR"
7637,7637,7546,34f8,3456,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7638,7638,7547,34fa,3458,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",exec.asm,"JR	Z,RESLO3"
7639,7639,7548,34fc,345a,c5,c5,push bc,push bc,push bc,exec.asm,RESLO7:         PUSH	BC		;Put back pointer
7640,7640,7549,34fd,345b,01 ae 35,01 0c 35,"ld bc,$35ae","ld bc,$350c","ld bc,$0000",exec.asm,"LD	BC,LOCCHK"
7641,7641,7550,3500,345e,18 d8,18 d8,jr $-$26,jr $-$26,jr $-$00,exec.asm,JR	RESLO0
7642,7642,7551,3502,3460,c1,c1,pop bc,pop bc,pop bc,exec.asm,RESLO3:         POP	BC		;Type / exponent
7643,7643,7552,3503,3461,cb 70,cb 70,"bit 6,b","bit 6,b","bit 6,b",exec.asm,"BIT	6,B"
7644,7644,7553,3505,3463,20 14,20 14,"jr nz,$+$16","jr nz,$+$16","jr nz,$+$00",exec.asm,"JR	NZ,RESLO4	;Array?"
7645,7645,7554,3507,3465,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",exec.asm,"BIT	7,B"
7646,7646,7555,3509,3467,20 23,20 23,"jr nz,$+$25","jr nz,$+$25","jr nz,$+$00",exec.asm,"JR	NZ,RESLO5	;String?"
7647,7647,7556,350b,3469,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7648,7648,7557,350c,346a,d9,d9,exx,exx,exx,exec.asm,EXX
7649,7649,7558,350d,346b,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7650,7650,7559,350e,346c,d9,d9,exx,exx,exx,exec.asm,EXX
7651,7651,7560,350f,346d,cb 60,cb 60,"bit 4,b","bit 4,b","bit 4,b",exec.asm,"BIT	4,B"
7652,7652,7561,3511,346f,20 a7,20 a7,"jr nz,$-$57","jr nz,$-$57","jr nz,$-$00",exec.asm,"JR	NZ,RESLO1"
7653,7653,7562,3513,3471,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7654,7654,7563,3514,3472,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
7655,7655,7564,3515,3473,cd 74 32,cd d2 31,call $3274,call $31d2,call $0000,exec.asm,CALL	STOREN		;Numeric
7656,7656,7565,3518,3476,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7657,7657,7566,3519,3477,18 9f,18 9f,jr $-$5f,jr $-$5f,jr $-$00,exec.asm,JR	RESLO1
7658,7658,7567,351b,3479,e1,e1,pop hl,pop hl,pop hl,exec.asm,RESLO4:         POP	HL
7659,7659,7568,351c,347a,cb 60,cb 60,"bit 4,b","bit 4,b","bit 4,b",exec.asm,"BIT	4,B"
7660,7660,7569,351e,347c,20 9a,20 9a,"jr nz,$-$64","jr nz,$-$64","jr nz,$-$00",exec.asm,"JR	NZ,RESLO1"
7661,7661,7570,3520,347e,dd 75 00,dd 75 00,"ld (ix),l","ld (ix),l","ld (ix),l",exec.asm,"LD	(IX+0),L	;Array"
7662,7662,7571,3523,3481,dd 74 01,dd 74 01,"ld (ix+$01),h","ld (ix+$01),h","ld (ix+$00),h",exec.asm,"LD	(IX+1),H"
7663,7663,7572,3526,3484,18 92,18 92,jr $-$6c,jr $-$6c,jr $-$00,exec.asm,JR	RESLO1
7664,7664,7573,3528,3486,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"RESLO9:         LD	B,0"
7665,7665,7574,352a,3488,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
7666,7666,7575,352b,3489,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
7667,7667,7576,352c,348a,18 8c,18 8c,jr $-$72,jr $-$72,jr $-$00,exec.asm,RESLGO:         JR	RESLO1
7668,7668,7577,352e,348c,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"RESLO5:         LD	HL,0"
7669,7669,7578,3531,348f,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7670,7670,7579,3532,3490,cb 60,cb 60,"bit 4,b","bit 4,b","bit 4,b",exec.asm,"BIT	4,B"
7671,7671,7580,3534,3492,20 f2,20 f2,"jr nz,$-$0c","jr nz,$-$0c","jr nz,$-$00",exec.asm,"JR	NZ,RESLO9"
7672,7672,7581,3536,3494,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7673,7673,7582,3537,3495,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7674,7674,7583,3538,3496,59,59,"ld e,c","ld e,c","ld e,c",exec.asm,"LD	E,C"
7675,7675,7584,3539,3497,78,78,"ld a,b","ld a,b","ld a,b",exec.asm,"LD	A,B"
7676,7676,7585,353a,3498,cd c5 32,cd 23 32,call $32c5,call $3223,call $0000,exec.asm,CALL	STORES		;String
7677,7677,7586,353d,349b,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7678,7678,7587,353e,349c,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7679,7679,7588,353f,349d,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
7680,7680,7589,3540,349e,18 ea,18 ea,jr $-$14,jr $-$14,jr $-$00,exec.asm,JR	RESLGO
7681,7681,7590,3542,34a0,d1,d1,pop de,pop de,pop de,exec.asm,SAVLOC:         POP	DE		;RETURN ADDRESS
7682,7682,7591,3543,34a1,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,"SAVLO1:         INC	IY		;BUMP PAST ( | ,"
7683,7683,7592,3545,34a3,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7684,7684,7593,3548,34a6,fe f8,fe f8,cp $f8,cp $f8,cp $00,exec.asm,CP	TRETURN
7685,7685,7594,354a,34a8,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",exec.asm,"JR	NZ,SAVLO6"
7686,7686,7595,354c,34aa,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
7687,7687,7596,354d,34ab,3c,3c,inc a,inc a,inc a,exec.asm,INC	A		;RETURN counter
7688,7688,7597,354e,34ac,08,08,"ex af,af'","ex af,af'","ex af,af'",exec.asm,"EX	AF,AF'"
7689,7689,7598,354f,34ad,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY		;Bump past RETURN
7690,7690,7599,3551,34af,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7691,7691,7600,3554,34b2,d5,d5,push de,push de,push de,exec.asm,SAVLO6:         PUSH	DE
7692,7692,7601,3555,34b3,d9,d9,exx,exx,exx,exec.asm,EXX
7693,7693,7602,3556,34b4,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7694,7694,7603,3557,34b5,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7695,7695,7604,3558,34b6,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7696,7696,7605,3559,34b7,d9,d9,exx,exx,exx,exec.asm,EXX
7697,7697,7606,355a,34b8,cd 5a 26,cd b8 25,call $265a,call $25b8,call $0000,exec.asm,CALL	VAR_		;DUMMY VARIABLE
7698,7698,7607,355d,34bb,d9,d9,exx,exx,exx,exec.asm,EXX
7699,7699,7608,355e,34bc,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7700,7700,7609,355f,34bd,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7701,7701,7610,3560,34be,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7702,7702,7611,3561,34bf,d9,d9,exx,exx,exx,exec.asm,EXX
7703,7703,7612,3562,34c0,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7704,7704,7613,3563,34c1,cb 77,cb 77,"bit 6,a","bit 6,a","bit 6,a",exec.asm,"BIT	6,A		;ARRAY?"
7705,7705,7614,3565,34c3,20 12,20 12,"jr nz,$+$14","jr nz,$+$14","jr nz,$+$00",exec.asm,"JR	NZ,SAVLO3"
7706,7706,7615,3567,34c5,b7,b7,or a,or a,or a,exec.asm,OR	A		;TYPE
7707,7707,7616,3568,34c6,fa 83 35,fa e1 34,"jp m,$3583","jp m,$34e1","jp m,$0000",exec.asm,"JP	M,SAVLO2	;STRING"
7708,7708,7617,356b,34c9,d9,d9,exx,exx,exx,exec.asm,EXX
7709,7709,7618,356c,34ca,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL		;SAVE H'L'
7710,7710,7619,356d,34cb,d9,d9,exx,exx,exx,exec.asm,EXX
7711,7711,7620,356e,34cc,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;TYPE"
7712,7712,7621,356f,34cd,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,exec.asm,CALL	LOADN
7713,7713,7622,3572,34d0,d9,d9,exx,exx,exx,exec.asm,EXX
7714,7714,7623,3573,34d1,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",exec.asm,"EX	(SP),HL"
7715,7715,7624,3574,34d2,d9,d9,exx,exx,exx,exec.asm,EXX
7716,7716,7625,3575,34d3,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7717,7717,7626,3576,34d4,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7718,7718,7627,3577,34d5,18 30,18 30,jr $+$32,jr $+$32,jr $+$00,exec.asm,JR	SAVLO4
7719,7719,7628,3579,34d7,dd 4e 00,dd 4e 00,"ld c,(ix)","ld c,(ix)","ld c,(ix)",exec.asm,"SAVLO3:         LD	C,(IX+0)	;ARRAY POINTER"
7720,7720,7629,357c,34da,dd 46 01,dd 46 01,"ld b,(ix+$01)","ld b,(ix+$01)","ld b,(ix+$00)",exec.asm,"LD	B,(IX+1)"
7721,7721,7630,357f,34dd,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC		;SAVE TO STACK
7722,7722,7631,3580,34de,f5,f5,push af,push af,push af,exec.asm,PUSH	AF		;SAVE TYPE
7723,7723,7632,3581,34df,18 26,18 26,jr $+$28,jr $+$28,jr $+$00,exec.asm,JR	SAVLO4
7724,7724,7633,3583,34e1,f5,f5,push af,push af,push af,exec.asm,SAVLO2:         PUSH	AF		;STRING TYPE
7725,7725,7634,3584,34e2,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7726,7726,7635,3585,34e3,d9,d9,exx,exx,exx,exec.asm,EXX
7727,7727,7636,3586,34e4,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7728,7728,7637,3587,34e5,d9,d9,exx,exx,exx,exec.asm,EXX
7729,7729,7638,3588,34e6,cd 92 1a,cd f0 19,call $1a92,call $19f0,call $0000,exec.asm,CALL	LOADS
7730,7730,7639,358b,34e9,d9,d9,exx,exx,exx,exec.asm,EXX
7731,7731,7640,358c,34ea,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7732,7732,7641,358d,34eb,d9,d9,exx,exx,exx,exec.asm,EXX
7733,7733,7642,358e,34ec,4b,4b,"ld c,e","ld c,e","ld c,e",exec.asm,"LD	C,E"
7734,7734,7643,358f,34ed,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7735,7735,7644,3590,34ee,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,CALL	CHECK
7736,7736,7645,3593,34f1,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF		;LEVEL STACK
7737,7737,7646,3594,34f2,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
7738,7738,7647,3597,34f5,45,45,"ld b,l","ld b,l","ld b,l",exec.asm,"LD	B,L"
7739,7739,7648,3598,34f6,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
7740,7740,7649,359a,34f8,39,39,"add hl,sp","add hl,sp","add hl,sp",exec.asm,"ADD	HL,SP"
7741,7741,7650,359b,34f9,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",exec.asm,"LD	SP,HL"
7742,7742,7651,359c,34fa,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A		;TYPE"
7743,7743,7652,359d,34fb,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7744,7744,7653,359e,34fc,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",exec.asm,"JR	Z,SAVLO4"
7745,7745,7654,35a0,34fe,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
7746,7746,7655,35a1,34ff,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",exec.asm,"LD	DE,ACCS"
7747,7747,7656,35a4,3502,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7748,7748,7657,35a5,3503,45,45,"ld b,l","ld b,l","ld b,l",exec.asm,"LD	B,L"
7749,7749,7658,35a6,3504,ed b0,ed b0,ldir,ldir,ldir,exec.asm,LDIR			;SAVE STRING ON STACK
7750,7750,7659,35a8,3506,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7751,7751,7660,35a9,3507,dd e5,dd e5,push ix,push ix,push ix,exec.asm,SAVLO4:         PUSH	IX		;VARPTR
7752,7752,7661,35ab,3509,cd ae 35,cd 0c 35,call $35ae,call $350c,call $0000,exec.asm,CALL	SAVLO5
7753,7753,7662,35ae,350c,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,exec.asm,SAVLO5:         CALL	CHECK
7754,7754,7663,35b1,350f,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7755,7755,7664,35b4,3512,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','		;MORE?"
7756,7756,7665,35b6,3514,28 8b,28 8b,"jr z,$-$73","jr z,$-$73","jr z,$-$00",exec.asm,"JR	Z,SAVLO1"
7757,7757,7666,35b8,3516,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7758,7758,7667,35b9,3517,e9,e9,jp (hl),jp (hl),jp (hl),exec.asm,"JP	(HL)		;""RETURN"""
7759,7759,7668,35ba,3518,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,TERMQ:          CALL	NXT
7760,7760,7669,35bd,351b,fe 8b,fe 8b,cp $8b,cp $8b,cp $00,exec.asm,CP	TELSE
7761,7761,7670,35bf,351d,d0,d0,ret nc,ret nc,ret nc,exec.asm,RET	NC
7762,7762,7671,35c0,351e,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,exec.asm,CP	':'		;ASSEMBLER SEPARATOR
7763,7763,7672,35c2,3520,d0,d0,ret nc,ret nc,ret nc,exec.asm,RET	NC
7764,7764,7673,35c3,3521,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7765,7765,7674,35c5,3523,c9,c9,ret,ret,ret,exec.asm,RET
7766,7766,7675,35c6,3524,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,exec.asm,SPAN:           CALL	TERMQ
7767,7767,7676,35c9,3527,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7768,7768,7677,35ca,3528,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7769,7769,7678,35cc,352a,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
7770,7770,7679,35ce,352c,cc 1d 37,cc 7b 36,"call z,$371d","call z,$367b","call z,$0000",exec.asm,"CALL	Z,QUOTE"
7771,7771,7680,35d1,352f,18 f3,18 f3,jr $-$0b,jr $-$0b,jr $-$00,exec.asm,JR	SPAN
7772,7772,7681,35d3,3531,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,EQUALS:         CALL	NXT
7773,7773,7682,35d6,3534,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7774,7774,7683,35d8,3536,fe 3d,fe 3d,cp $3d,cp $3d,cp $00,exec.asm,CP	'='
7775,7775,7684,35da,3538,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7776,7776,7685,35db,3539,3e 04,3e 04,"ld a,$04","ld a,$04","ld a,$00",exec.asm,"LD	A,4"
7777,7777,7686,35dd,353b,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"JP	ERROR_		;""Mistake"""
7778,7778,7687,35e0,353e,fe 8a,fe 8a,cp $8a,cp $8a,cp $00,exec.asm,FORMAT:         CP	TTAB
7779,7779,7688,35e2,3540,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",exec.asm,"JR	Z,DOTAB"
7780,7780,7689,35e4,3542,fe 89,fe 89,cp $89,cp $89,cp $00,exec.asm,CP	TSPC
7781,7781,7690,35e6,3544,28 38,28 38,"jr z,$+$3a","jr z,$+$3a","jr z,$+$00",exec.asm,"JR	Z,DOSPC"
7782,7782,7691,35e8,3546,fe 27,fe 27,cp $27,cp $27,cp $00,exec.asm,CP	39	; apostrophe
7783,7783,7692,35ea,3548,c0,c0,ret nz,ret nz,ret nz,exec.asm,RET	NZ
7784,7784,7693,35eb,3549,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,exec.asm,CALL	CRLF
7785,7785,7694,35ee,354c,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7786,7786,7695,35ef,354d,c9,c9,ret,ret,ret,exec.asm,RET
7787,7787,7696,35f0,354e,c5,c5,push bc,push bc,push bc,exec.asm,DOTAB:          PUSH	BC
7788,7788,7697,35f1,354f,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
7789,7789,7698,35f4,3552,d9,d9,exx,exx,exx,exec.asm,EXX
7790,7790,7699,35f5,3553,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7791,7791,7700,35f6,3554,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
7792,7792,7701,35f9,3557,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7793,7793,7702,35fb,3559,28 11,28 11,"jr z,$+$13","jr z,$+$13","jr z,$+$00",exec.asm,"JR	Z,DOTAB1"
7794,7794,7703,35fd,355b,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,CALL	BRAKET
7795,7795,7704,3600,355e,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7796,7796,7705,3601,355f,21 fb 55,21 fb 54,"ld hl,$55fb","ld hl,$54fb","ld hl,$0000",exec.asm,"TABIT:          LD	HL,COUNT"
7797,7797,7706,3604,3562,be,be,cp (hl),cp (hl),cp (hl),exec.asm,CP	(HL)
7798,7798,7707,3605,3563,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7799,7799,7708,3606,3564,f5,f5,push af,push af,push af,exec.asm,PUSH	AF
7800,7800,7709,3607,3565,dc 7f 41,dc dd 40,"call c,$417f","call c,$40dd","call c,$0000",exec.asm,"CALL	C,CRLF"
7801,7801,7710,360a,3568,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7802,7802,7711,360b,3569,96,96,sub (hl),sub (hl),sub (hl),exec.asm,SUB	(HL)
7803,7803,7712,360c,356a,18 19,18 19,jr $+$1b,jr $+$1b,jr $+$00,exec.asm,JR	SPACES
7804,7804,7713,360e,356c,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,DOTAB1:         INC	IY
7805,7805,7714,3610,356e,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7806,7806,7715,3611,356f,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7807,7807,7716,3612,3570,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,exec.asm,CALL	EXPRI
7808,7808,7717,3615,3573,d9,d9,exx,exx,exx,exec.asm,EXX
7809,7809,7718,3616,3574,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
7810,7810,7719,3617,3575,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7811,7811,7720,3618,3576,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,exec.asm,CALL	BRAKET
7812,7812,7721,361b,3579,cd 20 0e,cd 7e 0d,call $0e20,call $0d7e,call $0000,exec.asm,CALL	PUTCSR
7813,7813,7722,361e,357c,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7814,7814,7723,361f,357d,c9,c9,ret,ret,ret,exec.asm,RET
7815,7815,7724,3620,357e,c5,c5,push bc,push bc,push bc,exec.asm,DOSPC:          PUSH	BC
7816,7816,7725,3621,357f,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,CALL	ITEMI
7817,7817,7726,3624,3582,d9,d9,exx,exx,exx,exec.asm,EXX
7818,7818,7727,3625,3583,7d,7d,"ld a,l","ld a,l","ld a,l",exec.asm,"LD	A,L"
7819,7819,7728,3626,3584,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7820,7820,7729,3627,3585,b7,b7,or a,or a,or a,exec.asm,SPACES:         OR	A
7821,7821,7730,3628,3586,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7822,7822,7731,3629,3587,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7823,7823,7732,362a,3588,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
7824,7824,7733,362b,3589,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",exec.asm,"FILL1:          LD	A,' '"
7825,7825,7734,362d,358b,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR
7826,7826,7735,3630,358e,10 f9,10 f9,djnz $-$05,djnz $-$05,djnz $-$00,exec.asm,DJNZ	FILL1
7827,7827,7736,3632,3590,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7828,7828,7737,3633,3591,af,af,xor a,xor a,xor a,exec.asm,XOR	A
7829,7829,7738,3634,3592,c9,c9,ret,ret,ret,exec.asm,RET
7830,7830,7739,3635,3593,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",exec.asm,"PTEXT:          LD	HL,ACCS"
7831,7831,7740,3638,3596,1c,1c,inc e,inc e,inc e,exec.asm,INC	E
7832,7832,7741,3639,3597,1d,1d,dec e,dec e,dec e,exec.asm,PTEXT1:         DEC	E
7833,7833,7742,363a,3598,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7834,7834,7743,363b,3599,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LD	A,(HL)"
7835,7835,7744,363c,359a,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7836,7836,7745,363d,359b,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,exec.asm,CALL	OUTCHR
7837,7837,7746,3640,359e,18 f7,18 f7,jr $-$07,jr $-$07,jr $-$00,exec.asm,JR	PTEXT1
7838,7838,7747,3642,35a0,f5,f5,push af,push af,push af,exec.asm,FETCHS:         PUSH	AF
7839,7839,7748,3643,35a1,c5,c5,push bc,push bc,push bc,exec.asm,PUSH	BC
7840,7840,7749,3644,35a2,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
7841,7841,7750,3645,35a3,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7842,7842,7751,3647,35a5,cd 5f 36,cd bd 35,call $365f,call $35bd,call $0000,exec.asm,CALL	XTRACT
7843,7843,7752,364a,35a8,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CALL	NXT
7844,7844,7753,364d,35ab,fd e3,fd e3,"ex (sp),iy","ex (sp),iy","ex (sp),iy",exec.asm,"EX	(SP),IY"
7845,7845,7754,364f,35ad,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
7846,7846,7755,3650,35ae,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7847,7847,7756,3651,35af,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
7848,7848,7757,3652,35b0,c9,c9,ret,ret,ret,exec.asm,RET
7849,7849,7758,3653,35b1,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",exec.asm,"LINES:          LD	DE,ACCS"
7850,7850,7759,3656,35b4,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",exec.asm,"LINE1S:         LD	A,(HL)"
7851,7851,7760,3657,35b5,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
7852,7852,7761,3658,35b6,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7853,7853,7762,365a,35b8,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7854,7854,7763,365b,35b9,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7855,7855,7764,365c,35ba,1c,1c,inc e,inc e,inc e,exec.asm,INC	E
7856,7856,7765,365d,35bb,18 f7,18 f7,jr $-$07,jr $-$07,jr $-$00,exec.asm,JR	LINE1S
7857,7857,7766,365f,35bd,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,XTRACT:         CALL	NXT
7858,7858,7767,3662,35c0,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
7859,7859,7768,3664,35c2,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7860,7860,7769,3666,35c4,ca fe 19,ca 5c 19,"jp z,$19fe","jp z,$195c","jp z,$0000",exec.asm,"JP	Z,CONS"
7861,7861,7770,3669,35c7,fd 2b,fd 2b,dec iy,dec iy,dec iy,exec.asm,DEC	IY
7862,7862,7771,366b,35c9,11 00 53,11 00 52,"ld de,$5300","ld de,$5200","ld de,$0000",exec.asm,"LD	DE,ACCS"
7863,7863,7772,366e,35cc,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"XTRAC1:         LD	A,(IY)"
7864,7864,7773,3671,35cf,12,12,"ld (de),a","ld (de),a","ld (de),a",exec.asm,"LD	(DE),A"
7865,7865,7774,3672,35d0,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,exec.asm,"CP	','"
7866,7866,7775,3674,35d2,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7867,7867,7776,3675,35d3,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7868,7868,7777,3677,35d5,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7869,7869,7778,3678,35d6,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7870,7870,7779,367a,35d8,1c,1c,inc e,inc e,inc e,exec.asm,INC	E
7871,7871,7780,367b,35d9,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,exec.asm,JR	XTRAC1
7872,7872,7781,367d,35db,3e dc,3e dc,"ld a,$dc","ld a,$dc","ld a,$00",exec.asm,"DSRCH:          LD	A,TDATA"
7873,7873,7782,367f,35dd,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"SEARCHex:         LD	B,0"
7874,7874,7783,3681,35df,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"SRCH1:          LD	C,(HL)"
7875,7875,7784,3682,35e0,0c,0c,inc c,inc c,inc c,exec.asm,INC	C
7876,7876,7785,3683,35e1,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7877,7877,7786,3684,35e2,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",exec.asm,"JR	Z,SRCH2		;FAIL"
7878,7878,7787,3686,35e4,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7879,7879,7788,3687,35e5,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7880,7880,7789,3688,35e6,23,23,inc hl,inc hl,inc hl,exec.asm,INC	HL
7881,7881,7790,3689,35e7,be,be,cp (hl),cp (hl),cp (hl),exec.asm,CP	(HL)
7882,7882,7791,368a,35e8,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7883,7883,7792,368b,35e9,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7884,7884,7793,368c,35ea,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7885,7885,7794,368d,35eb,0d,0d,dec c,dec c,dec c,exec.asm,DEC	C
7886,7886,7795,368e,35ec,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
7887,7887,7796,368f,35ed,c3 81 36,c3 df 35,jp $3681,jp $35df,jp $0000,exec.asm,JP	SRCH1
7888,7888,7797,3692,35f0,2b,2b,dec hl,dec hl,dec hl,exec.asm,SRCH2:          DEC	HL		;POINT TO CR
7889,7889,7798,3693,35f1,37,37,scf,scf,scf,exec.asm,SCF
7890,7890,7799,3694,35f2,c9,c9,ret,ret,ret,exec.asm,RET
7891,7891,7800,3695,35f3,2e 00,2e 00,"ld l,$00","ld l,$00","ld l,$00",exec.asm,"NSCAN:          LD	L,0		;nest level"
7892,7892,7801,3697,35f5,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"NSCAN1:         LD	A,(IY)		;get line length"
7893,7893,7802,369a,35f8,b7,b7,or a,or a,or a,exec.asm,OR	A		;test zero = end of prog
7894,7894,7803,369b,35f9,28 34,28 34,"jr z,$+$36","jr z,$+$36","jr z,$+$00",exec.asm,"JR	Z,NSCAN6"
7895,7895,7804,369d,35fb,fd 7e 03,fd 7e 03,"ld a,(iy+$03)","ld a,(iy+$03)","ld a,(iy+$00)",exec.asm,"LD	A,(IY+3)	;initial token"
7896,7896,7805,36a0,35fe,b8,b8,cp b,cp b,cp b,exec.asm,CP	B		;test value reqd
7897,7897,7806,36a1,35ff,28 1d,28 1d,"jr z,$+$1f","jr z,$+$1f","jr z,$+$00",exec.asm,"JR	Z,NSCAN3	;found (1)"
7898,7898,7807,36a3,3601,b9,b9,cp c,cp c,cp c,exec.asm,CP	C
7899,7899,7808,36a4,3602,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",exec.asm,"JR	Z,NSCAN3	;found (2)"
7900,7900,7809,36a6,3604,ba,ba,cp d,cp d,cp d,exec.asm,NSCAN7:         CP	D		;unnest?
7901,7901,7810,36a7,3605,28 22,28 22,"jr z,$+$24","jr z,$+$24","jr z,$+$00",exec.asm,"JR	Z,NSCAN5"
7902,7902,7811,36a9,3607,c5,c5,push bc,push bc,push bc,exec.asm,NSCAN2:         PUSH	BC
7903,7903,7812,36aa,3608,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",exec.asm,"LD	B,0"
7904,7904,7813,36ac,360a,fd 4e 00,fd 4e 00,"ld c,(iy)","ld c,(iy)","ld c,(iy)",exec.asm,"LD	C,(IY)"
7905,7905,7814,36af,360d,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",exec.asm,"ADD	IY,BC		;go to next line"
7906,7906,7815,36b1,360f,fd 7e fe,fd 7e fe,"ld a,(iy-$02)","ld a,(iy-$02)","ld a,(iy-$00)",exec.asm,"LD	A,(IY-2)"
7907,7907,7816,36b4,3612,bb,bb,cp e,cp e,cp e,exec.asm,CP	E		;nest?
7908,7908,7817,36b5,3613,79,79,"ld a,c","ld a,c","ld a,c",exec.asm,"LD	A,C"
7909,7909,7818,36b6,3614,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
7910,7910,7819,36b7,3615,20 de,20 de,"jr nz,$-$20","jr nz,$-$20","jr nz,$-$00",exec.asm,"JR	NZ,NSCAN1	;continue"
7911,7911,7820,36b9,3617,fe 05,fe 05,cp $05,cp $05,cp $00,exec.asm,CP	5		;empty line ?
7912,7912,7821,36bb,3619,38 da,38 da,"jr c,$-$24","jr c,$-$24","jr c,$-$00",exec.asm,"JR	C,NSCAN1	;continue"
7913,7913,7822,36bd,361b,2c,2c,inc l,inc l,inc l,exec.asm,INC	L		;increment nest level
7914,7914,7823,36be,361c,18 d7,18 d7,jr $-$27,jr $-$27,jr $-$00,exec.asm,JR	NSCAN1		;continue
7915,7915,7824,36c0,361e,2c,2c,inc l,inc l,inc l,exec.asm,NSCAN3:         INC	L
7916,7916,7825,36c1,361f,2d,2d,dec l,dec l,dec l,exec.asm,DEC	L
7917,7917,7826,36c2,3620,20 e2,20 e2,"jr nz,$-$1c","jr nz,$-$1c","jr nz,$-$00",exec.asm,"JR	NZ,NSCAN7"
7918,7918,7827,36c4,3622,01 04 00,01 04 00,"ld bc,$0004","ld bc,$0004","ld bc,$0000",exec.asm,"NSCAN4:         LD	BC,4"
7919,7919,7828,36c7,3625,fd 09,fd 09,"add iy,bc","add iy,bc","add iy,bc",exec.asm,"ADD	IY,BC"
7920,7920,7829,36c9,3627,af,af,xor a,xor a,xor a,exec.asm,XOR	A		;Z
7921,7921,7830,36ca,3628,c9,c9,ret,ret,ret,exec.asm,RET
7922,7922,7831,36cb,3629,2d,2d,dec l,dec l,dec l,exec.asm,NSCAN5:         DEC	L		;decrement nest level
7923,7923,7832,36cc,362a,f2 a9 36,f2 07 36,"jp p,$36a9","jp p,$3607","jp p,$0000",exec.asm,"JP	P,NSCAN2"
7924,7924,7833,36cf,362d,18 f3,18 f3,jr $-$0b,jr $-$0b,jr $-$00,exec.asm,JR	NSCAN4
7925,7925,7834,36d1,362f,f6 01,f6 01,or $01,or $01,or $00,exec.asm,NSCAN6:         OR	1		;NZ
7926,7926,7835,36d3,3631,c9,c9,ret,ret,ret,exec.asm,RET
7927,7927,7836,36d4,3632,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"WSRCH:          LD	A,(IY)"
7928,7928,7837,36d7,3635,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7929,7929,7838,36d9,3637,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
7930,7930,7839,36db,3639,cc 1d 37,cc 7b 36,"call z,$371d","call z,$367b","call z,$0000",exec.asm,"CALL	Z,QUOTE"
7931,7931,7840,36de,363c,fe f4,fe f4,cp $f4,cp $f4,cp $00,exec.asm,CP	TREM
7932,7932,7841,36e0,363e,28 22,28 22,"jr z,$+$24","jr z,$+$24","jr z,$+$00",exec.asm,"JR	Z,WSRCHM"
7933,7933,7842,36e2,3640,fe 10,fe 10,cp $10,cp $10,cp $00,exec.asm,CP	TEXIT
7934,7934,7843,36e4,3642,28 30,28 30,"jr z,$+$32","jr z,$+$32","jr z,$+$00",exec.asm,"JR	Z,WSRCHE"
7935,7935,7844,36e6,3644,b8,b8,cp b,cp b,cp b,exec.asm,CP	B
7936,7936,7845,36e7,3645,28 29,28 29,"jr z,$+$2b","jr z,$+$2b","jr z,$+$00",exec.asm,"JR	Z,WSRCHX"
7937,7937,7846,36e9,3647,b9,b9,cp c,cp c,cp c,exec.asm,CP	C
7938,7938,7847,36ea,3648,28 23,28 23,"jr z,$+$25","jr z,$+$25","jr z,$+$00",exec.asm,"JR	Z,WSRCHP"
7939,7939,7848,36ec,364a,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7940,7940,7849,36ee,364c,20 e4,20 e4,"jr nz,$-$1a","jr nz,$-$1a","jr nz,$-$00",exec.asm,"JR	NZ,WSRCH"
7941,7941,7850,36f0,364e,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"WSRCH1:         LD	A,(IY)			;Line length"
7942,7942,7851,36f3,3651,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7943,7943,7852,36f5,3653,b7,b7,or a,or a,or a,exec.asm,OR	A
7944,7944,7853,36f6,3654,ca 57 25,ca b5 24,"jp z,$2557","jp z,$24b5","jp z,$0000",exec.asm,"JP	Z,END"
7945,7945,7854,36f9,3657,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7946,7946,7855,36fb,3659,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY			;Skip line number
7947,7947,7856,36fd,365b,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"LD	A,(IY)"
7948,7948,7857,3700,365e,fe dc,fe dc,cp $dc,cp $dc,cp $00,exec.asm,CP	TDATA
7949,7949,7858,3702,3660,20 d0,20 d0,"jr nz,$-$2e","jr nz,$-$2e","jr nz,$-$00",exec.asm,"JR	NZ,WSRCH"
7950,7950,7859,3704,3662,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"WSRCHM:         LD	A,(IY)"
7951,7951,7860,3707,3665,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7952,7952,7861,3709,3667,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7953,7953,7862,370b,3669,20 f7,20 f7,"jr nz,$-$07","jr nz,$-$07","jr nz,$-$00",exec.asm,"JR	NZ,WSRCHM		;Skip to end of line"
7954,7954,7863,370d,366b,18 e1,18 e1,jr $-$1d,jr $-$1d,jr $-$00,exec.asm,JR	WSRCH1
7955,7955,7864,370f,366d,14,14,inc d,inc d,inc d,exec.asm,WSRCHP:         INC	D
7956,7956,7865,3710,366e,18 c2,18 c2,jr $-$3c,jr $-$3c,jr $-$00,exec.asm,JR	WSRCH
7957,7957,7866,3712,3670,15,15,dec d,dec d,dec d,exec.asm,WSRCHX:         DEC	D
7958,7958,7867,3713,3671,20 bf,20 bf,"jr nz,$-$3f","jr nz,$-$3f","jr nz,$-$00",exec.asm,"JR	NZ,WSRCH"
7959,7959,7868,3715,3673,c9,c9,ret,ret,ret,exec.asm,RET
7960,7960,7869,3716,3674,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,WSRCHE:         CALL	NXT
7961,7961,7870,3719,3677,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7962,7962,7871,371b,3679,18 b7,18 b7,jr $-$47,jr $-$47,jr $-$00,exec.asm,JR	WSRCH
7963,7963,7872,371d,367b,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",exec.asm,"QUOTE:          LD	A,(IY)"
7964,7964,7873,3720,367e,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,INC	IY
7965,7965,7874,3722,3680,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,exec.asm,CP	CR
7966,7966,7875,3724,3682,ca 2c 37,ca 8a 36,"jp z,$372c","jp z,$368a","jp z,$0000",exec.asm,"JP	Z,MISQUO"
7967,7967,7876,3727,3685,fe 22,fe 22,cp $22,cp $22,cp $00,exec.asm,"CP	'""'"
7968,7968,7877,3729,3687,20 f2,20 f2,"jr nz,$-$0c","jr nz,$-$0c","jr nz,$-$00",exec.asm,"JR	NZ,QUOTE"
7969,7969,7878,372b,3689,c9,c9,ret,ret,ret,exec.asm,RET
7970,7970,7879,372c,368a,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",exec.asm,"MISQUO:         LD	A,9"
7971,7971,7880,372e,368c,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,exec.asm,"JP	ERROR_		;""Missing quote"""
7972,7972,7881,3731,368f,62,62,"ld h,d","ld h,d","ld h,d",exec.asm,"X14OR5:         LD	H,D"
7973,7973,7882,3732,3690,6b,6b,"ld l,e","ld l,e","ld l,e",exec.asm,"LD	L,E"
7974,7974,7883,3733,3691,fe 01,fe 01,cp $01,cp $01,cp $00,exec.asm,CP	1
7975,7975,7884,3735,3693,c8,c8,ret z,ret z,ret z,exec.asm,RET	Z
7976,7976,7885,3736,3694,fe 05,fe 05,cp $05,cp $05,cp $00,exec.asm,CP	5
7977,7977,7886,3738,3696,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
7978,7978,7887,3739,3697,d8,d8,ret c,ret c,ret c,exec.asm,RET	C
7979,7979,7888,373a,3698,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"ADD	HL,HL"
7980,7980,7889,373b,3699,d8,d8,ret c,ret c,ret c,exec.asm,RET	C
7981,7981,7890,373c,369a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7982,7982,7891,373d,369b,c0,c0,ret nz,ret nz,ret nz,exec.asm,RET	NZ
7983,7983,7892,373e,369c,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE"
7984,7984,7893,373f,369d,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
7985,7985,7894,3740,369e,c9,c9,ret,ret,ret,exec.asm,RET
7986,7986,7895,3741,369f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"MUL16:          EX	DE,HL"
7987,7987,7896,3742,36a0,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",exec.asm,"LD	HL,0"
7988,7988,7897,3745,36a3,3e 10,3e 10,"ld a,$10","ld a,$10","ld a,$00",exec.asm,"LD	A,16"
7989,7989,7898,3747,36a5,29,29,"add hl,hl","add hl,hl","add hl,hl",exec.asm,"MUL161:         ADD	HL,HL"
7990,7990,7899,3748,36a6,d8,d8,ret c,ret c,ret c,exec.asm,RET	C		;OVERFLOW
7991,7991,7900,3749,36a7,cb 23,cb 23,sla e,sla e,sla e,exec.asm,SLA	E
7992,7992,7901,374b,36a9,cb 12,cb 12,rl d,rl d,rl d,exec.asm,RL	D
7993,7993,7902,374d,36ab,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",exec.asm,"JR	NC,MUL162"
7994,7994,7903,374f,36ad,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
7995,7995,7904,3750,36ae,d8,d8,ret c,ret c,ret c,exec.asm,RET	C
7996,7996,7905,3751,36af,3d,3d,dec a,dec a,dec a,exec.asm,MUL162:         DEC	A
7997,7997,7906,3752,36b0,20 f3,20 f3,"jr nz,$-$0b","jr nz,$-$0b","jr nz,$-$00",exec.asm,"JR	NZ,MUL161"
7998,7998,7907,3754,36b2,c9,c9,ret,ret,ret,exec.asm,RET
7999,7999,7908,3755,36b3,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,exec.asm,CHANEL:         CALL	NXT
8000,8000,7909,3758,36b6,fe 23,fe 23,cp $23,cp $23,cp $00,exec.asm,CP	'#'
8001,8001,7910,375a,36b8,3e 2d,3e 2d,"ld a,$2d","ld a,$2d","ld a,$00",exec.asm,"LD	A,45"
8002,8002,7911,375c,36ba,c2 c8 3f,c2 26 3f,"jp nz,$3fc8","jp nz,$3f26","jp nz,$0000",exec.asm,"JP	NZ,ERROR_	;""Missing #"""
8003,8003,7912,375f,36bd,fd 23,fd 23,inc iy,inc iy,inc iy,exec.asm,CHNL:           INC	IY		;SKIP '#'
8004,8004,7913,3761,36bf,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,exec.asm,CALL	ITEMI
8005,8005,7914,3764,36c2,d9,d9,exx,exx,exx,exec.asm,EXX
8006,8006,7915,3765,36c3,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
8007,8007,7916,3766,36c4,c9,c9,ret,ret,ret,exec.asm,RET
8008,8008,7917,3767,36c5,f5,f5,push af,push af,push af,exec.asm,FREESA:         PUSH	AF
8009,8009,7918,3768,36c6,c5,c5,push bc,push bc,push bc,exec.asm,FREES0:         PUSH	BC
8010,8010,7919,3769,36c7,d5,d5,push de,push de,push de,exec.asm,PUSH	DE
8011,8011,7920,376a,36c8,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
8012,8012,7921,376b,36c9,af,af,xor a,xor a,xor a,exec.asm,XOR	A
8013,8013,7922,376c,36ca,50,50,"ld d,b","ld d,b","ld d,b",exec.asm,"LD	D,B"
8014,8014,7923,376d,36cb,59,59,"ld e,c","ld e,c","ld e,c",exec.asm,"LD	E,C"
8015,8015,7924,376e,36cc,47,47,"ld b,a","ld b,a","ld b,a",exec.asm,"LD	B,A"
8016,8016,7925,376f,36cd,d5,d5,push de,push de,push de,exec.asm,FREES1:         PUSH	DE
8017,8017,7926,3770,36ce,2b,2b,dec hl,dec hl,dec hl,exec.asm,DEC	HL
8018,8018,7927,3771,36cf,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",exec.asm,"LD	D,(HL)"
8019,8019,7928,3772,36d0,2b,2b,dec hl,dec hl,dec hl,exec.asm,DEC	HL
8020,8020,7929,3773,36d1,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",exec.asm,"LD	E,(HL)"
8021,8021,7930,3774,36d2,2b,2b,dec hl,dec hl,dec hl,exec.asm,DEC	HL
8022,8022,7931,3775,36d3,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",exec.asm,"LD	C,(HL)"
8023,8023,7932,3776,36d4,2b,2b,dec hl,dec hl,dec hl,exec.asm,DEC	HL
8024,8024,7933,3777,36d5,e5,e5,push hl,push hl,push hl,exec.asm,PUSH	HL
8025,8025,7934,3778,36d6,2a e0 55,2a e0 54,"ld hl,($55e0)","ld hl,($54e0)","ld hl,($0000)",exec.asm,"LD	HL,(FREE)"
8026,8026,7935,377b,36d9,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
8027,8027,7936,377c,36da,09,09,"add hl,bc","add hl,bc","add hl,bc",exec.asm,"ADD	HL,BC"
8028,8028,7937,377d,36db,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",exec.asm,"SBC	HL,DE"
8029,8029,7938,377f,36dd,20 07,20 07,"jr nz,$+$09","jr nz,$+$09","jr nz,$+$00",exec.asm,"JR	NZ,FREES2"
8030,8030,7939,3781,36df,19,19,"add hl,de","add hl,de","add hl,de",exec.asm,"ADD	HL,DE"
8031,8031,7940,3782,36e0,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
8032,8032,7941,3784,36e2,22 e0 55,22 e0 54,"ld ($55e0),hl","ld ($54e0),hl","ld ($0000),hl",exec.asm,"LD	(FREE),HL"
8033,8033,7942,3787,36e5,b4,b4,or h,or h,or h,exec.asm,OR	H
8034,8034,7943,3788,36e6,d1,d1,pop de,pop de,pop de,exec.asm,FREES2:         POP	DE
8035,8035,7944,3789,36e7,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
8036,8036,7945,378a,36e8,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",exec.asm,"LD	C,4"
8037,8037,7946,378c,36ea,b7,b7,or a,or a,or a,exec.asm,OR	A
8038,8038,7947,378d,36eb,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",exec.asm,"SBC	HL,BC"
8039,8039,7948,378f,36ed,eb,eb,"ex de,hl","ex de,hl","ex de,hl",exec.asm,"EX	DE,HL"
8040,8040,7949,3790,36ee,20 dd,20 dd,"jr nz,$-$21","jr nz,$-$21","jr nz,$-$00",exec.asm,"JR	NZ,FREES1"
8041,8041,7950,3792,36f0,b7,b7,or a,or a,or a,exec.asm,OR	A
8042,8042,7951,3793,36f1,e1,e1,pop hl,pop hl,pop hl,exec.asm,POP	HL
8043,8043,7952,3794,36f2,d1,d1,pop de,pop de,pop de,exec.asm,POP	DE
8044,8044,7953,3795,36f3,c1,c1,pop bc,pop bc,pop bc,exec.asm,POP	BC
8045,8045,7954,3796,36f4,b7,b7,or a,or a,or a,exec.asm,OR	A
8046,8046,7955,3797,36f5,20 cf,20 cf,"jr nz,$-$2f","jr nz,$-$2f","jr nz,$-$00",exec.asm,"JR	NZ,FREES0"
8047,8047,7956,3799,36f7,f1,f1,pop af,pop af,pop af,exec.asm,POP	AF
8048,8048,7957,379a,36f8,c9,c9,ret,ret,ret,exec.asm,RET
8049,8049,7958,379b,36f9,c3 c5 37,c3 23 37,jp $37c5,jp $3723,jp $0000,main.asm,START:          JP	COLD
8050,8050,7959,379e,36fc,c3 33 38,c3 91 37,jp $3833,jp $3791,jp $0000,main.asm,JP	WARM
8051,8051,7960,37a1,36ff,c3 67 26,c3 c5 25,jp $2667,jp $25c5,jp $0000,main.asm,JP	ESCAPE
8052,8052,7961,37a4,3702,c3 d9 3f,c3 37 3f,jp $3fd9,jp $3f37,jp $0000,main.asm,JP	EXTERR
8053,8053,7962,37a7,3705,c3 7e 45,c3 dc 44,jp $457e,jp $44dc,jp $0000,main.asm,JP	TELL
8054,8054,7963,37aa,3708,c3 6c 45,c3 ca 44,jp $456c,jp $44ca,jp $0000,main.asm,JP	TEXT_
8055,8055,7964,37ad,370b,c3 e4 18,c3 42 18,jp $18e4,jp $1842,jp $0000,main.asm,JP	ITEMI
8056,8056,7965,37b0,370e,c3 b7 18,c3 15 18,jp $18b7,jp $1815,jp $0000,main.asm,JP	EXPRI
8057,8057,7966,37b3,3711,c3 c0 18,c3 1e 18,jp $18c0,jp $181e,jp $0000,main.asm,JP	EXPRS
8058,8058,7967,37b6,3714,c3 37 0a,c3 95 09,jp $0a37,jp $0995,jp $0000,main.asm,JP	OSCLI
8059,8059,7968,37b9,3717,c3 5d 06,c3 3d 06,jp $065d,jp $063d,jp $0000,main.asm,JP	OSBGET
8060,8060,7969,37bc,371a,c3 65 06,c3 45 06,jp $0665,jp $0645,jp $0000,main.asm,JP	OSBPUT
8061,8061,7970,37bf,371d,c3 6e 06,c3 4e 06,jp $066e,jp $064e,jp $0000,main.asm,JP	OSSTAT
8062,8062,7971,37c2,3720,c3 55 06,c3 35 06,jp $0655,jp $0635,jp $0000,main.asm,JP	OSSHUT
8063,8063,7972,37c5,3723,21 00 55,21 00 54,"ld hl,$5500","ld hl,$5400","ld hl,$0000",main.asm,"COLD:           LD	HL,STAVAR	;COLD START"
8064,8064,7973,37c8,3726,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",main.asm,"LD	SP,HL"
8065,8065,7974,37c9,3727,36 0a,36 0a,"ld (hl),$0a","ld (hl),$0a","ld (hl),$00",main.asm,"LD	(HL),10"
8066,8066,7975,37cb,3729,2c,2c,inc l,inc l,inc l,main.asm,INC	L
8067,8067,7976,37cc,372a,36 09,36 09,"ld (hl),$09","ld (hl),$09","ld (hl),$00",main.asm,"LD	(HL),9"
8068,8068,7977,37ce,372c,2c,2c,inc l,inc l,inc l,main.asm,INC	L
8069,8069,7978,37cf,372d,af,af,xor a,xor a,xor a,main.asm,XOR	A
8070,8070,7979,37d0,372e,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"PURGE:          LD	(HL),A		;CLEAR SCRATCHPAD"
8071,8071,7980,37d1,372f,2c,2c,inc l,inc l,inc l,main.asm,INC	L
8072,8072,7981,37d2,3730,20 fc,20 fc,"jr nz,$-$02","jr nz,$-$02","jr nz,$-$00",main.asm,"JR	NZ,PURGE"
8073,8073,7982,37d4,3732,3e 37,3e 37,"ld a,$37","ld a,$37","ld a,$00",main.asm,"LD	A,37H		;V3.0"
8074,8074,7983,37d6,3734,32 fe 55,32 fe 54,"ld ($55fe),a","ld ($54fe),a","ld ($0000),a",main.asm,"LD	(LISTON),A"
8075,8075,7984,37d9,3737,21 12 38,21 70 37,"ld hl,$3812","ld hl,$3770","ld hl,$0000",main.asm,"LD	HL,NOTICE"
8076,8076,7985,37dc,373a,22 ee 55,22 ee 54,"ld ($55ee),hl","ld ($54ee),hl","ld ($0000),hl",main.asm,"LD	(ERRTXT),HL"
8077,8077,7986,37df,373d,cd 82 05,cd 82 05,call $0582,call $0582,call $0000,main.asm,CALL	OSINIT
8078,8078,7987,37e2,3740,ed 53 e2 55,ed 53 e2 54,"ld ($55e2),de","ld ($54e2),de","ld ($0000),de",main.asm,"LD	(HIMEM),DE"
8079,8079,7988,37e6,3744,22 dc 55,22 dc 54,"ld ($55dc),hl","ld ($54dc),hl","ld ($0000),hl",main.asm,"LD	(PAGE_),HL"
8080,8080,7989,37e9,3747,cd c2 40,cd 20 40,call $40c2,call $4020,call $0000,main.asm,CALL	NEWIT
8081,8081,7990,37ec,374a,c2 d6 24,c2 34 24,"jp nz,$24d6","jp nz,$2434","jp nz,$0000",main.asm,"JP	NZ,CHAIN0	;AUTO-RUN"
8082,8082,7991,37ef,374d,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,main.asm,CALL	TELL
8083,8083,7992,37f2,3750,42,42,"ld b,d","ld b,d","ld b,d",main.asm,"VERMSG:         DB	""BBC BASIC (Z80) Version 5.00  """
8084,8084,7993,37f3,3751,42,42,"ld b,d","ld b,d","ld b,d",main.asm,
8085,8085,7994,37f4,3752,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8086,8086,7995,37f5,3753,20 42,20 42,"jr nz,$+$44","jr nz,$+$44","jr nz,$+$00",main.asm,
8087,8087,7996,37f7,3755,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8088,8088,7997,37f8,3756,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8089,8089,7998,37f9,3757,49 43,49 43,"ld.lis b,e","ld.lis b,e","ld.lis b,e",main.asm,
8090,8090,7999,37fb,3759,20 28,20 28,"jr nz,$+$2a","jr nz,$+$2a","jr nz,$+$00",main.asm,
8091,8091,8000,37fd,375b,5a,5a,"ld e,d","ld e,d","ld e,d",main.asm,
8092,8092,8001,37fe,375c,38 30,38 30,"jr c,$+$32","jr c,$+$32","jr c,$+$00",main.asm,
8093,8093,8002,3800,375e,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,
8094,8094,8003,3801,375f,20 56,20 56,"jr nz,$+$58","jr nz,$+$58","jr nz,$+$00",main.asm,
8095,8095,8004,3803,3761,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
8096,8096,8005,3804,3762,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
8097,8097,8006,3805,3763,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
8098,8098,8007,3806,3764,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
8099,8099,8008,3807,3765,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8100,8100,8009,3808,3766,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
8101,8101,8010,3809,3767,20 35,20 35,"jr nz,$+$37","jr nz,$+$37","jr nz,$+$00",main.asm,
8102,8102,8011,380b,3769,2e 30,2e 30,"ld l,$30","ld l,$30","ld l,$00",main.asm,
8103,8103,8012,380d,376b,30 20,30 20,"jr nc,$+$22","jr nc,$+$22","jr nc,$+$00",main.asm,
8104,8104,8013,380f,376d,20 0d,20 0d,"jr nz,$+$0f","jr nz,$+$0f","jr nz,$+$00",main.asm,
8105,8105,8014,3811,376f,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",main.asm,DB	LF
8106,8106,8015,3812,3770,28 43,28 43,"jr z,$+$45","jr z,$+$45","jr z,$+$00",main.asm,"NOTICE:         DB	""(C) Copyright R.T.Russell 2024"""
8107,8107,8016,3814,3772,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,
8108,8108,8017,3815,3773,20 43,20 43,"jr nz,$+$45","jr nz,$+$45","jr nz,$+$00",main.asm,
8109,8109,8018,3817,3775,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8110,8110,8019,3818,3776,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
8111,8111,8020,3819,3777,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
8112,8112,8021,381a,3778,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
8113,8113,8022,381b,3779,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
8114,8114,8023,381c,377a,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
8115,8115,8024,381d,377b,68,68,"ld l,b","ld l,b","ld l,b",main.asm,
8116,8116,8025,381e,377c,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
8117,8117,8026,381f,377d,20 52,20 52,"jr nz,$+$54","jr nz,$+$54","jr nz,$+$00",main.asm,
8118,8118,8027,3821,377f,2e 54,2e 54,"ld l,$54","ld l,$54","ld l,$00",main.asm,
8119,8119,8028,3823,3781,2e 52,2e 52,"ld l,$52","ld l,$52","ld l,$00",main.asm,
8120,8120,8029,3825,3783,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
8121,8121,8030,3826,3784,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
8122,8122,8031,3827,3785,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
8123,8123,8032,3828,3786,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
8124,8124,8033,3829,3787,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
8125,8125,8034,382a,3788,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
8126,8126,8035,382b,3789,20 32,20 32,"jr nz,$+$34","jr nz,$+$34","jr nz,$+$00",main.asm,
8127,8127,8036,382d,378b,30 32,30 32,"jr nc,$+$34","jr nc,$+$34","jr nc,$+$00",main.asm,
8128,8128,8037,382f,378d,34,34,inc (hl),inc (hl),inc (hl),main.asm,
8129,8129,8038,3830,378e,0d,0d,dec c,dec c,dec c,main.asm,DB	CR
8130,8130,8039,3831,378f,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",main.asm,DB	LF
8131,8131,8040,3832,3790,00,00,nop,nop,nop,main.asm,DB	0
8132,8132,8041,3833,3791,f6 37,f6 37,or $37,or $37,or $00,main.asm,WARM:           DB	0F6H
8133,8133,8042,3835,3793,ed 7b e2 55,ed 7b e2 54,"ld sp,($55e2)","ld sp,($54e2)","ld sp,($0000)",main.asm,"LD	SP,(HIMEM)"
8134,8134,8043,3839,3797,cd 95 05,cd 91 05,call $0595,call $0591,call $0000,main.asm,CALL	PROMPT		;PROMPT USER
8135,8135,8044,383c,379a,21 fe 55,21 fe 54,"ld hl,$55fe","ld hl,$54fe","ld hl,$0000",main.asm,"LD	HL,LISTON"
8136,8136,8045,383f,379d,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
8137,8137,8046,3840,379e,e6 0f,e6 0f,and $0f,and $0f,and $00,main.asm,AND	0FH		;LISTO
8138,8138,8047,3842,37a0,f6 30,f6 30,or $30,or $30,or $00,main.asm,OR	30H		;OPT 3
8139,8139,8048,3844,37a2,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
8140,8140,8049,3845,37a3,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",main.asm,"SBC	HL,HL		;HL <- 0 (V3.0)"
8141,8141,8050,3847,37a5,22 ea 55,22 ea 54,"ld ($55ea),hl","ld ($54ea),hl","ld ($0000),hl",main.asm,"LD	(ERRTRP),HL"
8142,8142,8051,384a,37a8,22 ec 55,22 ec 54,"ld ($55ec),hl","ld ($54ec),hl","ld ($0000),hl",main.asm,"LD	(ONERSP),HL"
8143,8143,8052,384d,37ab,22 f4 55,22 f4 54,"ld ($55f4),hl","ld ($54f4),hl","ld ($0000),hl",main.asm,"LD	(CURLIN),HL	;For CMOS EDIT->LIST"
8144,8144,8053,3850,37ae,2a e8 55,2a e8 54,"ld hl,($55e8)","ld hl,($54e8)","ld hl,($0000)",main.asm,"LD	HL,(AUTONO)"
8145,8145,8054,3853,37b1,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8146,8146,8055,3854,37b2,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
8147,8147,8056,3855,37b3,b5,b5,or l,or l,or l,main.asm,OR	L
8148,8148,8057,3856,37b4,28 17,28 17,"jr z,$+$19","jr z,$+$19","jr z,$+$00",main.asm,"JR	Z,NOAUTO"
8149,8149,8058,3858,37b6,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8150,8150,8059,3859,37b7,cd 1a 42,cd 78 41,call $421a,call $4178,call $0000,main.asm,CALL	PBCD		;AUTO NUMBER
8151,8151,8060,385c,37ba,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
8152,8152,8061,385d,37bb,ed 4b ff 55,ed 4b ff 54,"ld bc,($55ff)","ld bc,($54ff)","ld bc,($0000)",main.asm,"LD	BC,(INCREM)"
8153,8153,8062,3861,37bf,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"LD	B,0"
8154,8154,8063,3863,37c1,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
8155,8155,8064,3864,37c2,da 33 44,da 91 43,"jp c,$4433","jp c,$4391","jp c,$0000",main.asm,"JP	C,TOOBIGmn"
8156,8156,8065,3867,37c5,22 e8 55,22 e8 54,"ld ($55e8),hl","ld ($54e8),hl","ld ($0000),hl",main.asm,"LD	(AUTONO),HL"
8157,8157,8066,386a,37c8,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",main.asm,"LD	A,' '"
8158,8158,8067,386c,37ca,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,main.asm,CALL	OUTCHR
8159,8159,8068,386f,37cd,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",main.asm,"NOAUTO:         LD	HL,ACCS"
8160,8160,8069,3872,37d0,cd e9 05,cd c9 05,call $05e9,call $05c9,call $0000,main.asm,CALL	OSLINE		;GET CONSOLE INPUT
8161,8161,8070,3875,37d3,af,af,xor a,xor a,xor a,main.asm,XOR	A
8162,8162,8071,3876,37d4,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",main.asm,"LD	(COUNT),A"
8163,8163,8072,3879,37d7,fd 21 00 53,fd 21 00 52,"ld iy,$5300","ld iy,$5200","ld iy,$0000",main.asm,"LD	IY,ACCS"
8164,8164,8073,387d,37db,21 65 3c,21 c3 3b,"ld hl,$3c65","ld hl,$3bc3","ld hl,$0000",main.asm,"LD	HL,COMNDS"
8165,8165,8074,3880,37de,cd 2a 40,cd 88 3f,call $402a,call $3f88,call $0000,main.asm,CALL	LEX0
8166,8166,8075,3883,37e1,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
8167,8167,8076,3884,37e2,20 19,20 19,"jr nz,$+$1b","jr nz,$+$1b","jr nz,$+$00",main.asm,"JR	NZ,NOTCMD"
8168,8168,8077,3886,37e4,87,87,"add a,a","add a,a","add a,a",main.asm,"ADD	A,A"
8169,8169,8078,3887,37e5,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"LD	C,A"
8170,8170,8079,3888,37e6,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
8171,8171,8080,3889,37e7,b5,b5,or l,or l,or l,main.asm,OR	L
8172,8172,8081,388a,37e8,20 0f,20 0f,"jr nz,$+$11","jr nz,$+$11","jr nz,$+$00",main.asm,"JR	NZ,INAUTO"
8173,8173,8082,388c,37ea,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A"
8174,8174,8083,388d,37eb,21 95 3c,21 f3 3b,"ld hl,$3c95","ld hl,$3bf3","ld hl,$0000",main.asm,"LD	HL,CMDTABmn"
8175,8175,8084,3890,37ee,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
8176,8176,8085,3891,37ef,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)		;TABLE ENTRY"
8177,8177,8086,3892,37f0,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8178,8178,8087,3893,37f1,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",main.asm,"LD	H,(HL)"
8179,8179,8088,3894,37f2,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,"LD	L,A"
8180,8180,8089,3895,37f3,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
8181,8181,8090,3897,37f5,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,CALL	NXT
8182,8182,8091,389a,37f8,e9,e9,jp (hl),jp (hl),jp (hl),main.asm,JP	(HL)		;EXECUTE COMMAND
8183,8183,8092,389b,37f9,fd 21 00 53,fd 21 00 52,"ld iy,$5300","ld iy,$5200","ld iy,$0000",main.asm,"INAUTO:         LD	IY,ACCS"
8184,8184,8093,389f,37fd,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"NOTCMD:         LD	A,H"
8185,8185,8094,38a0,37fe,b5,b5,or l,or l,or l,main.asm,OR	L
8186,8186,8095,38a1,37ff,cc 0e 44,cc 6c 43,"call z,$440e","call z,$436c","call z,$0000",main.asm,"CALL	Z,LINNUM"
8187,8187,8096,38a4,3802,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,CALL	NXT
8188,8188,8097,38a7,3805,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",main.asm,"LD	DE,BUFFER"
8189,8189,8098,38aa,3808,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",main.asm,"LD	C,1		;LEFT MODE"
8190,8190,8099,38ac,380a,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8191,8191,8100,38ad,380b,cd 9c 44,cd fa 43,call $449c,call $43fa,call $0000,main.asm,CALL	LEXAN2		;LEXICAL ANALYSIS
8192,8192,8101,38b0,380e,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
8193,8193,8102,38b1,380f,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LD	(DE),A		;TERMINATOR"
8194,8194,8103,38b2,3810,af,af,xor a,xor a,xor a,main.asm,XOR	A
8195,8195,8104,38b3,3811,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A"
8196,8196,8105,38b4,3812,4b,4b,"ld c,e","ld c,e","ld c,e",main.asm,"LD	C,E		;BC=LINE LENGTH"
8197,8197,8106,38b5,3813,13,13,inc de,inc de,inc de,main.asm,INC	DE
8198,8198,8107,38b6,3814,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LD	(DE),A		;ZERO NEXT"
8199,8199,8108,38b7,3815,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
8200,8200,8109,38b8,3816,b5,b5,or l,or l,or l,main.asm,OR	L
8201,8201,8110,38b9,3817,fd 21 00 54,fd 21 00 53,"ld iy,$5400","ld iy,$5300","ld iy,$0000",main.asm,"LD	IY,BUFFER	;FOR XEQ"
8202,8202,8111,38bd,381b,ca 1d 25,ca 7b 24,"jp z,$251d","jp z,$247b","jp z,$0000",main.asm,"JP	Z,XEQ		;DIRECT MODE"
8203,8203,8112,38c0,381e,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
8204,8204,8113,38c1,381f,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,main.asm,CALL	FINDL
8205,8205,8114,38c4,3822,cc 6d 40,cc cb 3f,"call z,$406d","call z,$3fcb","call z,$0000",main.asm,"CALL	Z,DEL"
8206,8206,8115,38c7,3825,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
8207,8207,8116,38c8,3826,79,79,"ld a,c","ld a,c","ld a,c",main.asm,"LD	A,C"
8208,8208,8117,38c9,3827,b7,b7,or a,or a,or a,main.asm,OR	A
8209,8209,8118,38ca,3828,28 39,28 39,"jr z,$+$3b","jr z,$+$3b","jr z,$+$00",main.asm,"JR	Z,CLOOP2	;DELETE LINE ONLY"
8210,8210,8119,38cc,382a,c6 04,c6 04,"add a,$04","add a,$04","add a,$00",main.asm,"ADD	A,4"
8211,8211,8120,38ce,382c,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"LD	C,A		;LENGTH INCLUSIVE"
8212,8212,8121,38cf,382d,d5,d5,push de,push de,push de,main.asm,PUSH	DE		;LINE NUMBER
8213,8213,8122,38d0,382e,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC		;SAVE LINE LENGTH
8214,8214,8123,38d1,382f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
8215,8215,8124,38d2,3830,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
8216,8216,8125,38d3,3831,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,main.asm,CALL	GETTOP
8217,8217,8126,38d6,3834,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
8218,8218,8127,38d7,3835,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8219,8219,8128,38d8,3836,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
8220,8220,8129,38d9,3837,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8221,8221,8130,38da,3838,24,24,inc h,inc h,inc h,main.asm,INC	H
8222,8222,8131,38db,3839,af,af,xor a,xor a,xor a,main.asm,XOR	A
8223,8223,8132,38dc,383a,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",main.asm,"SBC	HL,SP"
8224,8224,8133,38de,383c,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
8225,8225,8134,38df,383d,d2 c8 3f,d2 26 3f,"jp nc,$3fc8","jp nc,$3f26","jp nc,$0000",main.asm,"JP	NC,ERROR_	;""No room"""
8226,8226,8135,38e2,3840,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"EX	(SP),HL"
8227,8227,8136,38e3,3841,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
8228,8228,8137,38e4,3842,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8229,8229,8138,38e5,3843,b7,b7,or a,or a,or a,main.asm,OR	A
8230,8230,8139,38e6,3844,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
8231,8231,8140,38e8,3846,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"LD	B,H		;BC=AMOUNT TO MOVE"
8232,8232,8141,38e9,3847,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"LD	C,L"
8233,8233,8142,38ea,3848,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
8234,8234,8143,38eb,3849,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
8235,8235,8144,38ec,384a,28 02,28 02,"jr z,$+$04","jr z,$+$04","jr z,$+$00",main.asm,"JR	Z,ATEND"
8236,8236,8145,38ee,384c,ed b8,ed b8,lddr,lddr,lddr,main.asm,LDDR			;MAKE SPACE
8237,8237,8146,38f0,384e,c1,c1,pop bc,pop bc,pop bc,main.asm,ATEND:          POP	BC		;LINE LENGTH
8238,8238,8147,38f1,384f,d1,d1,pop de,pop de,pop de,main.asm,POP	DE		;LINE NUMBER
8239,8239,8148,38f2,3850,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8240,8240,8149,38f3,3851,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",main.asm,"LD	(HL),C		;STORE LENGTH"
8241,8241,8150,38f4,3852,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8242,8242,8151,38f5,3853,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,"LD	(HL),E		;STORE LINE NUMBER"
8243,8243,8152,38f6,3854,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8244,8244,8153,38f7,3855,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,"LD	(HL),D"
8245,8245,8154,38f8,3856,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
8246,8246,8155,38f9,3857,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",main.asm,"LD	DE,BUFFER"
8247,8247,8156,38fc,385a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
8248,8248,8157,38fd,385b,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
8249,8249,8158,38fe,385c,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
8250,8250,8159,38ff,385d,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
8251,8251,8160,3900,385e,ed b0,ed b0,ldir,ldir,ldir,main.asm,LDIR			;ADD LINE
8252,8252,8161,3902,3860,cd 9e 40,cd fc 3f,call $409e,call $3ffc,call $0000,main.asm,CALL	CLEAN
8253,8253,8162,3905,3863,c3 34 38,c3 92 37,jp $3834,jp $3792,jp $0000,main.asm,CLOOP2:         JP	CLOOP
8254,8254,8163,3908,3866,80,80,"add a,b","add a,b","add a,b",main.asm,KEYWDS:         DB	80H
8255,8255,8164,3909,3867,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""AND"""
8256,8256,8165,390a,3868,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8257,8257,8166,390b,3869,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8258,8258,8167,390c,386a,94,94,sub h,sub h,sub h,main.asm,DB	94H
8259,8259,8168,390d,386b,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ABS"""
8260,8260,8169,390e,386c,42,42,"ld b,d","ld b,d","ld b,d",main.asm,
8261,8261,8170,390f,386d,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8262,8262,8171,3910,386e,95,95,sub l,sub l,sub l,main.asm,DB	95H
8263,8263,8172,3911,386f,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ACS"""
8264,8264,8173,3912,3870,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8265,8265,8174,3913,3871,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8266,8266,8175,3914,3872,96,96,sub (hl),sub (hl),sub (hl),main.asm,DB	96H
8267,8267,8176,3915,3873,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ADVAL"""
8268,8268,8177,3916,3874,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8269,8269,8178,3917,3875,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,
8270,8270,8179,3918,3876,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8271,8271,8180,3919,3877,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8272,8272,8181,391a,3878,97,97,sub a,sub a,sub a,main.asm,DB	97H
8273,8273,8182,391b,3879,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ASC"""
8274,8274,8183,391c,387a,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8275,8275,8184,391d,387b,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8276,8276,8185,391e,387c,98,98,"sbc a,b","sbc a,b","sbc a,b",main.asm,DB	98H
8277,8277,8186,391f,387d,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ASN"""
8278,8278,8187,3920,387e,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8279,8279,8188,3921,387f,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8280,8280,8189,3922,3880,99,99,"sbc a,c","sbc a,c","sbc a,c",main.asm,DB	99H
8281,8281,8190,3923,3881,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""ATN"""
8282,8282,8191,3924,3882,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8283,8283,8192,3925,3883,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8284,8284,8193,3926,3884,9a,9a,"sbc a,d","sbc a,d","sbc a,d",main.asm,DB	9AH
8285,8285,8194,3927,3885,42,42,"ld b,d","ld b,d","ld b,d",main.asm,"DB	""BGET """
8286,8286,8195,3928,3886,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8287,8287,8196,3929,3887,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8288,8288,8197,392a,3888,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8289,8289,8198,392b,3889,20 d5,20 d5,"jr nz,$-$29","jr nz,$-$29","jr nz,$-$00",main.asm,
8290,8290,8199,392d,388b,42,42,"ld b,d","ld b,d","ld b,d",main.asm,"DB	""BPUT """
8291,8291,8200,392e,388c,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8292,8292,8201,392f,388d,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8293,8293,8202,3930,388e,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8294,8294,8203,3931,388f,20 0f,20 0f,"jr nz,$+$11","jr nz,$+$11","jr nz,$+$00",main.asm,
8295,8295,8204,3933,3891,42,42,"ld b,d","ld b,d","ld b,d",main.asm,"DB	""BY ""		; v5"
8296,8296,8205,3934,3892,59,59,"ld e,c","ld e,c","ld e,c",main.asm,
8297,8297,8206,3935,3893,20 fb,20 fb,"jr nz,$-$03","jr nz,$-$03","jr nz,$-$00",main.asm,
8298,8298,8207,3937,3895,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""COLOUR"""
8299,8299,8208,3938,3896,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8300,8300,8209,3939,3897,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8301,8301,8210,393a,3898,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8302,8302,8211,393b,3899,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8303,8303,8212,393c,389a,52 fb,52 fb,ei.sil,ei.sil,ei.sil,main.asm,
8304,8304,8213,393e,389c,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""COLOR"""
8305,8305,8214,393f,389d,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8306,8306,8215,3940,389e,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8307,8307,8216,3941,389f,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8308,8308,8217,3942,38a0,52 d6 43,52 d6 43,sub.sil $43,sub.sil $43,sub.sil $00,main.asm,
8309,8309,8218,3945,38a3,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8310,8310,8219,3946,38a4,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8311,8311,8220,3947,38a5,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8312,8312,8221,3948,38a6,c8,c8,ret z,ret z,ret z,main.asm,DB	0C8H
8313,8313,8222,3949,38a7,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CASE""		; v5"
8314,8314,8223,394a,38a8,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8315,8315,8224,394b,38a9,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8316,8316,8225,394c,38aa,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8317,8317,8226,394d,38ab,d7,d7,rst $10,rst $10,rst $00,main.asm,DB	0D7H
8318,8318,8227,394e,38ac,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CHAIN"""
8319,8319,8228,394f,38ad,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8320,8320,8229,3950,38ae,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8321,8321,8230,3951,38af,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8322,8322,8231,3953,38b1,bd,bd,cp l,cp l,cp l,main.asm,DB	0BDH
8323,8323,8232,3954,38b2,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CHR$"""
8324,8324,8233,3955,38b3,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8325,8325,8234,3956,38b4,52 24,52 24,inc.sil h,inc.sil h,inc.sil h,main.asm,
8326,8326,8235,3958,38b6,d8,d8,ret c,ret c,ret c,main.asm,DB	0D8H
8327,8327,8236,3959,38b7,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CLEAR """
8328,8328,8237,395a,38b8,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8329,8329,8238,395b,38b9,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8330,8330,8239,395c,38ba,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8331,8331,8240,395d,38bb,52 20 d9,52 20 d9,"jr.sil nz,$-$24","jr.sil nz,$-$24","jr.sil nz,$-$00",main.asm,
8332,8332,8241,3960,38be,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CLOSE """
8333,8333,8242,3961,38bf,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8334,8334,8243,3962,38c0,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8335,8335,8244,3963,38c1,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8336,8336,8245,3964,38c2,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8337,8337,8246,3965,38c3,20 da,20 da,"jr nz,$-$24","jr nz,$-$24","jr nz,$-$00",main.asm,
8338,8338,8247,3967,38c5,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CLG """
8339,8339,8248,3968,38c6,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8340,8340,8249,3969,38c7,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8341,8341,8250,396a,38c8,20 db,20 db,"jr nz,$-$23","jr nz,$-$23","jr nz,$-$00",main.asm,
8342,8342,8251,396c,38ca,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CLS """
8343,8343,8252,396d,38cb,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8344,8344,8253,396e,38cc,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8345,8345,8254,396f,38cd,20 9b,20 9b,"jr nz,$-$63","jr nz,$-$63","jr nz,$-$00",main.asm,
8346,8346,8255,3971,38cf,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""COS"""
8347,8347,8256,3972,38d0,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8348,8348,8257,3973,38d1,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8349,8349,8258,3974,38d2,9c,9c,"sbc a,h","sbc a,h","sbc a,h",main.asm,DB	9CH
8350,8350,8259,3975,38d3,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""COUNT """
8351,8351,8260,3976,38d4,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8352,8352,8261,3977,38d5,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8353,8353,8262,3978,38d6,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8354,8354,8263,3979,38d7,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8355,8355,8264,397a,38d8,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",main.asm,
8356,8356,8265,397c,38da,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""CIRCLE""	; v5"
8357,8357,8266,397d,38db,49,49,noni.lis,noni.lis,noni.lis,main.asm,
8358,8358,8267,397e,38dc,52 43,52 43,"ld.sil b,e","ld.sil b,e","ld.sil b,e",main.asm,
8359,8359,8268,3980,38de,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8360,8360,8269,3981,38df,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8361,8361,8270,3982,38e0,dc 44 41,dc 44 41,"call c,$4144","call c,$4144","call c,$0000",main.asm,DB	0DCH
8362,8362,8271,3985,38e3,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8363,8363,8272,3986,38e4,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8364,8364,8273,3987,38e5,9d,9d,"sbc a,l","sbc a,l","sbc a,l",main.asm,DB	9DH
8365,8365,8274,3988,38e6,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"DB	""DEG"""
8366,8366,8275,3989,38e7,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8367,8367,8276,398a,38e8,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8368,8368,8277,398b,38e9,dd 44,dd 44,"ld b,ixh","ld b,ixh","ld b,ixh",main.asm,DB	0DDH
8369,8369,8278,398d,38eb,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8370,8370,8279,398e,38ec,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8371,8371,8280,398f,38ed,81,81,"add a,c","add a,c","add a,c",main.asm,DB	81H
8372,8372,8281,3990,38ee,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"DB	""DIV"""
8373,8373,8282,3991,38ef,49 56,49 56,"ld.lis d,(hl)","ld.lis d,(hl)","ld.lis d,(hl)",main.asm,
8374,8374,8283,3993,38f1,de 44,de 44,"sbc a,$44","sbc a,$44","sbc a,$00",main.asm,DB	0DEH
8375,8375,8284,3995,38f3,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",main.asm,
8376,8376,8285,3997,38f5,df,df,rst $18,rst $18,rst $00,main.asm,DB	0DFH
8377,8377,8286,3998,38f6,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"DB	""DRAW"""
8378,8378,8287,3999,38f7,52 41,52 41,"ld.sil b,c","ld.sil b,c","ld.sil b,c",main.asm,
8379,8379,8288,399b,38f9,57,57,"ld d,a","ld d,a","ld d,a",main.asm,
8380,8380,8289,399c,38fa,e1,e1,pop hl,pop hl,pop hl,main.asm,DB	0E1H
8381,8381,8290,399d,38fb,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ENDPROC """
8382,8382,8291,399e,38fc,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8383,8383,8292,399f,38fd,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8384,8384,8293,39a0,38fe,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8385,8385,8294,39a1,38ff,52 4f,52 4f,"ld.sil c,a","ld.sil c,a","ld.sil c,a",main.asm,
8386,8386,8295,39a3,3901,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8387,8387,8296,39a4,3902,20 ce,20 ce,"jr nz,$-$30","jr nz,$-$30","jr nz,$-$00",main.asm,
8388,8388,8297,39a6,3904,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ENDWHILE ""	; v5"
8389,8389,8298,39a7,3905,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8390,8390,8299,39a8,3906,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8391,8391,8300,39a9,3907,57,57,"ld d,a","ld d,a","ld d,a",main.asm,
8392,8392,8301,39aa,3908,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8393,8393,8302,39ab,3909,49 4c,49 4c,"ld.lis c,h","ld.lis c,h","ld.lis c,h",main.asm,
8394,8394,8303,39ad,390b,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8395,8395,8304,39ae,390c,20 cb,20 cb,"jr nz,$-$33","jr nz,$-$33","jr nz,$-$00",main.asm,
8396,8396,8305,39b0,390e,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ENDCASE ""	; v5"
8397,8397,8306,39b1,390f,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8398,8398,8307,39b2,3910,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8399,8399,8308,39b3,3911,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8400,8400,8309,39b4,3912,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8401,8401,8310,39b5,3913,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8402,8402,8311,39b6,3914,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8403,8403,8312,39b7,3915,20 cd,20 cd,"jr nz,$-$31","jr nz,$-$31","jr nz,$-$00",main.asm,
8404,8404,8313,39b9,3917,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ENDIF ""	; v5"
8405,8405,8314,39ba,3918,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8406,8406,8315,39bb,3919,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8407,8407,8316,39bc,391a,49 46,49 46,"ld.lis b,(hl)","ld.lis b,(hl)","ld.lis b,(hl)",main.asm,
8408,8408,8317,39be,391c,20 e0,20 e0,"jr nz,$-$1e","jr nz,$-$1e","jr nz,$-$00",main.asm,
8409,8409,8318,39c0,391e,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""END """
8410,8410,8319,39c1,391f,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8411,8411,8320,39c2,3920,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8412,8412,8321,39c3,3921,20 e2,20 e2,"jr nz,$-$1c","jr nz,$-$1c","jr nz,$-$00",main.asm,
8413,8413,8322,39c5,3923,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ENVELOPE"""
8414,8414,8323,39c6,3924,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8415,8415,8324,39c7,3925,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,
8416,8416,8325,39c8,3926,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8417,8417,8326,39c9,3927,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8418,8418,8327,39ca,3928,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8419,8419,8328,39cb,3929,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8420,8420,8329,39cc,392a,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8421,8421,8330,39cd,392b,8b,8b,"adc a,e","adc a,e","adc a,e",main.asm,DB	8BH
8422,8422,8331,39ce,392c,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ELSE"""
8423,8423,8332,39cf,392d,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8424,8424,8333,39d0,392e,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8425,8425,8334,39d1,392f,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8426,8426,8335,39d2,3930,a0,a0,and b,and b,and b,main.asm,DB	0A0H
8427,8427,8336,39d3,3931,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EVAL"""
8428,8428,8337,39d4,3932,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,
8429,8429,8338,39d5,3933,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8430,8430,8339,39d6,3934,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8431,8431,8340,39d7,3935,9e,9e,"sbc a,(hl)","sbc a,(hl)","sbc a,(hl)",main.asm,DB	9EH
8432,8432,8341,39d8,3936,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ERL """
8433,8433,8342,39d9,3937,52 4c,52 4c,"ld.sil c,h","ld.sil c,h","ld.sil c,h",main.asm,
8434,8434,8343,39db,3939,20 85,20 85,"jr nz,$-$79","jr nz,$-$79","jr nz,$-$00",main.asm,
8435,8435,8344,39dd,393b,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ERROR"""
8436,8436,8345,39de,393c,52,52,noni.sil,noni.sil,noni.sil,main.asm,
8437,8437,8346,39df,393d,52 4f,52 4f,"ld.sil c,a","ld.sil c,a","ld.sil c,a",main.asm,
8438,8438,8347,39e1,393f,52 c5,52 c5,push.sil bc,push.sil bc,push.sil bc,main.asm,
8439,8439,8348,39e3,3941,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EOF """
8440,8440,8349,39e4,3942,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8441,8441,8350,39e5,3943,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8442,8442,8351,39e6,3944,20 82,20 82,"jr nz,$-$7c","jr nz,$-$7c","jr nz,$-$00",main.asm,
8443,8443,8352,39e8,3946,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EOR"""
8444,8444,8353,39e9,3947,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8445,8445,8354,39ea,3948,52 9f,52 9f,"sbc.sil a,a","sbc.sil a,a","sbc.sil a,a",main.asm,
8446,8446,8355,39ec,394a,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ERR """
8447,8447,8356,39ed,394b,52,52,noni.sil,noni.sil,noni.sil,main.asm,
8448,8448,8357,39ee,394c,52 20 10,52 20 10,"jr.sil nz,$+$13","jr.sil nz,$+$13","jr.sil nz,$+$00",main.asm,
8449,8449,8358,39f1,394f,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EXIT ""		; v5"
8450,8450,8359,39f2,3950,58,58,"ld e,b","ld e,b","ld e,b",main.asm,
8451,8451,8360,39f3,3951,49 54,49 54,"ld.lis d,h","ld.lis d,h","ld.lis d,h",main.asm,
8452,8452,8361,39f5,3953,20 a1,20 a1,"jr nz,$-$5d","jr nz,$-$5d","jr nz,$-$00",main.asm,
8453,8453,8362,39f7,3955,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EXP"""
8454,8454,8363,39f8,3956,58,58,"ld e,b","ld e,b","ld e,b",main.asm,
8455,8455,8364,39f9,3957,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8456,8456,8365,39fa,3958,a2,a2,and d,and d,and d,main.asm,DB	0A2H
8457,8457,8366,39fb,3959,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""EXT """
8458,8458,8367,39fc,395a,58,58,"ld e,b","ld e,b","ld e,b",main.asm,
8459,8459,8368,39fd,395b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8460,8460,8369,39fe,395c,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,
8461,8461,8370,3a00,395e,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""ELLIPSE""	; v5"
8462,8462,8371,3a01,395f,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8463,8463,8372,3a02,3960,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8464,8464,8373,3a03,3961,49 50,49 50,"ld.lis d,b","ld.lis d,b","ld.lis d,b",main.asm,
8465,8465,8374,3a05,3963,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8466,8466,8375,3a06,3964,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8467,8467,8376,3a07,3965,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,DB	0E3H
8468,8468,8377,3a08,3966,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"DB	""FOR"""
8469,8469,8378,3a09,3967,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8470,8470,8379,3a0a,3968,52 a3,52 a3,and.sil e,and.sil e,and.sil e,main.asm,
8471,8471,8380,3a0c,396a,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"DB	""FALSE """
8472,8472,8381,3a0d,396b,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8473,8473,8382,3a0e,396c,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8474,8474,8383,3a0f,396d,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8475,8475,8384,3a10,396e,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8476,8476,8385,3a11,396f,20 03,20 03,"jr nz,$+$05","jr nz,$+$05","jr nz,$+$00",main.asm,
8477,8477,8386,3a13,3971,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"DB	""FILL""		; v5"
8478,8478,8387,3a14,3972,49 4c,49 4c,"ld.lis c,h","ld.lis c,h","ld.lis c,h",main.asm,
8479,8479,8388,3a16,3974,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8480,8480,8389,3a17,3975,a4,a4,and h,and h,and h,main.asm,DB	0A4H
8481,8481,8390,3a18,3976,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"DB	""FN"""
8482,8482,8391,3a19,3977,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8483,8483,8392,3a1a,3978,e5,e5,push hl,push hl,push hl,main.asm,DB	0E5H
8484,8484,8393,3a1b,3979,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"DB	""GOTO"""
8485,8485,8394,3a1c,397a,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8486,8486,8395,3a1d,397b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8487,8487,8396,3a1e,397c,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8488,8488,8397,3a1f,397d,be,be,cp (hl),cp (hl),cp (hl),main.asm,DB	0BEH
8489,8489,8398,3a20,397e,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"DB	""GET$"""
8490,8490,8399,3a21,397f,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8491,8491,8400,3a22,3980,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8492,8492,8401,3a23,3981,24,24,inc h,inc h,inc h,main.asm,
8493,8493,8402,3a24,3982,a5,a5,and l,and l,and l,main.asm,DB	0A5H
8494,8494,8403,3a25,3983,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"DB	""GET"""
8495,8495,8404,3a26,3984,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8496,8496,8405,3a27,3985,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8497,8497,8406,3a28,3986,e4 47 4f,e4 47 4f,"call po,$4f47","call po,$4f47","call po,$0000",main.asm,DB	0E4H
8498,8498,8407,3a2b,3989,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8499,8499,8408,3a2c,398a,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8500,8500,8409,3a2d,398b,42,42,"ld b,d","ld b,d","ld b,d",main.asm,
8501,8501,8410,3a2e,398c,e6 47,e6 47,and $47,and $47,and $00,main.asm,DB	0E6H
8502,8502,8411,3a30,398e,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8503,8503,8412,3a31,398f,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8504,8504,8413,3a32,3990,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8505,8505,8414,3a33,3991,93,93,sub e,sub e,sub e,main.asm,DB	93H
8506,8506,8415,3a34,3992,48,48,"ld c,b","ld c,b","ld c,b",main.asm,"DB	""HIMEM """
8507,8507,8416,3a35,3993,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",main.asm,
8508,8508,8417,3a37,3995,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8509,8509,8418,3a38,3996,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8510,8510,8419,3a39,3997,20 e8,20 e8,"jr nz,$-$16","jr nz,$-$16","jr nz,$-$00",main.asm,
8511,8511,8420,3a3b,3999,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INPUT"""
8512,8512,8421,3a3d,399b,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8513,8513,8422,3a3e,399c,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8514,8514,8423,3a3f,399d,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8515,8515,8424,3a40,399e,e7,e7,rst $20,rst $20,rst $00,main.asm,DB	0E7H
8516,8516,8425,3a41,399f,49 46,49 46,"ld.lis b,(hl)","ld.lis b,(hl)","ld.lis b,(hl)",main.asm,"DB	""IF"""
8517,8517,8426,3a43,39a1,bf,bf,cp a,cp a,cp a,main.asm,DB	0BFH
8518,8518,8427,3a44,39a2,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INKEY$"""
8519,8519,8428,3a46,39a4,4b,4b,"ld c,e","ld c,e","ld c,e",main.asm,
8520,8520,8429,3a47,39a5,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8521,8521,8430,3a48,39a6,59,59,"ld e,c","ld e,c","ld e,c",main.asm,
8522,8522,8431,3a49,39a7,24,24,inc h,inc h,inc h,main.asm,
8523,8523,8432,3a4a,39a8,a6,a6,and (hl),and (hl),and (hl),main.asm,DB	0A6H
8524,8524,8433,3a4b,39a9,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INKEY"""
8525,8525,8434,3a4d,39ab,4b,4b,"ld c,e","ld c,e","ld c,e",main.asm,
8526,8526,8435,3a4e,39ac,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8527,8527,8436,3a4f,39ad,59,59,"ld e,c","ld e,c","ld e,c",main.asm,
8528,8528,8437,3a50,39ae,a8,a8,xor b,xor b,xor b,main.asm,DB	0A8H
8529,8529,8438,3a51,39af,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INT"""
8530,8530,8439,3a53,39b1,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8531,8531,8440,3a54,39b2,a7,a7,and a,and a,and a,main.asm,DB	0A7H
8532,8532,8441,3a55,39b3,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INSTR("""
8533,8533,8442,3a57,39b5,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8534,8534,8443,3a58,39b6,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8535,8535,8444,3a59,39b7,52 28 0c,52 28 0c,"jr.sil z,$+$0f","jr.sil z,$+$0f","jr.sil z,$+$00",main.asm,
8536,8536,8445,3a5c,39ba,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,"DB	""INSTALL""	; v5"
8537,8537,8446,3a5e,39bc,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8538,8538,8447,3a5f,39bd,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8539,8539,8448,3a60,39be,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8540,8540,8449,3a61,39bf,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8541,8541,8450,3a62,39c0,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8542,8542,8451,3a63,39c1,86,86,"add a,(hl)","add a,(hl)","add a,(hl)",main.asm,DB	86H
8543,8543,8452,3a64,39c2,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LINE"""
8544,8544,8453,3a65,39c3,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8545,8545,8454,3a67,39c5,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8546,8546,8455,3a68,39c6,92,92,sub d,sub d,sub d,main.asm,DB	92H
8547,8547,8456,3a69,39c7,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LOMEM """
8548,8548,8457,3a6a,39c8,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8549,8549,8458,3a6b,39c9,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8550,8550,8459,3a6c,39ca,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8551,8551,8460,3a6d,39cb,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8552,8552,8461,3a6e,39cc,20 ea,20 ea,"jr nz,$-$14","jr nz,$-$14","jr nz,$-$00",main.asm,
8553,8553,8462,3a70,39ce,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LOCAL"""
8554,8554,8463,3a71,39cf,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8555,8555,8464,3a72,39d0,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8556,8556,8465,3a73,39d1,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8557,8557,8466,3a74,39d2,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8558,8558,8467,3a75,39d3,c0,c0,ret nz,ret nz,ret nz,main.asm,DB	0C0H
8559,8559,8468,3a76,39d4,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LEFT$("""
8560,8560,8469,3a77,39d5,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8561,8561,8470,3a78,39d6,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8562,8562,8471,3a79,39d7,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8563,8563,8472,3a7a,39d8,24,24,inc h,inc h,inc h,main.asm,
8564,8564,8473,3a7b,39d9,28 a9,28 a9,"jr z,$-$55","jr z,$-$55","jr z,$-$00",main.asm,
8565,8565,8474,3a7d,39db,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LEN"""
8566,8566,8475,3a7e,39dc,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8567,8567,8476,3a7f,39dd,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8568,8568,8477,3a80,39de,e9,e9,jp (hl),jp (hl),jp (hl),main.asm,DB	0E9H
8569,8569,8478,3a81,39df,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LET"""
8570,8570,8479,3a82,39e0,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8571,8571,8480,3a83,39e1,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8572,8572,8481,3a84,39e2,ab,ab,xor e,xor e,xor e,main.asm,DB	0ABH
8573,8573,8482,3a85,39e3,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LOG"""
8574,8574,8483,3a86,39e4,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8575,8575,8484,3a87,39e5,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8576,8576,8485,3a88,39e6,aa,aa,xor d,xor d,xor d,main.asm,DB	0AAH
8577,8577,8486,3a89,39e7,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LN"""
8578,8578,8487,3a8a,39e8,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8579,8579,8488,3a8b,39e9,c1,c1,pop bc,pop bc,pop bc,main.asm,DB	0C1H
8580,8580,8489,3a8c,39ea,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""MID$("""
8581,8581,8490,3a8d,39eb,49 44,49 44,"ld.lis b,h","ld.lis b,h","ld.lis b,h",main.asm,
8582,8582,8491,3a8f,39ed,24,24,inc h,inc h,inc h,main.asm,
8583,8583,8492,3a90,39ee,28 eb,28 eb,"jr z,$-$13","jr z,$-$13","jr z,$-$00",main.asm,
8584,8584,8493,3a92,39f0,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""MODE"""
8585,8585,8494,3a93,39f1,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8586,8586,8495,3a94,39f2,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8587,8587,8496,3a95,39f3,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8588,8588,8497,3a96,39f4,83,83,"add a,e","add a,e","add a,e",main.asm,DB	83H
8589,8589,8498,3a97,39f5,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""MOD"""
8590,8590,8499,3a98,39f6,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8591,8591,8500,3a99,39f7,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8592,8592,8501,3a9a,39f8,ec 4d 4f,ec 4d 4f,"call pe,$4f4d","call pe,$4f4d","call pe,$0000",main.asm,DB	0ECH
8593,8593,8502,3a9d,39fb,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,
8594,8594,8503,3a9e,39fc,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8595,8595,8504,3a9f,39fd,04,04,inc b,inc b,inc b,main.asm,DB	04H
8596,8596,8505,3aa0,39fe,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""MOUSE""		; v5"
8597,8597,8506,3aa1,39ff,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8598,8598,8507,3aa2,3a00,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8599,8599,8508,3aa3,3a01,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8600,8600,8509,3aa4,3a02,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8601,8601,8510,3aa5,3a03,ed 4e,ed 4e,trap,trap,trap,main.asm,DB	0EDH
8602,8602,8511,3aa7,3a05,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8603,8603,8512,3aa8,3a06,58,58,"ld e,b","ld e,b","ld e,b",main.asm,
8604,8604,8513,3aa9,3a07,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8605,8605,8514,3aaa,3a08,ac,ac,xor h,xor h,xor h,main.asm,DB	0ACH
8606,8606,8515,3aab,3a09,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""NOT"""
8607,8607,8516,3aac,3a0a,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8608,8608,8517,3aad,3a0b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8609,8609,8518,3aae,3a0c,ee 4f,ee 4f,xor $4f,xor $4f,xor $00,main.asm,DB	0EEH
8610,8610,8519,3ab0,3a0e,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8611,8611,8520,3ab1,3a0f,87,87,"add a,a","add a,a","add a,a",main.asm,DB	87H
8612,8612,8521,3ab2,3a10,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OFF """
8613,8613,8522,3ab3,3a11,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8614,8614,8523,3ab4,3a12,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8615,8615,8524,3ab5,3a13,20 ca,20 ca,"jr nz,$-$34","jr nz,$-$34","jr nz,$-$00",main.asm,
8616,8616,8525,3ab7,3a15,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OF ""		; v5"
8617,8617,8526,3ab8,3a16,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,
8618,8618,8527,3ab9,3a17,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",main.asm,
8619,8619,8528,3abb,3a19,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""ORIGIN""	; v5"
8620,8620,8529,3abc,3a1a,52,52,noni.sil,noni.sil,noni.sil,main.asm,
8621,8621,8530,3abd,3a1b,49 47,49 47,"ld.lis b,a","ld.lis b,a","ld.lis b,a",main.asm,
8622,8622,8531,3abf,3a1d,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8623,8623,8532,3ac1,3a1f,84,84,"add a,h","add a,h","add a,h",main.asm,DB	84H
8624,8624,8533,3ac2,3a20,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OR"""
8625,8625,8534,3ac3,3a21,52 8e,52 8e,"adc.sil a,(hl)","adc.sil a,(hl)","adc.sil a,(hl)",main.asm,
8626,8626,8535,3ac5,3a23,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OPENIN"""
8627,8627,8536,3ac6,3a24,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8628,8628,8537,3ac7,3a25,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8629,8629,8538,3ac8,3a26,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8630,8630,8539,3ac9,3a27,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8631,8631,8540,3acb,3a29,ae,ae,xor (hl),xor (hl),xor (hl),main.asm,DB	0AEH
8632,8632,8541,3acc,3a2a,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OPENOUT"""
8633,8633,8542,3acd,3a2b,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8634,8634,8543,3ace,3a2c,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8635,8635,8544,3acf,3a2d,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8636,8636,8545,3ad0,3a2e,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8637,8637,8546,3ad1,3a2f,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8638,8638,8547,3ad2,3a30,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8639,8639,8548,3ad3,3a31,ad,ad,xor l,xor l,xor l,main.asm,DB	0ADH
8640,8640,8549,3ad4,3a32,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OPENUP"""
8641,8641,8550,3ad5,3a33,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8642,8642,8551,3ad6,3a34,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8643,8643,8552,3ad7,3a35,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8644,8644,8553,3ad8,3a36,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8645,8645,8554,3ad9,3a37,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8646,8646,8555,3ada,3a38,ff,ff,rst $38,rst $38,rst $00,main.asm,DB	0FFH
8647,8647,8556,3adb,3a39,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OSCLI"""
8648,8648,8557,3adc,3a3a,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8649,8649,8558,3add,3a3b,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8650,8650,8559,3ade,3a3c,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8651,8651,8560,3adf,3a3d,49 cc 4f 54,49 cc 4f 54,"call.lis z,$544f","call.lis z,$544f","call.lis z,$0000",main.asm,
8652,8652,8561,3ae3,3a41,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8653,8653,8562,3ae4,3a42,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8654,8654,8563,3ae5,3a43,52 57,52 57,"ld.sil d,a","ld.sil d,a","ld.sil d,a",main.asm,
8655,8655,8564,3ae7,3a45,49 53,49 53,"ld.lis d,e","ld.lis d,e","ld.lis d,e",main.asm,
8656,8656,8565,3ae9,3a47,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8657,8657,8566,3aea,3a48,f1,f1,pop af,pop af,pop af,main.asm,DB	0F1H
8658,8658,8567,3aeb,3a49,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PRINT"""
8659,8659,8568,3aec,3a4a,52,52,noni.sil,noni.sil,noni.sil,main.asm,
8660,8660,8569,3aed,3a4b,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8661,8661,8570,3aef,3a4d,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8662,8662,8571,3af0,3a4e,90,90,sub b,sub b,sub b,main.asm,DB	90H
8663,8663,8572,3af1,3a4f,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PAGE """
8664,8664,8573,3af2,3a50,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8665,8665,8574,3af3,3a51,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8666,8666,8575,3af4,3a52,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8667,8667,8576,3af5,3a53,20 8f,20 8f,"jr nz,$-$6f","jr nz,$-$6f","jr nz,$-$00",main.asm,
8668,8668,8577,3af7,3a55,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PTR """
8669,8669,8578,3af8,3a56,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8670,8670,8579,3af9,3a57,52 20 af,52 20 af,"jr.sil nz,$-$4e","jr.sil nz,$-$4e","jr.sil nz,$-$00",main.asm,
8671,8671,8580,3afc,3a5a,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PI """
8672,8672,8581,3afd,3a5b,49 20 f0,49 20 f0,"jr.lis nz,$-$0d","jr.lis nz,$-$0d","jr.lis nz,$-$00",main.asm,
8673,8673,8582,3b00,3a5e,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PLOT"""
8674,8674,8583,3b01,3a5f,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8675,8675,8584,3b02,3a60,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8676,8676,8585,3b03,3a61,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8677,8677,8586,3b04,3a62,b0,b0,or b,or b,or b,main.asm,DB	0B0H
8678,8678,8587,3b05,3a63,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""POINT("""
8679,8679,8588,3b06,3a64,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8680,8680,8589,3b07,3a65,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8681,8681,8590,3b09,3a67,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8682,8682,8591,3b0a,3a68,28 f2,28 f2,"jr z,$-$0c","jr z,$-$0c","jr z,$-$00",main.asm,
8683,8683,8592,3b0c,3a6a,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PROC"""
8684,8684,8593,3b0d,3a6b,52 4f,52 4f,"ld.sil c,a","ld.sil c,a","ld.sil c,a",main.asm,
8685,8685,8594,3b0f,3a6d,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8686,8686,8595,3b10,3a6e,b1,b1,or c,or c,or c,main.asm,DB	0B1H
8687,8687,8596,3b11,3a6f,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""POS """
8688,8688,8597,3b12,3a70,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8689,8689,8598,3b13,3a71,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8690,8690,8599,3b14,3a72,20 0e,20 0e,"jr nz,$+$10","jr nz,$+$10","jr nz,$+$00",main.asm,
8691,8691,8600,3b16,3a74,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PUT""		; Token changed"
8692,8692,8601,3b17,3a75,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8693,8693,8602,3b18,3a76,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8694,8694,8603,3b19,3a77,06 51,06 51,"ld b,$51","ld b,$51","ld b,$00",main.asm,DB	06H
8695,8695,8604,3b1b,3a79,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8696,8696,8605,3b1c,3a7a,49 54,49 54,"ld.lis d,h","ld.lis d,h","ld.lis d,h",main.asm,
8697,8697,8606,3b1e,3a7c,20 f8,20 f8,"jr nz,$-$06","jr nz,$-$06","jr nz,$-$00",main.asm,
8698,8698,8607,3b20,3a7e,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""RETURN """
8699,8699,8608,3b22,3a80,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8700,8700,8609,3b23,3a81,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8701,8701,8610,3b24,3a82,52 4e,52 4e,"ld.sil c,(hl)","ld.sil c,(hl)","ld.sil c,(hl)",main.asm,
8702,8702,8611,3b26,3a84,20 f5,20 f5,"jr nz,$-$09","jr nz,$-$09","jr nz,$-$00",main.asm,
8703,8703,8612,3b28,3a86,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""REPEAT"""
8704,8704,8613,3b2a,3a88,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8705,8705,8614,3b2b,3a89,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8706,8706,8615,3b2c,3a8a,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8707,8707,8616,3b2d,3a8b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8708,8708,8617,3b2e,3a8c,f6 52,f6 52,or $52,or $52,or $00,main.asm,DB	0F6H
8709,8709,8618,3b30,3a8e,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8710,8710,8619,3b31,3a8f,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8711,8711,8620,3b32,3a90,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8712,8712,8621,3b33,3a91,52 54,52 54,"ld.sil d,h","ld.sil d,h","ld.sil d,h",main.asm,
8713,8713,8622,3b35,3a93,20 f3,20 f3,"jr nz,$-$0b","jr nz,$-$0b","jr nz,$-$00",main.asm,
8714,8714,8623,3b37,3a95,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""READ"""
8715,8715,8624,3b39,3a97,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8716,8716,8625,3b3a,3a98,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8717,8717,8626,3b3b,3a99,f4 52 45,f4 52 45,"call p,$4552","call p,$4552","call p,$0000",main.asm,DB	0F4H
8718,8718,8627,3b3e,3a9c,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8719,8719,8628,3b3f,3a9d,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",main.asm,DB	0F9H
8720,8720,8629,3b40,3a9e,52 55,52 55,"ld.sil d,l","ld.sil d,l","ld.sil d,l",main.asm,"DB	""RUN """
8721,8721,8630,3b42,3aa0,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8722,8722,8631,3b43,3aa1,20 b2,20 b2,"jr nz,$-$4c","jr nz,$-$4c","jr nz,$-$00",main.asm,
8723,8723,8632,3b45,3aa3,52 41,52 41,"ld.sil b,c","ld.sil b,c","ld.sil b,c",main.asm,"DB	""RAD"""
8724,8724,8633,3b47,3aa5,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8725,8725,8634,3b48,3aa6,f7,f7,rst $30,rst $30,rst $00,main.asm,DB	0F7H
8726,8726,8635,3b49,3aa7,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""RESTORE"""
8727,8727,8636,3b4b,3aa9,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8728,8728,8637,3b4c,3aaa,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8729,8729,8638,3b4d,3aab,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8730,8730,8639,3b4e,3aac,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,
8731,8731,8640,3b50,3aae,c2 52 49,c2 52 49,"jp nz,$4952","jp nz,$4952","jp nz,$0000",main.asm,DB	0C2H
8732,8732,8641,3b53,3ab1,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8733,8733,8642,3b54,3ab2,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8734,8734,8643,3b55,3ab3,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8735,8735,8644,3b56,3ab4,24,24,inc h,inc h,inc h,main.asm,
8736,8736,8645,3b57,3ab5,28 b3,28 b3,"jr z,$-$4b","jr z,$-$4b","jr z,$-$00",main.asm,
8737,8737,8646,3b59,3ab7,52 4e,52 4e,"ld.sil c,(hl)","ld.sil c,(hl)","ld.sil c,(hl)",main.asm,"DB	""RND """
8738,8738,8647,3b5b,3ab9,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8739,8739,8648,3b5c,3aba,20 07,20 07,"jr nz,$+$09","jr nz,$+$09","jr nz,$+$00",main.asm,
8740,8740,8649,3b5e,3abc,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""RECTANGLE""	; v5"
8741,8741,8650,3b60,3abe,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8742,8742,8651,3b61,3abf,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8743,8743,8652,3b62,3ac0,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8744,8744,8653,3b63,3ac1,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8745,8745,8654,3b64,3ac2,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8746,8746,8655,3b65,3ac3,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8747,8747,8656,3b66,3ac4,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8748,8748,8657,3b67,3ac5,88,88,"adc a,b","adc a,b","adc a,b",main.asm,DB	88H
8749,8749,8658,3b68,3ac6,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""STEP"""
8750,8750,8659,3b69,3ac7,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8751,8751,8660,3b6a,3ac8,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8752,8752,8661,3b6b,3ac9,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8753,8753,8662,3b6c,3aca,b4,b4,or h,or h,or h,main.asm,DB	0B4H
8754,8754,8663,3b6d,3acb,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SGN"""
8755,8755,8664,3b6e,3acc,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8756,8756,8665,3b6f,3acd,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8757,8757,8666,3b70,3ace,b5,b5,or l,or l,or l,main.asm,DB	0B5H
8758,8758,8667,3b71,3acf,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SIN"""
8759,8759,8668,3b72,3ad0,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8760,8760,8669,3b74,3ad2,b6,b6,or (hl),or (hl),or (hl),main.asm,DB	0B6H
8761,8761,8670,3b75,3ad3,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SQR"""
8762,8762,8671,3b76,3ad4,51,51,"ld d,c","ld d,c","ld d,c",main.asm,
8763,8763,8672,3b77,3ad5,52 89,52 89,"adc.sil a,c","adc.sil a,c","adc.sil a,c",main.asm,
8764,8764,8673,3b79,3ad7,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SPC"""
8765,8765,8674,3b7a,3ad8,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8766,8766,8675,3b7b,3ad9,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8767,8767,8676,3b7c,3ada,c3 53 54,c3 53 54,jp $5453,jp $5453,jp $0000,main.asm,DB	0C3H
8768,8768,8677,3b7f,3add,52 24,52 24,inc.sil h,inc.sil h,inc.sil h,main.asm,
8769,8769,8678,3b81,3adf,c4 53 54,c4 53 54,"call nz,$5453","call nz,$5453","call nz,$0000",main.asm,DB	0C4H
8770,8770,8679,3b84,3ae2,52,52,noni.sil,noni.sil,noni.sil,main.asm,
8771,8771,8680,3b85,3ae3,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8772,8772,8681,3b87,3ae5,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8773,8773,8682,3b88,3ae6,24,24,inc h,inc h,inc h,main.asm,
8774,8774,8683,3b89,3ae7,28 d4,28 d4,"jr z,$-$2a","jr z,$-$2a","jr z,$-$00",main.asm,
8775,8775,8684,3b8b,3ae9,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SOUND"""
8776,8776,8685,3b8c,3aea,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8777,8777,8686,3b8d,3aeb,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8778,8778,8687,3b8e,3aec,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8779,8779,8688,3b8f,3aed,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8780,8780,8689,3b90,3aee,fa 53 54,fa 53 54,"jp m,$5453","jp m,$5453","jp m,$0000",main.asm,DB	0FAH
8781,8781,8690,3b93,3af1,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8782,8782,8691,3b94,3af2,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8783,8783,8692,3b95,3af3,20 c6,20 c6,"jr nz,$-$38","jr nz,$-$38","jr nz,$-$00",main.asm,
8784,8784,8693,3b97,3af5,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SUM""		; v5"
8785,8785,8694,3b98,3af6,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8786,8786,8695,3b99,3af7,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8787,8787,8696,3b9a,3af8,08,08,"ex af,af'","ex af,af'","ex af,af'",main.asm,DB	08H
8788,8788,8697,3b9b,3af9,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SWAP""		; v5"
8789,8789,8698,3b9c,3afa,57,57,"ld d,a","ld d,a","ld d,a",main.asm,
8790,8790,8699,3b9d,3afb,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8791,8791,8700,3b9e,3afc,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8792,8792,8701,3b9f,3afd,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,DB	09H
8793,8793,8702,3ba0,3afe,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SYS""		; v5"
8794,8794,8703,3ba1,3aff,59,59,"ld e,c","ld e,c","ld e,c",main.asm,
8795,8795,8704,3ba2,3b00,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8796,8796,8705,3ba3,3b01,b7,b7,or a,or a,or a,main.asm,DB	0B7H
8797,8797,8706,3ba4,3b02,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TAN"""
8798,8798,8707,3ba5,3b03,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8799,8799,8708,3ba6,3b04,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8800,8800,8709,3ba7,3b05,8a,8a,"adc a,d","adc a,d","adc a,d",main.asm,DB	8AH
8801,8801,8710,3ba8,3b06,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TAB("""
8802,8802,8711,3ba9,3b07,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8803,8803,8712,3baa,3b08,42,42,"ld b,d","ld b,d","ld b,d",main.asm,
8804,8804,8713,3bab,3b09,28 8c,28 8c,"jr z,$-$72","jr z,$-$72","jr z,$-$00",main.asm,
8805,8805,8714,3bad,3b0b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""THEN"""
8806,8806,8715,3bae,3b0c,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8807,8807,8716,3baf,3b0d,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8808,8808,8717,3bb0,3b0e,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8809,8809,8718,3bb1,3b0f,91,91,sub c,sub c,sub c,main.asm,DB	91H
8810,8810,8719,3bb2,3b10,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TIME """
8811,8811,8720,3bb3,3b11,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",main.asm,
8812,8812,8721,3bb5,3b13,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8813,8813,8722,3bb6,3b14,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",main.asm,
8814,8814,8723,3bb8,3b16,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TINT"""
8815,8815,8724,3bb9,3b17,49 4e,49 4e,"ld.lis c,(hl)","ld.lis c,(hl)","ld.lis c,(hl)",main.asm,
8816,8816,8725,3bbb,3b19,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8817,8817,8726,3bbc,3b1a,b8,b8,cp b,cp b,cp b,main.asm,DB	0B8H
8818,8818,8727,3bbd,3b1b,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TO"""
8819,8819,8728,3bbe,3b1c,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8820,8820,8729,3bbf,3b1d,fc 54 52,fc 54 52,"call m,$5254","call m,$5254","call m,$0000",main.asm,DB	0FCH
8821,8821,8730,3bc2,3b20,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8822,8822,8731,3bc3,3b21,43,43,"ld b,e","ld b,e","ld b,e",main.asm,
8823,8823,8732,3bc4,3b22,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8824,8824,8733,3bc5,3b23,b9,b9,cp c,cp c,cp c,main.asm,DB	0B9H
8825,8825,8734,3bc6,3b24,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TRUE """
8826,8826,8735,3bc7,3b25,52 55,52 55,"ld.sil d,l","ld.sil d,l","ld.sil d,l",main.asm,
8827,8827,8736,3bc9,3b27,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8828,8828,8737,3bca,3b28,20 fd,20 fd,"jr nz,$-$01","jr nz,$-$01","jr nz,$-$00",main.asm,
8829,8829,8738,3bcc,3b2a,55,55,"ld d,l","ld d,l","ld d,l",main.asm,"DB	""UNTIL"""
8830,8830,8739,3bcd,3b2b,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8831,8831,8740,3bce,3b2c,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8832,8832,8741,3bcf,3b2d,49 4c,49 4c,"ld.lis c,h","ld.lis c,h","ld.lis c,h",main.asm,
8833,8833,8742,3bd1,3b2f,ba,ba,cp d,cp d,cp d,main.asm,DB	0BAH
8834,8834,8743,3bd2,3b30,55,55,"ld d,l","ld d,l","ld d,l",main.asm,"DB	""USR"""
8835,8835,8744,3bd3,3b31,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8836,8836,8745,3bd4,3b32,52 ef,52 ef,rst.sil $28,rst.sil $28,rst.sil $00,main.asm,
8837,8837,8746,3bd6,3b34,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"DB	""VDU"""
8838,8838,8747,3bd7,3b35,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8839,8839,8748,3bd8,3b36,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8840,8840,8749,3bd9,3b37,bb,bb,cp e,cp e,cp e,main.asm,DB	0BBH
8841,8841,8750,3bda,3b38,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"DB	""VAL"""
8842,8842,8751,3bdb,3b39,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8843,8843,8752,3bdc,3b3a,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8844,8844,8753,3bdd,3b3b,bc,bc,cp h,cp h,cp h,main.asm,DB	0BCH
8845,8845,8754,3bde,3b3c,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"DB	""VPOS """
8846,8846,8755,3bdf,3b3d,50,50,"ld d,b","ld d,b","ld d,b",main.asm,
8847,8847,8756,3be0,3b3e,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8848,8848,8757,3be1,3b3f,53,53,"ld d,e","ld d,e","ld d,e",main.asm,
8849,8849,8758,3be2,3b40,20 c7,20 c7,"jr nz,$-$37","jr nz,$-$37","jr nz,$-$00",main.asm,
8850,8850,8759,3be4,3b42,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"DB	""WHILE""		; v5"
8851,8851,8760,3be5,3b43,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8852,8852,8761,3be6,3b44,49 4c,49 4c,"ld.lis c,h","ld.lis c,h","ld.lis c,h",main.asm,
8853,8853,8762,3be8,3b46,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8854,8854,8763,3be9,3b47,c9,c9,ret,ret,ret,main.asm,DB	0C9H
8855,8855,8764,3bea,3b48,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"DB	""WHEN""		; v5"
8856,8856,8765,3beb,3b49,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8857,8857,8766,3bec,3b4a,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8858,8858,8767,3bed,3b4b,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8859,8859,8768,3bee,3b4c,0b,0b,dec bc,dec bc,dec bc,main.asm,DB	0BH
8860,8860,8769,3bef,3b4d,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"DB	""WAIT ""		; v5"
8861,8861,8770,3bf0,3b4e,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8862,8862,8771,3bf1,3b4f,49 54,49 54,"ld.lis d,h","ld.lis d,h","ld.lis d,h",main.asm,
8863,8863,8772,3bf3,3b51,20 fe,20 fe,"jr nz,$","jr nz,$","jr nz,$",main.asm,
8864,8864,8773,3bf5,3b53,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"DB	""WIDTH"""
8865,8865,8774,3bf6,3b54,49 44,49 44,"ld.lis b,h","ld.lis b,h","ld.lis b,h",main.asm,
8866,8866,8775,3bf8,3b56,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8867,8867,8776,3bf9,3b57,48,48,"ld c,b","ld c,b","ld c,b",main.asm,
8868,8868,8777,3bfa,3b58,cf,cf,rst $08,rst $08,rst $00,main.asm,DB	0CFH
8869,8869,8778,3bfb,3b59,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PTR"""
8870,8870,8779,3bfc,3b5a,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8871,8871,8780,3bfd,3b5b,52 d1,52 d1,pop.sil de,pop.sil de,pop.sil de,main.asm,
8872,8872,8781,3bff,3b5d,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""TIME"""
8873,8873,8782,3c00,3b5e,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",main.asm,
8874,8874,8783,3c02,3b60,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8875,8875,8784,3c03,3b61,d3 48,d3 48,"out ($48),a","out ($48),a","out ($00),a",main.asm,DB	0D3H
8876,8876,8785,3c05,3b63,49 4d,49 4d,"ld.lis c,l","ld.lis c,l","ld.lis c,l",main.asm,
8877,8877,8786,3c07,3b65,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8878,8878,8787,3c08,3b66,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8879,8879,8788,3c09,3b67,d2 4c 4f,d2 4c 4f,"jp nc,$4f4c","jp nc,$4f4c","jp nc,$0000",main.asm,DB	0D2H
8880,8880,8789,3c0c,3b6a,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8881,8881,8790,3c0d,3b6b,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8882,8882,8791,3c0e,3b6c,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8883,8883,8792,3c0f,3b6d,d0,d0,ret nc,ret nc,ret nc,main.asm,DB	0D0H
8884,8884,8793,3c10,3b6e,50,50,"ld d,b","ld d,b","ld d,b",main.asm,"DB	""PAGE"""
8885,8885,8794,3c11,3b6f,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8886,8886,8795,3c12,3b70,47,47,"ld b,a","ld b,a","ld b,a",main.asm,
8887,8887,8796,3c13,3b71,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8888,8888,8797,3c14,3b72,11 4d 69,11 4d 69,"ld de,$694d","ld de,$694d","ld de,$0000",main.asm,DB	11H
8889,8889,8798,3c17,3b75,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
8890,8890,8799,3c18,3b76,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
8891,8891,8800,3c19,3b77,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
8892,8892,8801,3c1a,3b78,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
8893,8893,8802,3c1b,3b79,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
8894,8894,8803,3c1c,3b7a,20 12,20 12,"jr nz,$+$14","jr nz,$+$14","jr nz,$+$00",main.asm,
8895,8895,8804,3c1e,3b7c,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""No such """
8896,8896,8805,3c1f,3b7d,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8897,8897,8806,3c20,3b7e,20 73,20 73,"jr nz,$+$75","jr nz,$+$75","jr nz,$+$00",main.asm,
8898,8898,8807,3c22,3b80,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
8899,8899,8808,3c23,3b81,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
8900,8900,8809,3c24,3b82,68,68,"ld l,b","ld l,b","ld l,b",main.asm,
8901,8901,8810,3c25,3b83,20 13,20 13,"jr nz,$+$15","jr nz,$+$15","jr nz,$+$00",main.asm,
8902,8902,8811,3c27,3b85,42,42,"ld b,d","ld b,d","ld b,d",main.asm,"DB	""Bad """
8903,8903,8812,3c28,3b86,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
8904,8904,8813,3c29,3b87,64,64,"ld h,h","ld h,h","ld h,h",main.asm,
8905,8905,8814,3c2a,3b88,20 14,20 14,"jr nz,$+$16","jr nz,$+$16","jr nz,$+$00",main.asm,
8906,8906,8815,3c2c,3b8a,20 72,20 72,"jr nz,$+$74","jr nz,$+$74","jr nz,$+$00",main.asm,"DB	"" range"""
8907,8907,8816,3c2e,3b8c,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
8908,8908,8817,3c2f,3b8d,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
8909,8909,8818,3c30,3b8e,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
8910,8910,8819,3c31,3b8f,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
8911,8911,8820,3c32,3b90,15,15,dec d,dec d,dec d,main.asm,DB	15H
8912,8912,8821,3c33,3b91,76,76,halt,halt,halt,main.asm,"DB	""variable"""
8913,8913,8822,3c34,3b92,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
8914,8914,8823,3c35,3b93,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
8915,8915,8824,3c36,3b94,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
8916,8916,8825,3c37,3b95,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
8917,8917,8826,3c38,3b96,62,62,"ld h,d","ld h,d","ld h,d",main.asm,
8918,8918,8827,3c39,3b97,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
8919,8919,8828,3c3a,3b98,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
8920,8920,8829,3c3b,3b99,16 4f,16 4f,"ld d,$4f","ld d,$4f","ld d,$00",main.asm,DB	16H
8921,8921,8830,3c3d,3b9b,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
8922,8922,8831,3c3e,3b9c,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
8923,8923,8832,3c3f,3b9d,20 6f,20 6f,"jr nz,$+$71","jr nz,$+$71","jr nz,$+$00",main.asm,
8924,8924,8833,3c41,3b9f,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",main.asm,
8925,8925,8834,3c42,3ba0,17,17,rla,rla,rla,main.asm,DB	17H
8926,8926,8835,3c43,3ba1,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""No """
8927,8927,8836,3c44,3ba2,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8928,8928,8837,3c45,3ba3,20 18,20 18,"jr nz,$+$1a","jr nz,$+$1a","jr nz,$+$00",main.asm,
8929,8929,8838,3c47,3ba5,20 73,20 73,"jr nz,$+$75","jr nz,$+$75","jr nz,$+$00",main.asm,"DB	"" space"""
8930,8930,8839,3c49,3ba7,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
8931,8931,8840,3c4a,3ba8,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
8932,8932,8841,3c4b,3ba9,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
8933,8933,8842,3c4c,3baa,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
8934,8934,8843,3c4d,3bab,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H
8935,8935,8844,3c4e,3bac,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""Not in a """
8936,8936,8845,3c4f,3bad,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8937,8937,8846,3c50,3bae,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
8938,8938,8847,3c51,3baf,20 69,20 69,"jr nz,$+$6b","jr nz,$+$6b","jr nz,$+$00",main.asm,
8939,8939,8848,3c53,3bb1,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
8940,8940,8849,3c54,3bb2,20 61,20 61,"jr nz,$+$63","jr nz,$+$63","jr nz,$+$00",main.asm,
8941,8941,8850,3c56,3bb4,20 1a,20 1a,"jr nz,$+$1c","jr nz,$+$1c","jr nz,$+$00",main.asm,
8942,8942,8851,3c58,3bb6,20 6c,20 6c,"jr nz,$+$6e","jr nz,$+$6e","jr nz,$+$00",main.asm,"DB	"" loop"""
8943,8943,8852,3c5a,3bb8,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8944,8944,8853,3c5b,3bb9,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8945,8945,8854,3c5c,3bba,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
8946,8946,8855,3c5d,3bbb,1b,1b,dec de,dec de,dec de,main.asm,DB	1BH
8947,8947,8856,3c5e,3bbc,20 6e,20 6e,"jr nz,$+$70","jr nz,$+$70","jr nz,$+$00",main.asm,"DB	"" not """
8948,8948,8857,3c60,3bbe,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
8949,8949,8858,3c61,3bbf,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
8950,8950,8859,3c62,3bc0,20 ff,20 ff,"jr nz,$+$01","jr nz,$+$01","jr nz,$+$00",main.asm,
8951,8951,8860,3c64,3bc2,ff,ff,rst $38,rst $38,rst $00,main.asm,
8952,8952,8861,3c65,3bc3,80,80,"add a,b","add a,b","add a,b",main.asm,COMNDS:         DB	80H
8953,8953,8862,3c66,3bc4,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""AUTO"""
8954,8954,8863,3c67,3bc5,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8955,8955,8864,3c68,3bc6,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8956,8956,8865,3c69,3bc7,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8957,8957,8866,3c6a,3bc8,81,81,"add a,c","add a,c","add a,c",main.asm,DB	81H
8958,8958,8867,3c6b,3bc9,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"DB	""DELETE"""
8959,8959,8868,3c6c,3bca,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8960,8960,8869,3c6d,3bcb,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8961,8961,8870,3c6e,3bcc,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8962,8962,8871,3c6f,3bcd,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8963,8963,8872,3c70,3bce,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8964,8964,8873,3c71,3bcf,82,82,"add a,d","add a,d","add a,d",main.asm,DB	82H
8965,8965,8874,3c72,3bd0,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LIST"""
8966,8966,8875,3c73,3bd1,49 53,49 53,"ld.lis d,e","ld.lis d,e","ld.lis d,e",main.asm,
8967,8967,8876,3c75,3bd3,54,54,"ld d,h","ld d,h","ld d,h",main.asm,
8968,8968,8877,3c76,3bd4,83,83,"add a,e","add a,e","add a,e",main.asm,DB	83H
8969,8969,8878,3c77,3bd5,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""LOAD"""
8970,8970,8879,3c78,3bd6,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,
8971,8971,8880,3c79,3bd7,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8972,8972,8881,3c7a,3bd8,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8973,8973,8882,3c7b,3bd9,84,84,"add a,h","add a,h","add a,h",main.asm,DB	84H
8974,8974,8883,3c7c,3bda,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""NEW """
8975,8975,8884,3c7d,3bdb,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8976,8976,8885,3c7e,3bdc,57,57,"ld d,a","ld d,a","ld d,a",main.asm,
8977,8977,8886,3c7f,3bdd,20 85,20 85,"jr nz,$-$79","jr nz,$-$79","jr nz,$-$00",main.asm,
8978,8978,8887,3c81,3bdf,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"DB	""OLD """
8979,8979,8888,3c82,3be0,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,
8980,8980,8889,3c83,3be1,44,44,"ld b,h","ld b,h","ld b,h",main.asm,
8981,8981,8890,3c84,3be2,20 86,20 86,"jr nz,$-$78","jr nz,$-$78","jr nz,$-$00",main.asm,
8982,8982,8891,3c86,3be4,52 45,52 45,"ld.sil b,l","ld.sil b,l","ld.sil b,l",main.asm,"DB	""RENUMBER"""
8983,8983,8892,3c88,3be6,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,
8984,8984,8893,3c89,3be7,55,55,"ld d,l","ld d,l","ld d,l",main.asm,
8985,8985,8894,3c8a,3be8,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,
8986,8986,8895,3c8b,3be9,42,42,"ld b,d","ld b,d","ld b,d",main.asm,
8987,8987,8896,3c8c,3bea,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8988,8988,8897,3c8d,3beb,52 87,52 87,"add.sil a,a","add.sil a,a","add.sil a,a",main.asm,
8989,8989,8898,3c8f,3bed,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""SAVE"""
8990,8990,8899,3c90,3bee,41,41,"ld b,c","ld b,c","ld b,c",main.asm,
8991,8991,8900,3c91,3bef,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,
8992,8992,8901,3c92,3bf0,45,45,"ld b,l","ld b,l","ld b,l",main.asm,
8993,8993,8902,3c93,3bf1,ff,ff,rst $38,rst $38,rst $00,main.asm,DW	-1
8994,8994,8903,3c94,3bf2,ff,ff,rst $38,rst $38,rst $00,main.asm,
8995,8995,,3c95,,67,,"ld h,a",,"ld h,a",,
8996,8996,,3c96,,3f,,ccf,,ccf,,
8997,8997,,3c97,,0a,,"ld a,(bc)",,"ld a,(bc)",,
8998,8998,,3c98,,3e 32,,"ld a,$32",,"ld a,$00",,
8999,8999,8905,3c9a,3bf4,3e 86,3e 68,"ld a,$86","ld a,$68","ld a,$00",main.asm,
9000,9000,,3c9c,,3f,,ccf,,ccf,,
9001,9001,,3c9d,,81,,"add a,c",,"add a,c",,
9002,9002,,3c9e,,3f,,ccf,,ccf,,
9003,9003,,3c9f,,94,,sub h,,sub h,,
9004,9004,,3ca0,,3f,,ccf,,ccf,,
9005,9005,,3ca1,,b7,,or a,,or a,,
9006,9006,8912,3ca2,3c00,3e ad,3e 0b,"ld a,$ad","ld a,$0b","ld a,$00",main.asm,
9007,9007,8913,3ca4,3c02,3f,3f,ccf,ccf,ccf,main.asm,
9008,9008,8914,3ca5,3c03,17,17,rla,rla,rla,main.asm,ERRWDS:         DB	17H
9009,9009,8915,3ca6,3c04,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,"DB	""room"""
9010,9010,8916,3ca7,3c05,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9011,9011,8917,3ca8,3c06,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9012,9012,8918,3ca9,3c07,6d,6d,"ld l,l","ld l,l","ld l,l",main.asm,
9013,9013,8919,3caa,3c08,00,00,nop,nop,nop,main.asm,DB	0
9014,9014,8920,3cab,3c09,16 14,16 14,"ld d,$14","ld d,$14","ld d,$00",main.asm,DB	16H
9015,9015,8921,3cad,3c0b,00,00,nop,nop,nop,main.asm,DW	0
9016,9016,8922,3cae,3c0c,00,00,nop,nop,nop,main.asm,
9017,9017,8923,3caf,3c0d,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""Multiple label"""
9018,9018,8924,3cb0,3c0e,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
9019,9019,8925,3cb1,3c0f,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9020,9020,8926,3cb2,3c10,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9021,9021,8927,3cb3,3c11,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9022,9022,8928,3cb4,3c12,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
9023,9023,8929,3cb5,3c13,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9024,9024,8930,3cb6,3c14,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9025,9025,8931,3cb7,3c15,20 6c,20 6c,"jr nz,$+$6e","jr nz,$+$6e","jr nz,$+$00",main.asm,
9026,9026,8932,3cb9,3c17,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9027,9027,8933,3cba,3c18,62,62,"ld h,d","ld h,d","ld h,d",main.asm,
9028,9028,8934,3cbb,3c19,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9029,9029,8935,3cbc,3c1a,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9030,9030,8936,3cbd,3c1b,00,00,nop,nop,nop,main.asm,DB	0
9031,9031,8937,3cbe,3c1c,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"DB	""Mistake"""
9032,9032,8938,3cbf,3c1d,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9033,9033,8939,3cc0,3c1e,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9034,9034,8940,3cc1,3c1f,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9035,9035,8941,3cc2,3c20,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9036,9036,8942,3cc3,3c21,6b,6b,"ld l,e","ld l,e","ld l,e",main.asm,
9037,9037,8943,3cc4,3c22,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9038,9038,8944,3cc5,3c23,00,00,nop,nop,nop,main.asm,DB	0
9039,9039,8945,3cc6,3c24,11 2c 00,11 2c 00,"ld de,$002c","ld de,$002c","ld de,$0000",main.asm,DB	11H
9040,9040,8946,3cc9,3c27,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"DB	""Type mismatch"""
9041,9041,8947,3cca,3c28,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9042,9042,8948,3ccb,3c29,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
9043,9043,8949,3ccc,3c2a,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9044,9044,8950,3ccd,3c2b,20 6d,20 6d,"jr nz,$+$6f","jr nz,$+$6f","jr nz,$+$00",main.asm,
9045,9045,8951,3ccf,3c2d,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9046,9046,8952,3cd0,3c2e,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9047,9047,8953,3cd1,3c2f,6d,6d,"ld l,l","ld l,l","ld l,l",main.asm,
9048,9048,8954,3cd2,3c30,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9049,9049,8955,3cd3,3c31,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9050,9050,8956,3cd4,3c32,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9051,9051,8957,3cd5,3c33,68,68,"ld l,b","ld l,b","ld l,b",main.asm,
9052,9052,8958,3cd6,3c34,00,00,nop,nop,nop,main.asm,DB	0
9053,9053,8959,3cd7,3c35,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H
9054,9054,8960,3cd8,3c36,a4,a4,and h,and h,and h,main.asm,DB	TFN
9055,9055,8961,3cd9,3c37,00,00,nop,nop,nop,main.asm,DW	0
9056,9056,8962,3cda,3c38,00,00,nop,nop,nop,main.asm,
9057,9057,8963,3cdb,3c39,11 22 00,11 22 00,"ld de,$0022","ld de,$0022","ld de,$0000",main.asm,DB	11H
9058,9058,8964,3cde,3c3c,13,13,inc de,inc de,inc de,main.asm,DB	13H
9059,9059,8965,3cdf,3c3d,de 00,de 00,"sbc a,$00","sbc a,$00","sbc a,$00",main.asm,DB	TDIM
9060,9060,8966,3ce1,3c3f,de 18,de 18,"sbc a,$18","sbc a,$18","sbc a,$00",main.asm,DB	TDIM
9061,9061,8967,3ce3,3c41,00,00,nop,nop,nop,main.asm,DB	0
9062,9062,8968,3ce4,3c42,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H
9063,9063,8969,3ce5,3c43,a4,a4,and h,and h,and h,main.asm,DB	TFN
9064,9064,8970,3ce6,3c44,20 6f,20 6f,"jr nz,$+$71","jr nz,$+$71","jr nz,$+$00",main.asm,"DB	"" or """
9065,9065,8971,3ce8,3c46,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9066,9066,8972,3ce9,3c47,20 f2,20 f2,"jr nz,$-$0c","jr nz,$-$0c","jr nz,$-$00",main.asm,
9067,9067,8973,3ceb,3c49,00,00,nop,nop,nop,main.asm,DB	0
9068,9068,8974,3cec,3c4a,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H
9069,9069,8975,3ced,3c4b,f2 00 13,f2 00 13,"jp p,$1300","jp p,$1300","jp p,$0000",main.asm,DB	TPROC
9070,9070,8976,3cf0,3c4e,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,"DB	""use of array"""
9071,9071,8977,3cf1,3c4f,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9072,9072,8978,3cf2,3c50,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9073,9073,8979,3cf3,3c51,20 6f,20 6f,"jr nz,$+$71","jr nz,$+$71","jr nz,$+$00",main.asm,
9074,9074,8980,3cf5,3c53,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",main.asm,
9075,9075,8981,3cf6,3c54,20 61,20 61,"jr nz,$+$63","jr nz,$+$63","jr nz,$+$00",main.asm,
9076,9076,8982,3cf8,3c56,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9077,9077,8983,3cf9,3c57,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9078,9078,8984,3cfa,3c58,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9079,9079,8985,3cfb,3c59,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9080,9080,8986,3cfc,3c5a,00,00,nop,nop,nop,main.asm,DB	0
9081,9081,8987,3cfd,3c5b,13,13,inc de,inc de,inc de,main.asm,DB	13H
9082,9082,8988,3cfe,3c5c,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,"DB	""subscript"""
9083,9083,8989,3cff,3c5d,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
9084,9084,8990,3d00,3c5e,62,62,"ld h,d","ld h,d","ld h,d",main.asm,
9085,9085,8991,3d01,3c5f,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9086,9086,8992,3d02,3c60,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9087,9087,8993,3d03,3c61,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9088,9088,8994,3d04,3c62,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9089,9089,8995,3d05,3c63,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
9090,9090,8996,3d06,3c64,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9091,9091,8997,3d07,3c65,00,00,nop,nop,nop,main.asm,DB	0
9092,9092,8998,3d08,3c66,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""Syntax error"""
9093,9093,8999,3d09,3c67,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9094,9094,9000,3d0a,3c68,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9095,9095,9001,3d0b,3c69,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9096,9096,9002,3d0c,3c6a,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9097,9097,9003,3d0d,3c6b,78,78,"ld a,b","ld a,b","ld a,b",main.asm,
9098,9098,9004,3d0e,3c6c,20 65,20 65,"jr nz,$+$67","jr nz,$+$67","jr nz,$+$00",main.asm,
9099,9099,9005,3d10,3c6e,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9100,9100,9006,3d11,3c6f,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9101,9101,9007,3d12,3c70,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9102,9102,9008,3d13,3c71,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9103,9103,9009,3d14,3c72,00,00,nop,nop,nop,main.asm,DB	0
9104,9104,9010,3d15,3c73,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""Escape"""
9105,9105,9011,3d16,3c74,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9106,9106,9012,3d17,3c75,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9107,9107,9013,3d18,3c76,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9108,9108,9014,3d19,3c77,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
9109,9109,9015,3d1a,3c78,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9110,9110,9016,3d1b,3c79,00,00,nop,nop,nop,main.asm,DB	0
9111,9111,9017,3d1c,3c7a,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"DB	""Division by zero"""
9112,9112,9018,3d1d,3c7b,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9113,9113,9019,3d1e,3c7c,76,76,halt,halt,halt,main.asm,
9114,9114,9020,3d1f,3c7d,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9115,9115,9021,3d20,3c7e,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9116,9116,9022,3d21,3c7f,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9117,9117,9023,3d22,3c80,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9118,9118,9024,3d23,3c81,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9119,9119,9025,3d24,3c82,20 62,20 62,"jr nz,$+$64","jr nz,$+$64","jr nz,$+$00",main.asm,
9120,9120,9026,3d26,3c84,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9121,9121,9027,3d27,3c85,20 7a,20 7a,"jr nz,$+$7c","jr nz,$+$7c","jr nz,$+$00",main.asm,
9122,9122,9028,3d29,3c87,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9123,9123,9029,3d2a,3c88,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9124,9124,9030,3d2b,3c89,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9125,9125,9031,3d2c,3c8a,00,00,nop,nop,nop,main.asm,DB	0
9126,9126,9032,3d2d,3c8b,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""String too long"""
9127,9127,9033,3d2e,3c8c,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9128,9128,9034,3d2f,3c8d,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9129,9129,9035,3d30,3c8e,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9130,9130,9036,3d31,3c8f,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9131,9131,9037,3d32,3c90,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9132,9132,9038,3d33,3c91,20 74,20 74,"jr nz,$+$76","jr nz,$+$76","jr nz,$+$00",main.asm,
9133,9133,9039,3d35,3c93,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9134,9134,9040,3d36,3c94,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9135,9135,9041,3d37,3c95,20 6c,20 6c,"jr nz,$+$6e","jr nz,$+$6e","jr nz,$+$00",main.asm,
9136,9136,9042,3d39,3c97,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9137,9137,9043,3d3a,3c98,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9138,9138,9044,3d3b,3c99,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9139,9139,9045,3d3c,3c9a,00,00,nop,nop,nop,main.asm,DB	0
9140,9140,9046,3d3d,3c9b,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"DB	""Number too big"""
9141,9141,9047,3d3e,3c9c,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
9142,9142,9048,3d3f,3c9d,6d,6d,"ld l,l","ld l,l","ld l,l",main.asm,
9143,9143,9049,3d40,3c9e,62,62,"ld h,d","ld h,d","ld h,d",main.asm,
9144,9144,9050,3d41,3c9f,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9145,9145,9051,3d42,3ca0,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9146,9146,9052,3d43,3ca1,20 74,20 74,"jr nz,$+$76","jr nz,$+$76","jr nz,$+$00",main.asm,
9147,9147,9053,3d45,3ca3,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9148,9148,9054,3d46,3ca4,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9149,9149,9055,3d47,3ca5,20 62,20 62,"jr nz,$+$64","jr nz,$+$64","jr nz,$+$00",main.asm,
9150,9150,9056,3d49,3ca7,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9151,9151,9057,3d4a,3ca8,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9152,9152,9058,3d4b,3ca9,00,00,nop,nop,nop,main.asm,DB	0
9153,9153,9059,3d4c,3caa,2d,2d,dec l,dec l,dec l,main.asm,"DB	""-ve root"""
9154,9154,9060,3d4d,3cab,76,76,halt,halt,halt,main.asm,
9155,9155,9061,3d4e,3cac,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9156,9156,9062,3d4f,3cad,20 72,20 72,"jr nz,$+$74","jr nz,$+$74","jr nz,$+$00",main.asm,
9157,9157,9063,3d51,3caf,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9158,9158,9064,3d52,3cb0,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9159,9159,9065,3d53,3cb1,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9160,9160,9066,3d54,3cb2,00,00,nop,nop,nop,main.asm,DB	0
9161,9161,9067,3d55,3cb3,4c,4c,"ld c,h","ld c,h","ld c,h",main.asm,"DB	""Log"""
9162,9162,9068,3d56,3cb4,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9163,9163,9069,3d57,3cb5,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9164,9164,9070,3d58,3cb6,14,14,inc d,inc d,inc d,main.asm,DB	14H
9165,9165,9071,3d59,3cb7,00,00,nop,nop,nop,main.asm,DB	0
9166,9166,9072,3d5a,3cb8,41,41,"ld b,c","ld b,c","ld b,c",main.asm,"DB	""Accuracy lost"""
9167,9167,9073,3d5b,3cb9,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9168,9168,9074,3d5c,3cba,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9169,9169,9075,3d5d,3cbb,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
9170,9170,9076,3d5e,3cbc,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9171,9171,9077,3d5f,3cbd,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9172,9172,9078,3d60,3cbe,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9173,9173,9079,3d61,3cbf,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9174,9174,9080,3d62,3cc0,20 6c,20 6c,"jr nz,$+$6e","jr nz,$+$6e","jr nz,$+$00",main.asm,
9175,9175,9081,3d64,3cc2,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9176,9176,9082,3d65,3cc3,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9177,9177,9083,3d66,3cc4,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9178,9178,9084,3d67,3cc5,00,00,nop,nop,nop,main.asm,DB	0
9179,9179,9085,3d68,3cc6,45,45,"ld b,l","ld b,l","ld b,l",main.asm,"DB	""Exponent"""
9180,9180,9086,3d69,3cc7,78,78,"ld a,b","ld a,b","ld a,b",main.asm,
9181,9181,9087,3d6a,3cc8,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,
9182,9182,9088,3d6b,3cc9,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9183,9183,9089,3d6c,3cca,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9184,9184,9090,3d6d,3ccb,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9185,9185,9091,3d6e,3ccc,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9186,9186,9092,3d6f,3ccd,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9187,9187,9093,3d70,3cce,14,14,inc d,inc d,inc d,main.asm,DB	14H
9188,9188,9094,3d71,3ccf,00,00,nop,nop,nop,main.asm,DW	0
9189,9189,9095,3d72,3cd0,00,00,nop,nop,nop,main.asm,
9190,9190,9096,3d73,3cd1,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,DB	12H
9191,9191,9097,3d74,3cd2,15,15,dec d,dec d,dec d,main.asm,DB	15H
9192,9192,9098,3d75,3cd3,00,00,nop,nop,nop,main.asm,DB	0
9193,9193,9099,3d76,3cd4,11 29 00,11 29 00,"ld de,$0029","ld de,$0029","ld de,$0000",main.asm,DB	11H
9194,9194,9100,3d79,3cd7,13,13,inc de,inc de,inc de,main.asm,DB	13H
9195,9195,9101,3d7a,3cd8,68,68,"ld l,b","ld l,b","ld l,b",main.asm,"DB	""hex or binary"""
9196,9196,9102,3d7b,3cd9,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9197,9197,9103,3d7c,3cda,78,78,"ld a,b","ld a,b","ld a,b",main.asm,
9198,9198,9104,3d7d,3cdb,20 6f,20 6f,"jr nz,$+$71","jr nz,$+$71","jr nz,$+$00",main.asm,
9199,9199,9105,3d7f,3cdd,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9200,9200,9106,3d80,3cde,20 62,20 62,"jr nz,$+$64","jr nz,$+$64","jr nz,$+$00",main.asm,
9201,9201,9107,3d82,3ce0,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9202,9202,9108,3d83,3ce1,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9203,9203,9109,3d84,3ce2,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9204,9204,9110,3d85,3ce3,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9205,9205,9111,3d86,3ce4,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9206,9206,9112,3d87,3ce5,00,00,nop,nop,nop,main.asm,DB	0
9207,9207,9113,3d88,3ce6,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,DB	12H
9208,9208,9114,3d89,3ce7,a4,a4,and h,and h,and h,main.asm,DB	TFN
9209,9209,9115,3d8a,3ce8,2f,2f,cpl,cpl,cpl,main.asm,DB	'/'
9210,9210,9116,3d8b,3ce9,f2 00 13,f2 00 13,"jp p,$1300","jp p,$1300","jp p,$0000",main.asm,DB	TPROC
9211,9211,9117,3d8e,3cec,63,63,"ld h,e","ld h,e","ld h,e",main.asm,"DB	""call"""
9212,9212,9118,3d8f,3ced,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9213,9213,9119,3d90,3cee,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9214,9214,9120,3d91,3cef,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9215,9215,9121,3d92,3cf0,00,00,nop,nop,nop,main.asm,DB	0
9216,9216,9122,3d93,3cf1,13,13,inc de,inc de,inc de,main.asm,DB	13H
9217,9217,9123,3d94,3cf2,61,61,"ld h,c","ld h,c","ld h,c",main.asm,"DB	""arguments"""
9218,9218,9124,3d95,3cf3,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9219,9219,9125,3d96,3cf4,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9220,9220,9126,3d97,3cf5,75,75,"ld (hl),l","ld (hl),l","ld (hl),l",main.asm,
9221,9221,9127,3d98,3cf6,6d,6d,"ld l,l","ld l,l","ld l,l",main.asm,
9222,9222,9128,3d99,3cf7,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9223,9223,9129,3d9a,3cf8,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9224,9224,9130,3d9b,3cf9,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9225,9225,9131,3d9c,3cfa,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9226,9226,9132,3d9d,3cfb,00,00,nop,nop,nop,main.asm,DB	0
9227,9227,9133,3d9e,3cfc,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H
9228,9228,9134,3d9f,3cfd,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,DB	TFOR
9229,9229,9135,3da0,3cfe,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",main.asm,DB	1AH
9230,9230,9136,3da1,3cff,00,00,nop,nop,nop,main.asm,DB	0
9231,9231,9137,3da2,3d00,43,43,"ld b,e","ld b,e","ld b,e",main.asm,"DB	""Can't match """
9232,9232,9138,3da3,3d01,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9233,9233,9139,3da4,3d02,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9234,9234,9140,3da5,3d03,27,27,daa,daa,daa,main.asm,
9235,9235,9141,3da6,3d04,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9236,9236,9142,3da7,3d05,20 6d,20 6d,"jr nz,$+$6f","jr nz,$+$6f","jr nz,$+$00",main.asm,
9237,9237,9143,3da9,3d07,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9238,9238,9144,3daa,3d08,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9239,9239,9145,3dab,3d09,63,63,"ld h,e","ld h,e","ld h,e",main.asm,
9240,9240,9146,3dac,3d0a,68,68,"ld l,b","ld l,b","ld l,b",main.asm,
9241,9241,9147,3dad,3d0b,20 e3,20 e3,"jr nz,$-$1b","jr nz,$-$1b","jr nz,$-$00",main.asm,
9242,9242,9148,3daf,3d0d,00,00,nop,nop,nop,main.asm,DB	0
9243,9243,9149,3db0,3d0e,13,13,inc de,inc de,inc de,main.asm,DB	13H
9244,9244,9150,3db1,3d0f,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,DB	TFOR
9245,9245,9151,3db2,3d10,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",main.asm,DB	' '
9246,9246,9152,3db4,3d12,00,00,nop,nop,nop,main.asm,DW	0
9247,9247,9153,3db5,3d13,00,00,nop,nop,nop,main.asm,
9248,9248,9154,3db6,3d14,11 b8 00,11 b8 00,"ld de,$00b8","ld de,$00b8","ld de,$0000",main.asm,DB	11H
9249,9249,9155,3db9,3d17,00,00,nop,nop,nop,main.asm,
9250,9250,9156,3dba,3d18,17,17,rla,rla,rla,main.asm,DB	17H
9251,9251,9157,3dbb,3d19,e4 00 ee,e4 00 ee,"call po,$ee00","call po,$ee00","call po,$0000",main.asm,DB	TGOSUB
9252,9252,9158,3dbe,3d1c,20 73,20 73,"jr nz,$+$75","jr nz,$+$75","jr nz,$+$00",main.asm,"DB	"" syntax"""
9253,9253,9159,3dc0,3d1e,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
9254,9254,9160,3dc1,3d1f,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9255,9255,9161,3dc2,3d20,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9256,9256,9162,3dc3,3d21,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9257,9257,9163,3dc4,3d22,78,78,"ld a,b","ld a,b","ld a,b",main.asm,
9258,9258,9164,3dc5,3d23,00,00,nop,nop,nop,main.asm,DB	0
9259,9259,9165,3dc6,3d24,ee 14,ee 14,xor $14,xor $14,xor $00,main.asm,DB	TON
9260,9260,9166,3dc8,3d26,00,00,nop,nop,nop,main.asm,DB	0
9261,9261,9167,3dc9,3d27,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,DB	12H
9262,9262,9168,3dca,3d28,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,"DB	""line"""
9263,9263,9169,3dcb,3d29,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9264,9264,9170,3dcc,3d2a,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9265,9265,9171,3dcd,3d2b,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9266,9266,9172,3dce,3d2c,00,00,nop,nop,nop,main.asm,DB	0
9267,9267,9173,3dcf,3d2d,16 20,16 20,"ld d,$20","ld d,$20","ld d,$00",main.asm,DB	16H
9268,9268,9174,3dd1,3d2f,dc 00 19,dc 00 19,"call c,$1900","call c,$1900","call c,$0000",main.asm,DB	TDATA
9269,9269,9175,3dd4,3d32,f5,f5,push af,push af,push af,main.asm,DB	TREPEAT
9270,9270,9176,3dd5,3d33,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",main.asm,DB	1AH
9271,9271,9177,3dd6,3d34,00,00,nop,nop,nop,main.asm,DB	0
9272,9272,9178,3dd7,3d35,13,13,inc de,inc de,inc de,main.asm,DB	13H
9273,9273,9179,3dd8,3d36,10 00,10 00,djnz $+$02,djnz $+$02,djnz $+$00,main.asm,DB	TEXIT
9274,9274,9180,3dda,3d38,11 23 00,11 23 00,"ld de,$0023","ld de,$0023","ld de,$0000",main.asm,DB	11H
9275,9275,9181,3ddd,3d3b,19,19,"add hl,de","add hl,de","add hl,de",main.asm,DB	19H		;46 Not in a WHILE loop
9276,9276,9182,3dde,3d3c,c7,c7,rst $00,rst $00,rst $00,main.asm,DB	TWHILE
9277,9277,9183,3ddf,3d3d,1a,1a,"ld a,(de)","ld a,(de)","ld a,(de)",main.asm,DB	1AH
9278,9278,9184,3de0,3d3e,00,00,nop,nop,nop,main.asm,DB	0
9279,9279,9185,3de1,3d3f,11 cb 00,11 cb 00,"ld de,$00cb","ld de,$00cb","ld de,$0000",main.asm,DB	11H		;47 Missing ENDCASE
9280,9280,9186,3de4,3d42,ca 1b 6c,ca 1b 6c,"jp z,$6c1b","jp z,$6c1b","jp z,$0000",main.asm,DB	TOF		;48 OF not last
9281,9281,9187,3de7,3d45,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9282,9282,9188,3de8,3d46,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,
9283,9283,9189,3de9,3d47,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9284,9284,9190,3dea,3d48,00,00,nop,nop,nop,main.asm,DB	0
9285,9285,9191,3deb,3d49,11 cd 00,11 cd 00,"ld de,$00cd","ld de,$00cd","ld de,$0000",main.asm,DB	11H		;49 Missing ENDIF
9286,9286,9192,3dee,3d4c,00,00,nop,nop,nop,main.asm,DW	0
9287,9287,9193,3def,3d4d,00,00,nop,nop,nop,main.asm,
9288,9288,9194,3df0,3d4e,00,00,nop,nop,nop,main.asm,DB	0
9289,9289,9195,3df1,3d4f,ee 20,ee 20,xor $20,xor $20,xor $00,main.asm,DB	TON		;53 ON ERROR not LOCAL
9290,9290,9196,3df3,3d51,85,85,"add a,l","add a,l","add a,l",main.asm,DB	TERROR
9291,9291,9197,3df4,3d52,1b,1b,dec de,dec de,dec de,main.asm,DB	1BH
9292,9292,9198,3df5,3d53,ea 00 dc,ea 00 dc,"jp pe,$dc00","jp pe,$dc00","jp pe,$0000",main.asm,DB	TLOCAL
9293,9293,9199,3df8,3d56,1b,1b,dec de,dec de,dec de,main.asm,DB	1BH
9294,9294,9200,3df9,3d57,ea 00 e3,ea 00 e3,"jp pe,$e300","jp pe,$e300","jp pe,$0000",main.asm,DB	TLOCAL
9295,9295,9201,3dfc,3d5a,f5,f5,push af,push af,push af,main.asm,DB	TREPEAT
9296,9296,9202,3dfd,3d5b,c7,c7,rst $00,rst $00,rst $00,main.asm,DB	TWHILE
9297,9297,9203,3dfe,3d5c,c8,c8,ret z,ret z,ret z,main.asm,DB	TCASE
9298,9298,9204,3dff,3d5d,8b,8b,"adc a,e","adc a,e","adc a,e",main.asm,DB	TELSE
9299,9299,9205,3e00,3d5e,c9,c9,ret,ret,ret,main.asm,DB	TWHEN
9300,9300,9206,3e01,3d5f,cc ed fd,cc ed fd,"call z,$fded","call z,$fded","call z,$0000",main.asm,DB	TOTHERWISE
9301,9301,9207,3e04,3d62,ce cb,ce cb,"adc a,$cb","adc a,$cb","adc a,$00",main.asm,DB	TENDWHILE
9302,9302,9208,3e06,3d64,cd 8b c9,cd 8b c9,call $c98b,call $c98b,call $0000,main.asm,DB	TENDIF
9303,9303,9209,3e09,3d67,cc cd 5b,cc cd b9,"call z,$5bcd","call z,$b9cd","call z,$0000",main.asm,DB	TOTHERWISE
9304,9304,,3e0c,,44,,"ld b,h",,"ld b,h",,
9305,9305,9211,3e0d,3d6b,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"DELET1:         LD	A,(HL)"
9306,9306,9212,3e0e,3d6c,b7,b7,or a,or a,or a,main.asm,OR	A
9307,9307,9213,3e0f,3d6d,28 79,28 79,"jr z,$+$7b","jr z,$+$7b","jr z,$+$00",main.asm,"JR	Z,WARMNC"
9308,9308,9214,3e11,3d6f,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9309,9309,9215,3e12,3d70,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)"
9310,9310,9216,3e13,3d71,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9311,9311,9217,3e14,3d72,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
9312,9312,9218,3e15,3d73,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9313,9313,9219,3e16,3d74,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9314,9314,9220,3e17,3d75,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9315,9315,9221,3e18,3d76,37,37,scf,scf,scf,main.asm,SCF
9316,9316,9222,3e19,3d77,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",main.asm,"SBC	HL,BC"
9317,9317,9223,3e1b,3d79,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9318,9318,9224,3e1c,3d7a,30 6c,30 6c,"jr nc,$+$6e","jr nc,$+$6e","jr nc,$+$00",main.asm,"JR	NC,WARMNC"
9319,9319,9225,3e1e,3d7c,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9320,9320,9226,3e1f,3d7d,cd 6d 40,cd cb 3f,call $406d,call $3fcb,call $0000,main.asm,CALL	DEL
9321,9321,9227,3e22,3d80,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9322,9322,9228,3e23,3d81,18 e8,18 e8,jr $-$16,jr $-$16,jr $-$00,main.asm,JR	DELET1
9323,9323,9229,3e25,3d83,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,"LISTO:          INC	IY		;SKIP ""O"""
9324,9324,9230,3e27,3d85,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,main.asm,CALL	EXPRI
9325,9325,9231,3e2a,3d88,d9,d9,exx,exx,exx,main.asm,EXX
9326,9326,9232,3e2b,3d89,7d,7d,"ld a,l","ld a,l","ld a,l",main.asm,"LD	A,L"
9327,9327,9233,3e2c,3d8a,32 fe 55,32 fe 54,"ld ($55fe),a","ld ($54fe),a","ld ($0000),a",main.asm,"LD	(LISTON),A"
9328,9328,9234,3e2f,3d8d,c3 34 38,c3 92 37,jp $3834,jp $3792,jp $0000,main.asm,JP	CLOOP
9329,9329,9235,3e32,3d90,fe 4f,fe 4f,cp $4f,cp $4f,cp $00,main.asm,LIST:           CP	'O'
9330,9330,9236,3e34,3d92,28 ef,28 ef,"jr z,$-$0f","jr z,$-$0f","jr z,$-$00",main.asm,"JR	Z,LISTO"
9331,9331,9237,3e36,3d94,0e 01,0e 01,"ld c,$01","ld c,$01","ld c,$00",main.asm,"LD	C,1"
9332,9332,9238,3e38,3d96,11 00 54,11 00 53,"ld de,$5400","ld de,$5300","ld de,$0000",main.asm,"LD	DE,BUFFER"
9333,9333,9239,3e3b,3d99,cd 9c 44,cd fa 43,call $449c,call $43fa,call $0000,main.asm,CALL	LEXAN2
9334,9334,9240,3e3e,3d9c,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LD	(DE),A"
9335,9335,9241,3e3f,3d9d,fd 21 00 54,fd 21 00 53,"ld iy,$5400","ld iy,$5300","ld iy,$0000",main.asm,"LD	IY,BUFFER"
9336,9336,9242,3e43,3da1,cd 5b 44,cd b9 43,call $445b,call $43b9,call $0000,main.asm,CALL	DLPAIR
9337,9337,9243,3e46,3da4,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,CALL	NXT
9338,9338,9244,3e49,3da7,fe e7,fe e7,cp $e7,cp $e7,cp $00,main.asm,CP	TIF		;IF CLAUSE ?
9339,9339,9245,3e4b,3da9,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",main.asm,"LD	A,0		;INIT IF-CLAUSE LENGTH"
9340,9340,9246,3e4d,3dab,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",main.asm,"JR	NZ,LISTB"
9341,9341,9247,3e4f,3dad,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY		;SKIP IF
9342,9342,9248,3e51,3daf,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,CALL	NXT		;SKIP SPACES (IF ANY)
9343,9343,9249,3e54,3db2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9344,9344,9250,3e55,3db3,fd e5,fd e5,push iy,push iy,push iy,main.asm,PUSH	IY
9345,9345,9251,3e57,3db5,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL		;HL ADDRESSES IF CLAUSE
9346,9346,9252,3e58,3db6,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"LD	A,CR"
9347,9347,9253,3e5a,3db8,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9348,9348,9254,3e5b,3db9,01 00 01,01 00 01,"ld bc,$0100","ld bc,$0100","ld bc,$0000",main.asm,"LD	BC,256"
9349,9349,9255,3e5e,3dbc,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR			;LOCATE CR
9350,9350,9256,3e60,3dbe,79,79,"ld a,c","ld a,c","ld a,c",main.asm,"LD	A,C"
9351,9351,9257,3e61,3dbf,2f,2f,cpl,cpl,cpl,main.asm,CPL			;A = SUBSTRING LENGTH
9352,9352,9258,3e62,3dc0,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9353,9353,9259,3e63,3dc1,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9354,9354,9260,3e64,3dc2,5f,5f,"ld e,a","ld e,a","ld e,a",main.asm,"LISTB:          LD	E,A		;IF-CLAUSE LENGTH"
9355,9355,9261,3e65,3dc3,78,78,"ld a,b","ld a,b","ld a,b",main.asm,"LD	A,B"
9356,9356,9262,3e66,3dc4,b1,b1,or c,or c,or c,main.asm,OR	C
9357,9357,9263,3e67,3dc5,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",main.asm,"JR	NZ,LISTA"
9358,9358,9264,3e69,3dc7,0b,0b,dec bc,dec bc,dec bc,main.asm,DEC	BC
9359,9359,9265,3e6a,3dc8,d9,d9,exx,exx,exx,main.asm,LISTA:          EXX
9360,9360,9266,3e6b,3dc9,dd 21 fe 55,dd 21 fe 54,"ld ix,$55fe","ld ix,$54fe","ld ix,$0000",main.asm,"LD	IX,LISTON"
9361,9361,9267,3e6f,3dcd,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",main.asm,"LD	E,0		;INDENTATION COUNT"
9362,9362,9268,3e71,3dcf,d9,d9,exx,exx,exx,main.asm,EXX
9363,9363,9269,3e72,3dd0,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",main.asm,"LD	A,20"
9364,9364,9270,3e74,3dd2,c5,c5,push bc,push bc,push bc,main.asm,LISTC:          PUSH	BC		;SAVE HIGH LINE NUMBER
9365,9365,9271,3e75,3dd3,d5,d5,push de,push de,push de,main.asm,PUSH	DE		;SAVE IF-CLAUSE LENGTH
9366,9366,9272,3e76,3dd4,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL		;SAVE PROGRAM POINTER
9367,9367,9273,3e77,3dd5,08,08,"ex af,af'","ex af,af'","ex af,af'",main.asm,"EX	AF,AF'"
9368,9368,9274,3e78,3dd6,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9369,9369,9275,3e79,3dd7,b7,b7,or a,or a,or a,main.asm,OR	A
9370,9370,9276,3e7a,3dd8,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",main.asm,"JR	Z,WARMNC"
9371,9371,9277,3e7c,3dda,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LD	A,E		;A = IF-CLAUSE LENGTH"
9372,9372,9278,3e7d,3ddb,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9373,9373,9279,3e7e,3ddc,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)"
9374,9374,9280,3e7f,3ddd,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9375,9375,9281,3e80,3dde,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)		;DE = LINE NUMBER"
9376,9376,9282,3e81,3ddf,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9377,9377,9283,3e82,3de0,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9378,9378,9284,3e83,3de1,d5,d5,push de,push de,push de,main.asm,PUSH	DE		;SAVE LINE NUMBER
9379,9379,9285,3e84,3de2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9380,9380,9286,3e85,3de3,37,37,scf,scf,scf,main.asm,SCF
9381,9381,9287,3e86,3de4,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",main.asm,"SBC	HL,BC"
9382,9382,9288,3e88,3de6,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9383,9383,9289,3e89,3de7,d1,d1,pop de,pop de,pop de,main.asm,POP	DE		;RESTORE LINE NUMBER
9384,9384,9290,3e8a,3de8,d2 33 38,d2 91 37,"jp nc,$3833","jp nc,$3791","jp nc,$0000",main.asm,"WARMNC:         JP	NC,WARM"
9385,9385,9291,3e8d,3deb,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"LD	C,(HL)		;C = LINE LENGTH + 4"
9386,9386,9292,3e8e,3dec,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A		;B = IF-CLAUSE LENGTH"
9387,9387,9293,3e8f,3ded,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9388,9388,9294,3e90,3dee,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9389,9389,9295,3e91,3def,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL		;HL ADDRESSES LINE TEXT
9390,9390,9296,3e92,3df0,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9391,9391,9297,3e93,3df1,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9392,9392,9298,3e94,3df2,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9393,9393,9299,3e95,3df3,0d,0d,dec c,dec c,dec c,main.asm,DEC	C		;C = LINE LENGTH
9394,9394,9300,3e96,3df4,d5,d5,push de,push de,push de,main.asm,PUSH	DE		;SAVE LINE NUMBER
9395,9395,9301,3e97,3df5,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL		;SAVE LINE ADDRESS
9396,9396,9302,3e98,3df6,af,af,xor a,xor a,xor a,main.asm,XOR	A		;A <- 0
9397,9397,9303,3e99,3df7,b8,b8,cp b,cp b,cp b,main.asm,CP	B		;WAS THERE AN IF-CLAUSE
9398,9398,9304,3e9a,3df8,fd e5,fd e5,push iy,push iy,push iy,main.asm,PUSH	IY
9399,9399,9305,3e9c,3dfa,d1,d1,pop de,pop de,pop de,main.asm,POP	DE		;DE ADDRESSES IF-CLAUSE
9400,9400,9306,3e9d,3dfb,c4 76 1e,c4 d4 1d,"call nz,$1e76","call nz,$1dd4","call nz,$0000",main.asm,"CALL	NZ,SEARCH	;SEARCH FOR IF CLAUSE"
9401,9401,9307,3ea0,3dfe,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL		;RESTORE LINE ADDRESS
9402,9402,9308,3ea1,3dff,d1,d1,pop de,pop de,pop de,main.asm,POP	DE		;RESTORE LINE NUMBER
9403,9403,9309,3ea2,3e00,fd e5,fd e5,push iy,push iy,push iy,main.asm,PUSH	IY
9404,9404,9310,3ea4,3e02,cc e1 40,cc 3f 40,"call z,$40e1","call z,$403f","call z,$0000",main.asm,"CALL	Z,LISTIT	;LIST IF MATCH"
9405,9405,9311,3ea7,3e05,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,POP	IY
9406,9406,9312,3ea9,3e07,08,08,"ex af,af'","ex af,af'","ex af,af'",main.asm,"EX	AF,AF'"
9407,9407,9313,3eaa,3e08,3d,3d,dec a,dec a,dec a,main.asm,DEC	A
9408,9408,9314,3eab,3e09,cd 38 06,cd 18 06,call $0638,call $0618,call $0000,main.asm,CALL	LTRAP
9409,9409,9315,3eae,3e0c,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL		;RESTORE POINTER
9410,9410,9316,3eaf,3e0d,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)"
9411,9411,9317,3eb0,3e0e,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",main.asm,"LD	D,0"
9412,9412,9318,3eb2,3e10,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE		;ADDRESS NEXT LINE"
9413,9413,9319,3eb3,3e11,d1,d1,pop de,pop de,pop de,main.asm,POP	DE		;RESTORE IF-CLAUSE LEN
9414,9414,9320,3eb4,3e12,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC		;RESTORE HI LINE NUMBER
9415,9415,9321,3eb5,3e13,18 bd,18 bd,jr $-$41,jr $-$41,jr $-$00,main.asm,JR	LISTC
9416,9416,9322,3eb7,3e15,cd c7 40,cd 25 40,call $40c7,call $4025,call $0000,main.asm,RENUM:          CALL	CLEAR		;USES DYNAMIC AREA
9417,9417,9323,3eba,3e18,cd 38 44,cd 96 43,call $4438,call $4396,call $0000,main.asm,"CALL	PAIR		;LOAD HL,BC"
9418,9418,9324,3ebd,3e1b,d9,d9,exx,exx,exx,main.asm,EXX
9419,9419,9325,3ebe,3e1c,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"LD	HL,(PAGE_)"
9420,9420,9326,3ec1,3e1f,ed 5b de 55,ed 5b de 54,"ld de,($55de)","ld de,($54de)","ld de,($0000)",main.asm,"LD	DE,(LOMEM)"
9421,9421,9327,3ec5,3e23,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"RENUM1:         LD	A,(HL)		;BUILD TABLE"
9422,9422,9328,3ec6,3e24,b7,b7,or a,or a,or a,main.asm,OR	A
9423,9423,9329,3ec7,3e25,28 28,28 28,"jr z,$+$2a","jr z,$+$2a","jr z,$+$00",main.asm,"JR	Z,RENUM2"
9424,9424,9330,3ec9,3e27,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9425,9425,9331,3eca,3e28,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"LD	C,(HL)		;OLD LINE NUMBER"
9426,9426,9332,3ecb,3e29,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9427,9427,9333,3ecc,3e2a,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"LD	B,(HL)"
9428,9428,9334,3ecd,3e2b,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9429,9429,9335,3ece,3e2c,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",main.asm,"LD	(HL),C"
9430,9430,9336,3ecf,3e2d,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9431,9431,9337,3ed0,3e2e,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,"LD	(HL),B"
9432,9432,9338,3ed1,3e2f,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9433,9433,9339,3ed2,3e30,d9,d9,exx,exx,exx,main.asm,EXX
9434,9434,9340,3ed3,3e31,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9435,9435,9341,3ed4,3e32,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC		;ADD INCREMENT"
9436,9436,9342,3ed5,3e33,da 33 44,da 91 43,"jp c,$4433","jp c,$4391","jp c,$0000",main.asm,"JP	C,TOOBIGmn	;""Too big"""
9437,9437,9343,3ed8,3e36,d9,d9,exx,exx,exx,main.asm,EXX
9438,9438,9344,3ed9,3e37,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9439,9439,9345,3eda,3e38,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",main.asm,"LD	(HL),C"
9440,9440,9346,3edb,3e39,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9441,9441,9347,3edc,3e3a,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,"LD	(HL),B"
9442,9442,9348,3edd,3e3b,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9443,9443,9349,3ede,3e3c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9444,9444,9350,3edf,3e3d,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9445,9445,9351,3ee0,3e3e,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9446,9446,9352,3ee1,3e3f,af,af,xor a,xor a,xor a,main.asm,XOR	A
9447,9447,9353,3ee2,3e40,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A"
9448,9448,9354,3ee3,3e41,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"LD	C,(HL)"
9449,9449,9355,3ee4,3e42,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC		;NEXT LINE"
9450,9450,9356,3ee5,3e43,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9451,9451,9357,3ee6,3e44,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9452,9452,9358,3ee7,3e45,24,24,inc h,inc h,inc h,main.asm,INC	H
9453,9453,9359,3ee8,3e46,ed 72,ed 72,"sbc hl,sp","sbc hl,sp","sbc hl,sp",main.asm,"SBC	HL,SP"
9454,9454,9360,3eea,3e48,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9455,9455,9361,3eeb,3e49,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9456,9456,9362,3eec,3e4a,38 d7,38 d7,"jr c,$-$27","jr c,$-$27","jr c,$-$00",main.asm,"JR	C,RENUM1	;CONTINUE"
9457,9457,9363,3eee,3e4c,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,main.asm,JP	ERROR_		;'No room' (A = 0)
9458,9458,9364,3ef1,3e4f,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"RENUM2:         EX	DE,HL"
9459,9459,9365,3ef2,3e50,36 ff,36 ff,"ld (hl),$ff","ld (hl),$ff","ld (hl),$00",main.asm,"LD	(HL),-1"
9460,9460,9366,3ef4,3e52,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9461,9461,9367,3ef5,3e53,36 ff,36 ff,"ld (hl),$ff","ld (hl),$ff","ld (hl),$00",main.asm,"LD	(HL),-1"
9462,9462,9368,3ef7,3e55,ed 5b de 55,ed 5b de 54,"ld de,($55de)","ld de,($54de)","ld de,($0000)",main.asm,"LD	DE,(LOMEM)"
9463,9463,9369,3efb,3e59,d9,d9,exx,exx,exx,main.asm,EXX
9464,9464,9370,3efc,3e5a,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"LD	HL,(PAGE_)"
9465,9465,9371,3eff,3e5d,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"RENUM3:         LD	C,(HL)"
9466,9466,9372,3f00,3e5e,79,79,"ld a,c","ld a,c","ld a,c",main.asm,"LD	A,C"
9467,9467,9373,3f01,3e5f,b7,b7,or a,or a,or a,main.asm,OR	A
9468,9468,9374,3f02,3e60,28 86,28 86,"jr z,$-$78","jr z,$-$78","jr z,$-$00",main.asm,"JR	Z,WARMNC"
9469,9469,9375,3f04,3e62,d9,d9,exx,exx,exx,main.asm,EXX
9470,9470,9376,3f05,3e63,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9471,9471,9377,3f06,3e64,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9472,9472,9378,3f07,3e65,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9473,9473,9379,3f08,3e66,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)"
9474,9474,9380,3f09,3e67,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9475,9475,9381,3f0a,3e68,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
9476,9476,9382,3f0b,3e69,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9477,9477,9383,3f0c,3e6a,d5,d5,push de,push de,push de,main.asm,PUSH	DE
9478,9478,9384,3f0d,3e6b,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9479,9479,9385,3f0e,3e6c,d9,d9,exx,exx,exx,main.asm,EXX
9480,9480,9386,3f0f,3e6d,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
9481,9481,9387,3f10,3e6e,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9482,9482,9388,3f11,3e6f,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,"LD	(HL),E		;NEW LINE NUMBER"
9483,9483,9389,3f12,3e70,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9484,9484,9390,3f13,3e71,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,"LD	(HL),D"
9485,9485,9391,3f14,3e72,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9486,9486,9392,3f15,3e73,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9487,9487,9393,3f16,3e74,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9488,9488,9394,3f17,3e75,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9489,9489,9395,3f18,3e76,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"LD	B,0"
9490,9490,9396,3f1a,3e78,3e 8d,3e 8d,"ld a,$8d","ld a,$8d","ld a,$00",main.asm,"RENUM7:         LD	A,TLINO"
9491,9491,9397,3f1c,3e7a,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR			;SEARCH FOR LINE NUMBER
9492,9492,9398,3f1e,3e7c,20 df,20 df,"jr nz,$-$1f","jr nz,$-$1f","jr nz,$-$00",main.asm,"JR	NZ,RENUM3"
9493,9493,9399,3f20,3e7e,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9494,9494,9400,3f21,3e7f,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9495,9495,9401,3f22,3e80,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9496,9496,9402,3f23,3e81,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,POP	IY
9497,9497,9403,3f25,3e83,d9,d9,exx,exx,exx,main.asm,EXX
9498,9498,9404,3f26,3e84,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9499,9499,9405,3f27,3e85,cd e4 1f,cd 42 1f,call $1fe4,call $1f42,call $0000,main.asm,CALL	DECODE		;DECODE LINE NUMBER
9500,9500,9406,3f2a,3e88,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9501,9501,9407,3f2b,3e89,d9,d9,exx,exx,exx,main.asm,EXX
9502,9502,9408,3f2c,3e8a,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"LD	B,H"
9503,9503,9409,3f2d,3e8b,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"LD	C,L"
9504,9504,9410,3f2e,3e8c,2a de 55,2a de 54,"ld hl,($55de)","ld hl,($54de)","ld hl,($0000)",main.asm,"LD	HL,(LOMEM)"
9505,9505,9411,3f31,3e8f,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"RENUM4:         LD	E,(HL)		;CROSS-REFERENCE TABLE"
9506,9506,9412,3f32,3e90,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9507,9507,9413,3f33,3e91,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
9508,9508,9414,3f34,3e92,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9509,9509,9415,3f35,3e93,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9510,9510,9416,3f36,3e94,b7,b7,or a,or a,or a,main.asm,OR	A		;CLEAR CARRY
9511,9511,9417,3f37,3e95,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",main.asm,"SBC	HL,BC"
9512,9512,9418,3f39,3e97,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9513,9513,9419,3f3a,3e98,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)		;NEW NUMBER"
9514,9514,9420,3f3b,3e99,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9515,9515,9421,3f3c,3e9a,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
9516,9516,9422,3f3d,3e9b,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9517,9517,9423,3f3e,3e9c,38 f1,38 f1,"jr c,$-$0d","jr c,$-$0d","jr c,$-$00",main.asm,"JR	C,RENUM4"
9518,9518,9424,3f40,3e9e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9519,9519,9425,3f41,3e9f,28 1a,28 1a,"jr z,$+$1c","jr z,$+$1c","jr z,$+$00",main.asm,"JR	Z,RENUM5	;FOUND"
9520,9520,9426,3f43,3ea1,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,main.asm,CALL	TELL
9521,9521,9427,3f46,3ea4,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"DB	""Failed at """
9522,9522,9428,3f47,3ea5,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9523,9523,9429,3f48,3ea6,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9524,9524,9430,3f49,3ea7,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
9525,9525,9431,3f4a,3ea8,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9526,9526,9432,3f4b,3ea9,64,64,"ld h,h","ld h,h","ld h,h",main.asm,
9527,9527,9433,3f4c,3eaa,20 61,20 61,"jr nz,$+$63","jr nz,$+$63","jr nz,$+$00",main.asm,
9528,9528,9434,3f4e,3eac,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9529,9529,9435,3f4f,3ead,20 00,20 00,"jr nz,$+$02","jr nz,$+$02","jr nz,$+$00",main.asm,
9530,9530,9436,3f51,3eaf,d9,d9,exx,exx,exx,main.asm,EXX
9531,9531,9437,3f52,3eb0,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9532,9532,9438,3f53,3eb1,d9,d9,exx,exx,exx,main.asm,EXX
9533,9533,9439,3f54,3eb2,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9534,9534,9440,3f55,3eb3,cd 16 42,cd 74 41,call $4216,call $4174,call $0000,main.asm,CALL	PBCDL
9535,9535,9441,3f58,3eb6,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,main.asm,CALL	CRLF
9536,9536,9442,3f5b,3eb9,18 06,18 06,jr $+$08,jr $+$08,jr $+$00,main.asm,JR	RENUM6
9537,9537,9443,3f5d,3ebb,d1,d1,pop de,pop de,pop de,main.asm,RENUM5:         POP	DE
9538,9538,9444,3f5e,3ebc,d5,d5,push de,push de,push de,main.asm,PUSH	DE
9539,9539,9445,3f5f,3ebd,1b,1b,dec de,dec de,dec de,main.asm,DEC	DE
9540,9540,9446,3f60,3ebe,cd 43 45,cd a1 44,call $4543,call $44a1,call $0000,main.asm,CALL	ENCODE		;RE-WRITE NUMBER
9541,9541,9447,3f63,3ec1,e1,e1,pop hl,pop hl,pop hl,main.asm,RENUM6:         POP	HL
9542,9542,9448,3f64,3ec2,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9543,9543,9449,3f65,3ec3,18 b3,18 b3,jr $-$4b,jr $-$4b,jr $-$00,main.asm,JR	RENUM7
9544,9544,9450,3f67,3ec5,cd 38 44,cd 96 43,call $4438,call $4396,call $0000,main.asm,AUTO:           CALL	PAIR
9545,9545,9451,3f6a,3ec8,22 e8 55,22 e8 54,"ld ($55e8),hl","ld ($54e8),hl","ld ($0000),hl",main.asm,"LD	(AUTONO),HL"
9546,9546,9452,3f6d,3ecb,79,79,"ld a,c","ld a,c","ld a,c",main.asm,"LD	A,C"
9547,9547,9453,3f6e,3ecc,32 ff 55,32 ff 54,"ld ($55ff),a","ld ($54ff),a","ld ($0000),a",main.asm,"LD	(INCREM),A"
9548,9548,9454,3f71,3ecf,18 37,18 37,jr $+$39,jr $+$39,jr $+$00,main.asm,JR	CLOOP0
9549,9549,9455,3f73,3ed1,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,main.asm,"BAD:            CALL	TELL		;""Bad program'"
9550,9550,9456,3f76,3ed4,13,13,inc de,inc de,inc de,main.asm,DB	13H
9551,9551,9457,3f77,3ed5,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",main.asm,"DB	""program"""
9552,9552,9458,3f78,3ed6,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9553,9553,9459,3f79,3ed7,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,
9554,9554,9460,3f7a,3ed8,67,67,"ld h,a","ld h,a","ld h,a",main.asm,
9555,9555,9461,3f7b,3ed9,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,
9556,9556,9462,3f7c,3eda,61,61,"ld h,c","ld h,c","ld h,c",main.asm,
9557,9557,9463,3f7d,3edb,6d,6d,"ld l,l","ld l,l","ld l,l",main.asm,
9558,9558,9464,3f7e,3edc,0d,0d,dec c,dec c,dec c,main.asm,DB	CR
9559,9559,9465,3f7f,3edd,0a,0a,"ld a,(bc)","ld a,(bc)","ld a,(bc)",main.asm,DB	LF
9560,9560,9466,3f80,3ede,00,00,nop,nop,nop,main.asm,DB	0
9561,9561,9467,3f81,3edf,cd c2 40,cd 20 40,call $40c2,call $4020,call $0000,main.asm,NEW:            CALL	NEWIT
9562,9562,9468,3f84,3ee2,18 24,18 24,jr $+$26,jr $+$26,jr $+$00,main.asm,JR	CLOOP0
9563,9563,9469,3f86,3ee4,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,main.asm,LOAD:           CALL	EXPRS		;GET FILENAME
9564,9564,9470,3f89,3ee7,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"LD	A,CR"
9565,9565,9471,3f8b,3ee9,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LD	(DE),A"
9566,9566,9472,3f8c,3eea,cd 84 40,cd e2 3f,call $4084,call $3fe2,call $0000,main.asm,CALL	LOAD0
9567,9567,9473,3f8f,3eed,cd c7 40,cd 25 40,call $40c7,call $4025,call $0000,main.asm,CALL	CLEAR
9568,9568,9474,3f92,3ef0,18 31,18 31,jr $+$33,jr $+$33,jr $+$00,main.asm,JR	WARM0
9569,9569,9475,3f94,3ef2,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"OLD:            LD	HL,(PAGE_)"
9570,9570,9476,3f97,3ef5,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9571,9571,9477,3f98,3ef6,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9572,9572,9478,3f99,3ef7,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9573,9573,9479,3f9a,3ef8,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9574,9574,9480,3f9b,3ef9,01 fc 00,01 fc 00,"ld bc,$00fc","ld bc,$00fc","ld bc,$0000",main.asm,"LD	BC,252"
9575,9575,9481,3f9e,3efc,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"LD	A,CR"
9576,9576,9482,3fa0,3efe,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
9577,9577,9483,3fa2,3f00,20 cf,20 cf,"jr nz,$-$2f","jr nz,$-$2f","jr nz,$-$00",main.asm,"JR	NZ,BAD"
9578,9578,9484,3fa4,3f02,7d,7d,"ld a,l","ld a,l","ld a,l",main.asm,"LD	A,L"
9579,9579,9485,3fa5,3f03,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9580,9580,9486,3fa6,3f04,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
9581,9581,9487,3fa7,3f05,cd 9e 40,cd fc 3f,call $409e,call $3ffc,call $0000,main.asm,CALL	CLEAN
9582,9582,9488,3faa,3f08,c3 34 38,c3 92 37,jp $3834,jp $3792,jp $0000,main.asm,CLOOP0:         JP	CLOOP
9583,9583,9489,3fad,3f0b,cd c0 18,cd 1e 18,call $18c0,call $181e,call $0000,main.asm,SAVE:           CALL	EXPRS		;FILENAME
9584,9584,9490,3fb0,3f0e,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"LD	A,CR"
9585,9585,9491,3fb2,3f10,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LD	(DE),A"
9586,9586,9492,3fb3,3f11,ed 5b dc 55,ed 5b dc 54,"ld de,($55dc)","ld de,($54dc)","ld de,($0000)",main.asm,"LD	DE,(PAGE_)"
9587,9587,9493,3fb7,3f15,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,main.asm,CALL	GETTOP
9588,9588,9494,3fba,3f18,b7,b7,or a,or a,or a,main.asm,OR	A
9589,9589,9495,3fbb,3f19,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
9590,9590,9496,3fbd,3f1b,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"LD	B,H		;LENGTH OF PROGRAM"
9591,9591,9497,3fbe,3f1c,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"LD	C,L"
9592,9592,9498,3fbf,3f1d,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",main.asm,"LD	HL,ACCS"
9593,9593,9499,3fc2,3f20,cd c4 07,cd a4 07,call $07c4,call $07a4,call $0000,main.asm,CALL	OSSAVE
9594,9594,9500,3fc5,3f23,c3 33 38,c3 91 37,jp $3833,jp $3791,jp $0000,main.asm,WARM0:          JP	WARM
9595,9595,9501,3fc8,3f26,21 a5 3c,21 03 3c,"ld hl,$3ca5","ld hl,$3c03","ld hl,$0000",main.asm,"ERROR_:         LD	HL,ERRWDS"
9596,9596,9502,3fcb,3f29,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"LD	C,A"
9597,9597,9503,3fcc,3f2a,b7,b7,or a,or a,or a,main.asm,OR	A
9598,9598,9504,3fcd,3f2b,28 0c,28 0c,"jr z,$+$0e","jr z,$+$0e","jr z,$+$00",main.asm,"JR	Z,ERROR1"
9599,9599,9505,3fcf,3f2d,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A		;ERROR NUMBER"
9600,9600,9506,3fd0,3f2e,af,af,xor a,xor a,xor a,main.asm,XOR	A
9601,9601,9507,3fd1,3f2f,be,be,cp (hl),cp (hl),cp (hl),main.asm,ERROR0:         CP	(HL)
9602,9602,9508,3fd2,3f30,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9603,9603,9509,3fd3,3f31,20 fc,20 fc,"jr nz,$-$02","jr nz,$-$02","jr nz,$-$00",main.asm,"JR	NZ,ERROR0"
9604,9604,9510,3fd5,3f33,10 fa,10 fa,djnz $-$04,djnz $-$04,djnz $-$00,main.asm,DJNZ	ERROR0
9605,9605,9511,3fd7,3f35,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,main.asm,JR	ERROR1		;MUST NOT PUSH HL HERE
9606,9606,9512,3fd9,3f37,e1,e1,pop hl,pop hl,pop hl,main.asm,EXTERR:         POP	HL
9607,9607,9513,3fda,3f38,4f,4f,"ld c,a","ld c,a","ld c,a",main.asm,"LD	C,A"
9608,9608,9514,3fdb,3f39,22 ee 55,22 ee 54,"ld ($55ee),hl","ld ($54ee),hl","ld ($0000),hl",main.asm,"ERROR1:         LD	(ERRTXT),HL"
9609,9609,9515,3fde,3f3c,2a ec 55,2a ec 54,"ld hl,($55ec)","ld hl,($54ec)","ld hl,($0000)",main.asm,"LD	HL,(ONERSP)"
9610,9610,9516,3fe1,3f3f,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
9611,9611,9517,3fe2,3f40,b5,b5,or l,or l,or l,main.asm,OR	L
9612,9612,9518,3fe3,3f41,ed 7b e2 55,ed 7b e2 54,"ld sp,($55e2)","ld sp,($54e2)","ld sp,($0000)",main.asm,"LD	SP,(HIMEM)	;MUST SET SP BEFORE 'CALL'"
9613,9613,9519,3fe7,3f45,28 01,28 01,"jr z,$+$03","jr z,$+$03","jr z,$+$00",main.asm,"JR	Z,ERROR4"
9614,9614,9520,3fe9,3f47,f9,f9,"ld sp,hl","ld sp,hl","ld sp,hl",main.asm,"LD	SP,HL"
9615,9615,9521,3fea,3f48,79,79,"ld a,c","ld a,c","ld a,c",main.asm,"ERROR4:         LD	A,C		;ERROR NUMBER"
9616,9616,9522,3feb,3f49,cd df 41,cd 3d 41,call $41df,call $413d,call $0000,main.asm,CALL	SETLIN		;SP IS SET NOW
9617,9617,9523,3fee,3f4c,32 fd 55,32 fd 54,"ld ($55fd),a","ld ($54fd),a","ld ($0000),a",main.asm,"LD	(ERR),A"
9618,9618,9524,3ff1,3f4f,22 f2 55,22 f2 54,"ld ($55f2),hl","ld ($54f2),hl","ld ($0000),hl",main.asm,"LD	(ERL),HL"
9619,9619,9525,3ff4,3f52,b7,b7,or a,or a,or a,main.asm,OR	A
9620,9620,9526,3ff5,3f53,28 0b,28 0b,"jr z,$+$0d","jr z,$+$0d","jr z,$+$00",main.asm,"JR	Z,ERROR2	;'FATAL' ERROR"
9621,9621,9527,3ff7,3f55,2a ea 55,2a ea 54,"ld hl,($55ea)","ld hl,($54ea)","ld hl,($0000)",main.asm,"LD	HL,(ERRTRP)"
9622,9622,9528,3ffa,3f58,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
9623,9623,9529,3ffb,3f59,b5,b5,or l,or l,or l,main.asm,OR	L
9624,9624,9530,3ffc,3f5a,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9625,9625,9531,3ffd,3f5b,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,POP	IY
9626,9626,9532,3fff,3f5d,c2 1d 25,c2 7b 24,"jp nz,$251d","jp nz,$247b","jp nz,$0000",main.asm,"JP	NZ,XEQ		;ERROR TRAPPED"
9627,9627,9533,4002,3f60,ed 7b e2 55,ed 7b e2 54,"ld sp,($55e2)","ld sp,($54e2)","ld sp,($0000)",main.asm,"ERROR2:         LD	SP,(HIMEM)"
9628,9628,9534,4006,3f64,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",main.asm,"SBC	HL,HL"
9629,9629,9535,4008,3f66,22 e8 55,22 e8 54,"ld ($55e8),hl","ld ($54e8),hl","ld ($0000),hl",main.asm,"LD	(AUTONO),HL"
9630,9630,9536,400b,3f69,22 e6 55,22 e6 54,"ld ($55e6),hl","ld ($54e6),hl","ld ($0000),hl",main.asm,"LD	(TRACEN),HL	;CANCEL TRACE"
9631,9631,9537,400e,3f6c,cd 45 06,cd 25 06,call $0645,call $0625,call $0000,main.asm,CALL	RESET		;RESET OPSYS
9632,9632,9538,4011,3f6f,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,main.asm,CALL	CRLF
9633,9633,9539,4014,3f72,cd 69 45,cd c7 44,call $4569,call $44c7,call $0000,main.asm,CALL	REPORT		;MESSAGE
9634,9634,9540,4017,3f75,2a f2 55,2a f2 54,"ld hl,($55f2)","ld hl,($54f2)","ld hl,($0000)",main.asm,"LD	HL,(ERL)"
9635,9635,9541,401a,3f78,cd 06 42,cd 64 41,call $4206,call $4164,call $0000,main.asm,CALL	SAYLN
9636,9636,9542,401d,3f7b,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",main.asm,"LD	E,0"
9637,9637,9543,401f,3f7d,dc 55 06,dc 35 06,"call c,$0655","call c,$0635","call c,$0000",main.asm,"CALL	C,OSSHUT	;CLOSE ALL FILES"
9638,9638,9544,4022,3f80,cd 7f 41,cd dd 40,call $417f,call $40dd,call $0000,main.asm,CALL	CRLF
9639,9639,9545,4025,3f83,18 83,18 83,jr $-$7b,jr $-$7b,jr $-$00,main.asm,JR	CLOOP0
9640,9640,9546,4027,3f85,21 08 39,21 66 38,"ld hl,$3908","ld hl,$3866","ld hl,$0000",main.asm,"LEX:            LD	HL,KEYWDS"
9641,9641,9547,402a,3f88,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LEX0:           LD	A,(IY)"
9642,9642,9548,402d,3f8b,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"LD	B,(HL)"
9643,9643,9549,402e,3f8c,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9644,9644,9550,402f,3f8d,be,be,cp (hl),cp (hl),cp (hl),main.asm,CP	(HL)
9645,9645,9551,4030,3f8e,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",main.asm,"JR	Z,LEX2"
9646,9646,9552,4032,3f90,d8,d8,ret c,ret c,ret c,main.asm,RET	C		;FAIL EXIT
9647,9647,9553,4033,3f91,23,23,inc hl,inc hl,inc hl,main.asm,LEX1:           INC	HL
9648,9648,9554,4034,3f92,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9649,9649,9555,4035,3f93,fe a0,fe a0,cp $a0,cp $a0,cp $00,main.asm,CP	160
9650,9650,9556,4037,3f95,ea 33 40,ea 91 3f,"jp pe,$4033","jp pe,$3f91","jp pe,$0000",main.asm,"JP	PE,LEX1"
9651,9651,9557,403a,3f98,18 ee,18 ee,jr $-$10,jr $-$10,jr $-$00,main.asm,JR	LEX0
9652,9652,9558,403c,3f9a,fd e5,fd e5,push iy,push iy,push iy,main.asm,LEX2:           PUSH	IY		;SAVE POINTER
9653,9653,9559,403e,3f9c,23,23,inc hl,inc hl,inc hl,main.asm,LEX3:           INC	HL
9654,9654,9560,403f,3f9d,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9655,9655,9561,4040,3f9e,fe a0,fe a0,cp $a0,cp $a0,cp $00,main.asm,CP	160
9656,9656,9562,4042,3fa0,e2 69 40,e2 c7 3f,"jp po,$4069","jp po,$3fc7","jp po,$0000",main.asm,"JP	PO,LEX6		;FOUND"
9657,9657,9563,4045,3fa3,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
9658,9658,9564,4047,3fa5,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
9659,9659,9565,404a,3fa8,be,be,cp (hl),cp (hl),cp (hl),main.asm,CP	(HL)
9660,9660,9566,404b,3fa9,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",main.asm,"JR	NZ,LEX7"
9661,9661,9567,404d,3fab,fe a1,fe a1,cp $a1,cp $a1,cp $00,main.asm,CP	161
9662,9662,9568,404f,3fad,ea 3e 40,ea 9c 3f,"jp pe,$403e","jp pe,$3f9c","jp pe,$0000",main.asm,"JP	PE,LEX3"
9663,9663,9569,4052,3fb0,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LEX7:           LD	A,(IY)"
9664,9664,9570,4055,3fb3,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,main.asm,CP	'.'
9665,9665,9571,4057,3fb5,28 10,28 10,"jr z,$+$12","jr z,$+$12","jr z,$+$00",main.asm,"JR	Z,LEX6		;FOUND (ABBREV.)"
9666,9666,9572,4059,3fb7,cd 80 44,cd de 43,call $4480,call $43de,call $0000,main.asm,CALL	RANGE1
9667,9667,9573,405c,3fba,38 04,38 04,"jr c,$+$06","jr c,$+$06","jr c,$+$00",main.asm,"JR	C,LEX5"
9668,9668,9574,405e,3fbc,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,LEX4:           POP	IY		;RESTORE POINTER
9669,9669,9575,4060,3fbe,18 d1,18 d1,jr $-$2d,jr $-$2d,jr $-$00,main.asm,JR	LEX1
9670,9670,9576,4062,3fc0,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LEX5:           LD	A,(HL)"
9671,9671,9577,4063,3fc1,fe 20,fe 20,cp $20,cp $20,cp $00,main.asm,CP	' '
9672,9672,9578,4065,3fc3,20 f7,20 f7,"jr nz,$-$07","jr nz,$-$07","jr nz,$-$00",main.asm,"JR	NZ,LEX4"
9673,9673,9579,4067,3fc5,fd 2b,fd 2b,dec iy,dec iy,dec iy,main.asm,DEC	IY
9674,9674,9580,4069,3fc7,f1,f1,pop af,pop af,pop af,main.asm,LEX6:           POP	AF
9675,9675,9581,406a,3fc8,af,af,xor a,xor a,xor a,main.asm,XOR	A
9676,9676,9582,406b,3fc9,78,78,"ld a,b","ld a,b","ld a,b",main.asm,"LD	A,B"
9677,9677,9583,406c,3fca,c9,c9,ret,ret,ret,main.asm,RET
9678,9678,9584,406d,3fcb,d5,d5,push de,push de,push de,main.asm,DEL:            PUSH	DE
9679,9679,9585,406e,3fcc,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9680,9680,9586,406f,3fcd,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9681,9681,9587,4070,3fce,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"LD	B,0"
9682,9682,9588,4072,3fd0,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"LD	C,(HL)"
9683,9683,9589,4073,3fd1,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
9684,9684,9590,4074,3fd2,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9685,9685,9591,4075,3fd3,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9686,9686,9592,4076,3fd4,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,main.asm,CALL	GETTOP
9687,9687,9593,4079,3fd7,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
9688,9688,9594,407b,3fd9,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"LD	B,H"
9689,9689,9595,407c,3fda,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"LD	C,L"
9690,9690,9596,407d,3fdb,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9691,9691,9597,407e,3fdc,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
9692,9692,9598,407f,3fdd,ed b0,ed b0,ldir,ldir,ldir,main.asm,LDIR			;DELETE LINE
9693,9693,9599,4081,3fdf,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9694,9694,9600,4082,3fe0,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
9695,9695,9601,4083,3fe1,c9,c9,ret,ret,ret,main.asm,RET
9696,9696,9602,4084,3fe2,ed 5b dc 55,ed 5b dc 54,"ld de,($55dc)","ld de,($54dc)","ld de,($0000)",main.asm,"LOAD0:          LD	DE,(PAGE_)"
9697,9697,9603,4088,3fe6,21 00 ff,21 00 ff,"ld hl,$ff00","ld hl,$ff00","ld hl,$0000",main.asm,"LD	HL,-256"
9698,9698,9604,408b,3fe9,39,39,"add hl,sp","add hl,sp","add hl,sp",main.asm,"ADD	HL,SP"
9699,9699,9605,408c,3fea,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE		;FIND AVAILABLE SPACE"
9700,9700,9606,408e,3fec,44,44,"ld b,h","ld b,h","ld b,h",main.asm,"LD	B,H"
9701,9701,9607,408f,3fed,4d,4d,"ld c,l","ld c,l","ld c,l",main.asm,"LD	C,L"
9702,9702,9608,4090,3fee,21 00 53,21 00 52,"ld hl,$5300","ld hl,$5200","ld hl,$0000",main.asm,"LD	HL,ACCS"
9703,9703,9609,4093,3ff1,cd ce 06,cd ae 06,call $06ce,call $06ae,call $0000,main.asm,CALL	OSLOAD		;LOAD
9704,9704,9610,4096,3ff4,d4 c2 40,d4 20 40,"call nc,$40c2","call nc,$4020","call nc,$0000",main.asm,"CALL	NC,NEWIT"
9705,9705,9611,4099,3ff7,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",main.asm,"LD	A,0"
9706,9706,9612,409b,3ff9,d2 c8 3f,d2 26 3f,"jp nc,$3fc8","jp nc,$3f26","jp nc,$0000",main.asm,"JP	NC,ERROR_	;""No room"""
9707,9707,9613,409e,3ffc,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,main.asm,CLEAN:          CALL	GETTOP
9708,9708,9614,40a1,3fff,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9709,9709,9615,40a2,4000,36 ff,36 ff,"ld (hl),$ff","ld (hl),$ff","ld (hl),$00",main.asm,"LD	(HL),-1		;WRITE &FFFF"
9710,9710,9616,40a4,4002,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9711,9711,9617,40a5,4003,36 ff,36 ff,"ld (hl),$ff","ld (hl),$ff","ld (hl),$00",main.asm,"LD	(HL),-1"
9712,9712,9618,40a7,4005,18 1e,18 1e,jr $+$20,jr $+$20,jr $+$00,main.asm,JR	CLEAR
9713,9713,9619,40a9,4007,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"GETTOP:         LD	HL,(PAGE_)"
9714,9714,9620,40ac,400a,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"LD	B,0"
9715,9715,9621,40ae,400c,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"LD	A,CR"
9716,9716,9622,40b0,400e,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"GETOP1:         LD	C,(HL)"
9717,9717,9623,40b1,400f,0c,0c,inc c,inc c,inc c,main.asm,INC	C
9718,9718,9624,40b2,4010,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9719,9719,9625,40b3,4011,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",main.asm,"JR	Z,GETOP2"
9720,9720,9626,40b5,4013,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
9721,9721,9627,40b6,4014,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
9722,9722,9628,40b7,4015,be,be,cp (hl),cp (hl),cp (hl),main.asm,CP	(HL)
9723,9723,9629,40b8,4016,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9724,9724,9630,40b9,4017,28 f5,28 f5,"jr z,$-$09","jr z,$-$09","jr z,$-$00",main.asm,"JR	Z,GETOP1"
9725,9725,9631,40bb,4019,c3 73 3f,c3 d1 3e,jp $3f73,jp $3ed1,jp $0000,main.asm,JP	BAD
9726,9726,9632,40be,401c,23,23,inc hl,inc hl,inc hl,main.asm,GETOP2:         INC	HL		;N.B. CALLED FROM NEWIT
9727,9727,9633,40bf,401d,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9728,9728,9634,40c0,401e,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9729,9729,9635,40c1,401f,c9,c9,ret,ret,ret,main.asm,RET
9730,9730,9636,40c2,4020,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"NEWIT:          LD	HL,(PAGE_)"
9731,9731,9637,40c5,4023,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",main.asm,"LD	(HL),0"
9732,9732,9638,40c7,4025,e5,e5,push hl,push hl,push hl,main.asm,CLEAR:          PUSH	HL
9733,9733,9639,40c8,4026,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9734,9734,9640,40c9,4027,f5,f5,push af,push af,push af,main.asm,PUSH	AF
9735,9735,9641,40ca,4028,cd a9 40,cd 07 40,call $40a9,call $4007,call $0000,main.asm,CALL	GETTOP
9736,9736,9642,40cd,402b,22 de 55,22 de 54,"ld ($55de),hl","ld ($54de),hl","ld ($0000),hl",main.asm,"LD	(LOMEM),HL"
9737,9737,9643,40d0,402e,22 e0 55,22 e0 54,"ld ($55e0),hl","ld ($54e0),hl","ld ($0000),hl",main.asm,"LD	(FREE),HL"
9738,9738,9644,40d3,4031,21 6c 55,21 6c 54,"ld hl,$556c","ld hl,$546c","ld hl,$0000",main.asm,"LD	HL,DYNVAR"
9739,9739,9645,40d6,4034,06 70,06 70,"ld b,$70","ld b,$70","ld b,$00",main.asm,"LD	B,54+2*2"
9740,9740,9646,40d8,4036,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",main.asm,"CLEAR1:         LD	(HL),0"
9741,9741,9647,40da,4038,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9742,9742,9648,40db,4039,10 fb,10 fb,djnz $-$03,djnz $-$03,djnz $-$00,main.asm,DJNZ	CLEAR1
9743,9743,9649,40dd,403b,f1,f1,pop af,pop af,pop af,main.asm,POP	AF
9744,9744,9650,40de,403c,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9745,9745,9651,40df,403d,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9746,9746,9652,40e0,403e,c9,c9,ret,ret,ret,main.asm,RET
9747,9747,9653,40e1,403f,e5,e5,push hl,push hl,push hl,main.asm,LISTIT:         PUSH	HL
9748,9748,9654,40e2,4040,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9749,9749,9655,40e3,4041,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9750,9750,9656,40e4,4042,cd 1a 42,cd 78 41,call $421a,call $4178,call $0000,main.asm,CALL	PBCD
9751,9751,9657,40e7,4045,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9752,9752,9658,40e8,4046,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9753,9753,9659,40e9,4047,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9754,9754,9660,40ea,4048,d9,d9,exx,exx,exx,main.asm,EXX
9755,9755,9661,40eb,4049,21 02 3e,21 60 3d,"ld hl,$3e02","ld hl,$3d60","ld hl,$0000",main.asm,"LD	HL,TOKSUB"
9756,9756,9662,40ee,404c,01 08 00,01 08 00,"ld bc,$0008","ld bc,$0008","ld bc,$0000",main.asm,"LD	BC,LENSUB"
9757,9757,9663,40f1,404f,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
9758,9758,9664,40f3,4051,cc 79 41,cc d7 40,"call z,$4179","call z,$40d7","call z,$0000",main.asm,"CALL	Z,INDSUB"
9759,9759,9665,40f6,4054,fe cb,fe cb,cp $cb,cp $cb,cp $00,main.asm,CP	TENDCASE
9760,9760,9666,40f8,4056,cc 79 41,cc d7 40,"call z,$4179","call z,$40d7","call z,$0000",main.asm,"CALL	Z,INDSUB"
9761,9761,9667,40fb,4059,3e 20,3e 20,"ld a,$20","ld a,$20","ld a,$00",main.asm,"LD	A,' '"
9762,9762,9668,40fd,405b,dd cb 00 46,dd cb 00 46,"bit 0,(ix)","bit 0,(ix)","bit 0,(ix)",main.asm,"BIT	0,(IX)"
9763,9763,9669,4101,405f,c4 86 41,c4 e4 40,"call nz,$4186","call nz,$40e4","call nz,$0000",main.asm,"CALL	NZ,OUTCHR"
9764,9764,9670,4104,4062,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LD	A,E"
9765,9765,9671,4105,4063,87,87,"add a,a","add a,a","add a,a",main.asm,"ADD	A,A"
9766,9766,9672,4106,4064,dd cb 00 4e,dd cb 00 4e,"bit 1,(ix)","bit 1,(ix)","bit 1,(ix)",main.asm,"BIT	1,(IX)"
9767,9767,9673,410a,4068,c4 27 36,c4 85 35,"call nz,$3627","call nz,$3585","call nz,$0000",main.asm,"CALL	NZ,SPACES"
9768,9768,9674,410d,406b,d9,d9,exx,exx,exx,main.asm,EXX
9769,9769,9675,410e,406c,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9770,9770,9676,410f,406d,1e 00,1e 00,"ld e,$00","ld e,$00","ld e,$00",main.asm,"LD	E,0"
9771,9771,9677,4111,406f,d9,d9,exx,exx,exx,main.asm,EXX
9772,9772,9678,4112,4070,01 07 00,01 07 00,"ld bc,$0007","ld bc,$0007","ld bc,$0000",main.asm,"LD	BC,LENADD"
9773,9773,9679,4115,4073,21 fb 3d,21 59 3d,"ld hl,$3dfb","ld hl,$3d59","ld hl,$0000",main.asm,"LIST5:          LD	HL,TOKADD"
9774,9774,9680,4118,4076,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
9775,9775,9681,411a,4078,cc 7d 41,cc db 40,"call z,$417d","call z,$40db","call z,$0000",main.asm,"CALL	Z,INDADD"
9776,9776,9682,411d,407b,fe c8,fe c8,cp $c8,cp $c8,cp $00,main.asm,CP	TCASE
9777,9777,9683,411f,407d,cc 7d 41,cc db 40,"call z,$417d","call z,$40db","call z,$0000",main.asm,"CALL	Z,INDADD"
9778,9778,9684,4122,4080,d9,d9,exx,exx,exx,main.asm,EXX
9779,9779,9685,4123,4081,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LIST8:          LD	A,(HL)"
9780,9780,9686,4124,4082,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9781,9781,9687,4125,4083,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,main.asm,CP	CR
9782,9782,9688,4127,4085,28 25,28 25,"jr z,$+$27","jr z,$+$27","jr z,$+$00",main.asm,"JR	Z,LIST9"
9783,9783,9689,4129,4087,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"LD	D,A"
9784,9784,9690,412a,4088,fe 10,fe 10,cp $10,cp $10,cp $00,main.asm,CP	TEXIT
9785,9785,9691,412c,408a,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,LIST6"
9786,9786,9692,412e,408c,cb fb,cb fb,"set 7,e","set 7,e","set 7,e",main.asm,"SET	7,E"
9787,9787,9693,4130,408e,fe 22,fe 22,cp $22,cp $22,cp $00,main.asm,"LIST6:          CP	'""'"
9788,9788,9694,4132,4090,20 01,20 01,"jr nz,$+$03","jr nz,$+$03","jr nz,$+$00",main.asm,"JR	NZ,LIST7"
9789,9789,9695,4134,4092,1c,1c,inc e,inc e,inc e,main.asm,INC	E
9790,9790,9696,4135,4093,cd 6d 41,cd cb 40,call $416d,call $40cb,call $0000,main.asm,LIST7:          CALL	LOUT
9791,9791,9697,4138,4096,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LD	A,E"
9792,9792,9698,4139,4097,e6 81,e6 81,and $81,and $81,and $00,main.asm,AND	81H
9793,9793,9699,413b,4099,20 e6,20 e6,"jr nz,$-$18","jr nz,$-$18","jr nz,$-$00",main.asm,"JR	NZ,LIST8"
9794,9794,9700,413d,409b,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9795,9795,9701,413e,409c,d9,d9,exx,exx,exx,main.asm,EXX
9796,9796,9702,413f,409d,21 02 3e,21 60 3d,"ld hl,$3e02","ld hl,$3d60","ld hl,$0000",main.asm,"LD	HL,TOKSUB"
9797,9797,9703,4142,40a0,01 03 00,01 03 00,"ld bc,$0003","ld bc,$0003","ld bc,$0000",main.asm,"LD	BC,3"
9798,9798,9704,4145,40a3,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
9799,9799,9705,4147,40a5,cc 79 41,cc d7 40,"call z,$4179","call z,$40d7","call z,$0000",main.asm,"CALL	Z,INDSUB"
9800,9800,9706,414a,40a8,0e 04,0e 04,"ld c,$04","ld c,$04","ld c,$00",main.asm,"LD	C,4"
9801,9801,9707,414c,40aa,18 c7,18 c7,jr $-$37,jr $-$37,jr $-$00,main.asm,JR	LIST5
9802,9802,9708,414e,40ac,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LIST9:          LD	A,D"
9803,9803,9709,414f,40ad,fe 8c,fe 8c,cp $8c,cp $8c,cp $00,main.asm,CP	TTHEN
9804,9804,9710,4151,40af,d9,d9,exx,exx,exx,main.asm,EXX
9805,9805,9711,4152,40b0,cc 7d 41,cc db 40,"call z,$417d","call z,$40db","call z,$0000",main.asm,"CALL	Z,INDADD"
9806,9806,9712,4155,40b3,d9,d9,exx,exx,exx,main.asm,EXX
9807,9807,9713,4156,40b4,18 27,18 27,jr $+$29,jr $+$29,jr $+$00,main.asm,JR	CRLF
9808,9808,9714,4158,40b6,e5,e5,push hl,push hl,push hl,main.asm,PRLINO:         PUSH	HL
9809,9809,9715,4159,40b7,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,POP	IY
9810,9810,9716,415b,40b9,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9811,9811,9717,415c,40ba,cd e4 1f,cd 42 1f,call $1fe4,call $1f42,call $0000,main.asm,CALL	DECODE
9812,9812,9718,415f,40bd,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9813,9813,9719,4160,40be,d9,d9,exx,exx,exx,main.asm,EXX
9814,9814,9720,4161,40bf,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9815,9815,9721,4162,40c0,d5,d5,push de,push de,push de,main.asm,PUSH	DE
9816,9816,9722,4163,40c1,cd 16 42,cd 74 41,call $4216,call $4174,call $0000,main.asm,CALL	PBCDL
9817,9817,9723,4166,40c4,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
9818,9818,9724,4167,40c5,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9819,9819,9725,4168,40c6,d9,d9,exx,exx,exx,main.asm,EXX
9820,9820,9726,4169,40c7,fd e5,fd e5,push iy,push iy,push iy,main.asm,PUSH	IY
9821,9821,9727,416b,40c9,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9822,9822,9728,416c,40ca,c9,c9,ret,ret,ret,main.asm,RET
9823,9823,9729,416d,40cb,cb 43,cb 43,"bit 0,e","bit 0,e","bit 0,e",main.asm,"LOUT:           BIT	0,E"
9824,9824,9730,416f,40cd,20 15,20 15,"jr nz,$+$17","jr nz,$+$17","jr nz,$+$00",main.asm,"JR	NZ,OUTCHR"
9825,9825,9731,4171,40cf,fe 8d,fe 8d,cp $8d,cp $8d,cp $00,main.asm,CP	TLINO
9826,9826,9732,4173,40d1,28 e3,28 e3,"jr z,$-$1b","jr z,$-$1b","jr z,$-$00",main.asm,"JR	Z,PRLINO"
9827,9827,9733,4175,40d3,cd 9f 41,cd fd 40,call $419f,call $40fd,call $0000,main.asm,CALL	OUT
9828,9828,9734,4178,40d6,c9,c9,ret,ret,ret,main.asm,RET
9829,9829,9735,4179,40d7,1d,1d,dec e,dec e,dec e,main.asm,INDSUB:         DEC	E
9830,9830,9736,417a,40d8,f2 7e 41,f2 dc 40,"jp p,$417e","jp p,$40dc","jp p,$0000",main.asm,"JP	P,INDRET"
9831,9831,9737,417d,40db,1c,1c,inc e,inc e,inc e,main.asm,INDADD:         INC	E
9832,9832,9738,417e,40dc,c9,c9,ret,ret,ret,main.asm,INDRET:         RET
9833,9833,9739,417f,40dd,3e 0d,3e 0d,"ld a,$0d","ld a,$0d","ld a,$00",main.asm,"CRLF:           LD	A,CR"
9834,9834,9740,4181,40df,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,main.asm,CALL	OUTCHR
9835,9835,9741,4184,40e2,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",main.asm,"LD	A,LF"
9836,9836,9742,4186,40e4,cd 97 05,cd 93 05,call $0597,call $0593,call $0000,main.asm,OUTCHR:         CALL	OSWRCH
9837,9837,9743,4189,40e7,d6 0d,d6 0d,sub $0d,sub $0d,sub $00,main.asm,SUB	CR
9838,9838,9744,418b,40e9,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",main.asm,"JR	Z,CARRET"
9839,9839,9745,418d,40eb,d8,d8,ret c,ret c,ret c,main.asm,RET	C		;NON-PRINTING
9840,9840,9746,418e,40ec,3a fb 55,3a fb 54,"ld a,($55fb)","ld a,($54fb)","ld a,($0000)",main.asm,"LD	A,(COUNT)"
9841,9841,9747,4191,40ef,3c,3c,inc a,inc a,inc a,main.asm,INC	A
9842,9842,9748,4192,40f0,32 fb 55,32 fb 54,"ld ($55fb),a","ld ($54fb),a","ld ($0000),a",main.asm,"CARRET:         LD	(COUNT),A"
9843,9843,9749,4195,40f3,c8,c8,ret z,ret z,ret z,main.asm,RET	Z
9844,9844,9750,4196,40f4,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9845,9845,9751,4197,40f5,2a fc 55,2a fc 54,"ld hl,($55fc)","ld hl,($54fc)","ld hl,($0000)",main.asm,"LD	HL,(WIDTH)"
9846,9846,9752,419a,40f8,bd,bd,cp l,cp l,cp l,main.asm,CP	L
9847,9847,9753,419b,40f9,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9848,9848,9754,419c,40fa,c0,c0,ret nz,ret nz,ret nz,main.asm,RET	NZ
9849,9849,9755,419d,40fb,18 e0,18 e0,jr $-$1e,jr $-$1e,jr $-$00,main.asm,JR	CRLF
9850,9850,9756,419f,40fd,fe a0,fe a0,cp $a0,cp $a0,cp $00,main.asm,OUT:            CP	160
9851,9851,9757,41a1,40ff,ea 86 41,ea e4 40,"jp pe,$4186","jp pe,$40e4","jp pe,$0000",main.asm,"JP	PE,OUTCHR"
9852,9852,9758,41a4,4102,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
9853,9853,9759,41a5,4103,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9854,9854,9760,41a6,4104,21 08 39,21 66 38,"ld hl,$3908","ld hl,$3866","ld hl,$0000",main.asm,"LD	HL,KEYWDS"
9855,9855,9761,41a9,4107,01 5b 03,01 5b 03,"ld bc,$035b","ld bc,$035b","ld bc,$0000",main.asm,"LD	BC,KEYWDL"
9856,9856,9762,41ac,410a,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
9857,9857,9763,41ae,410c,c4 86 41,c4 e4 40,"call nz,$4186","call nz,$40e4","call nz,$0000",main.asm,"CALL	NZ,OUTCHR"
9858,9858,9764,41b1,410f,06 a0,06 a0,"ld b,$a0","ld b,$a0","ld b,$00",main.asm,"LD	B,160"
9859,9859,9765,41b3,4111,fe 91,fe 91,cp $91,cp $91,cp $00,main.asm,CP	145
9860,9860,9766,41b5,4113,ea b9 41,ea 17 41,"jp pe,$41b9","jp pe,$4117","jp pe,$0000",main.asm,"JP	PE,TOKEN1"
9861,9861,9767,41b8,4116,04,04,inc b,inc b,inc b,main.asm,INC	B
9862,9862,9768,41b9,4117,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"TOKEN1:         LD	A,(HL)"
9863,9863,9769,41ba,4118,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9864,9864,9770,41bb,4119,b8,b8,cp b,cp b,cp b,main.asm,CP	B
9865,9865,9771,41bc,411a,f5,f5,push af,push af,push af,main.asm,PUSH	AF
9866,9866,9772,41bd,411b,ec 86 41,ec e4 40,"call pe,$4186","call pe,$40e4","call pe,$0000",main.asm,"CALL	PE,OUTCHR"
9867,9867,9773,41c0,411e,f1,f1,pop af,pop af,pop af,main.asm,POP	AF
9868,9868,9774,41c1,411f,ea b9 41,ea 17 41,"jp pe,$41b9","jp pe,$4117","jp pe,$0000",main.asm,"JP	PE,TOKEN1"
9869,9869,9775,41c4,4122,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9870,9870,9776,41c5,4123,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
9871,9871,9777,41c6,4124,c9,c9,ret,ret,ret,main.asm,RET
9872,9872,9778,41c7,4125,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"FINDL:          EX	DE,HL"
9873,9873,9779,41c8,4126,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"LD	HL,(PAGE_)"
9874,9874,9780,41cb,4129,af,af,xor a,xor a,xor a,main.asm,XOR	A		;A=0
9875,9875,9781,41cc,412a,be,be,cp (hl),cp (hl),cp (hl),main.asm,CP	(HL)
9876,9876,9782,41cd,412b,3c,3c,inc a,inc a,inc a,main.asm,INC	A
9877,9877,9783,41ce,412c,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC
9878,9878,9784,41cf,412d,af,af,xor a,xor a,xor a,main.asm,XOR	A		;CLEAR CARRY
9879,9879,9785,41d0,412e,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A"
9880,9880,9786,41d1,412f,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"FINDL1:         LD	C,(HL)"
9881,9881,9787,41d2,4130,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
9882,9882,9788,41d3,4131,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9883,9883,9789,41d4,4132,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9884,9884,9790,41d5,4133,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9885,9885,9791,41d6,4134,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",main.asm,"LD	H,(HL)"
9886,9886,9792,41d7,4135,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,"LD	L,A"
9887,9887,9793,41d8,4136,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
9888,9888,9794,41da,4138,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
9889,9889,9795,41db,4139,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC		;FOUND | PAST
9890,9890,9796,41dc,413a,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
9891,9891,9797,41dd,413b,18 f2,18 f2,jr $-$0c,jr $-$0c,jr $-$00,main.asm,JR	FINDL1
9892,9892,9798,41df,413d,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"SETLIN:         LD	B,0"
9893,9893,9799,41e1,413f,ed 5b f4 55,ed 5b f4 54,"ld de,($55f4)","ld de,($54f4)","ld de,($0000)",main.asm,"LD	DE,(CURLIN)"
9894,9894,9800,41e5,4143,2a dc 55,2a dc 54,"ld hl,($55dc)","ld hl,($54dc)","ld hl,($0000)",main.asm,"LD	HL,(PAGE_)"
9895,9895,9801,41e8,4146,b7,b7,or a,or a,or a,main.asm,OR	A
9896,9896,9802,41e9,4147,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
9897,9897,9803,41eb,4149,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
9898,9898,9804,41ec,414a,30 13,30 13,"jr nc,$+$15","jr nc,$+$15","jr nc,$+$00",main.asm,"JR	NC,SET3"
9899,9899,9805,41ee,414c,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"SET1:           LD	C,(HL)"
9900,9900,9806,41ef,414d,0c,0c,inc c,inc c,inc c,main.asm,INC	C
9901,9901,9807,41f0,414e,0d,0d,dec c,dec c,dec c,main.asm,DEC	C
9902,9902,9808,41f1,414f,28 0e,28 0e,"jr z,$+$10","jr z,$+$10","jr z,$+$00",main.asm,"JR	Z,SET3"
9903,9903,9809,41f3,4151,09,09,"add hl,bc","add hl,bc","add hl,bc",main.asm,"ADD	HL,BC"
9904,9904,9810,41f4,4152,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"SBC	HL,DE"
9905,9905,9811,41f6,4154,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
9906,9906,9812,41f7,4155,38 f5,38 f5,"jr c,$-$09","jr c,$-$09","jr c,$-$00",main.asm,"JR	C,SET1"
9907,9907,9813,41f9,4157,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",main.asm,"SBC	HL,BC"
9908,9908,9814,41fb,4159,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9909,9909,9815,41fc,415a,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LD	E,(HL)		;LINE NUMBER"
9910,9910,9816,41fd,415b,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9911,9911,9817,41fe,415c,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
9912,9912,9818,41ff,415d,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
9913,9913,9819,4200,415e,c9,c9,ret,ret,ret,main.asm,SET2:           RET
9914,9914,9820,4201,415f,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",main.asm,"SET3:           LD	HL,0"
9915,9915,9821,4204,4162,18 fa,18 fa,jr $-$04,jr $-$04,jr $-$00,main.asm,JR	SET2
9916,9916,9822,4206,4164,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"SAYLN:          LD	A,H"
9917,9917,9823,4207,4165,b5,b5,or l,or l,or l,main.asm,OR	L
9918,9918,9824,4208,4166,c8,c8,ret z,ret z,ret z,main.asm,RET	Z
9919,9919,9825,4209,4167,cd 7e 45,cd dc 44,call $457e,call $44dc,call $0000,main.asm,CALL	TELL
9920,9920,9826,420c,416a,20 61,20 61,"jr nz,$+$63","jr nz,$+$63","jr nz,$+$00",main.asm,"DB	"" at line """
9921,9921,9827,420e,416c,74,74,"ld (hl),h","ld (hl),h","ld (hl),h",main.asm,
9922,9922,9828,420f,416d,20 6c,20 6c,"jr nz,$+$6e","jr nz,$+$6e","jr nz,$+$00",main.asm,
9923,9923,9829,4211,416f,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
9924,9924,9830,4212,4170,6e,6e,"ld l,(hl)","ld l,(hl)","ld l,(hl)",main.asm,
9925,9925,9831,4213,4171,65,65,"ld h,l","ld h,l","ld h,l",main.asm,
9926,9926,9832,4214,4172,20 00,20 00,"jr nz,$+$02","jr nz,$+$02","jr nz,$+$00",main.asm,
9927,9927,9833,4216,4174,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",main.asm,"PBCDL:          LD	C,0"
9928,9928,9834,4218,4176,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,main.asm,JR	PBCD0
9929,9929,9835,421a,4178,0e 20,0e 20,"ld c,$20","ld c,$20","ld c,$00",main.asm,"PBCD:           LD	C,' '"
9930,9930,9836,421c,417a,06 05,06 05,"ld b,$05","ld b,$05","ld b,$00",main.asm,"PBCD0:          LD	B,5"
9931,9931,9837,421e,417c,11 10 27,11 10 27,"ld de,$2710","ld de,$2710","ld de,$0000",main.asm,"LD	DE,10000"
9932,9932,9838,4221,417f,af,af,xor a,xor a,xor a,main.asm,PBCD1:          XOR	A
9933,9933,9839,4222,4180,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",main.asm,"PBCD2:          SBC	HL,DE"
9934,9934,9840,4224,4182,3c,3c,inc a,inc a,inc a,main.asm,INC	A
9935,9935,9841,4225,4183,30 fb,30 fb,"jr nc,$-$03","jr nc,$-$03","jr nc,$-$00",main.asm,"JR	NC,PBCD2"
9936,9936,9842,4227,4185,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
9937,9937,9843,4228,4186,3d,3d,dec a,dec a,dec a,main.asm,DEC	A
9938,9938,9844,4229,4187,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",main.asm,"JR	Z,PBCD3"
9939,9939,9845,422b,4189,cb e1,cb e1,"set 4,c","set 4,c","set 4,c",main.asm,"SET	4,C"
9940,9940,9846,422d,418b,cb e9,cb e9,"set 5,c","set 5,c","set 5,c",main.asm,"SET	5,C"
9941,9941,9847,422f,418d,b1,b1,or c,or c,or c,main.asm,PBCD3:          OR	C
9942,9942,9848,4230,418e,c4 86 41,c4 e4 40,"call nz,$4186","call nz,$40e4","call nz,$0000",main.asm,"CALL	NZ,OUTCHR"
9943,9943,9849,4233,4191,78,78,"ld a,b","ld a,b","ld a,b",main.asm,"LD	A,B"
9944,9944,9850,4234,4192,fe 05,fe 05,cp $05,cp $05,cp $00,main.asm,CP	5
9945,9945,9851,4236,4194,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",main.asm,"JR	Z,PBCD4"
9946,9946,9852,4238,4196,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL"
9947,9947,9853,4239,4197,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"LD	D,H"
9948,9948,9854,423a,4198,5d,5d,"ld e,l","ld e,l","ld e,l",main.asm,"LD	E,L"
9949,9949,9855,423b,4199,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL"
9950,9950,9856,423c,419a,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL"
9951,9951,9857,423d,419b,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
9952,9952,9858,423e,419c,11 e8 03,11 e8 03,"ld de,$03e8","ld de,$03e8","ld de,$0000",main.asm,"PBCD4:          LD	DE,1000"
9953,9953,9859,4241,419f,10 de,10 de,djnz $-$20,djnz $-$20,djnz $-$00,main.asm,DJNZ	PBCD1
9954,9954,9860,4243,41a1,37,37,scf,scf,scf,main.asm,SCF
9955,9955,9861,4244,41a2,c9,c9,ret,ret,ret,main.asm,RET
9956,9956,9862,4245,41a3,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,GETV1:          INC	IY
9957,9957,9863,4247,41a5,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY		;SKIP ()
9958,9958,9864,4249,41a7,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL		;SET EXIT CONDITIONS
9959,9959,9865,424a,41a8,dd e1,dd e1,pop ix,pop ix,pop ix,main.asm,POP	IX
9960,9960,9866,424c,41aa,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
9961,9961,9867,424d,41ab,f6 40,f6 40,or $40,or $40,or $00,main.asm,OR	64		;FLAG ARRAY
9962,9962,9868,424f,41ad,bf,bf,cp a,cp a,cp a,main.asm,CP	A
9963,9963,9869,4250,41ae,c9,c9,ret,ret,ret,main.asm,RET
9964,9964,9870,4251,41af,cd c0 43,cd 1e 43,call $43c0,call $431e,call $0000,main.asm,PUTVAR:         CALL	CREATE
9965,9965,9871,4254,41b2,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
9966,9966,9872,4257,41b5,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
9967,9967,9873,4259,41b7,20 7d,20 7d,"jr nz,$+$7f","jr nz,$+$7f","jr nz,$+$00",main.asm,"JR	NZ,GETVZ	;SET EXIT CONDITIONS"
9968,9968,9874,425b,41b9,fd 7e 01,fd 7e 01,"ld a,(iy+$01)","ld a,(iy+$01)","ld a,(iy+$00)",main.asm,"LD	A,(IY+1)"
9969,9969,9875,425e,41bc,fe 29,fe 29,cp $29,cp $29,cp $00,main.asm,CP	')'		;WHOLE ARRAY?
9970,9970,9876,4260,41be,28 e3,28 e3,"jr z,$-$1b","jr z,$-$1b","jr z,$-$00",main.asm,"JR	Z,GETV1"
9971,9971,9877,4262,41c0,3e 0e,3e 0e,"ld a,$0e","ld a,$0e","ld a,$00",main.asm,"ARRAY:          LD	A,14		;'Bad use of array'"
9972,9972,9878,4264,41c2,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,main.asm,ERROR3:         JP	ERROR_
9973,9973,9879,4267,41c5,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"GETVAR:         LD	A,(IY)"
9974,9974,9880,426a,41c8,fe 21,fe 21,cp $21,cp $21,cp $00,main.asm,CP	'!'
9975,9975,9881,426c,41ca,28 76,28 76,"jr z,$+$78","jr z,$+$78","jr z,$+$00",main.asm,"JR	Z,GETV5"
9976,9976,9882,426e,41cc,fe 3f,fe 3f,cp $3f,cp $3f,cp $00,main.asm,CP	'?'
9977,9977,9883,4270,41ce,28 76,28 76,"jr z,$+$78","jr z,$+$78","jr z,$+$00",main.asm,"JR	Z,GETV6"
9978,9978,9884,4272,41d0,fe 7c,fe 7c,cp $7c,cp $7c,cp $00,main.asm,CP	'|'
9979,9979,9885,4274,41d2,28 75,28 75,"jr z,$+$77","jr z,$+$77","jr z,$+$00",main.asm,"JR	Z,GETVF"
9980,9980,9886,4276,41d4,fe 24,fe 24,cp $24,cp $24,cp $00,main.asm,CP	'$'
9981,9981,9887,4278,41d6,28 75,28 75,"jr z,$+$77","jr z,$+$77","jr z,$+$00",main.asm,"JR	Z,GETV4"
9982,9982,9888,427a,41d8,cd 34 43,cd 92 42,call $4334,call $4292,call $0000,main.asm,CALL	LOCATE
9983,9983,9889,427d,41db,c0,c0,ret nz,ret nz,ret nz,main.asm,RET	NZ
9984,9984,9890,427e,41dc,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
9985,9985,9891,4281,41df,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('		;ARRAY?
9986,9986,9892,4283,41e1,20 4b,20 4b,"jr nz,$+$4d","jr nz,$+$4d","jr nz,$+$00",main.asm,"JR	NZ,GETVX	;EXIT"
9987,9987,9893,4285,41e3,fd 7e 01,fd 7e 01,"ld a,(iy+$01)","ld a,(iy+$01)","ld a,(iy+$00)",main.asm,"LD	A,(IY+1)"
9988,9988,9894,4288,41e6,fe 29,fe 29,cp $29,cp $29,cp $00,main.asm,CP	')'		;WHOLE ARRAY?
9989,9989,9895,428a,41e8,28 b9,28 b9,"jr z,$-$45","jr z,$-$45","jr z,$-$00",main.asm,"JR	Z,GETV1"
9990,9990,9896,428c,41ea,d5,d5,push de,push de,push de,main.asm,PUSH	DE		;SAVE TYPE
9991,9991,9897,428d,41eb,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)"
9992,9992,9898,428e,41ec,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
9993,9993,9899,428f,41ed,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",main.asm,"LD	H,(HL)"
9994,9994,9900,4290,41ee,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,"LD	L,A		;INDIRECT LINK"
9995,9995,9901,4291,41ef,e6 fe,e6 fe,and $fe,and $fe,and $00,main.asm,AND	0FEH
9996,9996,9902,4293,41f1,b4,b4,or h,or h,or h,main.asm,OR	H
9997,9997,9903,4294,41f2,28 cc,28 cc,"jr z,$-$32","jr z,$-$32","jr z,$-$00",main.asm,"JR	Z,ARRAY"
9998,9998,9904,4296,41f4,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LD	A,(HL)		;NO. OF DIMENSIONS"
9999,9999,9905,4297,41f5,b7,b7,or a,or a,or a,main.asm,OR	A
10000,10000,9906,4298,41f6,28 c8,28 c8,"jr z,$-$36","jr z,$-$36","jr z,$-$00",main.asm,"JR	Z,ARRAY"
10001,10001,9907,429a,41f8,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10002,10002,9908,429b,41f9,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",main.asm,"LD	DE,0		;ACCUMULATOR"
10003,10003,9909,429e,41fc,f5,f5,push af,push af,push af,main.asm,PUSH	AF
10004,10004,9910,429f,41fd,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY		;SKIP (
10005,10005,9911,42a1,41ff,e5,e5,push hl,push hl,push hl,main.asm,GETV3:          PUSH	HL
10006,10006,9912,42a2,4200,d5,d5,push de,push de,push de,main.asm,PUSH	DE
10007,10007,9913,42a3,4201,cd b7 18,cd 15 18,call $18b7,call $1815,call $0000,main.asm,CALL	EXPRI		;SUBSCRIPT
10008,10008,9914,42a6,4204,d9,d9,exx,exx,exx,main.asm,EXX
10009,10009,9915,42a7,4205,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
10010,10010,9916,42a8,4206,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"EX	(SP),HL"
10011,10011,9917,42a9,4207,4e,4e,"ld c,(hl)","ld c,(hl)","ld c,(hl)",main.asm,"LD	C,(HL)"
10012,10012,9918,42aa,4208,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10013,10013,9919,42ab,4209,46,46,"ld b,(hl)","ld b,(hl)","ld b,(hl)",main.asm,"LD	B,(HL)"
10014,10014,9920,42ac,420a,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10015,10015,9921,42ad,420b,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"EX	(SP),HL"
10016,10016,9922,42ae,420c,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10017,10017,9923,42af,420d,d5,d5,push de,push de,push de,main.asm,PUSH	DE
10018,10018,9924,42b0,420e,cd 41 37,cd 9f 36,call $3741,call $369f,call $0000,main.asm,CALL	MUL16		;HL=HL*BC
10019,10019,9925,42b3,4211,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
10020,10020,9926,42b4,4212,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
10021,10021,9927,42b5,4213,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10022,10022,9928,42b6,4214,b7,b7,or a,or a,or a,main.asm,OR	A
10023,10023,9929,42b7,4215,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",main.asm,"SBC	HL,BC"
10024,10024,9930,42b9,4217,3e 0f,3e 0f,"ld a,$0f","ld a,$0f","ld a,$00",main.asm,"LD	A,15"
10025,10025,9931,42bb,4219,30 a7,30 a7,"jr nc,$-$57","jr nc,$-$57","jr nc,$-$00",main.asm,"JR	NC,ERROR3	;""Subscript"""
10026,10026,9932,42bd,421b,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
10027,10027,9933,42be,421c,f1,f1,pop af,pop af,pop af,main.asm,POP	AF
10028,10028,9934,42bf,421d,3d,3d,dec a,dec a,dec a,main.asm,DEC	A		;DIMENSION COUNTER
10029,10029,9935,42c0,421e,20 1c,20 1c,"jr nz,$+$1e","jr nz,$+$1e","jr nz,$+$00",main.asm,"JR	NZ,GETV2"
10030,10030,9936,42c2,4220,cd 32 21,cd 90 20,call $2132,call $2090,call $0000,main.asm,CALL	BRAKET		;CLOSING BRACKET
10031,10031,9937,42c5,4223,f1,f1,pop af,pop af,pop af,main.asm,POP	AF		;RESTORE TYPE
10032,10032,9938,42c6,4224,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
10033,10033,9939,42c7,4225,cd 31 37,cd 8f 36,call $3731,call $368f,call $0000,main.asm,CALL	X14OR5		;DE=DE*n
10034,10034,9940,42ca,4228,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
10035,10035,9941,42cb,4229,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
10036,10036,9942,42cc,422a,57,57,"ld d,a","ld d,a","ld d,a",main.asm,"LD	D,A		;TYPE"
10037,10037,9943,42cd,422b,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
10038,10038,9944,42d0,422e,fe 3f,fe 3f,cp $3f,cp $3f,cp $00,main.asm,GETVX:          CP	'?'
10039,10039,9945,42d2,4230,28 26,28 26,"jr z,$+$28","jr z,$+$28","jr z,$+$00",main.asm,"JR	Z,GETV9"
10040,10040,9946,42d4,4232,fe 21,fe 21,cp $21,cp $21,cp $00,main.asm,CP	'!'
10041,10041,9947,42d6,4234,28 1e,28 1e,"jr z,$+$20","jr z,$+$20","jr z,$+$00",main.asm,"JR	Z,GETV8"
10042,10042,9948,42d8,4236,e5,e5,push hl,push hl,push hl,main.asm,GETVZ:          PUSH	HL		;SET EXIT CONDITIONS
10043,10043,9949,42d9,4237,dd e1,dd e1,pop ix,pop ix,pop ix,main.asm,POP	IX
10044,10044,9950,42db,4239,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
10045,10045,9951,42dc,423a,bf,bf,cp a,cp a,cp a,main.asm,CP	A
10046,10046,9952,42dd,423b,c9,c9,ret,ret,ret,main.asm,RET
10047,10047,9953,42de,423c,f5,f5,push af,push af,push af,main.asm,GETV2:          PUSH	AF
10048,10048,9954,42df,423d,cd 26 21,cd 84 20,call $2126,call $2084,call $0000,main.asm,CALL	COMMA
10049,10049,9955,42e2,4240,18 bd,18 bd,jr $-$41,jr $-$41,jr $-$00,main.asm,JR	GETV3
10050,10050,9956,42e4,4242,3e 04,3e 04,"ld a,$04","ld a,$04","ld a,$00",main.asm,"GETV5:          LD	A,4		;UNARY 32-BIT INDIRN."
10051,10051,9957,42e6,4244,18 09,18 09,jr $+$0b,jr $+$0b,jr $+$00,main.asm,JR	GETV7
10052,10052,9958,42e8,4246,af,af,xor a,xor a,xor a,main.asm,GETV6:          XOR	A		;UNARY 8-BIT INDIRECTION
10053,10053,9959,42e9,4247,18 06,18 06,jr $+$08,jr $+$08,jr $+$00,main.asm,JR	GETV7
10054,10054,9960,42eb,4249,3e 05,3e 05,"ld a,$05","ld a,$05","ld a,$00",main.asm,"GETVF:          LD	A,5		;VARIANT INDIRECTION"
10055,10055,9961,42ed,424b,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,main.asm,JR	GETV7
10056,10056,9962,42ef,424d,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",main.asm,"GETV4:          LD	A,128		;STATIC STRING"
10057,10057,9963,42f1,424f,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",main.asm,"GETV7:          SBC	HL,HL"
10058,10058,9964,42f3,4251,f5,f5,push af,push af,push af,main.asm,PUSH	AF
10059,10059,9965,42f4,4252,18 15,18 15,jr $+$17,jr $+$17,jr $+$00,main.asm,JR	GETV0
10060,10060,9966,42f6,4254,06 04,06 04,"ld b,$04","ld b,$04","ld b,$00",main.asm,"GETV8:          LD	B,4		;32-BIT BINARY INDIRN."
10061,10061,9967,42f8,4256,18 02,18 02,jr $+$04,jr $+$04,jr $+$00,main.asm,JR	GETVA
10062,10062,9968,42fa,4258,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",main.asm,"GETV9:          LD	B,0		;8-BIT BINARY INDIRN."
10063,10063,9969,42fc,425a,e5,e5,push hl,push hl,push hl,main.asm,GETVA:          PUSH	HL
10064,10064,9970,42fd,425b,dd e1,dd e1,pop ix,pop ix,pop ix,main.asm,POP	IX
10065,10065,9971,42ff,425d,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D		;TYPE"
10066,10066,9972,4300,425e,fe 81,fe 81,cp $81,cp $81,cp $00,main.asm,CP	129
10067,10067,9973,4302,4260,c8,c8,ret z,ret z,ret z,main.asm,RET	Z		;STRING!
10068,10068,9974,4303,4261,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
10069,10069,9975,4304,4262,cd a9 19,cd 07 19,call $19a9,call $1907,call $0000,main.asm,CALL	LOADN		;LEFT OPERAND
10070,10070,9976,4307,4265,cd 9b 1c,cd f9 1b,call $1c9b,call $1bf9,call $0000,main.asm,CALL	SFIX
10071,10071,9977,430a,4268,d9,d9,exx,exx,exx,main.asm,EXX
10072,10072,9978,430b,4269,e5,e5,push hl,push hl,push hl,main.asm,GETV0:          PUSH	HL
10073,10073,9979,430c,426a,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10074,10074,9980,430e,426c,cd e4 18,cd 42 18,call $18e4,call $1842,call $0000,main.asm,CALL	ITEMI
10075,10075,9981,4311,426f,d9,d9,exx,exx,exx,main.asm,EXX
10076,10076,9982,4312,4270,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
10077,10077,9983,4313,4271,f1,f1,pop af,pop af,pop af,main.asm,POP	AF
10078,10078,9984,4314,4272,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
10079,10079,9985,4315,4273,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
10080,10080,9986,4316,4274,dd e1,dd e1,pop ix,pop ix,pop ix,main.asm,POP	IX
10081,10081,9987,4318,4276,bf,bf,cp a,cp a,cp a,main.asm,CP	A
10082,10082,9988,4319,4277,c9,c9,ret,ret,ret,main.asm,RET
10083,10083,9989,431a,4278,fd 7e 01,fd 7e 01,"ld a,(iy+$01)","ld a,(iy+$01)","ld a,(iy+$00)",main.asm,"GETDEF:         LD	A,(IY+1)"
10084,10084,9990,431d,427b,cd 80 44,cd de 43,call $4480,call $43de,call $0000,main.asm,CALL	RANGE1
10085,10085,9991,4320,427e,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10086,10086,9992,4321,427f,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
10087,10087,9993,4324,4282,21 d8 55,21 d8 54,"ld hl,$55d8","ld hl,$54d8","ld hl,$0000",main.asm,"LD	HL,FNPTR"
10088,10088,9994,4327,4285,fe a4,fe a4,cp $a4,cp $a4,cp $00,main.asm,CP	TFN
10089,10089,9995,4329,4287,28 43,28 43,"jr z,$+$45","jr z,$+$45","jr z,$+$00",main.asm,"JR	Z,LOC2"
10090,10090,9996,432b,4289,21 da 55,21 da 54,"ld hl,$55da","ld hl,$54da","ld hl,$0000",main.asm,"LD	HL,PROPTR"
10091,10091,9997,432e,428c,fe f2,fe f2,cp $f2,cp $f2,cp $00,main.asm,CP	TPROC
10092,10092,9998,4330,428e,28 3c,28 3c,"jr z,$+$3e","jr z,$+$3e","jr z,$+$00",main.asm,"JR	Z,LOC2"
10093,10093,9999,4332,4290,37,37,scf,scf,scf,main.asm,SCF
10094,10094,10000,4333,4291,c9,c9,ret,ret,ret,main.asm,RET
10095,10095,10001,4334,4292,d6 40,d6 40,sub $40,sub $40,sub $00,main.asm,LOCATE:         SUB	'@'
10096,10096,10002,4336,4294,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10097,10097,10003,4337,4295,26 00,26 00,"ld h,$00","ld h,$00","ld h,$00",main.asm,"LD	H,0"
10098,10098,10004,4339,4297,fe 1b,fe 1b,cp $1b,cp $1b,cp $00,main.asm,CP	'Z'-'@'+1
10099,10099,10005,433b,4299,30 1d,30 1d,"jr nc,$+$1f","jr nc,$+$1f","jr nc,$+$00",main.asm,"JR	NC,LOC0		;NOT STATIC"
10100,10100,10006,433d,429b,87,87,"add a,a","add a,a","add a,a",main.asm,"ADD	A,A"
10101,10101,10007,433e,429c,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,"LD	L,A"
10102,10102,10008,433f,429d,fd 7e 01,fd 7e 01,"ld a,(iy+$01)","ld a,(iy+$01)","ld a,(iy+$00)",main.asm,"LD	A,(IY+1)	;2nd CHARACTER"
10103,10103,10009,4342,42a0,fe 25,fe 25,cp $25,cp $25,cp $00,main.asm,CP	'%'
10104,10104,10010,4344,42a2,20 20,20 20,"jr nz,$+$22","jr nz,$+$22","jr nz,$+$00",main.asm,"JR	NZ,LOC1		;NOT STATIC"
10105,10105,10011,4346,42a4,fd 7e 02,fd 7e 02,"ld a,(iy+$02)","ld a,(iy+$02)","ld a,(iy+$00)",main.asm,"LD	A,(IY+2)"
10106,10106,10012,4349,42a7,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10107,10107,10013,434b,42a9,28 19,28 19,"jr z,$+$1b","jr z,$+$1b","jr z,$+$00",main.asm,"JR	Z,LOC1		;NOT STATIC"
10108,10108,10014,434d,42ab,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL"
10109,10109,10015,434e,42ac,11 00 55,11 00 54,"ld de,$5500","ld de,$5400","ld de,$0000",main.asm,"LD	DE,STAVAR	;STATIC VARIABLES"
10110,10110,10016,4351,42af,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
10111,10111,10017,4352,42b0,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10112,10112,10018,4354,42b2,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10113,10113,10019,4356,42b4,16 04,16 04,"ld d,$04","ld d,$04","ld d,$00",main.asm,"LD	D,4		;INTEGER TYPE"
10114,10114,10020,4358,42b6,af,af,xor a,xor a,xor a,main.asm,XOR	A
10115,10115,10021,4359,42b7,c9,c9,ret,ret,ret,main.asm,RET
10116,10116,10022,435a,42b8,fe 1f,fe 1f,cp $1f,cp $1f,cp $00,main.asm,LOC0:           CP	'_'-'@'
10117,10117,10023,435c,42ba,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10118,10118,10024,435d,42bb,fe 3b,fe 3b,cp $3b,cp $3b,cp $00,main.asm,CP	'z'-'@'+1
10119,10119,10025,435f,42bd,3f,3f,ccf,ccf,ccf,main.asm,CCF
10120,10120,10026,4360,42be,3d,3d,dec a,dec a,dec a,main.asm,DEC	A		;SET NZ
10121,10121,10027,4361,42bf,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10122,10122,10028,4362,42c0,d6 03,d6 03,sub $03,sub $03,sub $00,main.asm,SUB	3
10123,10123,10029,4364,42c2,87,87,"add a,a","add a,a","add a,a",main.asm,"ADD	A,A"
10124,10124,10030,4365,42c3,6f,6f,"ld l,a","ld l,a","ld l,a",main.asm,"LD	L,A"
10125,10125,10031,4366,42c4,11 6c 55,11 6c 54,"ld de,$556c","ld de,$546c","ld de,$0000",main.asm,"LOC1:           LD	DE,DYNVAR	;DYNAMIC VARIABLES"
10126,10126,10032,4369,42c7,2d,2d,dec l,dec l,dec l,main.asm,DEC	L
10127,10127,10033,436a,42c8,2d,2d,dec l,dec l,dec l,main.asm,DEC	L
10128,10128,10034,436b,42c9,37,37,scf,scf,scf,main.asm,SCF
10129,10129,10035,436c,42ca,f8,f8,ret m,ret m,ret m,main.asm,RET	M
10130,10130,10036,436d,42cb,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE"
10131,10131,10037,436e,42cc,5e,5e,"ld e,(hl)","ld e,(hl)","ld e,(hl)",main.asm,"LOC2:           LD	E,(HL)"
10132,10132,10038,436f,42cd,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10133,10133,10039,4370,42ce,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",main.asm,"LD	D,(HL)"
10134,10134,10040,4371,42cf,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
10135,10135,10041,4372,42d0,b3,b3,or e,or e,or e,main.asm,OR	E
10136,10136,10042,4373,42d1,28 49,28 49,"jr z,$+$4b","jr z,$+$4b","jr z,$+$00",main.asm,"JR	Z,LOC6		;UNDEFINED VARIABLE"
10137,10137,10043,4375,42d3,62,62,"ld h,d","ld h,d","ld h,d",main.asm,"LD	H,D"
10138,10138,10044,4376,42d4,6b,6b,"ld l,e","ld l,e","ld l,e",main.asm,"LD	L,E"
10139,10139,10045,4377,42d5,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL		;SKIP LINK
10140,10140,10046,4378,42d6,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10141,10141,10047,4379,42d7,fd e5,fd e5,push iy,push iy,push iy,main.asm,PUSH	IY
10142,10142,10048,437b,42d9,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"LOC3:           LD	A,(HL)		;COMPARE"
10143,10143,10049,437c,42da,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10144,10144,10050,437d,42db,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10145,10145,10051,437f,42dd,fd be 00,fd be 00,cp (iy),cp (iy),cp (iy),main.asm,CP	(IY)
10146,10146,10052,4382,42e0,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",main.asm,"JR	Z,LOC3"
10147,10147,10053,4384,42e2,b7,b7,or a,or a,or a,main.asm,OR	A		;0=TERMINATOR
10148,10148,10054,4385,42e3,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",main.asm,"JR	Z,LOC5		;FOUND (MAYBE)"
10149,10149,10055,4387,42e5,fd e1,fd e1,pop iy,pop iy,pop iy,main.asm,LOC4:           POP	IY
10150,10150,10056,4389,42e7,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10151,10151,10057,438a,42e8,18 e2,18 e2,jr $-$1c,jr $-$1c,jr $-$00,main.asm,JR	LOC2		;TRY NEXT ENTRY
10152,10152,10058,438c,42ea,fd 2b,fd 2b,dec iy,dec iy,dec iy,main.asm,LOC5:           DEC	IY
10153,10153,10059,438e,42ec,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
10154,10154,10060,4391,42ef,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10155,10155,10061,4393,42f1,28 13,28 13,"jr z,$+$15","jr z,$+$15","jr z,$+$00",main.asm,"JR	Z,LOCX		;FOUND"
10156,10156,10062,4395,42f3,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10157,10157,10063,4397,42f5,cd 73 44,cd d1 43,call $4473,call $43d1,call $0000,main.asm,CALL	RANGE
10158,10158,10064,439a,42f8,38 0c,38 0c,"jr c,$+$0e","jr c,$+$0e","jr c,$+$00",main.asm,"JR	C,LOCX		;FOUND"
10159,10159,10065,439c,42fa,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10160,10160,10066,439e,42fc,28 e7,28 e7,"jr z,$-$17","jr z,$-$17","jr z,$-$00",main.asm,"JR	Z,LOC4		;KEEP LOOKING"
10161,10161,10067,43a0,42fe,fd 7e ff,fd 7e ff,"ld a,(iy-$01)","ld a,(iy-$01)","ld a,(iy-$00)",main.asm,"LD	A,(IY-1)"
10162,10162,10068,43a3,4301,cd 80 44,cd de 43,call $4480,call $43de,call $0000,main.asm,CALL	RANGE1
10163,10163,10069,43a6,4304,30 df,30 df,"jr nc,$-$1f","jr nc,$-$1f","jr nc,$-$00",main.asm,"JR	NC,LOC4		;KEEP LOOKING"
10164,10164,10070,43a8,4306,d1,d1,pop de,pop de,pop de,main.asm,LOCX:           POP	DE
10165,10165,10071,43a9,4307,fd 7e ff,fd 7e ff,"ld a,(iy-$01)","ld a,(iy-$01)","ld a,(iy-$00)",main.asm,"TYPE:           LD	A,(IY-1)"
10166,10166,10072,43ac,430a,fe 24,fe 24,cp $24,cp $24,cp $00,main.asm,CP	'$'
10167,10167,10073,43ae,430c,16 81,16 81,"ld d,$81","ld d,$81","ld d,$00",main.asm,"LD	D,129"
10168,10168,10074,43b0,430e,c8,c8,ret z,ret z,ret z,main.asm,RET	Z		;STRING
10169,10169,10075,43b1,430f,fe 26,fe 26,cp $26,cp $26,cp $00,main.asm,CP	'&'
10170,10170,10076,43b3,4311,16 01,16 01,"ld d,$01","ld d,$01","ld d,$00",main.asm,"LD	D,1"
10171,10171,10077,43b5,4313,c8,c8,ret z,ret z,ret z,main.asm,RET	Z		;BYTE
10172,10172,10078,43b6,4314,fe 25,fe 25,cp $25,cp $25,cp $00,main.asm,CP	'%'
10173,10173,10079,43b8,4316,16 04,16 04,"ld d,$04","ld d,$04","ld d,$00",main.asm,"LD	D,4"
10174,10174,10080,43ba,4318,c8,c8,ret z,ret z,ret z,main.asm,RET	Z		;INTEGER
10175,10175,10081,43bb,4319,14,14,inc d,inc d,inc d,main.asm,INC	D
10176,10176,10082,43bc,431a,bf,bf,cp a,cp a,cp a,main.asm,CP	A
10177,10177,10083,43bd,431b,c9,c9,ret,ret,ret,main.asm,RET
10178,10178,10084,43be,431c,3c,3c,inc a,inc a,inc a,main.asm,LOC6:           INC	A		;SET NZ
10179,10179,10085,43bf,431d,c9,c9,ret,ret,ret,main.asm,RET
10180,10180,10086,43c0,431e,af,af,xor a,xor a,xor a,main.asm,CREATE:         XOR	A
10181,10181,10087,43c1,431f,ed 5b e0 55,ed 5b e0 54,"ld de,($55e0)","ld de,($54e0)","ld de,($0000)",main.asm,"LD	DE,(FREE)"
10182,10182,10088,43c5,4323,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",main.asm,"LD	(HL),D"
10183,10183,10089,43c6,4324,2b,2b,dec hl,dec hl,dec hl,main.asm,DEC	HL
10184,10184,10090,43c7,4325,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",main.asm,"LD	(HL),E"
10185,10185,10091,43c8,4326,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10186,10186,10092,43c9,4327,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10187,10187,10093,43ca,4328,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10188,10188,10094,43cb,4329,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10189,10189,10095,43cc,432a,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10190,10190,10096,43cd,432b,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,LOC7:           INC	IY
10191,10191,10097,43cf,432d,cd 73 44,cd d1 43,call $4473,call $43d1,call $0000,main.asm,CALL	RANGE		;END OF VARIABLE?
10192,10192,10098,43d2,4330,38 14,38 14,"jr c,$+$16","jr c,$+$16","jr c,$+$00",main.asm,"JR	C,LOC8"
10193,10193,10099,43d4,4332,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10194,10194,10100,43d5,4333,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10195,10195,10101,43d6,4334,cd 80 44,cd de 43,call $4480,call $43de,call $0000,main.asm,CALL	RANGE1
10196,10196,10102,43d9,4337,30 f2,30 f2,"jr nc,$-$0c","jr nc,$-$0c","jr nc,$-$00",main.asm,"JR	NC,LOC7"
10197,10197,10103,43db,4339,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10198,10198,10104,43dd,433b,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",main.asm,"JR	Z,LOC8"
10199,10199,10105,43df,433d,fd 7e 01,fd 7e 01,"ld a,(iy+$01)","ld a,(iy+$01)","ld a,(iy+$00)",main.asm,"LD	A,(IY+1)"
10200,10200,10106,43e2,4340,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10201,10201,10107,43e4,4342,28 e7,28 e7,"jr z,$-$17","jr z,$-$17","jr z,$-$00",main.asm,"JR	Z,LOC7"
10202,10202,10108,43e6,4344,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10203,10203,10109,43e8,4346,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",main.asm,"LOC8:           LD	(HL),0		;TERMINATOR"
10204,10204,10110,43ea,4348,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10205,10205,10111,43eb,4349,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
10206,10206,10112,43ec,434a,cd a9 43,cd 07 43,call $43a9,call $4307,call $0000,main.asm,CALL	TYPE
10207,10207,10113,43ef,434d,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
10208,10208,10114,43f2,4350,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10209,10209,10115,43f4,4352,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",main.asm,"LD	A,2		;SIZE OF INDIRECT LINK"
10210,10210,10116,43f6,4354,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",main.asm,"JR	Z,LOC9"
10211,10211,10117,43f8,4356,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
10212,10212,10118,43f9,4357,b7,b7,or a,or a,or a,main.asm,OR	A		;STRING?
10213,10213,10119,43fa,4358,f2 ff 43,f2 5d 43,"jp p,$43ff","jp p,$435d","jp p,$0000",main.asm,"JP	P,LOC9"
10214,10214,10120,43fd,435b,3e 04,3e 04,"ld a,$04","ld a,$04","ld a,$00",main.asm,"LD	A,4"
10215,10215,10121,43ff,435d,36 00,36 00,"ld (hl),$00","ld (hl),$00","ld (hl),$00",main.asm,"LOC9:           LD	(HL),0		;INITIALISE TO ZERO"
10216,10216,10122,4401,435f,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10217,10217,10123,4402,4360,3d,3d,dec a,dec a,dec a,main.asm,DEC	A
10218,10218,10124,4403,4361,20 fa,20 fa,"jr nz,$-$04","jr nz,$-$04","jr nz,$-$00",main.asm,"JR	NZ,LOC9"
10219,10219,10125,4405,4363,22 e0 55,22 e0 54,"ld ($55e0),hl","ld ($54e0),hl","ld ($0000),hl",main.asm,"LD	(FREE),HL"
10220,10220,10126,4408,4366,cd 0a 33,cd 68 32,call $330a,call $3268,call $0000,main.asm,CALL	CHECK
10221,10221,10127,440b,4369,e1,e1,pop hl,pop hl,pop hl,main.asm,POP	HL
10222,10222,10128,440c,436a,af,af,xor a,xor a,xor a,main.asm,XOR	A
10223,10223,10129,440d,436b,c9,c9,ret,ret,ret,main.asm,RET
10224,10224,10130,440e,436c,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,LINNUM:         CALL	NXT
10225,10225,10131,4411,436f,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",main.asm,"LD	HL,0"
10226,10226,10132,4414,4372,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LINNM1:         LD	A,(IY)"
10227,10227,10133,4417,4375,d6 30,d6 30,sub $30,sub $30,sub $00,main.asm,SUB	'0'
10228,10228,10134,4419,4377,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10229,10229,10135,441a,4378,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,main.asm,CP	10
10230,10230,10136,441c,437a,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC
10231,10231,10137,441d,437b,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10232,10232,10138,441f,437d,54,54,"ld d,h","ld d,h","ld d,h",main.asm,"LD	D,H"
10233,10233,10139,4420,437e,5d,5d,"ld e,l","ld e,l","ld e,l",main.asm,"LD	E,L"
10234,10234,10140,4421,437f,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL		;*2"
10235,10235,10141,4422,4380,38 0f,38 0f,"jr c,$+$11","jr c,$+$11","jr c,$+$00",main.asm,"JR	C,TOOBIGmn"
10236,10236,10142,4424,4382,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL		;*4"
10237,10237,10143,4425,4383,38 0c,38 0c,"jr c,$+$0e","jr c,$+$0e","jr c,$+$00",main.asm,"JR	C,TOOBIGmn"
10238,10238,10144,4427,4385,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE		;*5"
10239,10239,10145,4428,4386,38 09,38 09,"jr c,$+$0b","jr c,$+$0b","jr c,$+$00",main.asm,"JR	C,TOOBIGmn"
10240,10240,10146,442a,4388,29,29,"add hl,hl","add hl,hl","add hl,hl",main.asm,"ADD	HL,HL		;*10"
10241,10241,10147,442b,4389,38 06,38 06,"jr c,$+$08","jr c,$+$08","jr c,$+$00",main.asm,"JR	C,TOOBIGmn"
10242,10242,10148,442d,438b,5f,5f,"ld e,a","ld e,a","ld e,a",main.asm,"LD	E,A"
10243,10243,10149,442e,438c,16 00,16 00,"ld d,$00","ld d,$00","ld d,$00",main.asm,"LD	D,0"
10244,10244,10150,4430,438e,19,19,"add hl,de","add hl,de","add hl,de",main.asm,"ADD	HL,DE		;ADD IN DIGIT"
10245,10245,10151,4431,438f,30 e1,30 e1,"jr nc,$-$1d","jr nc,$-$1d","jr nc,$-$00",main.asm,"JR	NC,LINNM1"
10246,10246,10152,4433,4391,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",main.asm,"TOOBIGmn:         LD	A,20"
10247,10247,10153,4435,4393,c3 c8 3f,c3 26 3f,jp $3fc8,jp $3f26,jp $0000,main.asm,"JP	ERROR_		;""Too big"""
10248,10248,10154,4438,4396,cd 0e 44,cd 6c 43,call $440e,call $436c,call $0000,main.asm,PAIR:           CALL	LINNUM		;FIRST
10249,10249,10155,443b,4399,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
10250,10250,10156,443c,439a,b5,b5,or l,or l,or l,main.asm,OR	L
10251,10251,10157,443d,439b,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,PAIR1"
10252,10252,10158,443f,439d,2e 0a,2e 0a,"ld l,$0a","ld l,$0a","ld l,$00",main.asm,"LD	L,10"
10253,10253,10159,4441,439f,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,main.asm,PAIR1:          CALL	TERMQ
10254,10254,10160,4444,43a2,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10255,10255,10161,4446,43a4,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
10256,10256,10162,4447,43a5,21 0a 00,21 0a 00,"ld hl,$000a","ld hl,$000a","ld hl,$0000",main.asm,"LD	HL,10"
10257,10257,10163,444a,43a8,c4 0e 44,c4 6c 43,"call nz,$440e","call nz,$436c","call nz,$0000",main.asm,"CALL	NZ,LINNUM	;SECOND"
10258,10258,10164,444d,43ab,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"EX	(SP),HL"
10259,10259,10165,444e,43ac,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
10260,10260,10166,444f,43ad,78,78,"ld a,b","ld a,b","ld a,b",main.asm,"LD	A,B"
10261,10261,10167,4450,43ae,b1,b1,or c,or c,or c,main.asm,OR	C
10262,10262,10168,4451,43af,c0,c0,ret nz,ret nz,ret nz,main.asm,RET	NZ
10263,10263,10169,4452,43b0,cd d9 3f,cd 37 3f,call $3fd9,call $3f37,call $0000,main.asm,CALL	EXTERR
10264,10264,10170,4455,43b3,53,53,"ld d,e","ld d,e","ld d,e",main.asm,"DB	""Silly"""
10265,10265,10171,4456,43b4,69,69,"ld l,c","ld l,c","ld l,c",main.asm,
10266,10266,10172,4457,43b5,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
10267,10267,10173,4458,43b6,6c,6c,"ld l,h","ld l,h","ld l,h",main.asm,
10268,10268,10174,4459,43b7,79,79,"ld a,c","ld a,c","ld a,c",main.asm,
10269,10269,10175,445a,43b8,00,00,nop,nop,nop,main.asm,DB	0
10270,10270,10176,445b,43b9,cd 0e 44,cd 6c 43,call $440e,call $436c,call $0000,main.asm,DLPAIR:         CALL	LINNUM
10271,10271,10177,445e,43bc,e5,e5,push hl,push hl,push hl,main.asm,PUSH	HL
10272,10272,10178,445f,43bd,cd ba 35,cd 18 35,call $35ba,call $3518,call $0000,main.asm,CALL	TERMQ
10273,10273,10179,4462,43c0,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",main.asm,"JR	Z,DLP1"
10274,10274,10180,4464,43c2,fe e7,fe e7,cp $e7,cp $e7,cp $00,main.asm,CP	TIF
10275,10275,10181,4466,43c4,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",main.asm,"JR	Z,DLP1"
10276,10276,10182,4468,43c6,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10277,10277,10183,446a,43c8,cd 0e 44,cd 6c 43,call $440e,call $436c,call $0000,main.asm,CALL	LINNUM
10278,10278,10184,446d,43cb,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"DLP1:           EX	(SP),HL"
10279,10279,10185,446e,43cc,cd c7 41,cd 25 41,call $41c7,call $4125,call $0000,main.asm,CALL	FINDL
10280,10280,10186,4471,43cf,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
10281,10281,10187,4472,43d0,c9,c9,ret,ret,ret,main.asm,RET
10282,10282,10188,4473,43d1,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"RANGE:          LD	A,(IY)"
10283,10283,10189,4476,43d4,fe 24,fe 24,cp $24,cp $24,cp $00,main.asm,CP	'$'
10284,10284,10190,4478,43d6,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10285,10285,10191,4479,43d7,fe 27,fe 27,cp $27,cp $27,cp $00,main.asm,CP	'&'+1
10286,10286,10192,447b,43d9,3f,3f,ccf,ccf,ccf,main.asm,CCF
10287,10287,10193,447c,43da,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC
10288,10288,10194,447d,43db,fe 28,fe 28,cp $28,cp $28,cp $00,main.asm,CP	'('
10289,10289,10195,447f,43dd,c8,c8,ret z,ret z,ret z,main.asm,RET	Z
10290,10290,10196,4480,43de,fe 30,fe 30,cp $30,cp $30,cp $00,main.asm,RANGE1:         CP	'0'
10291,10291,10197,4482,43e0,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10292,10292,10198,4483,43e1,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,main.asm,CP	'9'+1
10293,10293,10199,4485,43e3,3f,3f,ccf,ccf,ccf,main.asm,CCF
10294,10294,10200,4486,43e4,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC
10295,10295,10201,4487,43e5,fe 40,fe 40,cp $40,cp $40,cp $00,main.asm,CP	'@'		;V2.4
10296,10296,10202,4489,43e7,c8,c8,ret z,ret z,ret z,main.asm,RET	Z
10297,10297,10203,448a,43e8,fe 41,fe 41,cp $41,cp $41,cp $00,main.asm,RANGE2:         CP	'A'
10298,10298,10204,448c,43ea,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10299,10299,10205,448d,43eb,fe 5b,fe 5b,cp $5b,cp $5b,cp $00,main.asm,CP	'Z'+1
10300,10300,10206,448f,43ed,3f,3f,ccf,ccf,ccf,main.asm,CCF
10301,10301,10207,4490,43ee,d0,d0,ret nc,ret nc,ret nc,main.asm,RET	NC
10302,10302,10208,4491,43ef,fe 5f,fe 5f,cp $5f,cp $5f,cp $00,main.asm,CP	'_'
10303,10303,10209,4493,43f1,d8,d8,ret c,ret c,ret c,main.asm,RET	C
10304,10304,10210,4494,43f2,fe 7b,fe 7b,cp $7b,cp $7b,cp $00,main.asm,CP	'z'+1
10305,10305,10211,4496,43f4,3f,3f,ccf,ccf,ccf,main.asm,CCF
10306,10306,10212,4497,43f5,c9,c9,ret,ret,ret,main.asm,RET
10307,10307,10213,4498,43f6,12,12,"ld (de),a","ld (de),a","ld (de),a",main.asm,"LEXAN1:         LD	(DE),A		;TRANSFER TO BUFFER"
10308,10308,10214,4499,43f7,13,13,inc de,inc de,inc de,main.asm,INC	DE		;INCREMENT POINTERS
10309,10309,10215,449a,43f8,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,INC	IY
10310,10310,10216,449c,43fa,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LEXAN2:         LD	A,E		;MAIN ENTRY"
10311,10311,10217,449d,43fb,fe fc,fe fc,cp $fc,cp $fc,cp $00,main.asm,CP	252		;TEST LENGTH
10312,10312,10218,449f,43fd,3e 13,3e 13,"ld a,$13","ld a,$13","ld a,$00",main.asm,"LD	A,19"
10313,10313,10219,44a1,43ff,d2 c8 3f,d2 26 3f,"jp nc,$3fc8","jp nc,$3f26","jp nc,$0000",main.asm,"JP	NC,ERROR_	;'String too long'"
10314,10314,10220,44a4,4402,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"LD	A,(IY)"
10315,10315,10221,44a7,4405,fe 0d,fe 0d,cp $0d,cp $0d,cp $00,main.asm,CP	CR
10316,10316,10222,44a9,4407,c8,c8,ret z,ret z,ret z,main.asm,RET	Z		;END OF LINE
10317,10317,10223,44aa,4408,cd 80 44,cd de 43,call $4480,call $43de,call $0000,main.asm,CALL	RANGE1
10318,10318,10224,44ad,440b,30 04,30 04,"jr nc,$+$06","jr nc,$+$06","jr nc,$+$00",main.asm,"JR	NC,LEXAN3"
10319,10319,10225,44af,440d,cb a9,cb a9,"res 5,c","res 5,c","res 5,c",main.asm,"RES	5,C		;NOT IN VARIABLE"
10320,10320,10226,44b1,440f,cb 99,cb 99,"res 3,c","res 3,c","res 3,c",main.asm,"RES	3,C		;NOT IN HEX"
10321,10321,10227,44b3,4411,fe 20,fe 20,cp $20,cp $20,cp $00,main.asm,LEXAN3:         CP	' '
10322,10322,10228,44b5,4413,28 e1,28 e1,"jr z,$-$1d","jr z,$-$1d","jr z,$-$00",main.asm,"JR	Z,LEXAN1	;PASS SPACES"
10323,10323,10229,44b7,4415,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,main.asm,"CP	','"
10324,10324,10230,44b9,4417,28 dd,28 dd,"jr z,$-$21","jr z,$-$21","jr z,$-$00",main.asm,"JR	Z,LEXAN1	;PASS COMMAS"
10325,10325,10231,44bb,4419,fe 47,fe 47,cp $47,cp $47,cp $00,main.asm,CP	'G'
10326,10326,10232,44bd,441b,38 02,38 02,"jr c,$+$04","jr c,$+$04","jr c,$+$00",main.asm,"JR	C,LEXAN4"
10327,10327,10233,44bf,441d,cb 99,cb 99,"res 3,c","res 3,c","res 3,c",main.asm,"RES	3,C		;NOT IN HEX"
10328,10328,10234,44c1,441f,fe 22,fe 22,cp $22,cp $22,cp $00,main.asm,"LEXAN4:         CP	'""'"
10329,10329,10235,44c3,4421,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",main.asm,"JR	NZ,LEXAN5"
10330,10330,10236,44c5,4423,cb 11,cb 11,rl c,rl c,rl c,main.asm,RL	C
10331,10331,10237,44c7,4425,3f,3f,ccf,ccf,ccf,main.asm,CCF			;TOGGLE C7
10332,10332,10238,44c8,4426,cb 19,cb 19,rr c,rr c,rr c,main.asm,RR	C
10333,10333,10239,44ca,4428,cb 61,cb 61,"bit 4,c","bit 4,c","bit 4,c",main.asm,"LEXAN5:         BIT	4,C"
10334,10334,10240,44cc,442a,28 10,28 10,"jr z,$+$12","jr z,$+$12","jr z,$+$00",main.asm,"JR	Z,LEXAN6"
10335,10335,10241,44ce,442c,cb a1,cb a1,"res 4,c","res 4,c","res 4,c",main.asm,"RES	4,C"
10336,10336,10242,44d0,442e,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
10337,10337,10243,44d1,442f,d5,d5,push de,push de,push de,main.asm,PUSH	DE
10338,10338,10244,44d2,4430,cd 0e 44,cd 6c 43,call $440e,call $436c,call $0000,main.asm,CALL	LINNUM		;GET LINE NUMBER
10339,10339,10245,44d5,4433,d1,d1,pop de,pop de,pop de,main.asm,POP	DE
10340,10340,10246,44d6,4434,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
10341,10341,10247,44d7,4435,7c,7c,"ld a,h","ld a,h","ld a,h",main.asm,"LD	A,H"
10342,10342,10248,44d8,4436,b5,b5,or l,or l,or l,main.asm,OR	L
10343,10343,10249,44d9,4437,c4 43 45,c4 a1 44,"call nz,$4543","call nz,$44a1","call nz,$0000",main.asm,"CALL	NZ,ENCODE	;ENCODE LINE NUMBER"
10344,10344,10250,44dc,443a,18 be,18 be,jr $-$40,jr $-$40,jr $-$00,main.asm,JR	LEXAN2		;CONTINUE
10345,10345,10251,44de,443c,0d,0d,dec c,dec c,dec c,main.asm,LEXAN6:         DEC	C
10346,10346,10252,44df,443d,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",main.asm,"JR	Z,LEXAN7	;C=1 (LEFT)"
10347,10347,10253,44e1,443f,0c,0c,inc c,inc c,inc c,main.asm,INC	C
10348,10348,10254,44e2,4440,20 b4,20 b4,"jr nz,$-$4a","jr nz,$-$4a","jr nz,$-$00",main.asm,"JR	NZ,LEXAN1"
10349,10349,10255,44e4,4442,b7,b7,or a,or a,or a,main.asm,OR	A
10350,10350,10256,44e5,4443,f4 27 40,f4 85 3f,"call p,$4027","call p,$3f85","call p,$0000",main.asm,"CALL	P,LEX		;TOKENISE IF POSS."
10351,10351,10257,44e8,4446,18 12,18 12,jr $+$14,jr $+$14,jr $+$00,main.asm,JR	LEXAN8
10352,10352,10258,44ea,4448,fe 2a,fe 2a,cp $2a,cp $2a,cp $00,main.asm,LEXAN7:         CP	'*'
10353,10353,10259,44ec,444a,28 16,28 16,"jr z,$+$18","jr z,$+$18","jr z,$+$00",main.asm,"JR	Z,LEXAN9"
10354,10354,10260,44ee,444c,b7,b7,or a,or a,or a,main.asm,OR	A
10355,10355,10261,44ef,444d,f4 27 40,f4 85 3f,"call p,$4027","call p,$3f85","call p,$0000",main.asm,"CALL	P,LEX		;TOKENISE IF POSS."
10356,10356,10262,44f2,4450,fe 8f,fe 8f,cp $8f,cp $8f,cp $00,main.asm,CP	TOKLO
10357,10357,10263,44f4,4452,38 06,38 06,"jr c,$+$08","jr c,$+$08","jr c,$+$00",main.asm,"JR	C,LEXAN8"
10358,10358,10264,44f6,4454,fe 94,fe 94,cp $94,cp $94,cp $00,main.asm,CP	TOKHI+1
10359,10359,10265,44f8,4456,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",main.asm,"JR	NC,LEXAN8"
10360,10360,10266,44fa,4458,c6 40,c6 40,"add a,$40","add a,$40","add a,$00",main.asm,"ADD	A,OFFSET	;LEFT VERSION"
10361,10361,10267,44fc,445a,fe f4,fe f4,cp $f4,cp $f4,cp $00,main.asm,LEXAN8:         CP	TREM
10362,10362,10268,44fe,445c,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",main.asm,"JR	Z,LEXAN9"
10363,10363,10269,4500,445e,fe dc,fe dc,cp $dc,cp $dc,cp $00,main.asm,CP	TDATA
10364,10364,10270,4502,4460,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,LEXANA"
10365,10365,10271,4504,4462,cb f1,cb f1,"set 6,c","set 6,c","set 6,c",main.asm,"LEXAN9:         SET	6,C		;QUIT TOKENISING"
10366,10366,10272,4506,4464,fe a4,fe a4,cp $a4,cp $a4,cp $00,main.asm,LEXANA:         CP	TFN
10367,10367,10273,4508,4466,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",main.asm,"JR	Z,LEXANB"
10368,10368,10274,450a,4468,fe f2,fe f2,cp $f2,cp $f2,cp $00,main.asm,CP	TPROC
10369,10369,10275,450c,446a,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",main.asm,"JR	Z,LEXANB"
10370,10370,10276,450e,446c,cd 8a 44,cd e8 43,call $448a,call $43e8,call $0000,main.asm,CALL	RANGE2
10371,10371,10277,4511,446f,38 02,38 02,"jr c,$+$04","jr c,$+$04","jr c,$+$00",main.asm,"JR	C,LEXANC"
10372,10372,10278,4513,4471,cb e9,cb e9,"set 5,c","set 5,c","set 5,c",main.asm,"LEXANB:         SET	5,C		;IN VARIABLE/FN/PROC"
10373,10373,10279,4515,4473,fe 26,fe 26,cp $26,cp $26,cp $00,main.asm,LEXANC:         CP	'&'
10374,10374,10280,4517,4475,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,LEXAND"
10375,10375,10281,4519,4477,cb d9,cb d9,"set 3,c","set 3,c","set 3,c",main.asm,"SET	3,C		;IN HEX"
10376,10376,10282,451b,4479,21 3a 45,21 98 44,"ld hl,$453a","ld hl,$4498","ld hl,$0000",main.asm,"LEXAND:         LD	HL,LIST1"
10377,10377,10283,451e,447c,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
10378,10378,10284,451f,447d,01 06 00,01 06 00,"ld bc,$0006","ld bc,$0006","ld bc,$0000",main.asm,"LD	BC,LIST1L"
10379,10379,10285,4522,4480,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
10380,10380,10286,4524,4482,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
10381,10381,10287,4525,4483,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,LEXANE"
10382,10382,10288,4527,4485,cb e1,cb e1,"set 4,c","set 4,c","set 4,c",main.asm,"SET	4,C		;ACCEPT LINE NUMBER"
10383,10383,10289,4529,4487,21 3e 45,21 9c 44,"ld hl,$453e","ld hl,$449c","ld hl,$0000",main.asm,"LEXANE:         LD	HL,LIST2"
10384,10384,10290,452c,448a,c5,c5,push bc,push bc,push bc,main.asm,PUSH	BC
10385,10385,10291,452d,448b,01 05 00,01 05 00,"ld bc,$0005","ld bc,$0005","ld bc,$0000",main.asm,"LD	BC,LIST2L"
10386,10386,10292,4530,448e,ed b1,ed b1,cpir,cpir,cpir,main.asm,CPIR
10387,10387,10293,4532,4490,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC
10388,10388,10294,4533,4491,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",main.asm,"JR	NZ,LEXANF"
10389,10389,10295,4535,4493,cb c1,cb c1,"set 0,c","set 0,c","set 0,c",main.asm,"SET	0,C		;ENTER LEFT MODE"
10390,10390,10296,4537,4495,c3 98 44,c3 f6 43,jp $4498,jp $43f6,jp $0000,main.asm,LEXANF:         JP	LEXAN1
10391,10391,10297,453a,4498,e5,e5,push hl,push hl,push hl,main.asm,LIST1:          DB	TGOTO
10392,10392,10298,453b,4499,e4 f7 fc,e4 f7 fc,"call po,$fcf7","call po,$fcf7","call po,$0000",main.asm,DB	TGOSUB
10393,10393,10299,453e,449c,8c,8c,"adc a,h","adc a,h","adc a,h",main.asm,LIST2:          DB	TTHEN
10394,10394,10300,453f,449d,8b,8b,"adc a,e","adc a,e","adc a,e",main.asm,DB	TELSE
10395,10395,10301,4540,449e,f5,f5,push af,push af,push af,main.asm,DB	TREPEAT
10396,10396,10302,4541,449f,85,85,"add a,l","add a,l","add a,l",main.asm,DB	TERROR
10397,10397,10303,4542,44a0,3a cb e1,3a cb e1,"ld a,($e1cb)","ld a,($e1cb)","ld a,($0000)",main.asm,DB	':'
10398,10398,10304,4545,44a3,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10399,10399,10305,4546,44a4,36 8d,36 8d,"ld (hl),$8d","ld (hl),$8d","ld (hl),$00",main.asm,"LD	(HL),TLINO"
10400,10400,10306,4548,44a6,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10401,10401,10307,4549,44a7,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
10402,10402,10308,454a,44a8,e6 c0,e6 c0,and $c0,and $c0,and $00,main.asm,AND	0C0H
10403,10403,10309,454c,44aa,0f,0f,rrca,rrca,rrca,main.asm,RRCA
10404,10404,10310,454d,44ab,0f,0f,rrca,rrca,rrca,main.asm,RRCA
10405,10405,10311,454e,44ac,47,47,"ld b,a","ld b,a","ld b,a",main.asm,"LD	B,A"
10406,10406,10312,454f,44ad,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LD	A,E"
10407,10407,10313,4550,44ae,e6 c0,e6 c0,and $c0,and $c0,and $00,main.asm,AND	0C0H
10408,10408,10314,4552,44b0,b0,b0,or b,or b,or b,main.asm,OR	B
10409,10409,10315,4553,44b1,0f,0f,rrca,rrca,rrca,main.asm,RRCA
10410,10410,10316,4554,44b2,0f,0f,rrca,rrca,rrca,main.asm,RRCA
10411,10411,10317,4555,44b3,ee 54,ee 54,xor $54,xor $54,xor $00,main.asm,XOR	01010100B
10412,10412,10318,4557,44b5,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10413,10413,10319,4558,44b6,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10414,10414,10320,4559,44b7,7b,7b,"ld a,e","ld a,e","ld a,e",main.asm,"LD	A,E"
10415,10415,10321,455a,44b8,e6 3f,e6 3f,and $3f,and $3f,and $00,main.asm,AND	3FH
10416,10416,10322,455c,44ba,f6 40,f6 40,or $40,or $40,or $00,main.asm,OR	'@'
10417,10417,10323,455e,44bc,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10418,10418,10324,455f,44bd,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10419,10419,10325,4560,44be,7a,7a,"ld a,d","ld a,d","ld a,d",main.asm,"LD	A,D"
10420,10420,10326,4561,44bf,e6 3f,e6 3f,and $3f,and $3f,and $00,main.asm,AND	3FH
10421,10421,10327,4563,44c1,f6 40,f6 40,or $40,or $40,or $00,main.asm,OR	'@'
10422,10422,10328,4565,44c3,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",main.asm,"LD	(HL),A"
10423,10423,10329,4566,44c4,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10424,10424,10330,4567,44c5,eb,eb,"ex de,hl","ex de,hl","ex de,hl",main.asm,"EX	DE,HL"
10425,10425,10331,4568,44c6,c9,c9,ret,ret,ret,main.asm,RET
10426,10426,10332,4569,44c7,2a ee 55,2a ee 54,"ld hl,($55ee)","ld hl,($54ee)","ld hl,($0000)",main.asm,"REPORT:         LD	HL,(ERRTXT)"
10427,10427,10333,456c,44ca,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",main.asm,"TEXT_:          LD	A,(HL)"
10428,10428,10334,456d,44cb,23,23,inc hl,inc hl,inc hl,main.asm,INC	HL
10429,10429,10335,456e,44cc,b7,b7,or a,or a,or a,main.asm,OR	A
10430,10430,10336,456f,44cd,c8,c8,ret z,ret z,ret z,main.asm,RET	Z
10431,10431,10337,4570,44ce,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,main.asm,CP	LF
10432,10432,10338,4572,44d0,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",main.asm,"JR	Z,TEXTLF	;Token for TINT"
10433,10433,10339,4574,44d2,cd 9f 41,cd fd 40,call $419f,call $40fd,call $0000,main.asm,CALL	OUT
10434,10434,10340,4577,44d5,18 f3,18 f3,jr $-$0b,jr $-$0b,jr $-$00,main.asm,JR	TEXT_
10435,10435,10341,4579,44d7,cd 86 41,cd e4 40,call $4186,call $40e4,call $0000,main.asm,TEXTLF:         CALL	OUTCHR
10436,10436,10342,457c,44da,18 ee,18 ee,jr $-$10,jr $-$10,jr $-$00,main.asm,JR	TEXT_
10437,10437,10343,457e,44dc,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"TELL:           EX	(SP),HL		;GET RETURN ADDRESS"
10438,10438,10344,457f,44dd,cd 6c 45,cd ca 44,call $456c,call $44ca,call $0000,main.asm,CALL	TEXT_
10439,10439,10345,4582,44e0,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",main.asm,"EX	(SP),HL"
10440,10440,10346,4583,44e1,c9,c9,ret,ret,ret,main.asm,RET
10441,10441,10347,4584,44e2,cd 8f 45,cd ed 44,call $458f,call $44ed,call $0000,main.asm,NLIST:          CALL	NXT
10442,10442,10348,4587,44e5,fe 2c,fe 2c,cp $2c,cp $2c,cp $00,main.asm,"CP	','		;ANOTHER VARIABLE?"
10443,10443,10349,4589,44e7,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",main.asm,"JR	Z,NXT1"
10444,10444,10350,458b,44e9,c1,c1,pop bc,pop bc,pop bc,main.asm,POP	BC		;DITCH RETURN ADDRESS
10445,10445,10351,458c,44ea,c3 1d 25,c3 7b 24,jp $251d,jp $247b,jp $0000,main.asm,JP	XEQ
10446,10446,10352,458f,44ed,fd 7e 00,fd 7e 00,"ld a,(iy)","ld a,(iy)","ld a,(iy)",main.asm,"NXT:            LD	A,(IY)"
10447,10447,10353,4592,44f0,fe 20,fe 20,cp $20,cp $20,cp $00,main.asm,CP	' '
10448,10448,10354,4594,44f2,c0,c0,ret nz,ret nz,ret nz,main.asm,RET	NZ
10449,10449,10355,4595,44f3,fd 23,fd 23,inc iy,inc iy,inc iy,main.asm,NXT1:           INC	IY
10450,10450,10356,4597,44f5,18 f6,18 f6,jr $-$08,jr $-$08,jr $-$00,main.asm,JR	NXT
10451,10451,10357,4599,44f7,fd e5,fd e5,push iy,push iy,push iy,math.asm,FPP:            PUSH	IY		;Save IY
10452,10452,10358,459b,44f9,fd 21 00 00,fd 21 00 00,"ld iy,$0000","ld iy,$0000","ld iy,$0000",math.asm,"LD	IY,0"
10453,10453,10359,459f,44fd,fd 39,fd 39,"add iy,sp","add iy,sp","add iy,sp",math.asm,"ADD	IY,SP		;Save SP in IY"
10454,10454,10360,45a1,44ff,cd b0 45,cd 0e 45,call $45b0,call $450e,call $0000,math.asm,CALL	OP		;Perform operation
10455,10455,10361,45a4,4502,bf,bf,cp a,cp a,cp a,math.asm,"CP	A		;Good return (Z, NC)"
10456,10456,10362,45a5,4503,fd e1,fd e1,pop iy,pop iy,pop iy,math.asm,EXITmat:           POP	IY		;Restore IY
10457,10457,10363,45a7,4505,c9,c9,ret,ret,ret,math.asm,RET			;Return to caller
10458,10458,10364,45a8,4506,3e 01,3e 01,"ld a,$01","ld a,$01","ld a,$00",math.asm,"BADmat:            LD	A,BADOP		;""Bad operation code"""
10459,10459,10365,45aa,4508,fd f9,fd f9,"ld sp,iy","ld sp,iy","ld sp,iy",math.asm,"ERROR_mat:         LD	SP,IY		;Restore SP from IY"
10460,10460,10366,45ac,450a,b7,b7,or a,or a,or a,math.asm,OR	A		;Set NZ
10461,10461,10367,45ad,450b,37,37,scf,scf,scf,math.asm,SCF			;Set C
10462,10462,10368,45ae,450c,18 f5,18 f5,jr $-$09,jr $-$09,jr $-$00,math.asm,JR	EXITmat
10463,10463,10369,45b0,450e,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,math.asm,OP:             CP	RTABLE-DTABLE/2
10464,10464,10370,45b2,4510,30 f4,30 f4,"jr nc,$-$0a","jr nc,$-$0a","jr nc,$-$00",math.asm,"JR	NC,BADmat"
10465,10465,10371,45b4,4512,fe 10,fe 10,cp $10,cp $10,cp $00,math.asm,CP	FTABLE-DTABLE/2
10466,10466,10372,45b6,4514,30 07,30 07,"jr nc,$+$09","jr nc,$+$09","jr nc,$+$00",math.asm,"JR	NC,DISPAT"
10467,10467,10373,45b8,4516,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10468,10468,10374,45b9,4517,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
10469,10469,10375,45ba,4518,b1,b1,or c,or c,or c,math.asm,OR	C		;Both integer?
10470,10470,10376,45bb,4519,c4 29 4f,c4 87 4e,"call nz,$4f29","call nz,$4e87","call nz,$0000",math.asm,"CALL	NZ,FLOATA	;No, so float both"
10471,10471,10377,45be,451c,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10472,10472,10378,45bf,451d,e5,e5,push hl,push hl,push hl,math.asm,DISPAT:         PUSH	HL
10473,10473,10379,45c0,451e,21 d0 45,21 2e 45,"ld hl,$45d0","ld hl,$452e","ld hl,$0000",math.asm,"LD	HL,DTABLE"
10474,10474,10380,45c3,4521,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC
10475,10475,10381,45c4,4522,87,87,"add a,a","add a,a","add a,a",math.asm,"ADD	A,A		;A = op-code * 2"
10476,10476,10382,45c5,4523,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
10477,10477,10383,45c6,4524,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",math.asm,"LD	B,0		;BC = op-code * 2"
10478,10478,10384,45c8,4526,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
10479,10479,10385,45c9,4527,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",math.asm,"LD	A,(HL)		;Get low byte"
10480,10480,10386,45ca,4528,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
10481,10481,10387,45cb,4529,66,66,"ld h,(hl)","ld h,(hl)","ld h,(hl)",math.asm,"LD	H,(HL)		;Get high byte"
10482,10482,10388,45cc,452a,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10483,10483,10389,45cd,452b,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
10484,10484,10390,45ce,452c,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
10485,10485,10391,45cf,452d,c9,c9,ret,ret,ret,math.asm,RET			;Off to routine
10486,10486,,45d0,,4f,,"ld c,a",,"ld c,a",,
10487,10487,,45d1,,46,,"ld b,(hl)",,"ld b,(hl)",,
10488,10488,,45d2,,9c,,"sbc a,h",,"sbc a,h",,
10489,10489,,45d3,,46,,"ld b,(hl)",,"ld b,(hl)",,
10490,10490,,45d4,,61,,"ld h,c",,"ld h,c",,
10491,10491,,45d5,,46,,"ld b,(hl)",,"ld b,(hl)",,
10492,10492,,45d6,,85,,"add a,l",,"add a,l",,
10493,10493,,45d7,,46,,"ld b,(hl)",,"ld b,(hl)",,
10494,10494,,45d8,,73,,"ld (hl),e",,"ld (hl),e",,
10495,10495,,45d9,,46,,"ld b,(hl)",,"ld b,(hl)",,
10496,10496,,45da,,9a,,"sbc a,d",,"sbc a,d",,
10497,10497,,45db,,48,,"ld c,b",,"ld c,b",,
10498,10498,,45dc,,a7,,and a,,and a,,
10499,10499,,45dd,,48,,"ld c,b",,"ld c,b",,
10500,10500,,45de,,8f,,"adc a,a",,"adc a,a",,
10501,10501,,45df,,48,,"ld c,b",,"ld c,b",,
10502,10502,,45e0,,78,,"ld a,b",,"ld a,b",,
10503,10503,,45e1,,48,,"ld c,b",,"ld c,b",,
10504,10504,,45e2,,b2,,or d,,or d,,
10505,10505,,45e3,,48,,"ld c,b",,"ld c,b",,
10506,10506,,45e4,,66,,"ld h,(hl)",,"ld h,(hl)",,
10507,10507,,45e5,,47,,"ld b,a",,"ld b,a",,
10508,10508,,45e6,,bf,,cp a,,cp a,,
10509,10509,,45e7,,46,,"ld b,(hl)",,"ld b,(hl)",,
10510,10510,,45e8,,83,,"add a,e",,"add a,e",,
10511,10511,,45e9,,48,,"ld c,b",,"ld c,b",,
10512,10512,,45ea,,a9,,xor c,,xor c,,
10513,10513,,45eb,,46,,"ld b,(hl)",,"ld b,(hl)",,
10514,10514,,45ec,,e1,,pop hl,,pop hl,,
10515,10515,,45ed,,47,,"ld b,a",,"ld b,a",,
10516,10516,,45ee,,1e 47,,"ld e,$47",,"ld e,$00",,
10517,10517,,45f0,,02,,"ld (bc),a",,"ld (bc),a",,
10518,10518,,45f1,,49 5e,,"ld.lis e,(hl)",,"ld.lis e,(hl)",,
10519,10519,,45f3,,4c,,"ld c,h",,"ld c,h",,
10520,10520,,45f4,,ba,,cp d,,cp d,,
10521,10521,,45f5,,4b,,"ld c,e",,"ld c,e",,
10522,10522,,45f6,,df,,rst $18,,rst $00,,
10523,10523,,45f7,,4b,,"ld c,e",,"ld c,e",,
10524,10524,,45f8,,f8,,ret m,,ret m,,
10525,10525,,45f9,,49 2c,,inc.lis l,,inc.lis l,,
10526,10526,,45fb,,49 9d,,"sbc.lis a,l",,"sbc.lis a,l",,
10527,10527,,45fd,,4a,,"ld c,d",,"ld c,d",,
10528,10528,,45fe,,72,,"ld (hl),d",,"ld (hl),d",,
10529,10529,,45ff,,49 28 4b,,"jr.lis z,$+$4e",,"jr.lis z,$+$00",,
10530,10530,,4602,,a8,,xor b,,xor b,,
10531,10531,,4603,,4b,,"ld c,e",,"ld c,e",,
10532,10532,,4604,,0d,,dec c,,dec c,,
10533,10533,,4605,,49 34,,inc.lis (hl),,inc.lis (hl),,
10534,10534,,4607,,49 4a,,"ld.lis c,d",,"ld.lis c,d",,
10535,10535,,4609,,49 03,,inc.lis bc,,inc.lis bc,,
10536,10536,,460b,,4a,,"ld c,d",,"ld c,d",,
10537,10537,,460c,,88,,"adc a,b",,"adc a,b",,
10538,10538,,460d,,49 db 49,,"in.lis a,($49)",,"in.lis a,($00)",,
10539,10539,,4610,,a5,,and l,,and l,,
10540,10540,,4611,,4f,,"ld c,a",,"ld c,a",,
10541,10541,,4612,,7c,,"ld a,h",,"ld a,h",,
10542,10542,,4613,,4a,,"ld c,d",,"ld c,d",,
10543,10543,,4614,,b6,,or (hl),,or (hl),,
10544,10544,,4615,,48,,"ld c,b",,"ld c,b",,
10545,10545,,4616,,20 49,,"jr nz,$+$4b",,"jr nz,$+$00",,
10546,10546,,4618,,5a,,"ld e,d",,"ld e,d",,
10547,10547,,4619,,49 66,,"ld.lis h,(hl)",,"ld.lis h,(hl)",,
10548,10548,,461b,,4c,,"ld c,h",,"ld c,h",,
10549,10549,,461c,,7b,,"ld a,e",,"ld a,e",,
10550,10550,,461d,,4e,,"ld c,(hl)",,"ld c,(hl)",,
10551,10551,,461e,,36 4f,,"ld (hl),$4f",,"ld (hl),$00",,
10552,10552,,4620,,7b,,"ld a,e",,"ld a,e",,
10553,10553,,4621,,4f,,"ld c,a",,"ld c,a",,
10554,10554,,4622,,8c,,"adc a,h",,"adc a,h",,
10555,10555,,4623,,4f,,"ld c,a",,"ld c,a",,
10556,10556,,4624,,c1,,pop bc,,pop bc,,
10557,10557,,4625,,48,,"ld c,b",,"ld c,b",,
10558,10558,,4626,,c1,,pop bc,,pop bc,,
10559,10559,,4627,,48,,"ld c,b",,"ld c,b",,
10560,10560,,4628,,ce 48,,"adc a,$48",,"adc a,$00",,
10561,10561,,462a,,e0,,ret po,,ret po,,
10562,10562,,462b,,48,,"ld c,b",,"ld c,b",,
10563,10563,,462c,,4c,,"ld c,h",,"ld c,h",,
10564,10564,,462d,,46,,"ld b,(hl)",,"ld b,(hl)",,
10565,10565,,462e,,99,,"sbc a,c",,"sbc a,c",,
10566,10566,,462f,,46,,"ld b,(hl)",,"ld b,(hl)",,
10567,10567,,4630,,5e,,"ld e,(hl)",,"ld e,(hl)",,
10568,10568,,4631,,46,,"ld b,(hl)",,"ld b,(hl)",,
10569,10569,,4632,,82,,"add a,d",,"add a,d",,
10570,10570,,4633,,46,,"ld b,(hl)",,"ld b,(hl)",,
10571,10571,,4634,,70,,"ld (hl),b",,"ld (hl),b",,
10572,10572,,4635,,46,,"ld b,(hl)",,"ld b,(hl)",,
10573,10573,,4636,,95,,sub l,,sub l,,
10574,10574,,4637,,48,,"ld c,b",,"ld c,b",,
10575,10575,,4638,,a2,,and d,,and d,,
10576,10576,,4639,,48,,"ld c,b",,"ld c,b",,
10577,10577,,463a,,8a,,"adc a,d",,"adc a,d",,
10578,10578,,463b,,48,,"ld c,b",,"ld c,b",,
10579,10579,,463c,,73,,"ld (hl),e",,"ld (hl),e",,
10580,10580,,463d,,48,,"ld c,b",,"ld c,b",,
10581,10581,,463e,,ad,,xor l,,xor l,,
10582,10582,,463f,,48,,"ld c,b",,"ld c,b",,
10583,10583,,4640,,91,,sub c,,sub c,,
10584,10584,,4641,,47,,"ld b,a",,"ld b,a",,
10585,10585,,4642,,c9,,ret,,ret,,
10586,10586,,4643,,46,,"ld b,(hl)",,"ld b,(hl)",,
10587,10587,,4644,,7e,,"ld a,(hl)",,"ld a,(hl)",,
10588,10588,,4645,,48,,"ld c,b",,"ld c,b",,
10589,10589,,4646,,b3,,or e,,or e,,
10590,10590,,4647,,46,,"ld b,(hl)",,"ld b,(hl)",,
10591,10591,,4648,,49 48,,"ld.lis c,b",,"ld.lis c,b",,
10592,10592,,464a,,21 47 cd,,"ld hl,$cd47",,"ld hl,$0000",,
10593,10593,,464d,,72,,"ld (hl),d",,"ld (hl),d",,
10594,10594,,464e,,4e,,"ld c,(hl)",,"ld c,(hl)",,
10595,10595,10493,464f,45ad,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"IAND:           LD	A,H"
10596,10596,10494,4650,45ae,a2,a2,and d,and d,and d,math.asm,AND	D
10597,10597,10495,4651,45af,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10598,10598,10496,4652,45b0,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10599,10599,10497,4653,45b1,a3,a3,and e,and e,and e,math.asm,AND	E
10600,10600,10498,4654,45b2,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10601,10601,10499,4655,45b3,d9,d9,exx,exx,exx,math.asm,EXX
10602,10602,10500,4656,45b4,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10603,10603,10501,4657,45b5,a2,a2,and d,and d,and d,math.asm,AND	D
10604,10604,10502,4658,45b6,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10605,10605,10503,4659,45b7,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10606,10606,10504,465a,45b8,a3,a3,and e,and e,and e,math.asm,AND	E
10607,10607,10505,465b,45b9,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10608,10608,10506,465c,45ba,d9,d9,exx,exx,exx,math.asm,EXX
10609,10609,10507,465d,45bb,c9,c9,ret,ret,ret,math.asm,RET
10610,10610,10508,465e,45bc,cd 72 4e,cd d0 4d,call $4e72,call $4dd0,call $0000,math.asm,FEOR:           CALL	FIX2
10611,10611,10509,4661,45bf,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"IEOR:           LD	A,H"
10612,10612,10510,4662,45c0,aa,aa,xor d,xor d,xor d,math.asm,XOR	D
10613,10613,10511,4663,45c1,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10614,10614,10512,4664,45c2,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10615,10615,10513,4665,45c3,ab,ab,xor e,xor e,xor e,math.asm,XOR	E
10616,10616,10514,4666,45c4,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10617,10617,10515,4667,45c5,d9,d9,exx,exx,exx,math.asm,EXX
10618,10618,10516,4668,45c6,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10619,10619,10517,4669,45c7,aa,aa,xor d,xor d,xor d,math.asm,XOR	D
10620,10620,10518,466a,45c8,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10621,10621,10519,466b,45c9,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10622,10622,10520,466c,45ca,ab,ab,xor e,xor e,xor e,math.asm,XOR	E
10623,10623,10521,466d,45cb,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10624,10624,10522,466e,45cc,d9,d9,exx,exx,exx,math.asm,EXX
10625,10625,10523,466f,45cd,c9,c9,ret,ret,ret,math.asm,RET
10626,10626,10524,4670,45ce,cd 72 4e,cd d0 4d,call $4e72,call $4dd0,call $0000,math.asm,FOR:            CALL	FIX2
10627,10627,10525,4673,45d1,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"IOR:            LD	A,H"
10628,10628,10526,4674,45d2,b2,b2,or d,or d,or d,math.asm,OR	D
10629,10629,10527,4675,45d3,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10630,10630,10528,4676,45d4,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10631,10631,10529,4677,45d5,b3,b3,or e,or e,or e,math.asm,OR	E
10632,10632,10530,4678,45d6,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10633,10633,10531,4679,45d7,d9,d9,exx,exx,exx,math.asm,EXX
10634,10634,10532,467a,45d8,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10635,10635,10533,467b,45d9,b2,b2,or d,or d,or d,math.asm,OR	D
10636,10636,10534,467c,45da,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10637,10637,10535,467d,45db,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
10638,10638,10536,467e,45dc,b3,b3,or e,or e,or e,math.asm,OR	E
10639,10639,10537,467f,45dd,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
10640,10640,10538,4680,45de,d9,d9,exx,exx,exx,math.asm,EXX
10641,10641,10539,4681,45df,c9,c9,ret,ret,ret,math.asm,RET
10642,10642,10540,4682,45e0,cd 72 4e,cd d0 4d,call $4e72,call $4dd0,call $0000,math.asm,FMOD:           CALL	FIX2
10643,10643,10541,4685,45e3,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"IMOD:           LD	A,H"
10644,10644,10542,4686,45e4,aa,aa,xor d,xor d,xor d,math.asm,XOR	D		;DIV RESULT SIGN
10645,10645,10543,4687,45e5,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
10646,10646,10544,4689,45e7,cd 79 51,cd d7 50,call $5179,call $50d7,call $0000,math.asm,CALL	ABS2		;MAKE BOTH POSITIVE
10647,10647,10545,468c,45ea,3e df,3e df,"ld a,$df","ld a,$df","ld a,$00",math.asm,"LD	A,-33"
10648,10648,10546,468e,45ec,cd b5 50,cd 13 50,call $50b5,call $5013,call $0000,math.asm,CALL	DIVA		;DIVIDE
10649,10649,10547,4691,45ef,d9,d9,exx,exx,exx,math.asm,EXX
10650,10650,10548,4692,45f0,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",math.asm,"LD	C,0		;INTEGER MARKER"
10651,10651,10549,4694,45f2,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10652,10652,10550,4695,45f3,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
10653,10653,10551,4696,45f4,c3 8a 4e,c3 e8 4d,jp $4e8a,jp $4de8,jp $0000,math.asm,JP	NEGATE
10654,10654,10552,4699,45f7,cd 72 4e,cd d0 4d,call $4e72,call $4dd0,call $0000,math.asm,FBDIV:          CALL	FIX2
10655,10655,10553,469c,45fa,cd 85 46,cd e3 45,call $4685,call $45e3,call $0000,math.asm,IBDIV:          CALL	IMOD
10656,10656,10554,469f,45fd,b7,b7,or a,or a,or a,math.asm,OR	A
10657,10657,10555,46a0,45fe,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
10658,10658,10556,46a3,4601,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",math.asm,"LD	C,0"
10659,10659,10557,46a5,4603,f0,f0,ret p,ret p,ret p,math.asm,RET	P
10660,10660,10558,46a6,4604,c3 8a 4e,c3 e8 4d,jp $4e8a,jp $4de8,jp $0000,math.asm,JP	NEGATE
10661,10661,10559,46a9,4607,cd e8 4f,cd 46 4f,call $4fe8,call $4f46,call $0000,math.asm,ISUB:           CALL	SUB
10662,10662,10560,46ac,460a,e0,e0,ret po,ret po,ret po,math.asm,RET	PO
10663,10663,10561,46ad,460b,cd e2 4f,cd 40 4f,call $4fe2,call $4f40,call $0000,math.asm,CALL	ADD
10664,10664,10562,46b0,460e,cd 2d 4f,cd 8b 4e,call $4f2d,call $4e8b,call $0000,math.asm,CALL	FLOAT2
10665,10665,10563,46b3,4611,7a,7a,"ld a,d","ld a,d","ld a,d",math.asm,"FSUB:           LD	A,D"
10666,10666,10564,46b4,4612,ee 80,ee 80,xor $80,xor $80,xor $00,math.asm,XOR	80H		;CHANGE SIGN THEN ADD
10667,10667,10565,46b6,4614,57,57,"ld d,a","ld d,a","ld d,a",math.asm,"LD	D,A"
10668,10668,10566,46b7,4615,18 10,18 10,jr $+$12,jr $+$12,jr $+$00,math.asm,JR	FADD
10669,10669,10567,46b9,4617,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"RSUB:           LD	A,H"
10670,10670,10568,46ba,4618,ee 80,ee 80,xor $80,xor $80,xor $00,math.asm,XOR	80H
10671,10671,10569,46bc,461a,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
10672,10672,10570,46bd,461b,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,math.asm,JR	FADD
10673,10673,10571,46bf,461d,cd e2 4f,cd 40 4f,call $4fe2,call $4f40,call $0000,math.asm,IADD:           CALL	ADD
10674,10674,10572,46c2,4620,e0,e0,ret po,ret po,ret po,math.asm,RET	PO
10675,10675,10573,46c3,4621,cd e8 4f,cd 46 4f,call $4fe8,call $4f46,call $0000,math.asm,CALL	SUB
10676,10676,10574,46c6,4624,cd 2d 4f,cd 8b 4e,call $4f2d,call $4e8b,call $0000,math.asm,CALL	FLOAT2
10677,10677,10575,46c9,4627,05,05,dec b,dec b,dec b,math.asm,FADD:           DEC	B
10678,10678,10576,46ca,4628,04,04,inc b,inc b,inc b,math.asm,INC	B
10679,10679,10577,46cb,4629,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ARG 2 ZERO
10680,10680,10578,46cc,462a,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
10681,10681,10579,46cd,462b,0c,0c,inc c,inc c,inc c,math.asm,INC	C
10682,10682,10580,46ce,462c,ca 60 4f,ca be 4e,"jp z,$4f60","jp z,$4ebe","jp z,$0000",math.asm,"JP	Z,SWAP		;ARG 1 ZERO"
10683,10683,10581,46d1,462f,d9,d9,exx,exx,exx,math.asm,EXX
10684,10684,10582,46d2,4630,01 00 00,01 00 00,"ld bc,$0000","ld bc,$0000","ld bc,$0000",math.asm,"LD	BC,0		;INITIALISE"
10685,10685,10583,46d5,4633,d9,d9,exx,exx,exx,math.asm,EXX
10686,10686,10584,46d6,4634,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10687,10687,10585,46d7,4635,aa,aa,xor d,xor d,xor d,math.asm,XOR	D		;XOR SIGNS
10688,10688,10586,46d8,4636,f5,f5,push af,push af,push af,math.asm,PUSH	AF
10689,10689,10587,46d9,4637,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
10690,10690,10588,46da,4638,b9,b9,cp c,cp c,cp c,math.asm,CP	C		;COMPARE EXPONENTS
10691,10691,10589,46db,4639,dc 60 4f,dc be 4e,"call c,$4f60","call c,$4ebe","call c,$0000",math.asm,"CALL	C,SWAP		;MAKE DED'E'B LARGEST"
10692,10692,10590,46de,463c,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
10693,10693,10591,46df,463d,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;IMPLIED 1"
10694,10694,10592,46e1,463f,c4 62 4e,c4 c0 4d,"call nz,$4e62","call nz,$4dc0","call nz,$0000",math.asm,"CALL	NZ,FIX		;ALIGN"
10695,10695,10593,46e4,4642,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10696,10696,10594,46e5,4643,7a,7a,"ld a,d","ld a,d","ld a,d",math.asm,"LD	A,D		;SIGN OF LARGER"
10697,10697,10595,46e6,4644,cb fa,cb fa,"set 7,d","set 7,d","set 7,d",math.asm,"SET	7,D		;IMPLIED 1"
10698,10698,10596,46e8,4646,fa f5 46,fa 53 46,"jp m,$46f5","jp m,$4653","jp m,$0000",math.asm,"JP	M,FADD3		;SIGNS DIFFERENT"
10699,10699,10597,46eb,4649,cd e2 4f,cd 40 4f,call $4fe2,call $4f40,call $0000,math.asm,CALL	ADD		;HLH'L'=HLH'L'+DED'E'
10700,10700,10598,46ee,464c,dc 68 4f,dc c6 4e,"call c,$4f68","call c,$4ec6","call c,$0000",math.asm,"CALL	C,DIV2		;NORMALISE"
10701,10701,10599,46f1,464f,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
10702,10702,10600,46f3,4651,18 0a,18 0a,jr $+$0c,jr $+$0c,jr $+$00,math.asm,JR	FADD4
10703,10703,10601,46f5,4653,cd e8 4f,cd 46 4f,call $4fe8,call $4f46,call $0000,math.asm,FADD3:          CALL	SUB		;HLH'L'=HLH'L'-DED'E'
10704,10704,10602,46f8,4656,dc 9e 4e,dc fc 4d,"call c,$4e9e","call c,$4dfc","call c,$0000",math.asm,"CALL	C,NEG		;NEGATE HLH'L'B'C'"
10705,10705,10603,46fb,4659,cd 0a 4f,cd 68 4e,call $4f0a,call $4e68,call $0000,math.asm,CALL	FLO48
10706,10706,10604,46fe,465c,2f,2f,cpl,cpl,cpl,math.asm,CPL			;CHANGE RESULT SIGN
10707,10707,10605,46ff,465d,d9,d9,exx,exx,exx,math.asm,FADD4:          EXX
10708,10708,10606,4700,465e,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
10709,10709,10607,4701,465f,21 00 80,21 00 80,"ld hl,$8000","ld hl,$8000","ld hl,$0000",math.asm,"LD	HL,8000H"
10710,10710,10608,4704,4662,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
10711,10711,10609,4705,4663,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
10712,10712,10610,4707,4665,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
10713,10713,10611,4708,4666,d9,d9,exx,exx,exx,math.asm,EXX
10714,10714,10612,4709,4667,cc 5a 4f,cc b8 4e,"call z,$4f5a","call z,$4eb8","call z,$0000",math.asm,"CALL	Z,ODD		;ROUND UNBIASSED"
10715,10715,10613,470c,466a,dc 4c 4f,dc aa 4e,"call c,$4f4c","call c,$4eaa","call c,$0000",math.asm,"CALL	C,ADD1		;ROUND UP"
10716,10716,10614,470f,466d,dc 74 4f,dc d2 4e,"call c,$4f74","call c,$4ed2","call c,$0000",math.asm,"CALL	C,INCC"
10717,10717,10615,4712,4670,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
10718,10718,10616,4714,4672,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
10719,10719,10617,4715,4673,0c,0c,inc c,inc c,inc c,math.asm,INC	C
10720,10720,10618,4716,4674,ca a5 4f,ca 03 4f,"jp z,$4fa5","jp z,$4f03","jp z,$0000",math.asm,"JP	Z,ZEROmat"
10721,10721,10619,4719,4677,b7,b7,or a,or a,or a,math.asm,OR	A		;RESULT SIGNQ
10722,10722,10620,471a,4678,f0,f0,ret p,ret p,ret p,math.asm,RET	P		;POSITIVE
10723,10723,10621,471b,4679,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;NEGATIVE"
10724,10724,10622,471d,467b,c9,c9,ret,ret,ret,math.asm,RET
10725,10725,10623,471e,467c,cd 2d 4f,cd 8b 4e,call $4f2d,call $4e8b,call $0000,math.asm,IDIV:           CALL	FLOAT2
10726,10726,10624,4721,467f,05,05,dec b,dec b,dec b,math.asm,FDIV:           DEC	B		;TEST FOR ZERO
10727,10727,10625,4722,4680,04,04,inc b,inc b,inc b,math.asm,INC	B
10728,10728,10626,4723,4681,3e 12,3e 12,"ld a,$12","ld a,$12","ld a,$00",math.asm,"LD	A,DIVBY0"
10729,10729,10627,4725,4683,ca aa 45,ca 08 45,"jp z,$45aa","jp z,$4508","jp z,$0000",math.asm,"JP	Z,ERROR_mat		;""Division by zero"""
10730,10730,10628,4728,4686,0d,0d,dec c,dec c,dec c,math.asm,DEC	C		;TEST FOR ZERO
10731,10731,10629,4729,4687,0c,0c,inc c,inc c,inc c,math.asm,INC	C
10732,10732,10630,472a,4688,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
10733,10733,10631,472b,4689,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10734,10734,10632,472c,468a,aa,aa,xor d,xor d,xor d,math.asm,XOR	D		;CALC. RESULT SIGN
10735,10735,10633,472d,468b,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;SAVE SIGN"
10736,10736,10634,472e,468c,cb fa,cb fa,"set 7,d","set 7,d","set 7,d",math.asm,"SET	7,D		;REPLACE IMPLIED 1's"
10737,10737,10635,4730,468e,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
10738,10738,10636,4732,4690,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC		;SAVE EXPONENTS
10739,10739,10637,4733,4691,42,42,"ld b,d","ld b,d","ld b,d",math.asm,"LD	B,D		;LOAD REGISTERS"
10740,10740,10638,4734,4692,4b,4b,"ld c,e","ld c,e","ld c,e",math.asm,"LD	C,E"
10741,10741,10639,4735,4693,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",math.asm,"LD	DE,0"
10742,10742,10640,4738,4696,d9,d9,exx,exx,exx,math.asm,EXX
10743,10743,10641,4739,4697,42,42,"ld b,d","ld b,d","ld b,d",math.asm,"LD	B,D"
10744,10744,10642,473a,4698,4b,4b,"ld c,e","ld c,e","ld c,e",math.asm,"LD	C,E"
10745,10745,10643,473b,4699,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",math.asm,"LD	DE,0"
10746,10746,10644,473e,469c,3e e0,3e e0,"ld a,$e0","ld a,$e0","ld a,$00",math.asm,"LD	A,-32		;LOOP COUNTER"
10747,10747,10645,4740,469e,cd b5 50,cd 13 50,call $50b5,call $5013,call $0000,math.asm,CALL	DIVA		;DIVIDE
10748,10748,10646,4743,46a1,d9,d9,exx,exx,exx,math.asm,EXX
10749,10749,10647,4744,46a2,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",math.asm,"BIT	7,D"
10750,10750,10648,4746,46a4,d9,d9,exx,exx,exx,math.asm,EXX
10751,10751,10649,4747,46a5,cc d0 50,cc 2e 50,"call z,$50d0","call z,$502e","call z,$0000",math.asm,"CALL	Z,DIVB		;NORMALISE & INC A"
10752,10752,10650,474a,46a8,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
10753,10753,10651,474b,46a9,d9,d9,exx,exx,exx,math.asm,EXX
10754,10754,10652,474c,46aa,cb 38,cb 38,srl b,srl b,srl b,math.asm,SRL	B		;DIVISOR/2
10755,10755,10653,474e,46ac,cb 19,cb 19,rr c,rr c,rr c,math.asm,RR	C
10756,10756,10654,4750,46ae,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
10757,10757,10655,4751,46af,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC		;REMAINDER-DIVISOR/2"
10758,10758,10656,4753,46b1,3f,3f,ccf,ccf,ccf,math.asm,CCF
10759,10759,10657,4754,46b2,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL		;RESULT IN HLH'L'"
10760,10760,10658,4755,46b3,cc 5a 4f,cc b8 4e,"call z,$4f5a","call z,$4eb8","call z,$0000",math.asm,"CALL	Z,ODD		;ROUND UNBIASSED"
10761,10761,10659,4758,46b6,dc 4c 4f,dc aa 4e,"call c,$4f4c","call c,$4eaa","call c,$0000",math.asm,"CALL	C,ADD1		;ROUND UP"
10762,10762,10660,475b,46b9,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC		;RESTORE EXPONENTS
10763,10763,10661,475c,46ba,dc 74 4f,dc d2 4e,"call c,$4f74","call c,$4ed2","call c,$0000",math.asm,"CALL	C,INCC"
10764,10764,10662,475f,46bd,1f,1f,rra,rra,rra,math.asm,RRA			;LSB OF A TO CARRY
10765,10765,10663,4760,46be,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C		;COMPUTE NEW EXPONENT"
10766,10766,10664,4761,46bf,98,98,"sbc a,b","sbc a,b","sbc a,b",math.asm,"SBC	A,B"
10767,10767,10665,4762,46c0,3f,3f,ccf,ccf,ccf,math.asm,CCF
10768,10768,10666,4763,46c1,c3 ca 47,c3 28 47,jp $47ca,jp $4728,jp $0000,math.asm,JP	CHKOVF
10769,10769,10667,4766,46c4,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"IMUL:           LD	A,H"
10770,10770,10668,4767,46c5,aa,aa,xor d,xor d,xor d,math.asm,XOR	D
10771,10771,10669,4768,46c6,cd 79 51,cd d7 50,call $5179,call $50d7,call $0000,math.asm,CALL	ABS2		;MAKE BOTH POSITIVE
10772,10772,10670,476b,46c9,3e df,3e df,"ld a,$df","ld a,$df","ld a,$00",math.asm,"LD	A,-33"
10773,10773,10671,476d,46cb,cd e3 50,cd 41 50,call $50e3,call $5041,call $0000,math.asm,CALL	MULA		;MULTIPLY
10774,10774,10672,4770,46ce,d9,d9,exx,exx,exx,math.asm,EXX
10775,10775,10673,4771,46cf,0e bf,0e bf,"ld c,$bf","ld c,$bf","ld c,$00",math.asm,"LD	C,191		;PRESET EXPONENT"
10776,10776,10674,4773,46d1,cd 85 4f,cd e3 4e,call $4f85,call $4ee3,call $0000,math.asm,CALL	TESTmat		;TEST RANGE
10777,10777,10675,4776,46d4,20 0d,20 0d,"jr nz,$+$0f","jr nz,$+$0f","jr nz,$+$00",math.asm,"JR	NZ,IMUL1	;TOO BIG"
10778,10778,10676,4778,46d6,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",math.asm,"BIT	7,D"
10779,10779,10677,477a,46d8,20 09,20 09,"jr nz,$+$0b","jr nz,$+$0b","jr nz,$+$00",math.asm,"JR	NZ,IMUL1"
10780,10780,10678,477c,46da,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
10781,10781,10679,477f,46dd,4a,4a,"ld c,d","ld c,d","ld c,d",math.asm,"LD	C,D		;INTEGER MARKER"
10782,10782,10680,4780,46de,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10783,10783,10681,4781,46df,f0,f0,ret p,ret p,ret p,math.asm,RET	P
10784,10784,10682,4782,46e0,c3 8a 4e,c3 e8 4d,jp $4e8a,jp $4de8,jp $0000,math.asm,JP	NEGATE
10785,10785,10683,4785,46e3,0d,0d,dec c,dec c,dec c,math.asm,IMUL1:          DEC	C
10786,10786,10684,4786,46e4,cd 4c 51,cd aa 50,call $514c,call $50aa,call $0000,math.asm,CALL	SLA8
10787,10787,10685,4789,46e7,f2 85 47,f2 e3 46,"jp p,$4785","jp p,$46e3","jp p,$0000",math.asm,"JP	P,IMUL1		;NORMALISE"
10788,10788,10686,478c,46ea,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10789,10789,10687,478d,46eb,f8,f8,ret m,ret m,ret m,math.asm,RET	M
10790,10790,10688,478e,46ec,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H		;POSITIVE"
10791,10791,10689,4790,46ee,c9,c9,ret,ret,ret,math.asm,RET
10792,10792,10690,4791,46ef,05,05,dec b,dec b,dec b,math.asm,FMUL:           DEC	B		;TEST FOR ZERO
10793,10793,10691,4792,46f0,04,04,inc b,inc b,inc b,math.asm,INC	B
10794,10794,10692,4793,46f1,ca a5 4f,ca 03 4f,"jp z,$4fa5","jp z,$4f03","jp z,$0000",math.asm,"JP	Z,ZEROmat"
10795,10795,10693,4796,46f4,0d,0d,dec c,dec c,dec c,math.asm,DEC	C		;TEST FOR ZERO
10796,10796,10694,4797,46f5,0c,0c,inc c,inc c,inc c,math.asm,INC	C
10797,10797,10695,4798,46f6,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
10798,10798,10696,4799,46f7,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
10799,10799,10697,479a,46f8,aa,aa,xor d,xor d,xor d,math.asm,XOR	D		;CALC. RESULT SIGN
10800,10800,10698,479b,46f9,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10801,10801,10699,479c,46fa,cb fa,cb fa,"set 7,d","set 7,d","set 7,d",math.asm,"SET	7,D		;REPLACE IMPLIED 1's"
10802,10802,10700,479e,46fc,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
10803,10803,10701,47a0,46fe,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC		;SAVE EXPONENTS
10804,10804,10702,47a1,46ff,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H		;LOAD REGISTERS"
10805,10805,10703,47a2,4700,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
10806,10806,10704,47a3,4701,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
10807,10807,10705,47a6,4704,d9,d9,exx,exx,exx,math.asm,EXX
10808,10808,10706,47a7,4705,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
10809,10809,10707,47a8,4706,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
10810,10810,10708,47a9,4707,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
10811,10811,10709,47ac,470a,3e e0,3e e0,"ld a,$e0","ld a,$e0","ld a,$00",math.asm,"LD	A,-32		;LOOP COUNTER"
10812,10812,10710,47ae,470c,cd e3 50,cd 41 50,call $50e3,call $5041,call $0000,math.asm,CALL	MULA		;MULTIPLY
10813,10813,10711,47b1,470f,dc f7 50,dc 55 50,"call c,$50f7","call c,$5055","call c,$0000",math.asm,"CALL	C,MULB		;NORMALISE & INC A"
10814,10814,10712,47b4,4712,d9,d9,exx,exx,exx,math.asm,EXX
10815,10815,10713,47b5,4713,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
10816,10816,10714,47b6,4714,21 00 80,21 00 80,"ld hl,$8000","ld hl,$8000","ld hl,$0000",math.asm,"LD	HL,8000H"
10817,10817,10715,47b9,4717,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
10818,10818,10716,47ba,4718,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
10819,10819,10717,47bc,471a,e1,e1,pop hl,pop hl,pop hl,math.asm,POP	HL
10820,10820,10718,47bd,471b,cc 5a 4f,cc b8 4e,"call z,$4f5a","call z,$4eb8","call z,$0000",math.asm,"CALL	Z,ODD		;ROUND UNBIASSED"
10821,10821,10719,47c0,471e,dc 4c 4f,dc aa 4e,"call c,$4f4c","call c,$4eaa","call c,$0000",math.asm,"CALL	C,ADD1		;ROUND UP"
10822,10822,10720,47c3,4721,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC		;RESTORE EXPONENTS
10823,10823,10721,47c4,4722,dc 74 4f,dc d2 4e,"call c,$4f74","call c,$4ed2","call c,$0000",math.asm,"CALL	C,INCC"
10824,10824,10722,47c7,4725,1f,1f,rra,rra,rra,math.asm,RRA			;LSB OF A TO CARRY
10825,10825,10723,47c8,4726,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C		;COMPUTE NEW EXPONENT"
10826,10826,10724,47c9,4727,88,88,"adc a,b","adc a,b","adc a,b",math.asm,"ADC	A,B"
10827,10827,10725,47ca,4728,38 05,38 05,"jr c,$+$07","jr c,$+$07","jr c,$+$00",math.asm,"CHKOVF:         JR	C,CHKO1"
10828,10828,10726,47cc,472a,f2 a5 4f,f2 03 4f,"jp p,$4fa5","jp p,$4f03","jp p,$0000",math.asm,"JP	P,ZEROmat		;UNDERFLOW"
10829,10829,10727,47cf,472d,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	CHKO2
10830,10830,10728,47d1,472f,fa 76 4f,fa d4 4e,"jp m,$4f76","jp m,$4ed4","jp m,$0000",math.asm,"CHKO1:          JP	M,OFLOW		;OVERFLOW"
10831,10831,10729,47d4,4732,c6 80,c6 80,"add a,$80","add a,$80","add a,$00",math.asm,"CHKO2:          ADD	A,80H"
10832,10832,10730,47d6,4734,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
10833,10833,10731,47d7,4735,ca a5 4f,ca 03 4f,"jp z,$4fa5","jp z,$4f03","jp z,$0000",math.asm,"JP	Z,ZEROmat"
10834,10834,10732,47da,4738,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;RESTORE SIGN BIT"
10835,10835,10733,47db,4739,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
10836,10836,10734,47dd,473b,f0,f0,ret p,ret p,ret p,math.asm,RET	P
10837,10837,10735,47de,473c,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
10838,10838,10736,47e0,473e,c9,c9,ret,ret,ret,math.asm,RET
10839,10839,10737,47e1,473f,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,IPOW:           CALL	SWAP
10840,10840,10738,47e4,4742,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
10841,10841,10739,47e6,4744,f5,f5,push af,push af,push af,math.asm,PUSH	AF		;SAVE SIGN
10842,10842,10740,47e7,4745,c4 8a 4e,c4 e8 4d,"call nz,$4e8a","call nz,$4de8","call nz,$0000",math.asm,"CALL	NZ,NEGATE"
10843,10843,10741,47ea,4748,48,48,"ld c,b","ld c,b","ld c,b",math.asm,"IPOW0:          LD	C,B"
10844,10844,10742,47eb,4749,06 20,06 20,"ld b,$20","ld b,$20","ld b,$00",math.asm,"LD	B,32		;LOOP COUNTER"
10845,10845,10743,47ed,474b,cd ff 4f,cd 5d 4f,call $4fff,call $4f5d,call $0000,math.asm,IPOW1:          CALL	X2
10846,10846,10744,47f0,474e,38 08,38 08,"jr c,$+$0a","jr c,$+$0a","jr c,$+$00",math.asm,"JR	C,IPOW2"
10847,10847,10745,47f2,4750,10 f9,10 f9,djnz $-$05,djnz $-$05,djnz $-$00,math.asm,DJNZ	IPOW1
10848,10848,10746,47f4,4752,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10849,10849,10747,47f5,4753,d9,d9,exx,exx,exx,math.asm,EXX
10850,10850,10748,47f6,4754,2c,2c,inc l,inc l,inc l,math.asm,INC	L		;RESULT=1
10851,10851,10749,47f7,4755,d9,d9,exx,exx,exx,math.asm,EXX
10852,10852,10750,47f8,4756,4c,4c,"ld c,h","ld c,h","ld c,h",math.asm,"LD	C,H"
10853,10853,10751,47f9,4757,c9,c9,ret,ret,ret,math.asm,RET
10854,10854,10752,47fa,4758,f1,f1,pop af,pop af,pop af,math.asm,IPOW2:          POP	AF
10855,10855,10753,47fb,4759,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC
10856,10856,10754,47fc,475a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
10857,10857,10755,47fd,475b,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
10858,10858,10756,47fe,475c,d9,d9,exx,exx,exx,math.asm,EXX
10859,10859,10757,47ff,475d,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
10860,10860,10758,4800,475e,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
10861,10861,10759,4801,475f,d9,d9,exx,exx,exx,math.asm,EXX
10862,10862,10760,4802,4760,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",math.asm,"LD	IX,0"
10863,10863,10761,4806,4764,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",math.asm,"ADD	IX,SP"
10864,10864,10762,4808,4766,28 34,28 34,"jr z,$+$36","jr z,$+$36","jr z,$+$00",math.asm,"JR	Z,IPOW4"
10865,10865,10763,480a,4768,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC
10866,10866,10764,480b,4769,d9,d9,exx,exx,exx,math.asm,EXX
10867,10867,10765,480c,476a,d5,d5,push de,push de,push de,math.asm,PUSH	DE
10868,10868,10766,480d,476b,d9,d9,exx,exx,exx,math.asm,EXX
10869,10869,10767,480e,476c,d5,d5,push de,push de,push de,math.asm,PUSH	DE
10870,10870,10768,480f,476d,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,CALL	SFLOAT
10871,10871,10769,4812,4770,cd 14 4b,cd 72 4a,call $4b14,call $4a72,call $0000,math.asm,CALL	RECIP
10872,10872,10770,4815,4773,cd 8a 32,cd e8 31,call $328a,call $31e8,call $0000,math.asm,CALL	STORE5
10873,10873,10771,4818,4776,18 1d,18 1d,jr $+$1f,jr $+$1f,jr $+$00,math.asm,JR	IPOW5
10874,10874,10772,481a,4778,c5,c5,push bc,push bc,push bc,math.asm,IPOW3:          PUSH	BC
10875,10875,10773,481b,4779,d9,d9,exx,exx,exx,math.asm,EXX
10876,10876,10774,481c,477a,cb 23,cb 23,sla e,sla e,sla e,math.asm,SLA	E
10877,10877,10775,481e,477c,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
10878,10878,10776,4820,477e,d5,d5,push de,push de,push de,math.asm,PUSH	DE
10879,10879,10777,4821,477f,d9,d9,exx,exx,exx,math.asm,EXX
10880,10880,10778,4822,4780,cb 13,cb 13,rl e,rl e,rl e,math.asm,RL	E
10881,10881,10779,4824,4782,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
10882,10882,10780,4826,4784,d5,d5,push de,push de,push de,math.asm,PUSH	DE
10883,10883,10781,4827,4785,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",math.asm,"LD	A,'*' & 0FH"
10884,10884,10782,4829,4787,f5,f5,push af,push af,push af,math.asm,PUSH	AF
10885,10885,10783,482a,4788,cd 11 50,cd 6f 4f,call $5011,call $4f6f,call $0000,math.asm,CALL	COPY
10886,10886,10784,482d,478b,cd b0 45,cd 0e 45,call $45b0,call $450e,call $0000,math.asm,CALL	OP		;SQUARE
10887,10887,10785,4830,478e,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10888,10888,10786,4831,478f,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,math.asm,CALL	DLOAD5
10889,10889,10787,4834,4792,dc b0 45,dc 0e 45,"call c,$45b0","call c,$450e","call c,$0000",math.asm,"CALL	C,OP		;MULTIPLY BY X"
10890,10890,10788,4837,4795,d1,d1,pop de,pop de,pop de,math.asm,IPOW5:          POP	DE
10891,10891,10789,4838,4796,d9,d9,exx,exx,exx,math.asm,EXX
10892,10892,10790,4839,4797,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
10893,10893,10791,483a,4798,d9,d9,exx,exx,exx,math.asm,EXX
10894,10894,10792,483b,4799,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
10895,10895,10793,483c,479a,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
10896,10896,10794,483d,479b,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
10897,10897,10795,483e,479c,10 da,10 da,djnz $-$24,djnz $-$24,djnz $-$00,math.asm,IPOW4:          DJNZ	IPOW3
10898,10898,10796,4840,479e,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10899,10899,10797,4841,479f,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10900,10900,10798,4842,47a0,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10901,10901,10799,4843,47a1,c9,c9,ret,ret,ret,math.asm,RET
10902,10902,10800,4844,47a2,f1,f1,pop af,pop af,pop af,math.asm,FPOW0:          POP	AF
10903,10903,10801,4845,47a3,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10904,10904,10802,4846,47a4,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10905,10905,10803,4847,47a5,18 a1,18 a1,jr $-$5d,jr $-$5d,jr $-$00,math.asm,JR	IPOW0
10906,10906,10804,4849,47a7,cb 7a,cb 7a,"bit 7,d","bit 7,d","bit 7,d",math.asm,"FPOW:           BIT	7,D"
10907,10907,10805,484b,47a9,f5,f5,push af,push af,push af,math.asm,PUSH	AF
10908,10908,10806,484c,47aa,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
10909,10909,10807,484f,47ad,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
10910,10910,10808,4852,47b0,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
10911,10911,10809,4853,47b1,0c,0c,inc c,inc c,inc c,math.asm,INC	C
10912,10912,10810,4854,47b2,28 ee,28 ee,"jr z,$-$10","jr z,$-$10","jr z,$-$00",math.asm,"JR	Z,FPOW0"
10913,10913,10811,4856,47b4,3e 9e,3e 9e,"ld a,$9e","ld a,$9e","ld a,$00",math.asm,"LD	A,158"
10914,10914,10812,4858,47b6,b9,b9,cp c,cp c,cp c,math.asm,CP	C
10915,10915,10813,4859,47b7,38 08,38 08,"jr c,$+$0a","jr c,$+$0a","jr c,$+$00",math.asm,"JR	C,FPOW1"
10916,10916,10814,485b,47b9,3c,3c,inc a,inc a,inc a,math.asm,INC	A
10917,10917,10815,485c,47ba,cd 62 4e,cd c0 4d,call $4e62,call $4dc0,call $0000,math.asm,CALL	FIX
10918,10918,10816,485f,47bd,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
10919,10919,10817,4860,47be,f2 44 48,f2 a2 47,"jp p,$4844","jp p,$47a2","jp p,$0000",math.asm,"JP	P,FPOW0"
10920,10920,10818,4863,47c1,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,FPOW1:          CALL	SWAP
10921,10921,10819,4866,47c4,cd 2b 4b,cd 89 4a,call $4b2b,call $4a89,call $0000,math.asm,CALL	LN0
10922,10922,10820,4869,47c7,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
10923,10923,10821,486c,47ca,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
10924,10924,10822,486d,47cb,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
10925,10925,10823,4870,47ce,c3 a0 4a,c3 fe 49,jp $4aa0,jp $49fe,jp $0000,math.asm,JP	EXP0
10926,10926,10824,4873,47d1,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FLT:            CALL	FCP
10927,10927,10825,4876,47d4,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	ILT1
10928,10928,10826,4878,47d6,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,ILT:            CALL	ICP
10929,10929,10827,487b,47d9,d0,d0,ret nc,ret nc,ret nc,math.asm,ILT1:           RET	NC
10930,10930,10828,487c,47da,18 38,18 38,jr $+$3a,jr $+$3a,jr $+$00,math.asm,JR	TRUE
10931,10931,10829,487e,47dc,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FGT:            CALL	FCP
10932,10932,10830,4881,47df,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	IGT1
10933,10933,10831,4883,47e1,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,IGT:            CALL	ICP
10934,10934,10832,4886,47e4,c8,c8,ret z,ret z,ret z,math.asm,IGT1:           RET	Z
10935,10935,10833,4887,47e5,d8,d8,ret c,ret c,ret c,math.asm,RET	C
10936,10936,10834,4888,47e6,18 2c,18 2c,jr $+$2e,jr $+$2e,jr $+$00,math.asm,JR	TRUE
10937,10937,10835,488a,47e8,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FGE:            CALL	FCP
10938,10938,10836,488d,47eb,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	IGE1
10939,10939,10837,488f,47ed,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,IGE:            CALL	ICP
10940,10940,10838,4892,47f0,d8,d8,ret c,ret c,ret c,math.asm,IGE1:           RET	C
10941,10941,10839,4893,47f1,18 21,18 21,jr $+$23,jr $+$23,jr $+$00,math.asm,JR	TRUE
10942,10942,10840,4895,47f3,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FLE:            CALL	FCP
10943,10943,10841,4898,47f6,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	ILE1
10944,10944,10842,489a,47f8,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,ILE:            CALL	ICP
10945,10945,10843,489d,47fb,28 17,28 17,"jr z,$+$19","jr z,$+$19","jr z,$+$00",math.asm,"ILE1:           JR	Z,TRUE"
10946,10946,10844,489f,47fd,d0,d0,ret nc,ret nc,ret nc,math.asm,RET	NC
10947,10947,10845,48a0,47fe,18 14,18 14,jr $+$16,jr $+$16,jr $+$00,math.asm,JR	TRUE
10948,10948,10846,48a2,4800,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FNE:            CALL	FCP
10949,10949,10847,48a5,4803,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	INE1
10950,10950,10848,48a7,4805,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,INE:            CALL	ICP
10951,10951,10849,48aa,4808,c8,c8,ret z,ret z,ret z,math.asm,INE1:           RET	Z
10952,10952,10850,48ab,4809,18 09,18 09,jr $+$0b,jr $+$0b,jr $+$00,math.asm,JR	TRUE
10953,10953,10851,48ad,480b,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,FEQ:            CALL	FCP
10954,10954,10852,48b0,480e,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	IEQ1
10955,10955,10853,48b2,4810,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,IEQ:            CALL	ICP
10956,10956,10854,48b5,4813,c0,c0,ret nz,ret nz,ret nz,math.asm,IEQ1:           RET	NZ
10957,10957,10855,48b6,4814,21 ff ff,21 ff ff,"ld hl,$ffff","ld hl,$ffff","ld hl,$0000",math.asm,"TRUE:           LD	HL,-1"
10958,10958,10856,48b9,4817,d9,d9,exx,exx,exx,math.asm,EXX
10959,10959,10857,48ba,4818,21 ff ff,21 ff ff,"ld hl,$ffff","ld hl,$ffff","ld hl,$0000",math.asm,"LD	HL,-1"
10960,10960,10858,48bd,481b,d9,d9,exx,exx,exx,math.asm,EXX
10961,10961,10859,48be,481c,af,af,xor a,xor a,xor a,math.asm,XOR	A
10962,10962,10860,48bf,481d,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
10963,10963,10861,48c0,481e,c9,c9,ret,ret,ret,math.asm,RET
10964,10964,10862,48c1,481f,cd f2 48,cd 50 48,call $48f2,call $4850,call $0000,math.asm,ISHL:           CALL	SHIFTS
10965,10965,10863,48c4,4822,28 07,28 07,"jr z,$+$09","jr z,$+$09","jr z,$+$00",math.asm,"JR	Z,SHRET"
10966,10966,10864,48c6,4824,d9,d9,exx,exx,exx,math.asm,ISHL1:          EXX
10967,10967,10865,48c7,4825,29,29,"add hl,hl","add hl,hl","add hl,hl",math.asm,"ADD	HL,HL"
10968,10968,10866,48c8,4826,d9,d9,exx,exx,exx,math.asm,EXX
10969,10969,10867,48c9,4827,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
10970,10970,10868,48cb,4829,10 f9,10 f9,djnz $-$05,djnz $-$05,djnz $-$00,math.asm,DJNZ	ISHL1
10971,10971,10869,48cd,482b,c9,c9,ret,ret,ret,math.asm,SHRET:          RET
10972,10972,10870,48ce,482c,cd f2 48,cd 50 48,call $48f2,call $4850,call $0000,math.asm,ISAR:           CALL	SHIFTS
10973,10973,10871,48d1,482f,28 fa,28 fa,"jr z,$-$04","jr z,$-$04","jr z,$-$00",math.asm,"JR	Z,SHRET"
10974,10974,10872,48d3,4831,cb 2c,cb 2c,sra h,sra h,sra h,math.asm,ISAR1:          SRA	H
10975,10975,10873,48d5,4833,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
10976,10976,10874,48d7,4835,d9,d9,exx,exx,exx,math.asm,EXX
10977,10977,10875,48d8,4836,cb 1c,cb 1c,rr h,rr h,rr h,math.asm,RR	H
10978,10978,10876,48da,4838,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
10979,10979,10877,48dc,483a,d9,d9,exx,exx,exx,math.asm,EXX
10980,10980,10878,48dd,483b,10 f4,10 f4,djnz $-$0a,djnz $-$0a,djnz $-$00,math.asm,DJNZ	ISAR1
10981,10981,10879,48df,483d,c9,c9,ret,ret,ret,math.asm,RET
10982,10982,10880,48e0,483e,cd f2 48,cd 50 48,call $48f2,call $4850,call $0000,math.asm,ISHR:           CALL	SHIFTS
10983,10983,10881,48e3,4841,28 e8,28 e8,"jr z,$-$16","jr z,$-$16","jr z,$-$00",math.asm,"JR	Z,SHRET"
10984,10984,10882,48e5,4843,cb 3c,cb 3c,srl h,srl h,srl h,math.asm,ISHR1:          SRL	H
10985,10985,10883,48e7,4845,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
10986,10986,10884,48e9,4847,d9,d9,exx,exx,exx,math.asm,EXX
10987,10987,10885,48ea,4848,cb 1c,cb 1c,rr h,rr h,rr h,math.asm,RR	H
10988,10988,10886,48ec,484a,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
10989,10989,10887,48ee,484c,d9,d9,exx,exx,exx,math.asm,EXX
10990,10990,10888,48ef,484d,10 f4,10 f4,djnz $-$0a,djnz $-$0a,djnz $-$00,math.asm,DJNZ	ISHR1
10991,10991,10889,48f1,484f,c9,c9,ret,ret,ret,math.asm,RET
10992,10992,10890,48f2,4850,cd 72 4e,cd d0 4d,call $4e72,call $4dd0,call $0000,math.asm,SHIFTS:         CALL	FIX2
10993,10993,10891,48f5,4853,7a,7a,"ld a,d","ld a,d","ld a,d",math.asm,"LD	A,D"
10994,10994,10892,48f6,4854,b3,b3,or e,or e,or e,math.asm,OR	E
10995,10995,10893,48f7,4855,d9,d9,exx,exx,exx,math.asm,EXX
10996,10996,10894,48f8,4856,b2,b2,or d,or d,or d,math.asm,OR	D
10997,10997,10895,48f9,4857,7b,7b,"ld a,e","ld a,e","ld a,e",math.asm,"LD	A,E"
10998,10998,10896,48fa,4858,d9,d9,exx,exx,exx,math.asm,EXX
10999,10999,10897,48fb,4859,06 20,06 20,"ld b,$20","ld b,$20","ld b,$00",math.asm,"LD	B,32"
11000,11000,10898,48fd,485b,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",math.asm,"JR	NZ,SHMAX"
11001,11001,10899,48ff,485d,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11002,11002,10900,4900,485e,b7,b7,or a,or a,or a,math.asm,OR	A
11003,11003,10901,4901,485f,c9,c9,ret,ret,ret,math.asm,SHMAX:          RET
11004,11004,10902,4902,4860,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"ABS:            BIT	7,H"
11005,11005,10903,4904,4862,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;POSITIVE/ZERO
11006,11006,10904,4905,4863,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11007,11007,10905,4906,4864,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11008,11008,10906,4907,4865,ca 8a 4e,ca e8 4d,"jp z,$4e8a","jp z,$4de8","jp z,$0000",math.asm,"JP	Z,NEGATE	;INTEGER"
11009,11009,10907,490a,4868,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11010,11010,10908,490c,486a,c9,c9,ret,ret,ret,math.asm,RET
11011,11011,10909,490d,486b,cd 7b 4e,cd d9 4d,call $4e7b,call $4dd9,call $0000,math.asm,CPL_:           CALL	SFIXmat
11012,11012,10910,4910,486e,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11013,11013,10911,4911,486f,2f,2f,cpl,cpl,cpl,math.asm,CPL
11014,11014,10912,4912,4870,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
11015,11015,10913,4913,4871,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
11016,11016,10914,4914,4872,2f,2f,cpl,cpl,cpl,math.asm,CPL
11017,11017,10915,4915,4873,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
11018,11018,10916,4916,4874,d9,d9,exx,exx,exx,math.asm,EXX
11019,11019,10917,4917,4875,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11020,11020,10918,4918,4876,2f,2f,cpl,cpl,cpl,math.asm,CPL
11021,11021,10919,4919,4877,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
11022,11022,10920,491a,4878,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,"LD	A,L"
11023,11023,10921,491b,4879,2f,2f,cpl,cpl,cpl,math.asm,CPL
11024,11024,10922,491c,487a,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
11025,11025,10923,491d,487b,d9,d9,exx,exx,exx,math.asm,EXX
11026,11026,10924,491e,487c,af,af,xor a,xor a,xor a,math.asm,XOR	A		;NUMERIC MARKER
11027,11027,10925,491f,487d,c9,c9,ret,ret,ret,math.asm,RET
11028,11028,10926,4920,487e,21 0f 49,21 0f 49,"ld hl,$490f","ld hl,$490f","ld hl,$0000",math.asm,"PI:             LD	HL,490FH"
11029,11029,10927,4923,4881,d9,d9,exx,exx,exx,math.asm,EXX
11030,11030,10928,4924,4882,21 a2 da,21 a2 da,"ld hl,$daa2","ld hl,$daa2","ld hl,$0000",math.asm,"LD	HL,0DAA2H"
11031,11031,10929,4927,4885,d9,d9,exx,exx,exx,math.asm,EXX
11032,11032,10930,4928,4886,0e 81,0e 81,"ld c,$81","ld c,$81","ld c,$00",math.asm,"LD	C,81H"
11033,11033,10931,492a,4888,af,af,xor a,xor a,xor a,math.asm,XOR	A		;NUMERIC MARKER
11034,11034,10932,492b,4889,c9,c9,ret,ret,ret,math.asm,RET
11035,11035,10933,492c,488a,cd 3c 49,cd 9a 48,call $493c,call $489a,call $0000,math.asm,DEG:            CALL	FPI180
11036,11036,10934,492f,488d,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11037,11037,10935,4932,4890,af,af,xor a,xor a,xor a,math.asm,XOR	A
11038,11038,10936,4933,4891,c9,c9,ret,ret,ret,math.asm,RET
11039,11039,10937,4934,4892,cd 3c 49,cd 9a 48,call $493c,call $489a,call $0000,math.asm,RAD:            CALL	FPI180
11040,11040,10938,4937,4895,cd 21 47,cd 7f 46,call $4721,call $467f,call $0000,math.asm,CALL	FDIV
11041,11041,10939,493a,4898,af,af,xor a,xor a,xor a,math.asm,XOR	A
11042,11042,10940,493b,4899,c9,c9,ret,ret,ret,math.asm,RET
11043,11043,10941,493c,489a,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,FPI180:         CALL	SFLOAT
11044,11044,10942,493f,489d,11 2e 65,11 2e 65,"ld de,$652e","ld de,$652e","ld de,$0000",math.asm,"LD	DE,652EH"
11045,11045,10943,4942,48a0,d9,d9,exx,exx,exx,math.asm,EXX
11046,11046,10944,4943,48a1,11 d3 e0,11 d3 e0,"ld de,$e0d3","ld de,$e0d3","ld de,$0000",math.asm,"LD	DE,0E0D3H"
11047,11047,10945,4946,48a4,d9,d9,exx,exx,exx,math.asm,EXX
11048,11048,10946,4947,48a5,06 85,06 85,"ld b,$85","ld b,$85","ld b,$00",math.asm,"LD	B,85H"
11049,11049,10947,4949,48a7,c9,c9,ret,ret,ret,math.asm,RET
11050,11050,10948,494a,48a8,cd 85 4f,cd e3 4e,call $4f85,call $4ee3,call $0000,math.asm,SGN:            CALL	TESTmat
11051,11051,10949,494d,48ab,b1,b1,or c,or c,or c,math.asm,OR	C
11052,11052,10950,494e,48ac,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ZERO
11053,11053,10951,494f,48ad,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
11054,11054,10952,4951,48af,c2 b6 48,c2 14 48,"jp nz,$48b6","jp nz,$4814","jp nz,$0000",math.asm,"JP	NZ,TRUE		;-1"
11055,11055,10953,4954,48b2,cd a5 4f,cd 03 4f,call $4fa5,call $4f03,call $0000,math.asm,CALL	ZEROmat
11056,11056,10954,4957,48b5,c3 4c 4f,c3 aa 4e,jp $4f4c,jp $4eaa,jp $0000,math.asm,JP	ADD1		;1
11057,11057,10955,495a,48b8,cd 67 51,cd c5 50,call $5167,call $50c5,call $0000,math.asm,VAL:            CALL	SIGNQ
11058,11058,10956,495d,48bb,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11059,11059,10957,495e,48bc,cd b8 4d,cd 16 4d,call $4db8,call $4d16,call $0000,math.asm,CALL	CON
11060,11060,10958,4961,48bf,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11061,11061,10959,4962,48c0,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,math.asm,CP	'-'
11062,11062,10960,4964,48c2,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0		;NUMERIC MARKER"
11063,11063,10961,4966,48c4,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
11064,11064,10962,4967,48c5,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11065,11065,10963,4968,48c6,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11066,11066,10964,4969,48c7,ca 8a 4e,ca e8 4d,"jp z,$4e8a","jp z,$4de8","jp z,$0000",math.asm,"JP	Z,NEGATE	;ZERO/INTEGER"
11067,11067,10965,496c,48ca,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11068,11068,10966,496d,48cb,ee 80,ee 80,xor $80,xor $80,xor $00,math.asm,XOR	80H		;CHANGE SIGN (FP)
11069,11069,10967,496f,48cd,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
11070,11070,10968,4970,48ce,af,af,xor a,xor a,xor a,math.asm,XOR	A
11071,11071,10969,4971,48cf,c9,c9,ret,ret,ret,math.asm,RET
11072,11072,10970,4972,48d0,0d,0d,dec c,dec c,dec c,math.asm,INT_:           DEC	C
11073,11073,10971,4973,48d1,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11074,11074,10972,4974,48d2,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ZERO/INTEGER
11075,11075,10973,4975,48d3,3e 9f,3e 9f,"ld a,$9f","ld a,$9f","ld a,$00",math.asm,"LD	A,159"
11076,11076,10974,4977,48d5,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H		;B7=SIGN BIT"
11077,11077,10975,4978,48d6,cd 62 4e,cd c0 4d,call $4e62,call $4dc0,call $0000,math.asm,CALL	FIX
11078,11078,10976,497b,48d9,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11079,11079,10977,497c,48da,a0,a0,and b,and b,and b,math.asm,AND	B
11080,11080,10978,497d,48db,fc 4c 4f,fc aa 4e,"call m,$4f4c","call m,$4eaa","call m,$0000",math.asm,"CALL	M,ADD1		;NEGATIVE NON-INTEGER"
11081,11081,10979,4980,48de,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
11082,11082,10980,4981,48df,b7,b7,or a,or a,or a,math.asm,OR	A
11083,11083,10981,4982,48e0,fc 8a 4e,fc e8 4d,"call m,$4e8a","call m,$4de8","call m,$0000",math.asm,"CALL	M,NEGATE"
11084,11084,10982,4985,48e3,af,af,xor a,xor a,xor a,math.asm,XOR	A
11085,11085,10983,4986,48e4,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11086,11086,10984,4987,48e5,c9,c9,ret,ret,ret,math.asm,RET
11087,11087,10985,4988,48e6,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,SQR:            CALL	SFLOAT
11088,11088,10986,498b,48e9,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"SQR0:           BIT	7,H"
11089,11089,10987,498d,48eb,3e 15,3e 15,"ld a,$15","ld a,$15","ld a,$00",math.asm,"LD	A,NGROOT"
11090,11090,10988,498f,48ed,c2 aa 45,c2 08 45,"jp nz,$45aa","jp nz,$4508","jp nz,$0000",math.asm,"JP	NZ,ERROR_mat	;""-ve root"""
11091,11091,10989,4992,48f0,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11092,11092,10990,4993,48f1,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11093,11093,10991,4994,48f2,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ZERO
11094,11094,10992,4995,48f3,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;IMPLIED 1"
11095,11095,10993,4997,48f5,cb 41,cb 41,"bit 0,c","bit 0,c","bit 0,c",math.asm,"BIT	0,C"
11096,11096,10994,4999,48f7,cc 68 4f,cc c6 4e,"call z,$4f68","call z,$4ec6","call z,$0000",math.asm,"CALL	Z,DIV2		;MAKE EXPONENT ODD"
11097,11097,10995,499c,48fa,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
11098,11098,10996,499d,48fb,d6 80,d6 80,sub $80,sub $80,sub $00,math.asm,SUB	80H
11099,11099,10997,499f,48fd,cb 2f,cb 2f,sra a,sra a,sra a,math.asm,SRA	A		;HALVE EXPONENT
11100,11100,10998,49a1,48ff,c6 80,c6 80,"add a,$80","add a,$80","add a,$00",math.asm,"ADD	A,80H"
11101,11101,10999,49a3,4901,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11102,11102,11000,49a4,4902,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC		;SAVE EXPONENT
11103,11103,11001,49a5,4903,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
11104,11104,11002,49a6,4904,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
11105,11105,11003,49a9,4907,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
11106,11106,11004,49aa,4908,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
11107,11107,11005,49ab,4909,d9,d9,exx,exx,exx,math.asm,EXX
11108,11108,11006,49ac,490a,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
11109,11109,11007,49ad,490b,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
11110,11110,11008,49b0,490e,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
11111,11111,11009,49b1,490f,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
11112,11112,11010,49b2,4910,3e e1,3e e1,"ld a,$e1","ld a,$e1","ld a,$00",math.asm,"LD	A,-31"
11113,11113,11011,49b4,4912,cd 16 51,cd 74 50,call $5116,call $5074,call $0000,math.asm,CALL	SQRA		;ROOT
11114,11114,11012,49b7,4915,d9,d9,exx,exx,exx,math.asm,EXX
11115,11115,11013,49b8,4916,cb 78,cb 78,"bit 7,b","bit 7,b","bit 7,b",math.asm,"BIT	7,B"
11116,11116,11014,49ba,4918,d9,d9,exx,exx,exx,math.asm,EXX
11117,11117,11015,49bb,4919,cc 16 51,cc 74 50,"call z,$5116","call z,$5074","call z,$0000",math.asm,"CALL	Z,SQRA		;NORMALISE & INC A"
11118,11118,11016,49be,491c,cd 35 51,cd 93 50,call $5135,call $5093,call $0000,math.asm,CALL	SQRB
11119,11119,11017,49c1,491f,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
11120,11120,11018,49c2,4920,cd d0 50,cd 2e 50,call $50d0,call $502e,call $0000,math.asm,CALL	DIVB
11121,11121,11019,49c5,4923,cb 1b,cb 1b,rr e,rr e,rr e,math.asm,RR	E		;LSB TO CARRY
11122,11122,11020,49c7,4925,60,60,"ld h,b","ld h,b","ld h,b",math.asm,"LD	H,B"
11123,11123,11021,49c8,4926,69,69,"ld l,c","ld l,c","ld l,c",math.asm,"LD	L,C"
11124,11124,11022,49c9,4927,d9,d9,exx,exx,exx,math.asm,EXX
11125,11125,11023,49ca,4928,60,60,"ld h,b","ld h,b","ld h,b",math.asm,"LD	H,B"
11126,11126,11024,49cb,4929,69,69,"ld l,c","ld l,c","ld l,c",math.asm,"LD	L,C"
11127,11127,11025,49cc,492a,dc 4c 4f,dc aa 4e,"call c,$4f4c","call c,$4eaa","call c,$0000",math.asm,"CALL	C,ADD1		;ROUND UP"
11128,11128,11026,49cf,492d,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC		;RESTORE EXPONENT
11129,11129,11027,49d0,492e,dc 74 4f,dc d2 4e,"call c,$4f74","call c,$4ed2","call c,$0000",math.asm,"CALL	C,INCC"
11130,11130,11028,49d3,4931,1f,1f,rra,rra,rra,math.asm,RRA
11131,11131,11029,49d4,4932,9f,9f,"sbc a,a","sbc a,a","sbc a,a",math.asm,"SBC	A,A"
11132,11132,11030,49d5,4933,81,81,"add a,c","add a,c","add a,c",math.asm,"ADD	A,C"
11133,11133,11031,49d6,4934,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11134,11134,11032,49d7,4935,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H		;POSITIVE"
11135,11135,11033,49d9,4937,af,af,xor a,xor a,xor a,math.asm,XOR	A
11136,11136,11034,49da,4938,c9,c9,ret,ret,ret,math.asm,RET
11137,11137,11035,49db,4939,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,TAN:            CALL	SFLOAT
11138,11138,11036,49de,493c,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11139,11139,11037,49e1,493f,cd fb 49,cd 59 49,call $49fb,call $4959,call $0000,math.asm,CALL	COS0
11140,11140,11038,49e4,4942,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11141,11141,11039,49e7,4945,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11142,11142,11040,49ea,4948,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
11143,11143,11041,49ed,494b,cd 06 4a,cd 64 49,call $4a06,call $4964,call $0000,math.asm,CALL	SIN0
11144,11144,11042,49f0,494e,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11145,11145,11043,49f3,4951,cd 21 47,cd 7f 46,call $4721,call $467f,call $0000,math.asm,CALL	FDIV
11146,11146,11044,49f6,4954,af,af,xor a,xor a,xor a,math.asm,XOR	A		;NUMERIC MARKER
11147,11147,11045,49f7,4955,c9,c9,ret,ret,ret,math.asm,RET
11148,11148,11046,49f8,4956,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,COS:            CALL	SFLOAT
11149,11149,11047,49fb,4959,cd ab 4e,cd 09 4e,call $4eab,call $4e09,call $0000,math.asm,COS0:           CALL	SCALE
11150,11150,11048,49fe,495c,1c,1c,inc e,inc e,inc e,math.asm,INC	E
11151,11151,11049,49ff,495d,1c,1c,inc e,inc e,inc e,math.asm,INC	E
11152,11152,11050,4a00,495e,7b,7b,"ld a,e","ld a,e","ld a,e",math.asm,"LD	A,E"
11153,11153,11051,4a01,495f,18 0e,18 0e,jr $+$10,jr $+$10,jr $+$00,math.asm,JR	SIN1
11154,11154,11052,4a03,4961,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,SIN:            CALL	SFLOAT
11155,11155,11053,4a06,4964,e5,e5,push hl,push hl,push hl,math.asm,SIN0:           PUSH	HL		;H7=SIGN
11156,11156,11054,4a07,4965,cd ab 4e,cd 09 4e,call $4eab,call $4e09,call $0000,math.asm,CALL	SCALE
11157,11157,11055,4a0a,4968,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11158,11158,11056,4a0b,4969,07,07,rlca,rlca,rlca,math.asm,RLCA
11159,11159,11057,4a0c,496a,07,07,rlca,rlca,rlca,math.asm,RLCA
11160,11160,11058,4a0d,496b,07,07,rlca,rlca,rlca,math.asm,RLCA
11161,11161,11059,4a0e,496c,e6 04,e6 04,and $04,and $04,and $00,math.asm,AND	4
11162,11162,11060,4a10,496e,ab,ab,xor e,xor e,xor e,math.asm,XOR	E
11163,11163,11061,4a11,496f,f5,f5,push af,push af,push af,math.asm,SIN1:           PUSH	AF		;OCTANT
11164,11164,11062,4a12,4970,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11165,11165,11063,4a14,4972,1f,1f,rra,rra,rra,math.asm,RRA
11166,11166,11064,4a15,4973,cd 92 4a,cd f0 49,call $4a92,call $49f0,call $0000,math.asm,CALL	PIBY4
11167,11167,11065,4a18,4976,dc b9 46,dc 17 46,"call c,$46b9","call c,$4617","call c,$0000",math.asm,"CALL	C,RSUB		;X=(PI/4)-X"
11168,11168,11066,4a1b,4979,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11169,11169,11067,4a1c,497a,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11170,11170,11068,4a1d,497b,e6 03,e6 03,and $03,and $03,and $00,math.asm,AND	3
11171,11171,11069,4a1f,497d,e2 50 4a,e2 ae 49,"jp po,$4a50","jp po,$49ae","jp po,$0000",math.asm,"JP	PO,SIN2		;USE COSINE APPROX."
11172,11172,11070,4a22,4980,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5		;SAVE X
11173,11173,11071,4a25,4983,cd 19 50,cd 77 4f,call $5019,call $4f77,call $0000,math.asm,CALL	SQUARE		;PUSH X*X
11174,11174,11072,4a28,4986,cd 52 50,cd b0 4f,call $5052,call $4fb0,call $0000,math.asm,CALL	POLY
11175,11175,11073,4a2b,4989,b7,b7,or a,or a,or a,math.asm,DW	0A8B7H		;a(8)
11176,11176,11074,4a2c,498a,a8,a8,xor b,xor b,xor b,math.asm,
11177,11177,11075,4a2d,498b,11 36 6d,11 36 6d,"ld de,$6d36","ld de,$6d36","ld de,$0000",math.asm,DW	3611H
11178,11178,11076,4a30,498e,26 de,26 de,"ld h,$de","ld h,$de","ld h,$00",math.asm,DW	0DE26H		;a(6)
11179,11179,11077,4a32,4990,05,05,dec b,dec b,dec b,math.asm,DW	0D005H
11180,11180,11078,4a33,4991,d0,d0,ret nc,ret nc,ret nc,math.asm,
11181,11181,11079,4a34,4992,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",math.asm,DB	73H
11182,11182,11080,4a35,4993,c0,c0,ret nz,ret nz,ret nz,math.asm,DW	80C0H		;a(4)
11183,11183,11081,4a36,4994,80,80,"add a,b","add a,b","add a,b",math.asm,
11184,11184,11082,4a37,4995,88,88,"adc a,b","adc a,b","adc a,b",math.asm,DW	888H
11185,11185,11083,4a38,4996,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,
11186,11186,11084,4a39,4997,79,79,"ld a,c","ld a,c","ld a,c",math.asm,DB	79H
11187,11187,11085,4a3a,4998,9d,9d,"sbc a,l","sbc a,l","sbc a,l",math.asm,DW	0AA9DH		;a(2)
11188,11188,11086,4a3b,4999,aa,aa,xor d,xor d,xor d,math.asm,
11189,11189,11087,4a3c,499a,aa,aa,xor d,xor d,xor d,math.asm,DW	0AAAAH
11190,11190,11088,4a3d,499b,aa,aa,xor d,xor d,xor d,math.asm,
11191,11191,11089,4a3e,499c,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,DB	7DH
11192,11192,11090,4a3f,499d,00,00,nop,nop,nop,math.asm,DW	0		;a(0)
11193,11193,11091,4a40,499e,00,00,nop,nop,nop,math.asm,
11194,11194,11092,4a41,499f,00,00,nop,nop,nop,math.asm,DW	0
11195,11195,11093,4a42,49a0,00,00,nop,nop,nop,math.asm,
11196,11196,11094,4a43,49a1,80,80,"add a,b","add a,b","add a,b",math.asm,DB	80H
11197,11197,11095,4a44,49a2,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11198,11198,11096,4a47,49a5,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11199,11199,11097,4a4a,49a8,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11200,11200,11098,4a4d,49ab,c3 72 4a,c3 d0 49,jp $4a72,jp $49d0,jp $0000,math.asm,JP	SIN3
11201,11201,11099,4a50,49ae,cd 19 50,cd 77 4f,call $5019,call $4f77,call $0000,math.asm,SIN2:           CALL	SQUARE		;PUSH X*X
11202,11202,11100,4a53,49b1,cd 52 50,cd b0 4f,call $5052,call $4fb0,call $0000,math.asm,CALL	POLY
11203,11203,11101,4a56,49b4,71,71,"ld (hl),c","ld (hl),c","ld (hl),c",math.asm,DW	0D571H		;b(8)
11204,11204,11102,4a57,49b5,d5,d5,push de,push de,push de,math.asm,
11205,11205,11103,4a58,49b6,78,78,"ld a,b","ld a,b","ld a,b",math.asm,DW	4C78H
11206,11206,11104,4a59,49b7,4c,4c,"ld c,h","ld c,h","ld c,h",math.asm,
11207,11207,11105,4a5a,49b8,70,70,"ld (hl),b","ld (hl),b","ld (hl),b",math.asm,DB	70H
11208,11208,11106,4a5b,49b9,af,af,xor a,xor a,xor a,math.asm,DW	94AFH		;b(6)
11209,11209,11107,4a5c,49ba,94,94,sub h,sub h,sub h,math.asm,
11210,11210,11108,4a5d,49bb,03,03,inc bc,inc bc,inc bc,math.asm,DW	0B603H
11211,11211,11109,4a5e,49bc,b6,b6,or (hl),or (hl),or (hl),math.asm,
11212,11212,11110,4a5f,49bd,76,76,halt,halt,halt,math.asm,DB	76H
11213,11213,11111,4a60,49be,c8,c8,ret z,ret z,ret z,math.asm,DW	9CC8H		;b(4)
11214,11214,11112,4a61,49bf,9c,9c,"sbc a,h","sbc a,h","sbc a,h",math.asm,
11215,11215,11113,4a62,49c0,aa,aa,xor d,xor d,xor d,math.asm,DW	2AAAH
11216,11216,11114,4a63,49c1,2a 7b dd,2a 7b dd,"ld hl,($dd7b)","ld hl,($dd7b)","ld hl,($0000)",math.asm,
11217,11217,11115,4a66,49c4,ff,ff,rst $38,rst $38,rst $00,math.asm,
11218,11218,11116,4a67,49c5,ff,ff,rst $38,rst $38,rst $00,math.asm,DW	0FFFFH
11219,11219,11117,4a68,49c6,ff,ff,rst $38,rst $38,rst $00,math.asm,
11220,11220,11118,4a69,49c7,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",math.asm,DB	7EH
11221,11221,11119,4a6a,49c8,00,00,nop,nop,nop,math.asm,DW	0		;b(0)
11222,11222,11120,4a6b,49c9,00,00,nop,nop,nop,math.asm,
11223,11223,11121,4a6c,49ca,00,00,nop,nop,nop,math.asm,DW	0
11224,11224,11122,4a6d,49cb,00,00,nop,nop,nop,math.asm,
11225,11225,11123,4a6e,49cc,80,80,"add a,b","add a,b","add a,b",math.asm,DB	80H
11226,11226,11124,4a6f,49cd,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11227,11227,11125,4a72,49d0,f1,f1,pop af,pop af,pop af,math.asm,SIN3:           POP	AF
11228,11228,11126,4a73,49d1,e6 04,e6 04,and $04,and $04,and $00,math.asm,AND	4
11229,11229,11127,4a75,49d3,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
11230,11230,11128,4a76,49d4,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11231,11231,11129,4a77,49d5,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11232,11232,11130,4a78,49d6,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ZERO
11233,11233,11131,4a79,49d7,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;MAKE NEGATIVE"
11234,11234,11132,4a7b,49d9,c9,c9,ret,ret,ret,math.asm,RET
11235,11235,11133,4a7c,49da,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"FONE:           LD	HL,0"
11236,11236,11134,4a7f,49dd,d9,d9,exx,exx,exx,math.asm,EXX
11237,11237,11135,4a80,49de,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
11238,11238,11136,4a83,49e1,d9,d9,exx,exx,exx,math.asm,EXX
11239,11239,11137,4a84,49e2,0e 80,0e 80,"ld c,$80","ld c,$80","ld c,$00",math.asm,"LD	C,80H"
11240,11240,11138,4a86,49e4,c9,c9,ret,ret,ret,math.asm,RET
11241,11241,11139,4a87,49e5,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",math.asm,"DONE:           LD	DE,0"
11242,11242,11140,4a8a,49e8,d9,d9,exx,exx,exx,math.asm,EXX
11243,11243,11141,4a8b,49e9,11 00 00,11 00 00,"ld de,$0000","ld de,$0000","ld de,$0000",math.asm,"LD	DE,0"
11244,11244,11142,4a8e,49ec,d9,d9,exx,exx,exx,math.asm,EXX
11245,11245,11143,4a8f,49ed,06 80,06 80,"ld b,$80","ld b,$80","ld b,$00",math.asm,"LD	B,80H"
11246,11246,11144,4a91,49ef,c9,c9,ret,ret,ret,math.asm,RET
11247,11247,11145,4a92,49f0,11 0f 49,11 0f 49,"ld de,$490f","ld de,$490f","ld de,$0000",math.asm,"PIBY4:          LD	DE,490FH"
11248,11248,11146,4a95,49f3,d9,d9,exx,exx,exx,math.asm,EXX
11249,11249,11147,4a96,49f4,11 a2 da,11 a2 da,"ld de,$daa2","ld de,$daa2","ld de,$0000",math.asm,"LD	DE,0DAA2H"
11250,11250,11148,4a99,49f7,d9,d9,exx,exx,exx,math.asm,EXX
11251,11251,11149,4a9a,49f8,06 7f,06 7f,"ld b,$7f","ld b,$7f","ld b,$00",math.asm,"LD	B,7FH"
11252,11252,11150,4a9c,49fa,c9,c9,ret,ret,ret,math.asm,RET
11253,11253,11151,4a9d,49fb,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,EXP:            CALL	SFLOAT
11254,11254,11152,4aa0,49fe,cd 1d 4b,cd 7b 4a,call $4b1d,call $4a7b,call $0000,math.asm,EXP0:           CALL	LN2		;LN(2)
11255,11255,11153,4aa3,4a01,d9,d9,exx,exx,exx,math.asm,EXX
11256,11256,11154,4aa4,4a02,1d,1d,dec e,dec e,dec e,math.asm,DEC	E
11257,11257,11155,4aa5,4a03,01 cf d1,01 cf d1,"ld bc,$d1cf","ld bc,$d1cf","ld bc,$0000",math.asm,"LD	BC,0D1CFH	;0.6931471805599453"
11258,11258,11156,4aa8,4a06,d9,d9,exx,exx,exx,math.asm,EXX
11259,11259,11157,4aa9,4a07,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL		;H7=SIGN
11260,11260,11158,4aaa,4a08,cd bb 4e,cd 19 4e,call $4ebb,call $4e19,call $0000,math.asm,"CALL	MOD48		;""MODULUS"""
11261,11261,11159,4aad,4a0b,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11262,11262,11160,4aae,4a0c,cb 7b,cb 7b,"bit 7,e","bit 7,e","bit 7,e",math.asm,"BIT	7,E"
11263,11263,11161,4ab0,4a0e,28 09,28 09,"jr z,$+$0b","jr z,$+$0b","jr z,$+$00",math.asm,"JR	Z,EXP1"
11264,11264,11162,4ab2,4a10,17,17,rla,rla,rla,math.asm,RLA
11265,11265,11163,4ab3,4a11,da a5 4f,da 03 4f,"jp c,$4fa5","jp c,$4f03","jp c,$0000",math.asm,"JP	C,ZEROmat"
11266,11266,11164,4ab6,4a14,3e 18,3e 18,"ld a,$18","ld a,$18","ld a,$00",math.asm,"LD	A,EXPRNG"
11267,11267,11165,4ab8,4a16,c3 aa 45,c3 08 45,jp $45aa,jp $4508,jp $0000,math.asm,"JP	ERROR_mat		;""Exp range"""
11268,11268,11166,4abb,4a19,e6 80,e6 80,and $80,and $80,and $00,math.asm,EXP1:           AND	80H
11269,11269,11167,4abd,4a1b,b3,b3,or e,or e,or e,math.asm,OR	E
11270,11270,11168,4abe,4a1c,f5,f5,push af,push af,push af,math.asm,PUSH	AF		;INTEGER PART
11271,11271,11169,4abf,4a1d,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11272,11272,11170,4ac1,4a1f,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5		;PUSH X*LN(2)
11273,11273,11171,4ac4,4a22,cd 52 50,cd b0 4f,call $5052,call $4fb0,call $0000,math.asm,CALL	POLY
11274,11274,11172,4ac7,4a25,72,72,"ld (hl),d","ld (hl),d","ld (hl),d",math.asm,DW	4072H		;a(7)
11275,11275,11173,4ac8,4a26,40 2e 94,40 2e 94,"ld.sis l,$94","ld.sis l,$94","ld.sis l,$00",math.asm,
11276,11276,11174,4acb,4a29,73,73,"ld (hl),e","ld (hl),e","ld (hl),e",math.asm,DB	73H
11277,11277,11175,4acc,4a2a,65,65,"ld h,l","ld h,l","ld h,l",math.asm,DW	6F65H		;a(6)
11278,11278,11176,4acd,4a2b,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,
11279,11279,11177,4ace,4a2c,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,DW	2E4FH
11280,11280,11178,4acf,4a2d,2e 76,2e 76,"ld l,$76","ld l,$76","ld l,$00",math.asm,
11281,11281,11179,4ad1,4a2f,37,37,scf,scf,scf,math.asm,DW	6D37H		;a(5)
11282,11282,11180,4ad2,4a30,6d,6d,"ld l,l","ld l,l","ld l,l",math.asm,
11283,11283,11181,4ad3,4a31,02,02,"ld (bc),a","ld (bc),a","ld (bc),a",math.asm,DW	8802H
11284,11284,11182,4ad4,4a32,88,88,"adc a,b","adc a,b","adc a,b",math.asm,
11285,11285,11183,4ad5,4a33,79,79,"ld a,c","ld a,c","ld a,c",math.asm,DB	79H
11286,11286,11184,4ad6,4a34,12,12,"ld (de),a","ld (de),a","ld (de),a",math.asm,DW	0E512H		;a(4)
11287,11287,11185,4ad7,4a35,e5,e5,push hl,push hl,push hl,math.asm,
11288,11288,11186,4ad8,4a36,a0,a0,and b,and b,and b,math.asm,DW	2AA0H
11289,11289,11187,4ad9,4a37,2a 7b 14,2a 7b 14,"ld hl,($147b)","ld hl,($147b)","ld hl,($0000)",math.asm,
11290,11290,11188,4adc,4a3a,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,
11291,11291,11189,4add,4a3b,aa,aa,xor d,xor d,xor d,math.asm,DW	0AAAAH
11292,11292,11190,4ade,4a3c,aa,aa,xor d,xor d,xor d,math.asm,
11293,11293,11191,4adf,4a3d,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,DB	7DH
11294,11294,11192,4ae0,4a3e,56,56,"ld d,(hl)","ld d,(hl)","ld d,(hl)",math.asm,DW	0FD56H		;a(2)
11295,11295,11193,4ae1,4a3f,fd ff,fd ff,trap,trap,trap,math.asm,
11296,11296,11194,4ae3,4a41,7f,7f,"ld a,a","ld a,a","ld a,a",math.asm,
11297,11297,11195,4ae4,4a42,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",math.asm,DB	7EH
11298,11298,11196,4ae5,4a43,fe ff,fe ff,cp $ff,cp $ff,cp $00,math.asm,DW	0FFFEH		;a(1)
11299,11299,11197,4ae7,4a45,ff,ff,rst $38,rst $38,rst $00,math.asm,DW	0FFFFH
11300,11300,11198,4ae8,4a46,ff,ff,rst $38,rst $38,rst $00,math.asm,
11301,11301,11199,4ae9,4a47,7f,7f,"ld a,a","ld a,a","ld a,a",math.asm,DB	7FH
11302,11302,11200,4aea,4a48,00,00,nop,nop,nop,math.asm,DW	0		;a(0)
11303,11303,11201,4aeb,4a49,00,00,nop,nop,nop,math.asm,
11304,11304,11202,4aec,4a4a,00,00,nop,nop,nop,math.asm,DW	0
11305,11305,11203,4aed,4a4b,00,00,nop,nop,nop,math.asm,
11306,11306,11204,4aee,4a4c,80,80,"add a,b","add a,b","add a,b",math.asm,DB	80H
11307,11307,11205,4aef,4a4d,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11308,11308,11206,4af2,4a50,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11309,11309,11207,4af3,4a51,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11310,11310,11208,4af4,4a52,f4 14 4b,f4 72 4a,"call p,$4b14","call p,$4a72","call p,$0000",math.asm,"CALL	P,RECIP		;X=1/X"
11311,11311,11209,4af7,4a55,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11312,11312,11210,4af8,4a56,f2 ff 4a,f2 5d 4a,"jp p,$4aff","jp p,$4a5d","jp p,$0000",math.asm,"JP	P,EXP4"
11313,11313,11211,4afb,4a59,e6 7f,e6 7f,and $7f,and $7f,and $00,math.asm,AND	7FH
11314,11314,11212,4afd,4a5b,ed 44,ed 44,neg,neg,neg,math.asm,NEG
11315,11315,11213,4aff,4a5d,c6 80,c6 80,"add a,$80","add a,$80","add a,$00",math.asm,"EXP4:           ADD	A,80H"
11316,11316,11214,4b01,4a5f,81,81,"add a,c","add a,c","add a,c",math.asm,"ADD	A,C"
11317,11317,11215,4b02,4a60,38 05,38 05,"jr c,$+$07","jr c,$+$07","jr c,$+$00",math.asm,"JR	C,EXP2"
11318,11318,11216,4b04,4a62,f2 a5 4f,f2 03 4f,"jp p,$4fa5","jp p,$4f03","jp p,$0000",math.asm,"JP	P,ZEROmat		;UNDERFLOW"
11319,11319,11217,4b07,4a65,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	EXP3
11320,11320,11218,4b09,4a67,fa 76 4f,fa d4 4e,"jp m,$4f76","jp m,$4ed4","jp m,$0000",math.asm,"EXP2:           JP	M,OFLOW		;OVERFLOW"
11321,11321,11219,4b0c,4a6a,c6 80,c6 80,"add a,$80","add a,$80","add a,$00",math.asm,"EXP3:           ADD	A,80H"
11322,11322,11220,4b0e,4a6c,ca a5 4f,ca 03 4f,"jp z,$4fa5","jp z,$4f03","jp z,$0000",math.asm,"JP	Z,ZEROmat"
11323,11323,11221,4b11,4a6f,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11324,11324,11222,4b12,4a70,af,af,xor a,xor a,xor a,math.asm,XOR	A		;NUMERIC MARKER
11325,11325,11223,4b13,4a71,c9,c9,ret,ret,ret,math.asm,RET
11326,11326,11224,4b14,4a72,cd 87 4a,cd e5 49,call $4a87,call $49e5,call $0000,math.asm,RECIP:          CALL	DONE
11327,11327,11225,4b17,4a75,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,RDIV:           CALL	SWAP
11328,11328,11226,4b1a,4a78,c3 21 47,c3 7f 46,jp $4721,jp $467f,jp $0000,math.asm,JP	FDIV		;RECIPROCAL
11329,11329,11227,4b1d,4a7b,11 72 31,11 72 31,"ld de,$3172","ld de,$3172","ld de,$0000",math.asm,"LN2:            LD	DE,3172H	;LN(2)"
11330,11330,11228,4b20,4a7e,d9,d9,exx,exx,exx,math.asm,EXX
11331,11331,11229,4b21,4a7f,11 f8 17,11 f8 17,"ld de,$17f8","ld de,$17f8","ld de,$0000",math.asm,"LD	DE,17F8H"
11332,11332,11230,4b24,4a82,d9,d9,exx,exx,exx,math.asm,EXX
11333,11333,11231,4b25,4a83,06 7f,06 7f,"ld b,$7f","ld b,$7f","ld b,$00",math.asm,"LD	B,7FH"
11334,11334,11232,4b27,4a85,c9,c9,ret,ret,ret,math.asm,RET
11335,11335,11233,4b28,4a86,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,LN:             CALL	SFLOAT
11336,11336,11234,4b2b,4a89,3e 16,3e 16,"ld a,$16","ld a,$16","ld a,$00",math.asm,"LN0:            LD	A,LOGRNG"
11337,11337,11235,4b2d,4a8b,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
11338,11338,11236,4b2f,4a8d,c2 aa 45,c2 08 45,"jp nz,$45aa","jp nz,$4508","jp nz,$0000",math.asm,"JP	NZ,ERROR_mat	;""Log range"""
11339,11339,11237,4b32,4a90,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11340,11340,11238,4b33,4a91,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11341,11341,11239,4b34,4a92,ca aa 45,ca 08 45,"jp z,$45aa","jp z,$4508","jp z,$0000",math.asm,"JP	Z,ERROR_mat"
11342,11342,11240,4b37,4a95,11 04 35,11 04 35,"ld de,$3504","ld de,$3504","ld de,$0000",math.asm,"LD	DE,3504H	;SQR(2)"
11343,11343,11241,4b3a,4a98,d9,d9,exx,exx,exx,math.asm,EXX
11344,11344,11242,4b3b,4a99,11 33 f3,11 33 f3,"ld de,$f333","ld de,$f333","ld de,$0000",math.asm,"LD	DE,0F333H	;1.41421356237"
11345,11345,11243,4b3e,4a9c,d9,d9,exx,exx,exx,math.asm,EXX
11346,11346,11244,4b3f,4a9d,cd b7 4f,cd 15 4f,call $4fb7,call $4f15,call $0000,math.asm,CALL	ICP0		;MANTISSA>SQR(2)?
11347,11347,11245,4b42,4aa0,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C		;EXPONENT"
11348,11348,11246,4b43,4aa1,0e 80,0e 80,"ld c,$80","ld c,$80","ld c,$00",math.asm,"LD	C,80H		;1 <= X < 2"
11349,11349,11247,4b45,4aa3,38 02,38 02,"jr c,$+$04","jr c,$+$04","jr c,$+$00",math.asm,"JR	C,LN4"
11350,11350,11248,4b47,4aa5,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11351,11351,11249,4b48,4aa6,3c,3c,inc a,inc a,inc a,math.asm,INC	A
11352,11352,11250,4b49,4aa7,f5,f5,push af,push af,push af,math.asm,LN4:            PUSH	AF		;SAVE EXPONENT
11353,11353,11251,4b4a,4aa8,cd 34 50,cd 92 4f,call $5034,call $4f92,call $0000,math.asm,CALL	RATIO		;X=(X-1)/(X+1)
11354,11354,11252,4b4d,4aab,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11355,11355,11253,4b50,4aae,cd 19 50,cd 77 4f,call $5019,call $4f77,call $0000,math.asm,CALL	SQUARE		;PUSH X*X
11356,11356,11254,4b53,4ab1,cd 52 50,cd b0 4f,call $5052,call $4fb0,call $0000,math.asm,CALL	POLY
11357,11357,11255,4b56,4ab4,48,48,"ld c,b","ld c,b","ld c,b",math.asm,DW	0CC48H		;a(9)
11358,11358,11256,4b57,4ab5,cc fb 74,cc fb 74,"call z,$74fb","call z,$74fb","call z,$0000",math.asm,
11359,11359,11257,4b5a,4ab8,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,DB	7DH
11360,11360,11258,4b5b,4ab9,af,af,xor a,xor a,xor a,math.asm,DW	0AEAFH		;a(7)
11361,11361,11259,4b5c,4aba,ae,ae,xor (hl),xor (hl),xor (hl),math.asm,
11362,11362,11260,4b5d,4abb,ff,ff,rst $38,rst $38,rst $00,math.asm,DW	11FFH
11363,11363,11261,4b5e,4abc,11 7e 8c,11 7e 8c,"ld de,$8c7e","ld de,$8c7e","ld de,$0000",math.asm,
11364,11364,11262,4b61,4abf,d9,d9,exx,exx,exx,math.asm,
11365,11365,11263,4b62,4ac0,cd 4c 7e,cd 4c 7e,call $7e4c,call $7e4c,call $0000,math.asm,DW	4CCDH
11366,11366,11264,4b65,4ac3,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,DW	0A9E3H		;a(3)
11367,11367,11265,4b66,4ac4,a9,a9,xor c,xor c,xor c,math.asm,
11368,11368,11266,4b67,4ac5,aa,aa,xor d,xor d,xor d,math.asm,DW	2AAAH
11369,11369,11267,4b68,4ac6,2a 7f 00,2a 7f 00,"ld hl,($007f)","ld hl,($007f)","ld hl,($0000)",math.asm,
11370,11370,11268,4b6b,4ac9,00,00,nop,nop,nop,math.asm,
11371,11371,11269,4b6c,4aca,00,00,nop,nop,nop,math.asm,DW	0
11372,11372,11270,4b6d,4acb,00,00,nop,nop,nop,math.asm,
11373,11373,11271,4b6e,4acc,81,81,"add a,c","add a,c","add a,c",math.asm,DB	81H
11374,11374,11272,4b6f,4acd,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11375,11375,11273,4b72,4ad0,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11376,11376,11274,4b75,4ad3,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11377,11377,11275,4b78,4ad6,f1,f1,pop af,pop af,pop af,math.asm,POP	AF		;EXPONENT
11378,11378,11276,4b79,4ad7,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11379,11379,11277,4b7c,4ada,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11380,11380,11278,4b7d,4adb,cd a5 4f,cd 03 4f,call $4fa5,call $4f03,call $0000,math.asm,CALL	ZEROmat
11381,11381,11279,4b80,4ade,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11382,11382,11280,4b81,4adf,d6 80,d6 80,sub $80,sub $80,sub $00,math.asm,SUB	80H
11383,11383,11281,4b83,4ae1,28 1b,28 1b,"jr z,$+$1d","jr z,$+$1d","jr z,$+$00",math.asm,"JR	Z,LN3"
11384,11384,11282,4b85,4ae3,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",math.asm,"JR	NC,LN1"
11385,11385,11283,4b87,4ae5,2f,2f,cpl,cpl,cpl,math.asm,CPL
11386,11386,11284,4b88,4ae6,3c,3c,inc a,inc a,inc a,math.asm,INC	A
11387,11387,11285,4b89,4ae7,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LN1:            LD	H,A"
11388,11388,11286,4b8a,4ae8,0e 87,0e 87,"ld c,$87","ld c,$87","ld c,$00",math.asm,"LD	C,87H"
11389,11389,11287,4b8c,4aea,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11390,11390,11288,4b8d,4aeb,cd 1c 4f,cd 7a 4e,call $4f1c,call $4e7a,call $0000,math.asm,CALL	FLOAT
11391,11391,11289,4b90,4aee,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11392,11392,11290,4b92,4af0,cd 1d 4b,cd 7b 4a,call $4b1d,call $4a7b,call $0000,math.asm,CALL	LN2
11393,11393,11291,4b95,4af3,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11394,11394,11292,4b98,4af6,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11395,11395,11293,4b99,4af7,30 05,30 05,"jr nc,$+$07","jr nc,$+$07","jr nc,$+$00",math.asm,"JR	NC,LN3"
11396,11396,11294,4b9b,4af9,fa a0 4b,fa fe 4a,"jp m,$4ba0","jp m,$4afe","jp m,$0000",math.asm,"JP	M,LN3"
11397,11397,11295,4b9e,4afc,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
11398,11398,11296,4ba0,4afe,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,LN3:            CALL	POP5
11399,11399,11297,4ba3,4b01,cd c9 46,cd 27 46,call $46c9,call $4627,call $0000,math.asm,CALL	FADD
11400,11400,11298,4ba6,4b04,af,af,xor a,xor a,xor a,math.asm,XOR	A
11401,11401,11299,4ba7,4b05,c9,c9,ret,ret,ret,math.asm,RET
11402,11402,11300,4ba8,4b06,cd 28 4b,cd 86 4a,call $4b28,call $4a86,call $0000,math.asm,LOG:            CALL	LN
11403,11403,11301,4bab,4b09,11 5b 5e,11 5b 5e,"ld de,$5e5b","ld de,$5e5b","ld de,$0000",math.asm,"LD	DE,5E5BH	;LOG(e)"
11404,11404,11302,4bae,4b0c,d9,d9,exx,exx,exx,math.asm,EXX
11405,11405,11303,4baf,4b0d,11 a9 d8,11 a9 d8,"ld de,$d8a9","ld de,$d8a9","ld de,$0000",math.asm,"LD	DE,0D8A9H"
11406,11406,11304,4bb2,4b10,d9,d9,exx,exx,exx,math.asm,EXX
11407,11407,11305,4bb3,4b11,06 7e,06 7e,"ld b,$7e","ld b,$7e","ld b,$00",math.asm,"LD	B,7EH"
11408,11408,11306,4bb5,4b13,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11409,11409,11307,4bb8,4b16,af,af,xor a,xor a,xor a,math.asm,XOR	A
11410,11410,11308,4bb9,4b17,c9,c9,ret,ret,ret,math.asm,RET
11411,11411,11309,4bba,4b18,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,ASN:            CALL	SFLOAT
11412,11412,11310,4bbd,4b1b,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11413,11413,11311,4bc0,4b1e,cd 11 50,cd 6f 4f,call $5011,call $4f6f,call $0000,math.asm,CALL	COPY
11414,11414,11312,4bc3,4b21,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11415,11415,11313,4bc6,4b24,cd 87 4a,cd e5 49,call $4a87,call $49e5,call $0000,math.asm,CALL	DONE
11416,11416,11314,4bc9,4b27,cd b9 46,cd 17 46,call $46b9,call $4617,call $0000,math.asm,CALL	RSUB
11417,11417,11315,4bcc,4b2a,cd 8b 49,cd e9 48,call $498b,call $48e9,call $0000,math.asm,CALL	SQR0
11418,11418,11316,4bcf,4b2d,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11419,11419,11317,4bd2,4b30,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11420,11420,11318,4bd3,4b31,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11421,11421,11319,4bd4,4b32,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",math.asm,"LD	A,2"
11422,11422,11320,4bd6,4b34,d5,d5,push de,push de,push de,math.asm,PUSH	DE
11423,11423,11321,4bd7,4b35,28 70,28 70,"jr z,$+$72","jr z,$+$72","jr z,$+$00",math.asm,"JR	Z,ACS1"
11424,11424,11322,4bd9,4b37,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
11425,11425,11323,4bda,4b38,cd 17 4b,cd 75 4a,call $4b17,call $4a75,call $0000,math.asm,CALL	RDIV
11426,11426,11324,4bdd,4b3b,18 03,18 03,jr $+$05,jr $+$05,jr $+$00,math.asm,JR	ATN0
11427,11427,11325,4bdf,4b3d,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,ATN:            CALL	SFLOAT
11428,11428,11326,4be2,4b40,e5,e5,push hl,push hl,push hl,math.asm,ATN0:           PUSH	HL		;SAVE SIGN
11429,11429,11327,4be3,4b41,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11430,11430,11328,4be5,4b43,11 13 54,11 13 54,"ld de,$5413","ld de,$5413","ld de,$0000",math.asm,"LD	DE,5413H	;TAN(PI/8)=SQR(2)-1"
11431,11431,11329,4be8,4b46,d9,d9,exx,exx,exx,math.asm,EXX
11432,11432,11330,4be9,4b47,11 d0 cc,11 d0 cc,"ld de,$ccd0","ld de,$ccd0","ld de,$0000",math.asm,"LD	DE,0CCD0H"
11433,11433,11331,4bec,4b4a,d9,d9,exx,exx,exx,math.asm,EXX
11434,11434,11332,4bed,4b4b,06 7e,06 7e,"ld b,$7e","ld b,$7e","ld b,$00",math.asm,"LD	B,7EH"
11435,11435,11333,4bef,4b4d,cd b4 4f,cd 12 4f,call $4fb4,call $4f12,call $0000,math.asm,CALL	FCP0		;COMPARE
11436,11436,11334,4bf2,4b50,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",math.asm,"LD	B,0"
11437,11437,11335,4bf4,4b52,38 1c,38 1c,"jr c,$+$1e","jr c,$+$1e","jr c,$+$00",math.asm,"JR	C,ATN2"
11438,11438,11336,4bf6,4b54,11 82 1a,11 82 1a,"ld de,$1a82","ld de,$1a82","ld de,$0000",math.asm,"LD	DE,1A82H	;TAN(3*PI/8)=SQR(2)+1"
11439,11439,11337,4bf9,4b57,d9,d9,exx,exx,exx,math.asm,EXX
11440,11440,11338,4bfa,4b58,11 9a 79,11 9a 79,"ld de,$799a","ld de,$799a","ld de,$0000",math.asm,"LD	DE,799AH"
11441,11441,11339,4bfd,4b5b,d9,d9,exx,exx,exx,math.asm,EXX
11442,11442,11340,4bfe,4b5c,06 81,06 81,"ld b,$81","ld b,$81","ld b,$00",math.asm,"LD	B,81H"
11443,11443,11341,4c00,4b5e,cd b4 4f,cd 12 4f,call $4fb4,call $4f12,call $0000,math.asm,CALL	FCP0		;COMPARE
11444,11444,11342,4c03,4b61,38 08,38 08,"jr c,$+$0a","jr c,$+$0a","jr c,$+$00",math.asm,"JR	C,ATN1"
11445,11445,11343,4c05,4b63,cd 14 4b,cd 72 4a,call $4b14,call $4a72,call $0000,math.asm,CALL	RECIP		;X=1/X
11446,11446,11344,4c08,4b66,06 02,06 02,"ld b,$02","ld b,$02","ld b,$00",math.asm,"LD	B,2"
11447,11447,11345,4c0a,4b68,c3 12 4c,c3 70 4b,jp $4c12,jp $4b70,jp $0000,math.asm,JP	ATN2
11448,11448,11346,4c0d,4b6b,cd 34 50,cd 92 4f,call $5034,call $4f92,call $0000,math.asm,ATN1:           CALL	RATIO		;X=(X-1)/(X+1)
11449,11449,11347,4c10,4b6e,06 01,06 01,"ld b,$01","ld b,$01","ld b,$00",math.asm,"LD	B,1"
11450,11450,11348,4c12,4b70,c5,c5,push bc,push bc,push bc,math.asm,ATN2:           PUSH	BC		;SAVE FLAG
11451,11451,11349,4c13,4b71,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5
11452,11452,11350,4c16,4b74,cd 19 50,cd 77 4f,call $5019,call $4f77,call $0000,math.asm,CALL	SQUARE		;PUSH X*X
11453,11453,11351,4c19,4b77,cd 52 50,cd b0 4f,call $5052,call $4fb0,call $0000,math.asm,CALL	POLY
11454,11454,11352,4c1c,4b7a,35,35,dec (hl),dec (hl),dec (hl),math.asm,DW	0F335H		;a(13)
11455,11455,11353,4c1d,4b7b,f3,f3,di,di,di,math.asm,
11456,11456,11354,4c1e,4b7c,d8,d8,ret c,ret c,ret c,math.asm,DW	37D8H
11457,11457,11355,4c1f,4b7d,37,37,scf,scf,scf,math.asm,
11458,11458,11356,4c20,4b7e,7b,7b,"ld a,e","ld a,e","ld a,e",math.asm,DB	7BH
11459,11459,11357,4c21,4b7f,91,91,sub c,sub c,sub c,math.asm,DW	6B91H		;a(11)
11460,11460,11358,4c22,4b80,6b,6b,"ld l,e","ld l,e","ld l,e",math.asm,
11461,11461,11359,4c23,4b81,b9,b9,cp c,cp c,cp c,math.asm,DW	0AAB9H
11462,11462,11360,4c24,4b82,aa,aa,xor d,xor d,xor d,math.asm,
11463,11463,11361,4c25,4b83,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,DB	7CH
11464,11464,11362,4c26,4b84,de 41,de 41,"sbc a,$41","sbc a,$41","sbc a,$00",math.asm,DW	41DEH		;a(9)
11465,11465,11363,4c28,4b86,97,97,sub a,sub a,sub a,math.asm,DW	6197H
11466,11466,11364,4c29,4b87,61,61,"ld h,c","ld h,c","ld h,c",math.asm,
11467,11467,11365,4c2a,4b88,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,DB	7CH
11468,11468,11366,4c2b,4b89,7b,7b,"ld a,e","ld a,e","ld a,e",math.asm,DW	9D7BH		;a(7)
11469,11469,11367,4c2c,4b8a,9d,9d,"sbc a,l","sbc a,l","sbc a,l",math.asm,
11470,11470,11368,4c2d,4b8b,37,37,scf,scf,scf,math.asm,DW	9237H
11471,11471,11369,4c2e,4b8c,92,92,sub d,sub d,sub d,math.asm,
11472,11472,11370,4c2f,4b8d,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,DB	7DH
11473,11473,11371,4c30,4b8e,5a,5a,"ld e,d","ld e,d","ld e,d",math.asm,DW	2A5AH		;a(5)
11474,11474,11372,4c31,4b8f,2a cc 4c,2a cc 4c,"ld hl,($4ccc)","ld hl,($4ccc)","ld hl,($0000)",math.asm,
11475,11475,11373,4c34,4b92,7d,7d,"ld a,l","ld a,l","ld a,l",math.asm,DB	7DH
11476,11476,11374,4c35,4b93,5c,5c,"ld e,h","ld e,h","ld e,h",math.asm,DW	0A95CH		;a(3)
11477,11477,11375,4c36,4b94,a9,a9,xor c,xor c,xor c,math.asm,
11478,11478,11376,4c37,4b95,aa,aa,xor d,xor d,xor d,math.asm,DW	0AAAAH
11479,11479,11377,4c38,4b96,aa,aa,xor d,xor d,xor d,math.asm,
11480,11480,11378,4c39,4b97,7e,7e,"ld a,(hl)","ld a,(hl)","ld a,(hl)",math.asm,DB	7EH
11481,11481,11379,4c3a,4b98,00,00,nop,nop,nop,math.asm,DW	0		;a(1)
11482,11482,11380,4c3b,4b99,00,00,nop,nop,nop,math.asm,
11483,11483,11381,4c3c,4b9a,00,00,nop,nop,nop,math.asm,DW	0
11484,11484,11382,4c3d,4b9b,00,00,nop,nop,nop,math.asm,
11485,11485,11383,4c3e,4b9c,80,80,"add a,b","add a,b","add a,b",math.asm,DB	80H
11486,11486,11384,4c3f,4b9d,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11487,11487,11385,4c42,4ba0,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5
11488,11488,11386,4c45,4ba3,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11489,11489,11387,4c48,4ba6,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11490,11490,11388,4c49,4ba7,cd 92 4a,cd f0 49,call $4a92,call $49f0,call $0000,math.asm,ACS1:           CALL	PIBY4		;PI/4
11491,11491,11389,4c4c,4baa,1f,1f,rra,rra,rra,math.asm,RRA
11492,11492,11390,4c4d,4bab,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11493,11493,11391,4c4e,4bac,dc c9 46,dc 27 46,"call c,$46c9","call c,$4627","call c,$0000",math.asm,"CALL	C,FADD"
11494,11494,11392,4c51,4baf,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11495,11495,11393,4c52,4bb0,04,04,inc b,inc b,inc b,math.asm,INC	B
11496,11496,11394,4c53,4bb1,1f,1f,rra,rra,rra,math.asm,RRA
11497,11497,11395,4c54,4bb2,dc b9 46,dc 17 46,"call c,$46b9","call c,$4617","call c,$0000",math.asm,"CALL	C,RSUB"
11498,11498,11396,4c57,4bb5,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11499,11499,11397,4c58,4bb6,b7,b7,or a,or a,or a,math.asm,OR	A
11500,11500,11398,4c59,4bb7,f0,f0,ret p,ret p,ret p,math.asm,RET	P
11501,11501,11399,4c5a,4bb8,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;MAKE NEGATIVE"
11502,11502,11400,4c5c,4bba,af,af,xor a,xor a,xor a,math.asm,XOR	A
11503,11503,11401,4c5d,4bbb,c9,c9,ret,ret,ret,math.asm,RET
11504,11504,11402,4c5e,4bbc,cd ba 4b,cd 18 4b,call $4bba,call $4b18,call $0000,math.asm,ACS:            CALL	ASN
11505,11505,11403,4c61,4bbf,3e 02,3e 02,"ld a,$02","ld a,$02","ld a,$00",math.asm,"LD	A,2"
11506,11506,11404,4c63,4bc1,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11507,11507,11405,4c64,4bc2,18 e3,18 e3,jr $-$1b,jr $-$1b,jr $-$00,math.asm,JR	ACS1
11508,11508,11406,4c66,4bc4,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,STRmat:            CALL	SFLOAT
11509,11509,11407,4c69,4bc7,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",math.asm,"LD	B,0		;DEFAULT PT. POSITION"
11510,11510,11408,4c6b,4bc9,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H		;NEGATIVE?"
11511,11511,11409,4c6d,4bcb,28 06,28 06,"jr z,$+$08","jr z,$+$08","jr z,$+$00",math.asm,"JR	Z,STR10"
11512,11512,11410,4c6f,4bcd,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11513,11513,11411,4c71,4bcf,3e 2d,3e 2d,"ld a,$2d","ld a,$2d","ld a,$00",math.asm,"LD	A,'-'"
11514,11514,11412,4c73,4bd1,12,12,"ld (de),a","ld (de),a","ld (de),a",math.asm,"LD	(DE),A		;STORE SIGN"
11515,11515,11413,4c74,4bd2,13,13,inc de,inc de,inc de,math.asm,INC	DE
11516,11516,11414,4c75,4bd3,af,af,xor a,xor a,xor a,math.asm,STR10:          XOR	A		;CLEAR A
11517,11517,11415,4c76,4bd4,b9,b9,cp c,cp c,cp c,math.asm,CP	C
11518,11518,11416,4c77,4bd5,28 47,28 47,"jr z,$+$49","jr z,$+$49","jr z,$+$00",math.asm,"JR	Z,STR2mat		;ZERO"
11519,11519,11417,4c79,4bd7,d5,d5,push de,push de,push de,math.asm,PUSH	DE		;SAVE TEXT POINTER
11520,11520,11418,4c7a,4bd8,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
11521,11521,11419,4c7b,4bd9,f5,f5,push af,push af,push af,math.asm,STR11:          PUSH	AF		;SAVE DECIMAL COUNTER
11522,11522,11420,4c7c,4bda,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C		;BINARY EXPONENT"
11523,11523,11421,4c7d,4bdb,fe a1,fe a1,cp $a1,cp $a1,cp $00,math.asm,CP	161
11524,11524,11422,4c7f,4bdd,30 1a,30 1a,"jr nc,$+$1c","jr nc,$+$1c","jr nc,$+$00",math.asm,"JR	NC,STR14"
11525,11525,11423,4c81,4bdf,fe 9b,fe 9b,cp $9b,cp $9b,cp $00,math.asm,CP	155
11526,11526,11424,4c83,4be1,30 25,30 25,"jr nc,$+$27","jr nc,$+$27","jr nc,$+$00",math.asm,"JR	NC,STR15"
11527,11527,11425,4c85,4be3,2f,2f,cpl,cpl,cpl,math.asm,CPL
11528,11528,11426,4c86,4be4,fe e1,fe e1,cp $e1,cp $e1,cp $00,math.asm,CP	225
11529,11529,11427,4c88,4be6,38 02,38 02,"jr c,$+$04","jr c,$+$04","jr c,$+$00",math.asm,"JR	C,STR13"
11530,11530,11428,4c8a,4be8,3e f8,3e f8,"ld a,$f8","ld a,$f8","ld a,$00",math.asm,"LD	A,-8"
11531,11531,11429,4c8c,4bea,c6 1c,c6 1c,"add a,$1c","add a,$1c","add a,$00",math.asm,"STR13:          ADD	A,28"
11532,11532,11430,4c8e,4bec,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10
11533,11533,11431,4c91,4bef,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11534,11534,11432,4c92,4bf0,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
11535,11535,11433,4c95,4bf3,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11536,11536,11434,4c96,4bf4,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11537,11537,11435,4c97,4bf5,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11538,11538,11436,4c98,4bf6,90,90,sub b,sub b,sub b,math.asm,SUB	B
11539,11539,11437,4c99,4bf7,18 e0,18 e0,jr $-$1e,jr $-$1e,jr $-$00,math.asm,JR	STR11
11540,11540,11438,4c9b,4bf9,d6 20,d6 20,sub $20,sub $20,sub $00,math.asm,STR14:          SUB	32
11541,11541,11439,4c9d,4bfb,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10
11542,11542,11440,4ca0,4bfe,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11543,11543,11441,4ca1,4bff,cd 21 47,cd 7f 46,call $4721,call $467f,call $0000,math.asm,CALL	FDIV
11544,11544,11442,4ca4,4c02,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11545,11545,11443,4ca5,4c03,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11546,11546,11444,4ca6,4c04,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11547,11547,11445,4ca7,4c05,80,80,"add a,b","add a,b","add a,b",math.asm,"ADD	A,B"
11548,11548,11446,4ca8,4c06,18 d1,18 d1,jr $-$2d,jr $-$2d,jr $-$00,math.asm,JR	STR11
11549,11549,11447,4caa,4c08,3e 09,3e 09,"ld a,$09","ld a,$09","ld a,$00",math.asm,"STR15:          LD	A,9"
11550,11550,11448,4cac,4c0a,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10		;10^9
11551,11551,11449,4caf,4c0d,cd b4 4f,cd 12 4f,call $4fb4,call $4f12,call $0000,math.asm,CALL	FCP0
11552,11552,11450,4cb2,4c10,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
11553,11553,11451,4cb3,4c11,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
11554,11554,11452,4cb4,4c12,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11555,11555,11453,4cb5,4c13,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;IMPLIED 1"
11556,11556,11454,4cb7,4c15,dc d6 4f,dc 34 4f,"call c,$4fd6","call c,$4f34","call c,$0000",math.asm,"CALL	C,X10B		;X10, DEC B"
11557,11557,11455,4cba,4c18,d1,d1,pop de,pop de,pop de,math.asm,POP	DE		;RESTORE TEXT POINTER
11558,11558,11456,4cbb,4c19,cb b9,cb b9,"res 7,c","res 7,c","res 7,c",math.asm,"RES	7,C"
11559,11559,11457,4cbd,4c1b,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0"
11560,11560,11458,4cbf,4c1d,17,17,rla,rla,rla,math.asm,RLA			;PUT CARRY IN LSB
11561,11561,11459,4cc0,4c1e,0c,0c,inc c,inc c,inc c,math.asm,STR2mat:           INC	C
11562,11562,11460,4cc1,4c1f,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;SAVE A"
11563,11563,11461,4cc2,4c20,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
11564,11564,11462,4cc3,4c21,dd cb 02 4e,dd cb 02 4e,"bit 1,(ix+$02)","bit 1,(ix+$02)","bit 1,(ix+$00)",math.asm,"BIT	1,(IX+2)"
11565,11565,11463,4cc7,4c25,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",math.asm,"JR	NZ,STR20"
11566,11566,11464,4cc9,4c27,af,af,xor a,xor a,xor a,math.asm,XOR	A
11567,11567,11465,4cca,4c28,dd be 01,dd be 01,cp (ix+$01),cp (ix+$01),cp (ix+$00),math.asm,CP	(IX+1)
11568,11568,11466,4ccd,4c2b,28 0a,28 0a,"jr z,$+$0c","jr z,$+$0c","jr z,$+$00",math.asm,"JR	Z,STR21"
11569,11569,11467,4ccf,4c2d,3e f6,3e f6,"ld a,$f6","ld a,$f6","ld a,$00",math.asm,"LD	A,-10"
11570,11570,11468,4cd1,4c2f,dd 86 01,dd 86 01,"add a,(ix+$01)","add a,(ix+$01)","add a,(ix+$00)",math.asm,"STR20:          ADD	A,(IX+1)	;SIG. FIG. COUNT"
11571,11571,11469,4cd4,4c32,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
11572,11572,11470,4cd5,4c33,fa d9 4c,fa 37 4c,"jp m,$4cd9","jp m,$4c37","jp m,$0000",math.asm,"JP	M,STR21"
11573,11573,11471,4cd8,4c36,af,af,xor a,xor a,xor a,math.asm,XOR	A
11574,11574,11472,4cd9,4c37,f5,f5,push af,push af,push af,math.asm,STR21:          PUSH	AF
11575,11575,11473,4cda,4c38,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;RESTORE A"
11576,11576,11474,4cdb,4c39,cd ff 4f,cd 5d 4f,call $4fff,call $4f5d,call $0000,math.asm,STR22:          CALL	X2		;RL AHLH'L'
11577,11577,11475,4cde,4c3c,8f,8f,"adc a,a","adc a,a","adc a,a",math.asm,"ADC	A,A"
11578,11578,11476,4cdf,4c3d,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,math.asm,CP	10
11579,11579,11477,4ce1,4c3f,38 05,38 05,"jr c,$+$07","jr c,$+$07","jr c,$+$00",math.asm,"JR	C,STR23"
11580,11580,11478,4ce3,4c41,d6 0a,d6 0a,sub $0a,sub $0a,sub $00,math.asm,SUB	10
11581,11581,11479,4ce5,4c43,d9,d9,exx,exx,exx,math.asm,EXX
11582,11582,11480,4ce6,4c44,2c,2c,inc l,inc l,inc l,math.asm,INC	L		;SET RESULT BIT
11583,11583,11481,4ce7,4c45,d9,d9,exx,exx,exx,math.asm,EXX
11584,11584,11482,4ce8,4c46,0d,0d,dec c,dec c,dec c,math.asm,STR23:          DEC	C
11585,11585,11483,4ce9,4c47,20 f0,20 f0,"jr nz,$-$0e","jr nz,$-$0e","jr nz,$-$00",math.asm,"JR	NZ,STR22	;32 TIMES"
11586,11586,11484,4ceb,4c49,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A		;REMAINDER"
11587,11587,11485,4cec,4c4a,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11588,11588,11486,4ced,4c4b,e6 3f,e6 3f,and $3f,and $3f,and $00,math.asm,AND	3FH		;CLEAR OUT JUNK
11589,11589,11487,4cef,4c4d,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
11590,11590,11488,4cf0,4c4e,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11591,11591,11489,4cf1,4c4f,f2 fe 4c,f2 5c 4c,"jp p,$4cfe","jp p,$4c5c","jp p,$0000",math.asm,"JP	P,STR24"
11592,11592,11490,4cf4,4c52,3c,3c,inc a,inc a,inc a,math.asm,INC	A
11593,11593,11491,4cf5,4c53,20 1c,20 1c,"jr nz,$+$1e","jr nz,$+$1e","jr nz,$+$00",math.asm,"JR	NZ,STR26"
11594,11594,11492,4cf7,4c55,3e 04,3e 04,"ld a,$04","ld a,$04","ld a,$00",math.asm,"LD	A,4"
11595,11595,11493,4cf9,4c57,b9,b9,cp c,cp c,cp c,math.asm,CP	C		;ROUND UP?
11596,11596,11494,4cfa,4c58,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0"
11597,11597,11495,4cfc,4c5a,18 15,18 15,jr $+$17,jr $+$17,jr $+$00,math.asm,JR	STR26
11598,11598,11496,4cfe,4c5c,f5,f5,push af,push af,push af,math.asm,STR24:          PUSH	AF
11599,11599,11497,4cff,4c5d,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
11600,11600,11498,4d00,4c5e,ce 30,ce 30,"adc a,$30","adc a,$30","adc a,$00",math.asm,"ADC	A,'0'		;ADD CARRY"
11601,11601,11499,4d02,4c60,fe 30,fe 30,cp $30,cp $30,cp $00,math.asm,CP	'0'
11602,11602,11500,4d04,4c62,28 05,28 05,"jr z,$+$07","jr z,$+$07","jr z,$+$00",math.asm,"JR	Z,STR25		;SUPPRESS ZERO"
11603,11603,11501,4d06,4c64,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,math.asm,CP	'9'+1
11604,11604,11502,4d08,4c66,3f,3f,ccf,ccf,ccf,math.asm,CCF
11605,11605,11503,4d09,4c67,30 08,30 08,"jr nc,$+$0a","jr nc,$+$0a","jr nc,$+$00",math.asm,"JR	NC,STR26"
11606,11606,11504,4d0b,4c69,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"STR25:          EX	(SP),HL"
11607,11607,11505,4d0c,4c6a,cb 75,cb 75,"bit 6,l","bit 6,l","bit 6,l",math.asm,"BIT	6,L		;ZERO FLAG"
11608,11608,11506,4d0e,4c6c,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11609,11609,11507,4d0f,4c6d,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",math.asm,"JR	NZ,STR27"
11610,11610,11508,4d11,4c6f,3e 30,3e 30,"ld a,$30","ld a,$30","ld a,$00",math.asm,"LD	A,'0'"
11611,11611,11509,4d13,4c71,3c,3c,inc a,inc a,inc a,math.asm,STR26:          INC	A		;SET +VE
11612,11612,11510,4d14,4c72,3d,3d,dec a,dec a,dec a,math.asm,DEC	A
11613,11613,11511,4d15,4c73,f5,f5,push af,push af,push af,math.asm,PUSH	AF		;PUT ON STACK + CARRY
11614,11614,11512,4d16,4c74,04,04,inc b,inc b,inc b,math.asm,STR27:          INC	B
11615,11615,11513,4d17,4c75,cd 85 4f,cd e3 4e,call $4f85,call $4ee3,call $0000,math.asm,CALL	TESTmat		;IS HLH'L' ZERO?
11616,11616,11514,4d1a,4c78,0e 20,0e 20,"ld c,$20","ld c,$20","ld c,$00",math.asm,"LD	C,32"
11617,11617,11515,4d1c,4c7a,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0"
11618,11618,11516,4d1e,4c7c,20 bb,20 bb,"jr nz,$-$43","jr nz,$-$43","jr nz,$-$00",math.asm,"JR	NZ,STR22"
11619,11619,11517,4d20,4c7e,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11620,11620,11518,4d21,4c7f,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11621,11621,11519,4d22,4c80,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0"
11622,11622,11520,4d24,4c82,38 b5,38 b5,"jr c,$-$49","jr c,$-$49","jr c,$-$00",math.asm,"JR	C,STR22"
11623,11623,11521,4d26,4c84,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"STR3:           EX	DE,HL		;STRING POINTER"
11624,11624,11522,4d27,4c85,0e ff,0e ff,"ld c,$ff","ld c,$ff","ld c,$00",math.asm,"LD	C,-1		;FLAG ""E"""
11625,11625,11523,4d29,4c87,16 01,16 01,"ld d,$01","ld d,$01","ld d,$00",math.asm,"LD	D,1"
11626,11626,11524,4d2b,4c89,dd 5e 01,dd 5e 01,"ld e,(ix+$01)","ld e,(ix+$01)","ld e,(ix+$00)",math.asm,"LD	E,(IX+1)	;f2"
11627,11627,11525,4d2e,4c8c,dd cb 02 46,dd cb 02 46,"bit 0,(ix+$02)","bit 0,(ix+$02)","bit 0,(ix+$00)",math.asm,"BIT	0,(IX+2)"
11628,11628,11526,4d32,4c90,20 32,20 32,"jr nz,$+$34","jr nz,$+$34","jr nz,$+$00",math.asm,"JR	NZ,STR34	;E MODE"
11629,11629,11527,4d34,4c92,dd cb 02 4e,dd cb 02 4e,"bit 1,(ix+$02)","bit 1,(ix+$02)","bit 1,(ix+$00)",math.asm,"BIT	1,(IX+2)"
11630,11630,11528,4d38,4c96,28 11,28 11,"jr z,$+$13","jr z,$+$13","jr z,$+$00",math.asm,"JR	Z,STR31"
11631,11631,11529,4d3a,4c98,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B		;F MODE"
11632,11632,11530,4d3b,4c99,b7,b7,or a,or a,or a,math.asm,OR	A
11633,11633,11531,4d3c,4c9a,28 04,28 04,"jr z,$+$06","jr z,$+$06","jr z,$+$00",math.asm,"JR	Z,STR30"
11634,11634,11532,4d3e,4c9c,fa 42 4d,fa a0 4c,"jp m,$4d42","jp m,$4ca0","jp m,$0000",math.asm,"JP	M,STR30"
11635,11635,11533,4d41,4c9f,50,50,"ld d,b","ld d,b","ld d,b",math.asm,"LD	D,B"
11636,11636,11534,4d42,4ca0,7a,7a,"ld a,d","ld a,d","ld a,d",math.asm,"STR30:          LD	A,D"
11637,11637,11535,4d43,4ca1,dd 86 01,dd 86 01,"add a,(ix+$01)","add a,(ix+$01)","add a,(ix+$00)",math.asm,"ADD	A,(IX+1)"
11638,11638,11536,4d46,4ca4,5f,5f,"ld e,a","ld e,a","ld e,a",math.asm,"LD	E,A"
11639,11639,11537,4d47,4ca5,fe 0b,fe 0b,cp $0b,cp $0b,cp $00,math.asm,CP	11
11640,11640,11538,4d49,4ca7,38 17,38 17,"jr c,$+$19","jr c,$+$19","jr c,$+$00",math.asm,"JR	C,STR32"
11641,11641,11539,4d4b,4ca9,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"STR31:          LD	A,B		;G MODE"
11642,11642,11540,4d4c,4caa,11 01 01,11 01 01,"ld de,$0101","ld de,$0101","ld de,$0000",math.asm,"LD	DE,101H"
11643,11643,11541,4d4f,4cad,b7,b7,or a,or a,or a,math.asm,OR	A
11644,11644,11542,4d50,4cae,fa 66 4d,fa c4 4c,"jp m,$4d66","jp m,$4cc4","jp m,$0000",math.asm,"JP	M,STR34"
11645,11645,11543,4d53,4cb1,28 0d,28 0d,"jr z,$+$0f","jr z,$+$0f","jr z,$+$00",math.asm,"JR	Z,STR32"
11646,11646,11544,4d55,4cb3,dd 7e 01,dd 7e 01,"ld a,(ix+$01)","ld a,(ix+$01)","ld a,(ix+$00)",math.asm,"LD	A,(IX+1)"
11647,11647,11545,4d58,4cb6,b7,b7,or a,or a,or a,math.asm,OR	A
11648,11648,11546,4d59,4cb7,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",math.asm,"JR	NZ,STR3A"
11649,11649,11547,4d5b,4cb9,3e 0a,3e 0a,"ld a,$0a","ld a,$0a","ld a,$00",math.asm,"LD	A,10"
11650,11650,11548,4d5d,4cbb,b8,b8,cp b,cp b,cp b,math.asm,STR3A:          CP	B
11651,11651,11549,4d5e,4cbc,38 06,38 06,"jr c,$+$08","jr c,$+$08","jr c,$+$00",math.asm,"JR	C,STR34"
11652,11652,11550,4d60,4cbe,50,50,"ld d,b","ld d,b","ld d,b",math.asm,"LD	D,B"
11653,11653,11551,4d61,4cbf,58,58,"ld e,b","ld e,b","ld e,b",math.asm,"LD	E,B"
11654,11654,11552,4d62,4cc0,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"STR32:          LD	A,B"
11655,11655,11553,4d63,4cc1,c6 81,c6 81,"add a,$81","add a,$81","add a,$00",math.asm,"ADD	A,129"
11656,11656,11554,4d65,4cc3,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11657,11657,11555,4d66,4cc4,cb fa,cb fa,"set 7,d","set 7,d","set 7,d",math.asm,"STR34:          SET	7,D"
11658,11658,11556,4d68,4cc6,1d,1d,dec e,dec e,dec e,math.asm,DEC	E
11659,11659,11557,4d69,4cc7,7a,7a,"ld a,d","ld a,d","ld a,d",math.asm,"STR35:          LD	A,D"
11660,11660,11558,4d6a,4cc8,b9,b9,cp c,cp c,cp c,math.asm,CP	C
11661,11661,11559,4d6b,4cc9,30 0c,30 0c,"jr nc,$+$0e","jr nc,$+$0e","jr nc,$+$00",math.asm,"JR	NC,STR33"
11662,11662,11560,4d6d,4ccb,f1,f1,pop af,pop af,pop af,math.asm,STR36:          POP	AF
11663,11663,11561,4d6e,4ccc,28 03,28 03,"jr z,$+$05","jr z,$+$05","jr z,$+$00",math.asm,"JR	Z,STR37"
11664,11664,11562,4d70,4cce,f2 7b 4d,f2 d9 4c,"jp p,$4d7b","jp p,$4cd9","jp p,$0000",math.asm,"JP	P,STR38"
11665,11665,11563,4d73,4cd1,f5,f5,push af,push af,push af,math.asm,STR37:          PUSH	AF
11666,11666,11564,4d74,4cd2,1c,1c,inc e,inc e,inc e,math.asm,INC	E
11667,11667,11565,4d75,4cd3,1d,1d,dec e,dec e,dec e,math.asm,DEC	E
11668,11668,11566,4d76,4cd4,fa 8a 4d,fa e8 4c,"jp m,$4d8a","jp m,$4ce8","jp m,$0000",math.asm,"JP	M,STR4"
11669,11669,11567,4d79,4cd7,3e 30,3e 30,"ld a,$30","ld a,$30","ld a,$00",math.asm,"STR33:          LD	A,'0'"
11670,11670,11568,4d7b,4cd9,15,15,dec d,dec d,dec d,math.asm,STR38:          DEC	D
11671,11671,11569,4d7c,4cda,e2 82 4d,e2 e0 4c,"jp po,$4d82","jp po,$4ce0","jp po,$0000",math.asm,"JP	PO,STR39"
11672,11672,11570,4d7f,4cdd,36 2e,36 2e,"ld (hl),$2e","ld (hl),$2e","ld (hl),$00",math.asm,"LD	(HL),'.'"
11673,11673,11571,4d81,4cdf,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11674,11674,11572,4d82,4ce0,77,77,"ld (hl),a","ld (hl),a","ld (hl),a",math.asm,"STR39:          LD	(HL),A"
11675,11675,11573,4d83,4ce1,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11676,11676,11574,4d84,4ce2,1d,1d,dec e,dec e,dec e,math.asm,DEC	E
11677,11677,11575,4d85,4ce3,f2 69 4d,f2 c7 4c,"jp p,$4d69","jp p,$4cc7","jp p,$0000",math.asm,"JP	P,STR35"
11678,11678,11576,4d88,4ce6,18 e3,18 e3,jr $-$1b,jr $-$1b,jr $-$00,math.asm,JR	STR36
11679,11679,11577,4d8a,4ce8,f1,f1,pop af,pop af,pop af,math.asm,STR4:           POP	AF
11680,11680,11578,4d8b,4ce9,0c,0c,inc c,inc c,inc c,math.asm,STR40:          INC	C
11681,11681,11579,4d8c,4cea,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
11682,11682,11580,4d8d,4ceb,20 27,20 27,"jr nz,$+$29","jr nz,$+$29","jr nz,$+$00",math.asm,"JR	NZ,STR44"
11683,11683,11581,4d8f,4ced,36 45,36 45,"ld (hl),$45","ld (hl),$45","ld (hl),$00",math.asm,"LD	(HL),'E'	;EXPONENT"
11684,11684,11582,4d91,4cef,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11685,11685,11583,4d92,4cf0,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
11686,11686,11584,4d93,4cf1,3d,3d,dec a,dec a,dec a,math.asm,DEC	A
11687,11687,11585,4d94,4cf2,f2 9c 4d,f2 fa 4c,"jp p,$4d9c","jp p,$4cfa","jp p,$0000",math.asm,"JP	P,STR41"
11688,11688,11586,4d97,4cf5,36 2d,36 2d,"ld (hl),$2d","ld (hl),$2d","ld (hl),$00",math.asm,"LD	(HL),'-'"
11689,11689,11587,4d99,4cf7,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11690,11690,11588,4d9a,4cf8,ed 44,ed 44,neg,neg,neg,math.asm,NEG
11691,11691,11589,4d9c,4cfa,36 30,36 30,"ld (hl),$30","ld (hl),$30","ld (hl),$00",math.asm,"STR41:          LD	(HL),'0'"
11692,11692,11590,4d9e,4cfc,28 15,28 15,"jr z,$+$17","jr z,$+$17","jr z,$+$00",math.asm,"JR	Z,STR47"
11693,11693,11591,4da0,4cfe,fe 0a,fe 0a,cp $0a,cp $0a,cp $00,math.asm,CP	10
11694,11694,11592,4da2,4d00,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11695,11695,11593,4da3,4d01,3e 3a,3e 3a,"ld a,$3a","ld a,$3a","ld a,$00",math.asm,"LD	A,':'"
11696,11696,11594,4da5,4d03,38 03,38 03,"jr c,$+$05","jr c,$+$05","jr c,$+$00",math.asm,"JR	C,STR42"
11697,11697,11595,4da7,4d05,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11698,11698,11596,4da8,4d06,36 30,36 30,"ld (hl),$30","ld (hl),$30","ld (hl),$00",math.asm,"LD	(HL),'0'"
11699,11699,11597,4daa,4d08,34,34,inc (hl),inc (hl),inc (hl),math.asm,STR42:          INC	(HL)
11700,11700,11598,4dab,4d09,be,be,cp (hl),cp (hl),cp (hl),math.asm,CP	(HL)
11701,11701,11599,4dac,4d0a,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",math.asm,"JR	NZ,STR43"
11702,11702,11600,4dae,4d0c,36 30,36 30,"ld (hl),$30","ld (hl),$30","ld (hl),$00",math.asm,"LD	(HL),'0'"
11703,11703,11601,4db0,4d0e,2b,2b,dec hl,dec hl,dec hl,math.asm,DEC	HL
11704,11704,11602,4db1,4d0f,34,34,inc (hl),inc (hl),inc (hl),math.asm,INC	(HL)
11705,11705,11603,4db2,4d10,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL
11706,11706,11604,4db3,4d11,10 f5,10 f5,djnz $-$09,djnz $-$09,djnz $-$00,math.asm,STR43:          DJNZ	STR42
11707,11707,11605,4db5,4d13,23,23,inc hl,inc hl,inc hl,math.asm,STR47:          INC	HL
11708,11708,11606,4db6,4d14,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"STR44:          EX	DE,HL"
11709,11709,11607,4db7,4d15,c9,c9,ret,ret,ret,math.asm,RET
11710,11710,11608,4db8,4d16,cd a5 4f,cd 03 4f,call $4fa5,call $4f03,call $0000,math.asm,CON:            CALL	ZEROmat		;INITIALISE TO ZERO
11711,11711,11609,4dbb,4d19,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",math.asm,"LD	C,0		;TRUNCATION COUNTER"
11712,11712,11610,4dbd,4d1b,cd 3d 4e,cd 9b 4d,call $4e3d,call $4d9b,call $0000,math.asm,CALL	NUMBERmat		;GET INTEGER PART
11713,11713,11611,4dc0,4d1e,fe 2e,fe 2e,cp $2e,cp $2e,cp $00,math.asm,CP	'.'
11714,11714,11612,4dc2,4d20,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",math.asm,"LD	B,0		;DECL. PLACE COUNTER"
11715,11715,11613,4dc4,4d22,cc 3b 4e,cc 99 4d,"call z,$4e3b","call z,$4d99","call z,$0000",math.asm,"CALL	Z,NUMBIX	;GET FRACTION PART"
11716,11716,11614,4dc7,4d25,fe 45,fe 45,cp $45,cp $45,cp $00,math.asm,CP	'E'
11717,11717,11615,4dc9,4d27,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"LD	A,0		;INITIALISE EXPONENT"
11718,11718,11616,4dcb,4d29,cc 0c 4e,cc 6a 4d,"call z,$4e0c","call z,$4d6a","call z,$0000",math.asm,"CALL	Z,GETEXP	;GET EXPONENT"
11719,11719,11617,4dce,4d2c,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
11720,11720,11618,4dd0,4d2e,20 08,20 08,"jr nz,$+$0a","jr nz,$+$0a","jr nz,$+$00",math.asm,"JR	NZ,CON0		;INTEGER OVERFLOW"
11721,11721,11619,4dd2,4d30,b7,b7,or a,or a,or a,math.asm,OR	A
11722,11722,11620,4dd3,4d31,20 05,20 05,"jr nz,$+$07","jr nz,$+$07","jr nz,$+$00",math.asm,"JR	NZ,CON0		;EXPONENT NON-ZERO"
11723,11723,11621,4dd5,4d33,b8,b8,cp b,cp b,cp b,math.asm,CP	B
11724,11724,11622,4dd6,4d34,20 02,20 02,"jr nz,$+$04","jr nz,$+$04","jr nz,$+$00",math.asm,"JR	NZ,CON0		;DECIMAL POINT"
11725,11725,11623,4dd8,4d36,b9,b9,cp c,cp c,cp c,math.asm,CP	C
11726,11726,11624,4dd9,4d37,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;INTEGER
11727,11727,11625,4dda,4d38,90,90,sub b,sub b,sub b,math.asm,CON0:           SUB	B
11728,11728,11626,4ddb,4d39,81,81,"add a,c","add a,c","add a,c",math.asm,"ADD	A,C"
11729,11729,11627,4ddc,4d3a,0e 9f,0e 9f,"ld c,$9f","ld c,$9f","ld c,$00",math.asm,"LD	C,159"
11730,11730,11628,4dde,4d3c,cd 1c 4f,cd 7a 4e,call $4f1c,call $4e7a,call $0000,math.asm,CALL	FLOAT
11731,11731,11629,4de1,4d3f,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H		;DITCH IMPLIED 1"
11732,11732,11630,4de3,4d41,b7,b7,or a,or a,or a,math.asm,OR	A
11733,11733,11631,4de4,4d42,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;DONE
11734,11734,11632,4de5,4d43,fa f0 4d,fa 4e 4d,"jp m,$4df0","jp m,$4d4e","jp m,$0000",math.asm,"JP	M,CON2		;NEGATIVE EXPONENT"
11735,11735,11633,4de8,4d46,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10
11736,11736,11634,4deb,4d49,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL		;SCALE
11737,11737,11635,4dee,4d4c,af,af,xor a,xor a,xor a,math.asm,XOR	A
11738,11738,11636,4def,4d4d,c9,c9,ret,ret,ret,math.asm,RET
11739,11739,11637,4df0,4d4e,fe da,fe da,cp $da,cp $da,cp $00,math.asm,CON2:           CP	-38
11740,11740,11638,4df2,4d50,38 0a,38 0a,"jr c,$+$0c","jr c,$+$0c","jr c,$+$00",math.asm,"JR	C,CON3		;CAN'T SCALE IN ONE GO"
11741,11741,11639,4df4,4d52,ed 44,ed 44,neg,neg,neg,math.asm,NEG
11742,11742,11640,4df6,4d54,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10
11743,11743,11641,4df9,4d57,cd 21 47,cd 7f 46,call $4721,call $467f,call $0000,math.asm,CALL	FDIV		;SCALE
11744,11744,11642,4dfc,4d5a,af,af,xor a,xor a,xor a,math.asm,XOR	A
11745,11745,11643,4dfd,4d5b,c9,c9,ret,ret,ret,math.asm,RET
11746,11746,11644,4dfe,4d5c,f5,f5,push af,push af,push af,math.asm,CON3:           PUSH	AF
11747,11747,11645,4dff,4d5d,3e 26,3e 26,"ld a,$26","ld a,$26","ld a,$00",math.asm,"LD	A,38"
11748,11748,11646,4e01,4d5f,cd 79 50,cd d7 4f,call $5079,call $4fd7,call $0000,math.asm,CALL	POWR10
11749,11749,11647,4e04,4d62,cd 21 47,cd 7f 46,call $4721,call $467f,call $0000,math.asm,CALL	FDIV
11750,11750,11648,4e07,4d65,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11751,11751,11649,4e08,4d66,c6 26,c6 26,"add a,$26","add a,$26","add a,$00",math.asm,"ADD	A,38"
11752,11752,11650,4e0a,4d68,18 e4,18 e4,jr $-$1a,jr $-$1a,jr $-$00,math.asm,JR	CON2
11753,11753,11651,4e0c,4d6a,c5,c5,push bc,push bc,push bc,math.asm,GETEXP:         PUSH	BC		;SAVE REGISTERS
11754,11754,11652,4e0d,4d6b,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A		;INITIAL VALUE"
11755,11755,11653,4e0e,4d6c,0e 02,0e 02,"ld c,$02","ld c,$02","ld c,$00",math.asm,"LD	C,2		;2 DIGITS MAX"
11756,11756,11654,4e10,4d6e,dd 23,dd 23,inc ix,inc ix,inc ix,math.asm,INC	IX		;BUMP PAST 'E'
11757,11757,11655,4e12,4d70,cd 67 51,cd c5 50,call $5167,call $50c5,call $0000,math.asm,CALL	SIGNQ
11758,11758,11656,4e15,4d73,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;SAVE EXPONENT SIGN"
11759,11759,11657,4e16,4d74,cd 5d 51,cd bb 50,call $515d,call $50bb,call $0000,math.asm,GETEX1:         CALL	DIGITQ
11760,11760,11658,4e19,4d77,38 17,38 17,"jr c,$+$19","jr c,$+$19","jr c,$+$00",math.asm,"JR	C,GETEX2"
11761,11761,11659,4e1b,4d79,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B		;B=B*10"
11762,11762,11660,4e1c,4d7a,87,87,"add a,a","add a,a","add a,a",math.asm,"ADD	A,A"
11763,11763,11661,4e1d,4d7b,87,87,"add a,a","add a,a","add a,a",math.asm,"ADD	A,A"
11764,11764,11662,4e1e,4d7c,80,80,"add a,b","add a,b","add a,b",math.asm,"ADD	A,B"
11765,11765,11663,4e1f,4d7d,87,87,"add a,a","add a,a","add a,a",math.asm,"ADD	A,A"
11766,11766,11664,4e20,4d7e,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11767,11767,11665,4e21,4d7f,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",math.asm,"LD	A,(IX)		;GET BACK DIGIT"
11768,11768,11666,4e24,4d82,dd 23,dd 23,inc ix,inc ix,inc ix,math.asm,INC	IX
11769,11769,11667,4e26,4d84,e6 0f,e6 0f,and $0f,and $0f,and $00,math.asm,AND	0FH		;MASK UNWANTED BITS
11770,11770,11668,4e28,4d86,80,80,"add a,b","add a,b","add a,b",math.asm,"ADD	A,B		;ADD IN DIGIT"
11771,11771,11669,4e29,4d87,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11772,11772,11670,4e2a,4d88,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11773,11773,11671,4e2b,4d89,f2 16 4e,f2 74 4d,"jp p,$4e16","jp p,$4d74","jp p,$0000",math.asm,"JP	P,GETEX1"
11774,11774,11672,4e2e,4d8c,06 64,06 64,"ld b,$64","ld b,$64","ld b,$00",math.asm,"LD	B,100		;FORCE OVERFLOW"
11775,11775,11673,4e30,4d8e,18 e4,18 e4,jr $-$1a,jr $-$1a,jr $-$00,math.asm,JR	GETEX1
11776,11776,11674,4e32,4d90,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"GETEX2:         EX	AF,AF'		;RESTORE SIGN"
11777,11777,11675,4e33,4d91,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,math.asm,CP	'-'
11778,11778,11676,4e35,4d93,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"LD	A,B"
11779,11779,11677,4e36,4d94,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC		;RESTORE
11780,11780,11678,4e37,4d95,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
11781,11781,11679,4e38,4d96,ed 44,ed 44,neg,neg,neg,math.asm,NEG			;NEGATE EXPONENT
11782,11782,11680,4e3a,4d98,c9,c9,ret,ret,ret,math.asm,RET
11783,11783,11681,4e3b,4d99,dd 23,dd 23,inc ix,inc ix,inc ix,math.asm,NUMBIX:         INC	IX
11784,11784,11682,4e3d,4d9b,cd 5d 51,cd bb 50,call $515d,call $50bb,call $0000,math.asm,NUMBERmat:         CALL	DIGITQ
11785,11785,11683,4e40,4d9e,d8,d8,ret c,ret c,ret c,math.asm,RET	C
11786,11786,11684,4e41,4d9f,04,04,inc b,inc b,inc b,math.asm,INC	B		;INCREMENT DIGIT COUNT
11787,11787,11685,4e42,4da0,dd 23,dd 23,inc ix,inc ix,inc ix,math.asm,INC	IX
11788,11788,11686,4e44,4da2,cd f0 4f,cd 4e 4f,call $4ff0,call $4f4e,call $0000,math.asm,CALL	X10		;*10 & COPY OLD VALUE
11789,11789,11687,4e47,4da5,38 13,38 13,"jr c,$+$15","jr c,$+$15","jr c,$+$00",math.asm,"JR	C,NUMB1		;OVERFLOW"
11790,11790,11688,4e49,4da7,0d,0d,dec c,dec c,dec c,math.asm,DEC	C		;SEE IF TRUNCATED
11791,11791,11689,4e4a,4da8,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11792,11792,11690,4e4b,4da9,20 0f,20 0f,"jr nz,$+$11","jr nz,$+$11","jr nz,$+$00",math.asm,"JR	NZ,NUMB1	;IMPORTANT!"
11793,11793,11691,4e4d,4dab,e6 0f,e6 0f,and $0f,and $0f,and $00,math.asm,AND	0FH
11794,11794,11692,4e4f,4dad,d9,d9,exx,exx,exx,math.asm,EXX
11795,11795,11693,4e50,4dae,06 00,06 00,"ld b,$00","ld b,$00","ld b,$00",math.asm,"LD	B,0"
11796,11796,11694,4e52,4db0,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
11797,11797,11695,4e53,4db1,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC		;ADD IN DIGIT"
11798,11798,11696,4e54,4db2,d9,d9,exx,exx,exx,math.asm,EXX
11799,11799,11697,4e55,4db3,30 e6,30 e6,"jr nc,$-$18","jr nc,$-$18","jr nc,$-$00",math.asm,"JR	NC,NUMBERmat"
11800,11800,11698,4e57,4db5,23,23,inc hl,inc hl,inc hl,math.asm,INC	HL		;CARRY
11801,11801,11699,4e58,4db6,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11802,11802,11700,4e59,4db7,b5,b5,or l,or l,or l,math.asm,OR	L
11803,11803,11701,4e5a,4db8,20 e1,20 e1,"jr nz,$-$1d","jr nz,$-$1d","jr nz,$-$00",math.asm,"JR	NZ,NUMBERmat"
11804,11804,11702,4e5c,4dba,0c,0c,inc c,inc c,inc c,math.asm,NUMB1:          INC	C		;TRUNCATION COUNTER
11805,11805,11703,4e5d,4dbb,cd 63 4f,cd c1 4e,call $4f63,call $4ec1,call $0000,math.asm,CALL	SWAP1		;RESTORE PREVIOUS VALUE
11806,11806,11704,4e60,4dbe,18 db,18 db,jr $-$23,jr $-$23,jr $-$00,math.asm,JR	NUMBERmat
11807,11807,11705,4e62,4dc0,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"FIX:            EX	AF,AF'"
11808,11808,11706,4e63,4dc1,af,af,xor a,xor a,xor a,math.asm,XOR	A
11809,11809,11707,4e64,4dc2,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11810,11810,11708,4e65,4dc3,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H		;IMPLIED 1"
11811,11811,11709,4e67,4dc5,cd 68 4f,cd c6 4e,call $4f68,call $4ec6,call $0000,math.asm,FIX1:           CALL	DIV2
11812,11812,11710,4e6a,4dc8,b9,b9,cp c,cp c,cp c,math.asm,CP	C
11813,11813,11711,4e6b,4dc9,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
11814,11814,11712,4e6c,4dca,d2 67 4e,d2 c5 4d,"jp nc,$4e67","jp nc,$4dc5","jp nc,$0000",math.asm,"JP	NC,FIX1"
11815,11815,11713,4e6f,4dcd,c3 76 4f,c3 d4 4e,jp $4f76,jp $4ed4,jp $0000,math.asm,JP	OFLOW
11816,11816,11714,4e72,4dd0,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,FIX2:           CALL	SWAP
11817,11817,11715,4e75,4dd3,cd 7b 4e,cd d9 4d,call $4e7b,call $4dd9,call $0000,math.asm,CALL	SFIXmat
11818,11818,11716,4e78,4dd6,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
11819,11819,11717,4e7b,4dd9,0d,0d,dec c,dec c,dec c,math.asm,SFIXmat:           DEC	C
11820,11820,11718,4e7c,4dda,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11821,11821,11719,4e7d,4ddb,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;INTEGER/ZERO
11822,11822,11720,4e7e,4ddc,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H		;SIGN"
11823,11823,11721,4e80,4dde,f5,f5,push af,push af,push af,math.asm,PUSH	AF
11824,11824,11722,4e81,4ddf,3e 9f,3e 9f,"ld a,$9f","ld a,$9f","ld a,$00",math.asm,"LD	A,159"
11825,11825,11723,4e83,4de1,cd 62 4e,cd c0 4d,call $4e62,call $4dc0,call $0000,math.asm,CALL	FIX
11826,11826,11724,4e86,4de4,f1,f1,pop af,pop af,pop af,math.asm,POP	AF
11827,11827,11725,4e87,4de5,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",math.asm,"LD	C,0"
11828,11828,11726,4e89,4de7,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
11829,11829,11727,4e8a,4de8,b7,b7,or a,or a,or a,math.asm,NEGATE:         OR	A		;CLEAR CARRY
11830,11830,11728,4e8b,4de9,d9,d9,exx,exx,exx,math.asm,EXX
11831,11831,11729,4e8c,4dea,d5,d5,push de,push de,push de,math.asm,NEG0:           PUSH	DE
11832,11832,11730,4e8d,4deb,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
11833,11833,11731,4e8e,4dec,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
11834,11834,11732,4e91,4def,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11835,11835,11733,4e93,4df1,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
11836,11836,11734,4e94,4df2,d9,d9,exx,exx,exx,math.asm,EXX
11837,11837,11735,4e95,4df3,d5,d5,push de,push de,push de,math.asm,PUSH	DE
11838,11838,11736,4e96,4df4,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
11839,11839,11737,4e97,4df5,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
11840,11840,11738,4e9a,4df8,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11841,11841,11739,4e9c,4dfa,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
11842,11842,11740,4e9d,4dfb,c9,c9,ret,ret,ret,math.asm,RET
11843,11843,11741,4e9e,4dfc,d9,d9,exx,exx,exx,math.asm,NEG:            EXX
11844,11844,11742,4e9f,4dfd,2f,2f,cpl,cpl,cpl,math.asm,CPL
11845,11845,11743,4ea0,4dfe,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
11846,11846,11744,4ea1,4dff,b7,b7,or a,or a,or a,math.asm,OR	A		;CLEAR CARRY
11847,11847,11745,4ea2,4e00,ed 62,ed 62,"sbc hl,hl","sbc hl,hl","sbc hl,hl",math.asm,"SBC	HL,HL"
11848,11848,11746,4ea4,4e02,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
11849,11849,11747,4ea6,4e04,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
11850,11850,11748,4ea7,4e05,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
11851,11851,11749,4ea8,4e06,e1,e1,pop hl,pop hl,pop hl,math.asm,POP	HL
11852,11852,11750,4ea9,4e07,18 e1,18 e1,jr $-$1d,jr $-$1d,jr $-$00,math.asm,JR	NEG0
11853,11853,11751,4eab,4e09,3e 96,3e 96,"ld a,$96","ld a,$96","ld a,$00",math.asm,"SCALE:          LD	A,150"
11854,11854,11752,4ead,4e0b,b9,b9,cp c,cp c,cp c,math.asm,CP	C
11855,11855,11753,4eae,4e0c,3e 17,3e 17,"ld a,$17","ld a,$17","ld a,$00",math.asm,"LD	A,ACLOST"
11856,11856,11754,4eb0,4e0e,da aa 45,da 08 45,"jp c,$45aa","jp c,$4508","jp c,$0000",math.asm,"JP	C,ERROR_mat		;""Accuracy lost"""
11857,11857,11755,4eb3,4e11,cd 92 4a,cd f0 49,call $4a92,call $49f0,call $0000,math.asm,CALL	PIBY4
11858,11858,11756,4eb6,4e14,d9,d9,exx,exx,exx,math.asm,EXX
11859,11859,11757,4eb7,4e15,01 69 21,01 69 21,"ld bc,$2169","ld bc,$2169","ld bc,$0000",math.asm,"LD	BC,2169H	;3.141592653589793238"
11860,11860,11758,4eba,4e18,d9,d9,exx,exx,exx,math.asm,EXX
11861,11861,11759,4ebb,4e19,cb fa,cb fa,"set 7,d","set 7,d","set 7,d",math.asm,"MOD48:          SET	7,D		;IMPLIED 1"
11862,11862,11760,4ebd,4e1b,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
11863,11863,11761,4ebf,4e1d,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
11864,11864,11762,4ec0,4e1e,0e 00,0e 00,"ld c,$00","ld c,$00","ld c,$00",math.asm,"LD	C,0		;INIT QUOTIENT"
11865,11865,11763,4ec2,4e20,dd 21 00 00,dd 21 00 00,"ld ix,$0000","ld ix,$0000","ld ix,$0000",math.asm,"LD	IX,0"
11866,11866,11764,4ec6,4e24,dd e5,dd e5,push ix,push ix,push ix,math.asm,PUSH	IX		;PUT ZERO ON STACK
11867,11867,11765,4ec8,4e26,b8,b8,cp b,cp b,cp b,math.asm,CP	B
11868,11868,11766,4ec9,4e27,38 3a,38 3a,"jr c,$+$3c","jr c,$+$3c","jr c,$+$00",math.asm,"JR	C,MOD485	;DIVIDEND<DIVISOR"
11869,11869,11767,4ecb,4e29,d9,d9,exx,exx,exx,math.asm,MOD481:         EXX			;CARRY=0 HERE
11870,11870,11768,4ecc,4e2a,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11871,11871,11769,4ecd,4e2b,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
11872,11872,11770,4ecf,4e2d,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11873,11873,11771,4ed0,4e2e,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11874,11874,11772,4ed2,4e30,d9,d9,exx,exx,exx,math.asm,EXX
11875,11875,11773,4ed3,4e31,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11876,11876,11774,4ed5,4e33,30 09,30 09,"jr nc,$+$0b","jr nc,$+$0b","jr nc,$+$00",math.asm,"JR	NC,MOD482	;DIVIDEND>=DIVISOR"
11877,11877,11775,4ed7,4e35,d9,d9,exx,exx,exx,math.asm,EXX
11878,11878,11776,4ed8,4e36,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11879,11879,11777,4ed9,4e37,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
11880,11880,11778,4eda,4e38,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11881,11881,11779,4edb,4e39,ed 5a,ed 5a,"adc hl,de","adc hl,de","adc hl,de",math.asm,"ADC	HL,DE"
11882,11882,11780,4edd,4e3b,d9,d9,exx,exx,exx,math.asm,EXX
11883,11883,11781,4ede,4e3c,ed 5a,ed 5a,"adc hl,de","adc hl,de","adc hl,de",math.asm,"ADC	HL,DE"
11884,11884,11782,4ee0,4e3e,3f,3f,ccf,ccf,ccf,math.asm,MOD482:         CCF
11885,11885,11783,4ee1,4e3f,cb 11,cb 11,rl c,rl c,rl c,math.asm,RL	C		;QUOTIENT
11886,11886,11784,4ee3,4e41,30 02,30 02,"jr nc,$+$04","jr nc,$+$04","jr nc,$+$00",math.asm,"JR	NC,MOD483"
11887,11887,11785,4ee5,4e43,cb f9,cb f9,"set 7,c","set 7,c","set 7,c",math.asm,"SET	7,C		;STICKY BIT"
11888,11888,11786,4ee7,4e45,3d,3d,dec a,dec a,dec a,math.asm,MOD483:         DEC	A
11889,11889,11787,4ee8,4e46,b8,b8,cp b,cp b,cp b,math.asm,CP	B
11890,11890,11788,4ee9,4e47,38 19,38 19,"jr c,$+$1b","jr c,$+$1b","jr c,$+$00",math.asm,"JR	C,MOD484	;DIVIDEND<DIVISOR"
11891,11891,11789,4eeb,4e49,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11892,11892,11790,4eec,4e4a,29,29,"add hl,hl","add hl,hl","add hl,hl",math.asm,"ADD	HL,HL		;DIVIDEND * 2"
11893,11893,11791,4eed,4e4b,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11894,11894,11792,4eee,4e4c,d9,d9,exx,exx,exx,math.asm,EXX
11895,11895,11793,4eef,4e4d,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
11896,11896,11794,4ef1,4e4f,d9,d9,exx,exx,exx,math.asm,EXX
11897,11897,11795,4ef2,4e50,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
11898,11898,11796,4ef4,4e52,30 d5,30 d5,"jr nc,$-$29","jr nc,$-$29","jr nc,$-$00",math.asm,"JR	NC,MOD481	;AGAIN"
11899,11899,11797,4ef6,4e54,b7,b7,or a,or a,or a,math.asm,OR	A
11900,11900,11798,4ef7,4e55,d9,d9,exx,exx,exx,math.asm,EXX
11901,11901,11799,4ef8,4e56,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11902,11902,11800,4ef9,4e57,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC		;OVERFLOW, SO SUBTRACT"
11903,11903,11801,4efb,4e59,e3,e3,"ex (sp),hl","ex (sp),hl","ex (sp),hl",math.asm,"EX	(SP),HL"
11904,11904,11802,4efc,4e5a,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11905,11905,11803,4efe,4e5c,d9,d9,exx,exx,exx,math.asm,EXX
11906,11906,11804,4eff,4e5d,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
11907,11907,11805,4f01,4e5f,b7,b7,or a,or a,or a,math.asm,OR	A
11908,11908,11806,4f02,4e60,18 dc,18 dc,jr $-$22,jr $-$22,jr $-$00,math.asm,JR	MOD482
11909,11909,11807,4f04,4e62,3c,3c,inc a,inc a,inc a,math.asm,MOD484:         INC	A
11910,11910,11808,4f05,4e63,59,59,"ld e,c","ld e,c","ld e,c",math.asm,"MOD485:         LD	E,C		;QUOTIENT"
11911,11911,11809,4f06,4e64,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A		;REMAINDER EXPONENT"
11912,11912,11810,4f07,4e65,d9,d9,exx,exx,exx,math.asm,EXX
11913,11913,11811,4f08,4e66,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
11914,11914,11812,4f09,4e67,d9,d9,exx,exx,exx,math.asm,EXX
11915,11915,11813,4f0a,4e68,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"FLO48:          BIT	7,H"
11916,11916,11814,4f0c,4e6a,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
11917,11917,11815,4f0d,4e6b,d9,d9,exx,exx,exx,math.asm,EXX
11918,11918,11816,4f0e,4e6c,cb 21,cb 21,sla c,sla c,sla c,math.asm,SLA	C
11919,11919,11817,4f10,4e6e,cb 10,cb 10,rl b,rl b,rl b,math.asm,RL	B
11920,11920,11818,4f12,4e70,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
11921,11921,11819,4f14,4e72,d9,d9,exx,exx,exx,math.asm,EXX
11922,11922,11820,4f15,4e73,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
11923,11923,11821,4f17,4e75,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11924,11924,11822,4f18,4e76,c2 0a 4f,c2 68 4e,"jp nz,$4f0a","jp nz,$4e68","jp nz,$0000",math.asm,"JP	NZ,FLO48"
11925,11925,11823,4f1b,4e79,c9,c9,ret,ret,ret,math.asm,RET
11926,11926,11824,4f1c,4e7a,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"FLOAT:          BIT	7,H"
11927,11927,11825,4f1e,4e7c,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
11928,11928,11826,4f1f,4e7d,d9,d9,exx,exx,exx,math.asm,"EXX			;SAME AS ""X2"""
11929,11929,11827,4f20,4e7e,29,29,"add hl,hl","add hl,hl","add hl,hl",math.asm,"ADD	HL,HL		;TIME-CRITICAL"
11930,11930,11828,4f21,4e7f,d9,d9,exx,exx,exx,math.asm,EXX			;REGION
11931,11931,11829,4f22,4e80,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL		;(BENCHMARKS)"
11932,11932,11830,4f24,4e82,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
11933,11933,11831,4f25,4e83,c2 1c 4f,c2 7a 4e,"jp nz,$4f1c","jp nz,$4e7a","jp nz,$0000",math.asm,"JP	NZ,FLOAT"
11934,11934,11832,4f28,4e86,c9,c9,ret,ret,ret,math.asm,RET
11935,11935,11833,4f29,4e87,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"FLOATA:         EX	AF,AF'"
11936,11936,11834,4f2a,4e88,c6 2e,c6 2e,"add a,$2e","add a,$2e","add a,$00",math.asm,"ADD	A,RTABLE-DTABLE/2"
11937,11937,11835,4f2c,4e8a,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11938,11938,11836,4f2d,4e8b,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,FLOAT2:         CALL	SWAP
11939,11939,11837,4f30,4e8e,cd 36 4f,cd 94 4e,call $4f36,call $4e94,call $0000,math.asm,CALL	SFLOAT
11940,11940,11838,4f33,4e91,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
11941,11941,11839,4f36,4e94,0d,0d,dec c,dec c,dec c,math.asm,SFLOAT:         DEC	C
11942,11942,11840,4f37,4e95,0c,0c,inc c,inc c,inc c,math.asm,INC	C
11943,11943,11841,4f38,4e96,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ		;ALREADY FLOATING-POINT
11944,11944,11842,4f39,4e97,cd 85 4f,cd e3 4e,call $4f85,call $4ee3,call $0000,math.asm,CALL	TESTmat
11945,11945,11843,4f3c,4e9a,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;ZERO
11946,11946,11844,4f3d,4e9b,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11947,11947,11845,4f3e,4e9c,b7,b7,or a,or a,or a,math.asm,OR	A
11948,11948,11846,4f3f,4e9d,fc 8a 4e,fc e8 4d,"call m,$4e8a","call m,$4de8","call m,$0000",math.asm,"CALL	M,NEGATE"
11949,11949,11847,4f42,4ea0,0e 9f,0e 9f,"ld c,$9f","ld c,$9f","ld c,$00",math.asm,"LD	C,159"
11950,11950,11848,4f44,4ea2,cd 1c 4f,cd 7a 4e,call $4f1c,call $4e7a,call $0000,math.asm,CALL	FLOAT
11951,11951,11849,4f47,4ea5,b7,b7,or a,or a,or a,math.asm,OR	A
11952,11952,11850,4f48,4ea6,f8,f8,ret m,ret m,ret m,math.asm,RET	M		;NEGATIVE
11953,11953,11851,4f49,4ea7,cb bc,cb bc,"res 7,h","res 7,h","res 7,h",math.asm,"RES	7,H"
11954,11954,11852,4f4b,4ea9,c9,c9,ret,ret,ret,math.asm,RET
11955,11955,11853,4f4c,4eaa,d9,d9,exx,exx,exx,math.asm,ADD1:           EXX
11956,11956,11854,4f4d,4eab,01 01 00,01 01 00,"ld bc,$0001","ld bc,$0001","ld bc,$0000",math.asm,"LD	BC,1"
11957,11957,11855,4f50,4eae,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
11958,11958,11856,4f51,4eaf,d9,d9,exx,exx,exx,math.asm,EXX
11959,11959,11857,4f52,4eb0,d0,d0,ret nc,ret nc,ret nc,math.asm,RET	NC
11960,11960,11858,4f53,4eb1,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC
11961,11961,11859,4f54,4eb2,01 01 00,01 01 00,"ld bc,$0001","ld bc,$0001","ld bc,$0000",math.asm,"LD	BC,1"
11962,11962,11860,4f57,4eb5,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
11963,11963,11861,4f58,4eb6,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
11964,11964,11862,4f59,4eb7,c9,c9,ret,ret,ret,math.asm,RET
11965,11965,11863,4f5a,4eb8,b7,b7,or a,or a,or a,math.asm,ODD:            OR	A		;CLEAR CARRY
11966,11966,11864,4f5b,4eb9,d9,d9,exx,exx,exx,math.asm,EXX
11967,11967,11865,4f5c,4eba,cb c5,cb c5,"set 0,l","set 0,l","set 0,l",math.asm,"SET	0,L		;MAKE ODD"
11968,11968,11866,4f5e,4ebc,d9,d9,exx,exx,exx,math.asm,EXX
11969,11969,11867,4f5f,4ebd,c9,c9,ret,ret,ret,math.asm,RET
11970,11970,11868,4f60,4ebe,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"SWAP:           LD	A,C"
11971,11971,11869,4f61,4ebf,48,48,"ld c,b","ld c,b","ld c,b",math.asm,"LD	C,B"
11972,11972,11870,4f62,4ec0,47,47,"ld b,a","ld b,a","ld b,a",math.asm,"LD	B,A"
11973,11973,11871,4f63,4ec1,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"SWAP1:          EX	DE,HL"
11974,11974,11872,4f64,4ec2,d9,d9,exx,exx,exx,math.asm,EXX
11975,11975,11873,4f65,4ec3,eb,eb,"ex de,hl","ex de,hl","ex de,hl",math.asm,"EX	DE,HL"
11976,11976,11874,4f66,4ec4,d9,d9,exx,exx,exx,math.asm,EXX
11977,11977,11875,4f67,4ec5,c9,c9,ret,ret,ret,math.asm,RET
11978,11978,11876,4f68,4ec6,cd 06 50,cd 64 4f,call $5006,call $4f64,call $0000,math.asm,DIV2:           CALL	D2
11979,11979,11877,4f6b,4ec9,d9,d9,exx,exx,exx,math.asm,EXX
11980,11980,11878,4f6c,4eca,cb 18,cb 18,rr b,rr b,rr b,math.asm,RR	B
11981,11981,11879,4f6e,4ecc,cb 19,cb 19,rr c,rr c,rr c,math.asm,RR	C
11982,11982,11880,4f70,4ece,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11983,11983,11881,4f71,4ecf,b0,b0,or b,or b,or b,math.asm,OR	B
11984,11984,11882,4f72,4ed0,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
11985,11985,11883,4f73,4ed1,d9,d9,exx,exx,exx,math.asm,EXX
11986,11986,11884,4f74,4ed2,0c,0c,inc c,inc c,inc c,math.asm,INCC:           INC	C
11987,11987,11885,4f75,4ed3,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
11988,11988,11886,4f76,4ed4,3e 14,3e 14,"ld a,$14","ld a,$14","ld a,$00",math.asm,"OFLOW:          LD	A,TOOBIG"
11989,11989,11887,4f78,4ed6,c3 aa 45,c3 08 45,jp $45aa,jp $4508,jp $0000,math.asm,"JP	ERROR_mat		;""Too big"""
11990,11990,11888,4f7b,4ed9,cd 85 4f,cd e3 4e,call $4f85,call $4ee3,call $0000,math.asm,FTEST:          CALL	TESTmat
11991,11991,11889,4f7e,4edc,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
11992,11992,11890,4f7f,4edd,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
11993,11993,11891,4f80,4ede,e6 80,e6 80,and $80,and $80,and $00,math.asm,AND	10000000B
11994,11994,11892,4f82,4ee0,f6 40,f6 40,or $40,or $40,or $00,math.asm,OR	01000000B
11995,11995,11893,4f84,4ee2,c9,c9,ret,ret,ret,math.asm,RET
11996,11996,11894,4f85,4ee3,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"TESTmat:           LD	A,H"
11997,11997,11895,4f86,4ee4,b5,b5,or l,or l,or l,math.asm,OR	L
11998,11998,11896,4f87,4ee5,d9,d9,exx,exx,exx,math.asm,EXX
11999,11999,11897,4f88,4ee6,b4,b4,or h,or h,or h,math.asm,OR	H
12000,12000,11898,4f89,4ee7,b5,b5,or l,or l,or l,math.asm,OR	L
12001,12001,11899,4f8a,4ee8,d9,d9,exx,exx,exx,math.asm,EXX
12002,12002,11900,4f8b,4ee9,c9,c9,ret,ret,ret,math.asm,RET
12003,12003,11901,4f8c,4eea,78,78,"ld a,b","ld a,b","ld a,b",math.asm,"FCOMP:          LD	A,B"
12004,12004,11902,4f8d,4eeb,b1,b1,or c,or c,or c,math.asm,OR	C		;Both integer?
12005,12005,11903,4f8e,4eec,20 0a,20 0a,"jr nz,$+$0c","jr nz,$+$0c","jr nz,$+$00",math.asm,"JR	NZ,FCOMP1"
12006,12006,11904,4f90,4eee,cd a2 4f,cd 00 4f,call $4fa2,call $4f00,call $0000,math.asm,CALL	ICP
12007,12007,11905,4f93,4ef1,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"FCOMP0:         LD	A,0"
12008,12008,11906,4f95,4ef3,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;Equal
12009,12009,11907,4f96,4ef4,3e 80,3e 80,"ld a,$80","ld a,$80","ld a,$00",math.asm,"LD	A,80H"
12010,12010,11908,4f98,4ef6,1f,1f,rra,rra,rra,math.asm,RRA
12011,12011,11909,4f99,4ef7,c9,c9,ret,ret,ret,math.asm,RET
12012,12012,11910,4f9a,4ef8,cd 2d 4f,cd 8b 4e,call $4f2d,call $4e8b,call $0000,math.asm,FCOMP1:         CALL	FLOAT2		;Float both
12013,12013,11911,4f9d,4efb,cd af 4f,cd 0d 4f,call $4faf,call $4f0d,call $0000,math.asm,CALL	FCP
12014,12014,11912,4fa0,4efe,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,math.asm,JR	FCOMP0
12015,12015,11913,4fa2,4f00,cd ce 4f,cd 2c 4f,call $4fce,call $4f2c,call $0000,math.asm,ICP:            CALL	ICP1
12016,12016,11914,4fa5,4f03,3e 00,3e 00,"ld a,$00","ld a,$00","ld a,$00",math.asm,"ZEROmat:           LD	A,0"
12017,12017,11915,4fa7,4f05,d9,d9,exx,exx,exx,math.asm,EXX
12018,12018,11916,4fa8,4f06,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
12019,12019,11917,4fa9,4f07,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
12020,12020,11918,4faa,4f08,d9,d9,exx,exx,exx,math.asm,EXX
12021,12021,11919,4fab,4f09,67,67,"ld h,a","ld h,a","ld h,a",math.asm,"LD	H,A"
12022,12022,11920,4fac,4f0a,6f,6f,"ld l,a","ld l,a","ld l,a",math.asm,"LD	L,A"
12023,12023,11921,4fad,4f0b,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
12024,12024,11922,4fae,4f0c,c9,c9,ret,ret,ret,math.asm,RET
12025,12025,11923,4faf,4f0d,cd c1 4f,cd 1f 4f,call $4fc1,call $4f1f,call $0000,math.asm,FCP:            CALL	FCP1
12026,12026,11924,4fb2,4f10,18 f1,18 f1,jr $-$0d,jr $-$0d,jr $-$00,math.asm,JR	ZEROmat		;PRESET FALSE
12027,12027,11925,4fb4,4f12,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"FCP0:           LD	A,C"
12028,12028,11926,4fb5,4f13,b8,b8,cp b,cp b,cp b,math.asm,CP	B		;COMPARE EXPONENTS
12029,12029,11927,4fb6,4f14,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
12030,12030,11928,4fb7,4f15,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"ICP0:           SBC	HL,DE		;COMP MANTISSA MSB"
12031,12031,11929,4fb9,4f17,19,19,"add hl,de","add hl,de","add hl,de",math.asm,"ADD	HL,DE"
12032,12032,11930,4fba,4f18,c0,c0,ret nz,ret nz,ret nz,math.asm,RET	NZ
12033,12033,11931,4fbb,4f19,d9,d9,exx,exx,exx,math.asm,EXX
12034,12034,11932,4fbc,4f1a,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE		;COMP MANTISSA LSB"
12035,12035,11933,4fbe,4f1c,19,19,"add hl,de","add hl,de","add hl,de",math.asm,"ADD	HL,DE"
12036,12036,11934,4fbf,4f1d,d9,d9,exx,exx,exx,math.asm,EXX
12037,12037,11935,4fc0,4f1e,c9,c9,ret,ret,ret,math.asm,RET
12038,12038,11936,4fc1,4f1f,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"FCP1:           LD	A,H"
12039,12039,11937,4fc2,4f20,aa,aa,xor d,xor d,xor d,math.asm,XOR	D
12040,12040,11938,4fc3,4f21,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
12041,12041,11939,4fc4,4f22,17,17,rla,rla,rla,math.asm,RLA
12042,12042,11940,4fc5,4f23,f8,f8,ret m,ret m,ret m,math.asm,RET	M
12043,12043,11941,4fc6,4f24,30 ec,30 ec,"jr nc,$-$12","jr nc,$-$12","jr nc,$-$00",math.asm,"JR	NC,FCP0"
12044,12044,11942,4fc8,4f26,cd b4 4f,cd 12 4f,call $4fb4,call $4f12,call $0000,math.asm,CALL	FCP0
12045,12045,11943,4fcb,4f29,c8,c8,ret z,ret z,ret z,math.asm,RET	Z		;** V0.1 BUG FIX
12046,12046,11944,4fcc,4f2a,3f,3f,ccf,ccf,ccf,math.asm,CCF
12047,12047,11945,4fcd,4f2b,c9,c9,ret,ret,ret,math.asm,RET
12048,12048,11946,4fce,4f2c,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"ICP1:           LD	A,H"
12049,12049,11947,4fcf,4f2d,aa,aa,xor d,xor d,xor d,math.asm,XOR	D
12050,12050,11948,4fd0,4f2e,f2 b7 4f,f2 15 4f,"jp p,$4fb7","jp p,$4f15","jp p,$0000",math.asm,"JP	P,ICP0"
12051,12051,11949,4fd3,4f31,7c,7c,"ld a,h","ld a,h","ld a,h",math.asm,"LD	A,H"
12052,12052,11950,4fd4,4f32,17,17,rla,rla,rla,math.asm,RLA
12053,12053,11951,4fd5,4f33,c9,c9,ret,ret,ret,math.asm,RET
12054,12054,11952,4fd6,4f34,05,05,dec b,dec b,dec b,math.asm,X10B:           DEC	B
12055,12055,11953,4fd7,4f35,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12056,12056,11954,4fd8,4f36,cd 12 50,cd 70 4f,call $5012,call $4f70,call $0000,math.asm,X5:             CALL	COPY0
12057,12057,11955,4fdb,4f39,cd 05 50,cd 63 4f,call $5005,call $4f63,call $0000,math.asm,CALL	D2C
12058,12058,11956,4fde,4f3c,cd 05 50,cd 63 4f,call $5005,call $4f63,call $0000,math.asm,CALL	D2C
12059,12059,11957,4fe1,4f3f,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'		;SAVE CARRY"
12060,12060,11958,4fe2,4f40,d9,d9,exx,exx,exx,math.asm,ADD:            EXX
12061,12061,11959,4fe3,4f41,19,19,"add hl,de","add hl,de","add hl,de",math.asm,"ADD	HL,DE"
12062,12062,11960,4fe4,4f42,d9,d9,exx,exx,exx,math.asm,EXX
12063,12063,11961,4fe5,4f43,ed 5a,ed 5a,"adc hl,de","adc hl,de","adc hl,de",math.asm,"ADC	HL,DE"
12064,12064,11962,4fe7,4f45,c9,c9,ret,ret,ret,math.asm,RET
12065,12065,11963,4fe8,4f46,d9,d9,exx,exx,exx,math.asm,SUB:            EXX
12066,12066,11964,4fe9,4f47,b7,b7,or a,or a,or a,math.asm,OR	A
12067,12067,11965,4fea,4f48,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
12068,12068,11966,4fec,4f4a,d9,d9,exx,exx,exx,math.asm,EXX
12069,12069,11967,4fed,4f4b,ed 52,ed 52,"sbc hl,de","sbc hl,de","sbc hl,de",math.asm,"SBC	HL,DE"
12070,12070,11968,4fef,4f4d,c9,c9,ret,ret,ret,math.asm,RET
12071,12071,11969,4ff0,4f4e,cd 12 50,cd 70 4f,call $5012,call $4f70,call $0000,math.asm,X10:            CALL	COPY0		;DED'E'=HLH'L'
12072,12072,11970,4ff3,4f51,cd ff 4f,cd 5d 4f,call $4fff,call $4f5d,call $0000,math.asm,CALL	X2
12073,12073,11971,4ff6,4f54,d8,d8,ret c,ret c,ret c,math.asm,RET	C		;TOO BIG
12074,12074,11972,4ff7,4f55,cd ff 4f,cd 5d 4f,call $4fff,call $4f5d,call $0000,math.asm,CALL	X2
12075,12075,11973,4ffa,4f58,d8,d8,ret c,ret c,ret c,math.asm,RET	C
12076,12076,11974,4ffb,4f59,cd e2 4f,cd 40 4f,call $4fe2,call $4f40,call $0000,math.asm,CALL	ADD
12077,12077,11975,4ffe,4f5c,d8,d8,ret c,ret c,ret c,math.asm,RET	C
12078,12078,11976,4fff,4f5d,d9,d9,exx,exx,exx,math.asm,X2:             EXX
12079,12079,11977,5000,4f5e,29,29,"add hl,hl","add hl,hl","add hl,hl",math.asm,"ADD	HL,HL"
12080,12080,11978,5001,4f5f,d9,d9,exx,exx,exx,math.asm,EXX
12081,12081,11979,5002,4f60,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
12082,12082,11980,5004,4f62,c9,c9,ret,ret,ret,math.asm,RET
12083,12083,11981,5005,4f63,0c,0c,inc c,inc c,inc c,math.asm,D2C:            INC	C
12084,12084,11982,5006,4f64,cb 3c,cb 3c,srl h,srl h,srl h,math.asm,D2:             SRL	H
12085,12085,11983,5008,4f66,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
12086,12086,11984,500a,4f68,d9,d9,exx,exx,exx,math.asm,EXX
12087,12087,11985,500b,4f69,cb 1c,cb 1c,rr h,rr h,rr h,math.asm,RR	H
12088,12088,11986,500d,4f6b,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
12089,12089,11987,500f,4f6d,d9,d9,exx,exx,exx,math.asm,EXX
12090,12090,11988,5010,4f6e,c9,c9,ret,ret,ret,math.asm,RET
12091,12091,11989,5011,4f6f,41,41,"ld b,c","ld b,c","ld b,c",math.asm,"COPY:           LD	B,C"
12092,12092,11990,5012,4f70,54,54,"ld d,h","ld d,h","ld d,h",math.asm,"COPY0:          LD	D,H"
12093,12093,11991,5013,4f71,5d,5d,"ld e,l","ld e,l","ld e,l",math.asm,"LD	E,L"
12094,12094,11992,5014,4f72,d9,d9,exx,exx,exx,math.asm,EXX
12095,12095,11993,5015,4f73,54,54,"ld d,h","ld d,h","ld d,h",math.asm,"LD	D,H"
12096,12096,11994,5016,4f74,5d,5d,"ld e,l","ld e,l","ld e,l",math.asm,"LD	E,L"
12097,12097,11995,5017,4f75,d9,d9,exx,exx,exx,math.asm,EXX
12098,12098,11996,5018,4f76,c9,c9,ret,ret,ret,math.asm,RET
12099,12099,11997,5019,4f77,cd 11 50,cd 6f 4f,call $5011,call $4f6f,call $0000,math.asm,SQUARE:         CALL	COPY
12100,12100,11998,501c,4f7a,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,CALL	FMUL
12101,12101,11999,501f,4f7d,dd e1,dd e1,pop ix,pop ix,pop ix,math.asm,PUSH5:          POP	IX		;RETURN ADDRESS
12102,12102,12000,5021,4f7f,c5,c5,push bc,push bc,push bc,math.asm,PUSH	BC
12103,12103,12001,5022,4f80,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
12104,12104,12002,5023,4f81,d9,d9,exx,exx,exx,math.asm,EXX
12105,12105,12003,5024,4f82,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
12106,12106,12004,5025,4f83,d9,d9,exx,exx,exx,math.asm,EXX
12107,12107,12005,5026,4f84,dd e9,dd e9,jp (ix),jp (ix),jp (ix),math.asm,"JP	(IX)		;""RETURN"""
12108,12108,12006,5028,4f86,dd e1,dd e1,pop ix,pop ix,pop ix,math.asm,POP5:           POP	IX		;RETURN ADDRESS
12109,12109,12007,502a,4f88,d9,d9,exx,exx,exx,math.asm,EXX
12110,12110,12008,502b,4f89,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
12111,12111,12009,502c,4f8a,d9,d9,exx,exx,exx,math.asm,EXX
12112,12112,12010,502d,4f8b,d1,d1,pop de,pop de,pop de,math.asm,POP	DE
12113,12113,12011,502e,4f8c,79,79,"ld a,c","ld a,c","ld a,c",math.asm,"LD	A,C"
12114,12114,12012,502f,4f8d,c1,c1,pop bc,pop bc,pop bc,math.asm,POP	BC
12115,12115,12013,5030,4f8e,41,41,"ld b,c","ld b,c","ld b,c",math.asm,"LD	B,C"
12116,12116,12014,5031,4f8f,4f,4f,"ld c,a","ld c,a","ld c,a",math.asm,"LD	C,A"
12117,12117,12015,5032,4f90,dd e9,dd e9,jp (ix),jp (ix),jp (ix),math.asm,"JP	(IX)		;""RETURN"""
12118,12118,12016,5034,4f92,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,RATIO:          CALL	PUSH5		;SAVE X
12119,12119,12017,5037,4f95,cd 87 4a,cd e5 49,call $4a87,call $49e5,call $0000,math.asm,CALL	DONE
12120,12120,12018,503a,4f98,cd c9 46,cd 27 46,call $46c9,call $4627,call $0000,math.asm,CALL	FADD
12121,12121,12019,503d,4f9b,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5		;RESTORE X
12122,12122,12020,5040,4f9e,cd 1f 50,cd 7d 4f,call $501f,call $4f7d,call $0000,math.asm,CALL	PUSH5		;SAVE X+1
12123,12123,12021,5043,4fa1,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
12124,12124,12022,5046,4fa4,cd 87 4a,cd e5 49,call $4a87,call $49e5,call $0000,math.asm,CALL	DONE
12125,12125,12023,5049,4fa7,cd b3 46,cd 11 46,call $46b3,call $4611,call $0000,math.asm,CALL	FSUB
12126,12126,12024,504c,4faa,cd 28 50,cd 86 4f,call $5028,call $4f86,call $0000,math.asm,CALL	POP5		;RESTORE X+1
12127,12127,12025,504f,4fad,c3 21 47,c3 7f 46,jp $4721,jp $467f,jp $0000,math.asm,JP	FDIV
12128,12128,12026,5052,4fb0,dd 21 02 00,dd 21 02 00,"ld ix,$0002","ld ix,$0002","ld ix,$0000",math.asm,"POLY:           LD	IX,2"
12129,12129,12027,5056,4fb4,dd 39,dd 39,"add ix,sp","add ix,sp","add ix,sp",math.asm,"ADD	IX,SP"
12130,12130,12028,5058,4fb6,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",math.asm,"EX	(SP),IX"
12131,12131,12029,505a,4fb8,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,math.asm,CALL	DLOAD5		;FIRST COEFFICIENT
12132,12132,12030,505d,4fbb,cd 91 47,cd ef 46,call $4791,call $46ef,call $0000,math.asm,POLY1:          CALL	FMUL
12133,12133,12031,5060,4fbe,11 05 00,11 05 00,"ld de,$0005","ld de,$0005","ld de,$0000",math.asm,"LD	DE,5"
12134,12134,12032,5063,4fc1,dd 19,dd 19,"add ix,de","add ix,de","add ix,de",math.asm,"ADD	IX,DE"
12135,12135,12033,5065,4fc3,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,math.asm,CALL	DLOAD5		;NEXT COEFFICIENT
12136,12136,12034,5068,4fc6,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",math.asm,"EX	(SP),IX"
12137,12137,12035,506a,4fc8,04,04,inc b,inc b,inc b,math.asm,INC	B
12138,12138,12036,506b,4fc9,05,05,dec b,dec b,dec b,math.asm,DEC	B		;TEST
12139,12139,12037,506c,4fca,fa c9 46,fa 27 46,"jp m,$46c9","jp m,$4627","jp m,$0000",math.asm,"JP	M,FADD"
12140,12140,12038,506f,4fcd,cd c9 46,cd 27 46,call $46c9,call $4627,call $0000,math.asm,CALL	FADD
12141,12141,12039,5072,4fd0,cd 75 1a,cd d3 19,call $1a75,call $19d3,call $0000,math.asm,CALL	DLOAD5		;X
12142,12142,12040,5075,4fd3,dd e3,dd e3,"ex (sp),ix","ex (sp),ix","ex (sp),ix",math.asm,"EX	(SP),IX"
12143,12143,12041,5077,4fd5,18 e4,18 e4,jr $-$1a,jr $-$1a,jr $-$00,math.asm,JR	POLY1
12144,12144,12042,5079,4fd7,3c,3c,inc a,inc a,inc a,math.asm,POWR10:         INC	A
12145,12145,12043,507a,4fd8,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
12146,12146,12044,507b,4fd9,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
12147,12147,12045,507c,4fda,d9,d9,exx,exx,exx,math.asm,EXX
12148,12148,12046,507d,4fdb,e5,e5,push hl,push hl,push hl,math.asm,PUSH	HL
12149,12149,12047,507e,4fdc,d9,d9,exx,exx,exx,math.asm,EXX
12150,12150,12048,507f,4fdd,cd 87 4a,cd e5 49,call $4a87,call $49e5,call $0000,math.asm,CALL	DONE
12151,12151,12049,5082,4fe0,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
12152,12152,12050,5085,4fe3,af,af,xor a,xor a,xor a,math.asm,XOR	A
12153,12153,12051,5086,4fe4,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"POWR11:         EX	AF,AF'"
12154,12154,12052,5087,4fe5,3d,3d,dec a,dec a,dec a,math.asm,DEC	A
12155,12155,12053,5088,4fe6,28 20,28 20,"jr z,$+$22","jr z,$+$22","jr z,$+$00",math.asm,"JR	Z,POWR14	;EXITmat TYPE 1"
12156,12156,12054,508a,4fe8,f2 91 50,f2 ef 4f,"jp p,$5091","jp p,$4fef","jp p,$0000",math.asm,"JP	P,POWR13"
12157,12157,12055,508d,4feb,b9,b9,cp c,cp c,cp c,math.asm,CP	C
12158,12158,12056,508e,4fec,38 1a,38 1a,"jr c,$+$1c","jr c,$+$1c","jr c,$+$00",math.asm,"JR	C,POWR14	;EXITmat TYPE 2"
12159,12159,12057,5090,4fee,3c,3c,inc a,inc a,inc a,math.asm,INC	A
12160,12160,12058,5091,4fef,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"POWR13:         EX	AF,AF'"
12161,12161,12059,5092,4ff0,3c,3c,inc a,inc a,inc a,math.asm,INC	A
12162,12162,12060,5093,4ff1,cb fc,cb fc,"set 7,h","set 7,h","set 7,h",math.asm,"SET	7,H"
12163,12163,12061,5095,4ff3,cd d8 4f,cd 36 4f,call $4fd8,call $4f36,call $0000,math.asm,CALL	X5
12164,12164,12062,5098,4ff6,30 05,30 05,"jr nc,$+$07","jr nc,$+$07","jr nc,$+$00",math.asm,"JR	NC,POWR12"
12165,12165,12063,509a,4ff8,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
12166,12166,12064,509b,4ff9,cd 05 50,cd 63 4f,call $5005,call $4f63,call $0000,math.asm,CALL	D2C
12167,12167,12065,509e,4ffc,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
12168,12168,12066,509f,4ffd,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"POWR12:         EX	AF,AF'"
12169,12169,12067,50a0,4ffe,dc 4c 4f,dc aa 4e,"call c,$4f4c","call c,$4eaa","call c,$0000",math.asm,"CALL	C,ADD1		;ROUND UP"
12170,12170,12068,50a3,5001,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12171,12171,12069,50a4,5002,fa 86 50,fa e4 4f,"jp m,$5086","jp m,$4fe4","jp m,$0000",math.asm,"JP	M,POWR11"
12172,12172,12070,50a7,5005,c3 76 4f,c3 d4 4e,jp $4f76,jp $4ed4,jp $0000,math.asm,JP	OFLOW
12173,12173,12071,50aa,5008,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,POWR14:         CALL	SWAP
12174,12174,12072,50ad,500b,cb ba,cb ba,"res 7,d","res 7,d","res 7,d",math.asm,"RES	7,D"
12175,12175,12073,50af,500d,d9,d9,exx,exx,exx,math.asm,EXX
12176,12176,12074,50b0,500e,e1,e1,pop hl,pop hl,pop hl,math.asm,POP	HL
12177,12177,12075,50b1,500f,d9,d9,exx,exx,exx,math.asm,EXX
12178,12178,12076,50b2,5010,e1,e1,pop hl,pop hl,pop hl,math.asm,POP	HL
12179,12179,12077,50b3,5011,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"EX	AF,AF'"
12180,12180,12078,50b4,5012,c9,c9,ret,ret,ret,math.asm,RET
12181,12181,12079,50b5,5013,b7,b7,or a,or a,or a,math.asm,DIVA:           OR	A		;CLEAR CARRY
12182,12182,12080,50b6,5014,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"DIV0:           SBC	HL,BC		;DIVIDEND-DIVISOR"
12183,12183,12081,50b8,5016,d9,d9,exx,exx,exx,math.asm,EXX
12184,12184,12082,50b9,5017,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12185,12185,12083,50bb,5019,d9,d9,exx,exx,exx,math.asm,EXX
12186,12186,12084,50bc,501a,30 05,30 05,"jr nc,$+$07","jr nc,$+$07","jr nc,$+$00",math.asm,"JR	NC,DIV1"
12187,12187,12085,50be,501c,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC		;DIVIDEND+DIVISOR"
12188,12188,12086,50bf,501d,d9,d9,exx,exx,exx,math.asm,EXX
12189,12189,12087,50c0,501e,ed 4a,ed 4a,"adc hl,bc","adc hl,bc","adc hl,bc",math.asm,"ADC	HL,BC"
12190,12190,12088,50c2,5020,d9,d9,exx,exx,exx,math.asm,EXX
12191,12191,12089,50c3,5021,3f,3f,ccf,ccf,ccf,math.asm,DIV1:           CCF
12192,12192,12090,50c4,5022,cb 13,cb 13,rl e,rl e,rl e,math.asm,DIVC:           RL	E		;SHIFT RESULT INTO DE
12193,12193,12091,50c6,5024,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
12194,12194,12092,50c8,5026,d9,d9,exx,exx,exx,math.asm,EXX
12195,12195,12093,50c9,5027,cb 13,cb 13,rl e,rl e,rl e,math.asm,RL	E
12196,12196,12094,50cb,5029,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
12197,12197,12095,50cd,502b,d9,d9,exx,exx,exx,math.asm,EXX
12198,12198,12096,50ce,502c,3c,3c,inc a,inc a,inc a,math.asm,INC	A
12199,12199,12097,50cf,502d,f0,f0,ret p,ret p,ret p,math.asm,RET	P
12200,12200,12098,50d0,502e,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"DIVB:           ADC	HL,HL		;DIVIDEND*2"
12201,12201,12099,50d2,5030,d9,d9,exx,exx,exx,math.asm,EXX
12202,12202,12100,50d3,5031,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
12203,12203,12101,50d5,5033,d9,d9,exx,exx,exx,math.asm,EXX
12204,12204,12102,50d6,5034,30 de,30 de,"jr nc,$-$20","jr nc,$-$20","jr nc,$-$00",math.asm,"JR	NC,DIV0"
12205,12205,12103,50d8,5036,b7,b7,or a,or a,or a,math.asm,OR	A
12206,12206,12104,50d9,5037,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC		;DIVIDEND-DIVISOR"
12207,12207,12105,50db,5039,d9,d9,exx,exx,exx,math.asm,EXX
12208,12208,12106,50dc,503a,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12209,12209,12107,50de,503c,d9,d9,exx,exx,exx,math.asm,EXX
12210,12210,12108,50df,503d,37,37,scf,scf,scf,math.asm,SCF
12211,12211,12109,50e0,503e,c3 c4 50,c3 22 50,jp $50c4,jp $5022,jp $0000,math.asm,JP	DIVC
12212,12212,12110,50e3,5041,b7,b7,or a,or a,or a,math.asm,MULA:           OR	A		;CLEAR CARRY
12213,12213,12111,50e4,5042,d9,d9,exx,exx,exx,math.asm,MUL0:           EXX
12214,12214,12112,50e5,5043,cb 1a,cb 1a,rr d,rr d,rr d,math.asm,RR	D		;MULTIPLIER/2
12215,12215,12113,50e7,5045,cb 1b,cb 1b,rr e,rr e,rr e,math.asm,RR	E
12216,12216,12114,50e9,5047,d9,d9,exx,exx,exx,math.asm,EXX
12217,12217,12115,50ea,5048,cb 1a,cb 1a,rr d,rr d,rr d,math.asm,RR	D
12218,12218,12116,50ec,504a,cb 1b,cb 1b,rr e,rr e,rr e,math.asm,RR	E
12219,12219,12117,50ee,504c,30 05,30 05,"jr nc,$+$07","jr nc,$+$07","jr nc,$+$00",math.asm,"JR	NC,MUL1"
12220,12220,12118,50f0,504e,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC		;ADD IN MULTIPLICAND"
12221,12221,12119,50f1,504f,d9,d9,exx,exx,exx,math.asm,EXX
12222,12222,12120,50f2,5050,ed 4a,ed 4a,"adc hl,bc","adc hl,bc","adc hl,bc",math.asm,"ADC	HL,BC"
12223,12223,12121,50f4,5052,d9,d9,exx,exx,exx,math.asm,EXX
12224,12224,12122,50f5,5053,3c,3c,inc a,inc a,inc a,math.asm,MUL1:           INC	A
12225,12225,12123,50f6,5054,f0,f0,ret p,ret p,ret p,math.asm,RET	P
12226,12226,12124,50f7,5055,d9,d9,exx,exx,exx,math.asm,MULB:           EXX
12227,12227,12125,50f8,5056,cb 1c,cb 1c,rr h,rr h,rr h,math.asm,RR	H		;PRODUCT/2
12228,12228,12126,50fa,5058,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
12229,12229,12127,50fc,505a,d9,d9,exx,exx,exx,math.asm,EXX
12230,12230,12128,50fd,505b,cb 1c,cb 1c,rr h,rr h,rr h,math.asm,RR	H
12231,12231,12129,50ff,505d,cb 1d,cb 1d,rr l,rr l,rr l,math.asm,RR	L
12232,12232,12130,5101,505f,c3 e4 50,c3 42 50,jp $50e4,jp $5042,jp $0000,math.asm,JP	MUL0
12233,12233,12131,5104,5062,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SQR1:           SBC	HL,BC"
12234,12234,12132,5106,5064,d9,d9,exx,exx,exx,math.asm,EXX
12235,12235,12133,5107,5065,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12236,12236,12134,5109,5067,d9,d9,exx,exx,exx,math.asm,EXX
12237,12237,12135,510a,5068,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12238,12238,12136,510b,5069,30 07,30 07,"jr nc,$+$09","jr nc,$+$09","jr nc,$+$00",math.asm,"JR	NC,SQR2"
12239,12239,12137,510d,506b,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
12240,12240,12138,510e,506c,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
12241,12241,12139,510f,506d,d9,d9,exx,exx,exx,math.asm,EXX
12242,12242,12140,5110,506e,ed 4a,ed 4a,"adc hl,bc","adc hl,bc","adc hl,bc",math.asm,"ADC	HL,BC"
12243,12243,12141,5112,5070,d9,d9,exx,exx,exx,math.asm,EXX
12244,12244,12142,5113,5071,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
12245,12245,12143,5114,5072,3c,3c,inc a,inc a,inc a,math.asm,SQR2:           INC	A
12246,12246,12144,5115,5073,f0,f0,ret p,ret p,ret p,math.asm,RET	P
12247,12247,12145,5116,5074,cb 21,cb 21,sla c,sla c,sla c,math.asm,SQRA:           SLA	C
12248,12248,12146,5118,5076,cb 10,cb 10,rl b,rl b,rl b,math.asm,RL	B
12249,12249,12147,511a,5078,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12250,12250,12148,511b,5079,d9,d9,exx,exx,exx,math.asm,EXX
12251,12251,12149,511c,507a,cb 11,cb 11,rl c,rl c,rl c,math.asm,RL	C
12252,12252,12150,511e,507c,cb 10,cb 10,rl b,rl b,rl b,math.asm,RL	B
12253,12253,12151,5120,507e,cd 4c 51,cd aa 50,call $514c,call $50aa,call $0000,math.asm,CALL	SLA8
12254,12254,12152,5123,5081,cd 4c 51,cd aa 50,call $514c,call $50aa,call $0000,math.asm,CALL	SLA8
12255,12255,12153,5126,5084,d9,d9,exx,exx,exx,math.asm,EXX
12256,12256,12154,5127,5085,d2 04 51,d2 62 50,"jp nc,$5104","jp nc,$5062","jp nc,$0000",math.asm,"JP	NC,SQR1"
12257,12257,12155,512a,5088,b7,b7,or a,or a,or a,math.asm,SQR3:           OR	A
12258,12258,12156,512b,5089,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12259,12259,12157,512d,508b,d9,d9,exx,exx,exx,math.asm,EXX
12260,12260,12158,512e,508c,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12261,12261,12159,5130,508e,d9,d9,exx,exx,exx,math.asm,EXX
12262,12262,12160,5131,508f,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12263,12263,12161,5132,5090,c3 14 51,c3 72 50,jp $5114,jp $5072,jp $0000,math.asm,JP	SQR2
12264,12264,12162,5135,5093,29,29,"add hl,hl","add hl,hl","add hl,hl",math.asm,"SQRB:           ADD	HL,HL"
12265,12265,12163,5136,5094,d9,d9,exx,exx,exx,math.asm,EXX
12266,12266,12164,5137,5095,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
12267,12267,12165,5139,5097,d9,d9,exx,exx,exx,math.asm,EXX
12268,12268,12166,513a,5098,38 ee,38 ee,"jr c,$-$10","jr c,$-$10","jr c,$-$00",math.asm,"JR	C,SQR3"
12269,12269,12167,513c,509a,3c,3c,inc a,inc a,inc a,math.asm,INC	A
12270,12270,12168,513d,509b,0c,0c,inc c,inc c,inc c,math.asm,INC	C
12271,12271,12169,513e,509c,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12272,12272,12170,5140,509e,d9,d9,exx,exx,exx,math.asm,EXX
12273,12273,12171,5141,509f,ed 42,ed 42,"sbc hl,bc","sbc hl,bc","sbc hl,bc",math.asm,"SBC	HL,BC"
12274,12274,12172,5143,50a1,d9,d9,exx,exx,exx,math.asm,EXX
12275,12275,12173,5144,50a2,d0,d0,ret nc,ret nc,ret nc,math.asm,RET	NC
12276,12276,12174,5145,50a3,09,09,"add hl,bc","add hl,bc","add hl,bc",math.asm,"ADD	HL,BC"
12277,12277,12175,5146,50a4,d9,d9,exx,exx,exx,math.asm,EXX
12278,12278,12176,5147,50a5,ed 4a,ed 4a,"adc hl,bc","adc hl,bc","adc hl,bc",math.asm,"ADC	HL,BC"
12279,12279,12177,5149,50a7,d9,d9,exx,exx,exx,math.asm,EXX
12280,12280,12178,514a,50a8,0d,0d,dec c,dec c,dec c,math.asm,DEC	C
12281,12281,12179,514b,50a9,c9,c9,ret,ret,ret,math.asm,RET
12282,12282,12180,514c,50aa,d9,d9,exx,exx,exx,math.asm,SLA8:           EXX
12283,12283,12181,514d,50ab,cb 23,cb 23,sla e,sla e,sla e,math.asm,SLA	E
12284,12284,12182,514f,50ad,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
12285,12285,12183,5151,50af,d9,d9,exx,exx,exx,math.asm,EXX
12286,12286,12184,5152,50b0,cb 13,cb 13,rl e,rl e,rl e,math.asm,RL	E
12287,12287,12185,5154,50b2,cb 12,cb 12,rl d,rl d,rl d,math.asm,RL	D
12288,12288,12186,5156,50b4,d9,d9,exx,exx,exx,math.asm,EXX
12289,12289,12187,5157,50b5,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
12290,12290,12188,5159,50b7,d9,d9,exx,exx,exx,math.asm,EXX
12291,12291,12189,515a,50b8,ed 6a,ed 6a,"adc hl,hl","adc hl,hl","adc hl,hl",math.asm,"ADC	HL,HL"
12292,12292,12190,515c,50ba,c9,c9,ret,ret,ret,math.asm,RET
12293,12293,12191,515d,50bb,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",math.asm,"DIGITQ:         LD	A,(IX)"
12294,12294,12192,5160,50be,fe 3a,fe 3a,cp $3a,cp $3a,cp $00,math.asm,CP	'9'+1
12295,12295,12193,5162,50c0,3f,3f,ccf,ccf,ccf,math.asm,CCF
12296,12296,12194,5163,50c1,d8,d8,ret c,ret c,ret c,math.asm,RET	C
12297,12297,12195,5164,50c2,fe 30,fe 30,cp $30,cp $30,cp $00,math.asm,CP	'0'
12298,12298,12196,5166,50c4,c9,c9,ret,ret,ret,math.asm,RET
12299,12299,12197,5167,50c5,dd 7e 00,dd 7e 00,"ld a,(ix)","ld a,(ix)","ld a,(ix)",math.asm,"SIGNQ:          LD	A,(IX)"
12300,12300,12198,516a,50c8,dd 23,dd 23,inc ix,inc ix,inc ix,math.asm,INC	IX
12301,12301,12199,516c,50ca,fe 20,fe 20,cp $20,cp $20,cp $00,math.asm,CP	' '
12302,12302,12200,516e,50cc,28 f7,28 f7,"jr z,$-$07","jr z,$-$07","jr z,$-$00",math.asm,"JR	Z,SIGNQ"
12303,12303,12201,5170,50ce,fe 2b,fe 2b,cp $2b,cp $2b,cp $00,math.asm,CP	'+'
12304,12304,12202,5172,50d0,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
12305,12305,12203,5173,50d1,fe 2d,fe 2d,cp $2d,cp $2d,cp $00,math.asm,CP	'-'
12306,12306,12204,5175,50d3,c8,c8,ret z,ret z,ret z,math.asm,RET	Z
12307,12307,12205,5176,50d4,dd 2b,dd 2b,dec ix,dec ix,dec ix,math.asm,DEC	IX
12308,12308,12206,5178,50d6,c9,c9,ret,ret,ret,math.asm,RET
12309,12309,12207,5179,50d7,08,08,"ex af,af'","ex af,af'","ex af,af'",math.asm,"ABS2:           EX	AF,AF'"
12310,12310,12208,517a,50d8,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
12311,12311,12209,517c,50da,c4 8a 4e,c4 e8 4d,"call nz,$4e8a","call nz,$4de8","call nz,$0000",math.asm,"CALL	NZ,NEGATE	;MAKE ARGUMENTS +VE"
12312,12312,12210,517f,50dd,cd 60 4f,cd be 4e,call $4f60,call $4ebe,call $0000,math.asm,CALL	SWAP
12313,12313,12211,5182,50e0,cb 7c,cb 7c,"bit 7,h","bit 7,h","bit 7,h",math.asm,"BIT	7,H"
12314,12314,12212,5184,50e2,c4 8a 4e,c4 e8 4d,"call nz,$4e8a","call nz,$4de8","call nz,$0000",math.asm,"CALL	NZ,NEGATE"
12315,12315,12213,5187,50e5,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
12316,12316,12214,5188,50e6,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
12317,12317,12215,5189,50e7,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
12318,12318,12216,518c,50ea,d9,d9,exx,exx,exx,math.asm,EXX
12319,12319,12217,518d,50eb,44,44,"ld b,h","ld b,h","ld b,h",math.asm,"LD	B,H"
12320,12320,12218,518e,50ec,4d,4d,"ld c,l","ld c,l","ld c,l",math.asm,"LD	C,L"
12321,12321,12219,518f,50ed,21 00 00,21 00 00,"ld hl,$0000","ld hl,$0000","ld hl,$0000",math.asm,"LD	HL,0"
12322,12322,12220,5192,50f0,c9,c9,ret,ret,ret,math.asm,RET
